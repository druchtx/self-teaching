v8-version,12,4,254,21,-node.21,0
v8-platform,macos,macos
shared-library,/Users/hsulzz/.local/share/mise/installs/node/22.12.0/bin/node,0x10135c000,0x1030b92f0,10141696
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1a46f0da0,0x1a48e1354,303153152
shared-library,/usr/lib/libobjc.A.dylib,0x1a42ad400,0x1a42ed184,303153152
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x1a80cac38,0x1a81016bc,303153152
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x1a58e2f80,0x1a62fe85c,303153152
shared-library,/usr/lib/liboah.dylib,0x1b221a628,0x1b221fd40,303153152
shared-library,/usr/lib/libfakelink.dylib,0x1b224f618,0x1b2250b60,303153152
shared-library,/usr/lib/libicucore.A.dylib,0x1a7b04a7c,0x1a7d5a180,303153152
shared-library,/usr/lib/libSystem.B.dylib,0x1b224d47c,0x1b224dacc,303153152
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1b2251b6c,0x1b2251e38,303153152
shared-library,/usr/lib/swift/libswiftCore.dylib,0x1b54109fc,0x1b58b8f80,303153152
shared-library,/usr/lib/libc++abi.dylib,0x1a4628848,0x1a463e338,303153152
shared-library,/usr/lib/libc++.1.dylib,0x1a459dc10,0x1a45ff100,303153152
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x1bdfa4408,0x1bdfa6020,303153152
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x1ad99b48c,0x1ad9ce980,303153152
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x1a553b53c,0x1a55be960,303153152
shared-library,/usr/lib/libz.1.dylib,0x1b2190890,0x1b219c168,303153152
shared-library,/usr/lib/libcompression.dylib,0x1b23fe640,0x1b24565d8,303153152
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x1a9e097b8,0x1aa07f29c,303153152
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x1aceb1e9c,0x1aceb8cd8,303153152
shared-library,/usr/lib/libarchive.2.dylib,0x1b22a4040,0x1b2316fd0,303153152
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x1acdc5e30,0x1acdc6ab0,303153152
shared-library,/usr/lib/libxml2.2.dylib,0x1ad9e5258,0x1adaae7fc,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x1b9907fc0,0x1b9907fc0,303153152
shared-library,/usr/lib/liblangid.dylib,0x1b071c194,0x1b071ccc0,303153152
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x1a814b31c,0x1a82024a8,303153152
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x1b7809528,0x1b790eec0,303153152
shared-library,/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal,0x24d2f0550,0x24d426330,303153152
shared-library,/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal,0x26a71edc4,0x26a724fe0,303153152
shared-library,/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal,0x26b3b59d4,0x26b3c2a10,303153152
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x1cc72f274,0x1cc733f88,303153152
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x1c9edff04,0x1c9ee0b70,303153152
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x1bb3c01c8,0x1bb3d0380,303153152
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x1cc78cd34,0x1cc78cfa0,303153152
shared-library,/usr/lib/swift/libswiftSystem.dylib,0x284baf52c,0x284bc3540,303153152
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x1cc741484,0x1cc77d680,303153152
shared-library,/usr/lib/swift/libswift_Builtin_float.dylib,0x284c2bb38,0x284c2bd4c,303153152
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x284c31064,0x284c9d684,303153152
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x284d990c8,0x284e352b0,303153152
shared-library,/usr/lib/swift/libswift_errno.dylib,0x284e48490,0x284e48d90,303153152
shared-library,/usr/lib/swift/libswift_math.dylib,0x284e498b8,0x284e4ba30,303153152
shared-library,/usr/lib/swift/libswift_signal.dylib,0x284e4cf38,0x284e4cf58,303153152
shared-library,/usr/lib/swift/libswift_stdio.dylib,0x284e4d82c,0x284e4de98,303153152
shared-library,/usr/lib/swift/libswift_time.dylib,0x284e4eeb4,0x284e4ef38,303153152
shared-library,/usr/lib/swift/libswiftos.dylib,0x1bdfa8614,0x1bdfbc8a0,303153152
shared-library,/usr/lib/swift/libswiftsys_time.dylib,0x284e4fea8,0x284e4ff30,303153152
shared-library,/usr/lib/swift/libswiftunistd.dylib,0x284e50e50,0x284e50f08,303153152
shared-library,/usr/lib/system/libcache.dylib,0x1b224759c,0x1b224a360,303153152
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1b21fff48,0x1b220b8d4,303153152
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1b222c82c,0x1b222f83c,303153152
shared-library,/usr/lib/system/libcopyfile.dylib,0x1b2222364,0x1b2229bf0,303153152
shared-library,/usr/lib/system/libcorecrypto.dylib,0x1a43ec540,0x1a446aa94,303153152
shared-library,/usr/lib/system/libdispatch.dylib,0x1a44cee44,0x1a450ab70,303153152
shared-library,/usr/lib/system/libdyld.dylib,0x1a468bb80,0x1a46b22cc,303153152
shared-library,/usr/lib/system/libkeymgr.dylib,0x1b223c758,0x1b223ce40,303153152
shared-library,/usr/lib/system/libmacho.dylib,0x1b21df0a8,0x1b21e19ec,303153152
shared-library,/usr/lib/system/libquarantine.dylib,0x1b16238b0,0x1b1625b20,303153152
shared-library,/usr/lib/system/libremovefile.dylib,0x1b223a31c,0x1b223bc18,303153152
shared-library,/usr/lib/system/libsystem_asl.dylib,0x1aa267a70,0x1aa27d000,303153152
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x1a4381880,0x1a4383860,303153152
shared-library,/usr/lib/system/libsystem_c.dylib,0x1a4518d9c,0x1a4591130,303153152
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1b2230c9c,0x1b2234950,303153152
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x1b070955c,0x1b070c6f8,303153152
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x1af4cc6f4,0x1af4f22f0,303153152
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1b1d32e20,0x1b1d37d88,303153152
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x1a7dc963c,0x1a7dd0130,303153152
shared-library,/usr/lib/system/libsystem_darwindirectory.dylib,0x284f93e60,0x284f96198,303153152
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1b223dc78,0x1b2243ee0,303153152
shared-library,/usr/lib/system/libsystem_eligibility.dylib,0x284f97cc4,0x284f9ad90,303153152
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1a4514c5c,0x1a4516a18,303153152
shared-library,/usr/lib/system/libsystem_info.dylib,0x1a46c0540,0x1a46e9fb0,303153152
shared-library,/usr/lib/system/libsystem_m.dylib,0x1b219ffc0,0x1b21cd6e4,303153152
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x1a448cbac,0x1a44c3490,303153152
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x1aa1d0e40,0x1aa1e61e0,303153152
shared-library,/usr/lib/system/libsystem_notify.dylib,0x1a822c860,0x1a823c590,303153152
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x1b070e10c,0x1b0712c00,303153152
shared-library,/usr/lib/system/libsystem_sanitizers.dylib,0x284f9f718,0x284fa33d0,303153152
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1b22366c0,0x1b223804c,303153152
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1a4642ae0,0x1a4675eec,303153152
shared-library,/usr/lib/system/libsystem_platform.dylib,0x1a46b7fa0,0x1a46be2d8,303153152
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x1a467de70,0x1a4688900,303153152
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1abd706dc,0x1abd762ac,303153152
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1a43d0b70,0x1a43e780c,303153152
shared-library,/usr/lib/system/libunwind.dylib,0x1b2211b54,0x1b221830c,303153152
shared-library,/usr/lib/system/libxpc.dylib,0x1a4385d8c,0x1a43c23d4,303153152
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x1a7711c88,0x1a7a4a580,303153152
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x1b15e9ed4,0x1b160a498,303153152
shared-library,/usr/lib/libCoreEntitlements.dylib,0x283f658ac,0x283f6f1b0,303153152
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x2628348e4,0x262874288,303153152
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x1ab937f48,0x1ab94a358,303153152
shared-library,/usr/lib/libMobileGestalt.dylib,0x1aa1ee7c0,0x1aa24836c,303153152
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x1b1d1b7a0,0x1b1d23270,303153152
shared-library,/usr/lib/libbsm.0.dylib,0x1b164b480,0x1b1659d58,303153152
shared-library,/usr/lib/libcoretls.dylib,0x1b163324c,0x1b16453c8,303153152
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x1b3707da4,0x1b3708bf8,303153152
shared-library,/usr/lib/libpam.2.dylib,0x1b23f776c,0x1b23fac60,303153152
shared-library,/usr/lib/libsqlite3.dylib,0x1ab951c78,0x1abaed730,303153152
shared-library,/usr/lib/libxar.1.dylib,0x1b377b074,0x1b37876f8,303153152
shared-library,/usr/lib/libheimdal-asn1.dylib,0x1b3b55c34,0x1b3b5fb30,303153152
shared-library,/usr/lib/swift/libswiftObservation.dylib,0x284b36400,0x284b3f90c,303153152
shared-library,/usr/lib/libenergytrace.dylib,0x1aa1ec674,0x1aa1ecd08,303153152
shared-library,/usr/lib/system/libkxld.dylib,0x1b21e3088,0x1b21fda68,303153152
shared-library,/usr/lib/libnetwork.dylib,0x1a9e06fc0,0x1a9e06fc0,303153152
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x1abd7aff8,0x1aca529ac,303153152
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x1acd95114,0x1acdba928,303153152
shared-library,/System/Library/PrivateFrameworks/LoggingSupport.framework/Versions/A/LoggingSupport,0x1cc623010,0x1cc6804e0,303153152
shared-library,/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices,0x1abc83a70,0x1abccb5f8,303153152
shared-library,/System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement,0x1adb6fd50,0x1adb8b730,303153152
shared-library,/usr/lib/libboringssl.dylib,0x1a9d3da20,0x1a9dd76f8,303153152
shared-library,/usr/lib/libdns_services.dylib,0x1abd5fb84,0x1abd6c968,303153152
shared-library,/usr/lib/libquic.dylib,0x1cb813764,0x1cb8e08f8,303153152
shared-library,/usr/lib/libusrtcp.dylib,0x1b539bc94,0x1b53f9910,303153152
shared-library,/usr/lib/libapple_nghttp2.dylib,0x1b23c8300,0x1b23da290,303153152
shared-library,/System/Library/PrivateFrameworks/InternalSwiftProtobuf.framework/Versions/A/InternalSwiftProtobuf,0x1ee948e10,0x1eea2f550,303153152
shared-library,/usr/lib/swift/libswiftDistributed.dylib,0x284b023e4,0x284b0d630,303153152
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x1b23a2498,0x1b23c39ac,303153152
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x1b0717470,0x1b071a360,303153152
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x1b1331278,0x1b133e89c,303153152
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x1af4fb1c4,0x1af50ca90,303153152
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x1a53d89d8,0x1a54adc6c,303153152
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x1b155b750,0x1b159e350,303153152
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x1b083e650,0x1b0842880,303153152
shared-library,/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard,0x1abb9f01c,0x1abc44148,303153152
shared-library,/System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices,0x1bb72b024,0x1bb77a0c8,303153152
shared-library,/System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices,0x1b154d144,0x1b1554f68,303153152
shared-library,/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics,0x1aa7d0208,0x1aacaec58,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO,0x1aff17c60,0x1b02094e0,303153152
shared-library,/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight,0x1aa2a441c,0x1aa70d670,303153152
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib,0x1af92c558,0x1afafcb58,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x1b9baf000,0x1b9baf000,303153152
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x1aa27fe98,0x1aa29adc8,303153152
shared-library,/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator,0x1c0dca648,0x1c0dccf2c,303153152
shared-library,/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient,0x1b41ecc68,0x1b41edc20,303153152
shared-library,/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay,0x1a68ec964,0x1a69d3978,303153152
shared-library,/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia,0x1af7c1484,0x1af904d98,303153152
shared-library,/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator,0x1af514100,0x1af51b4b0,303153152
shared-library,/System/Library/Frameworks/Metal.framework/Versions/A/Metal,0x1af51e808,0x1af6cf908,303153152
shared-library,/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo,0x1adacf24c,0x1adb17508,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders,0x1b23f68b0,0x1b23f6c68,303153152
shared-library,/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport,0x1b41ef2fc,0x1b420bbf8,303153152
shared-library,/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore,0x1ad297d14,0x1ad5d1448,303153152
shared-library,/System/Library/PrivateFrameworks/ProDisplayLibrary.framework/Versions/A/ProDisplayLibrary,0x269c4cbf8,0x269cbd638,303153152
shared-library,/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox,0x1b4234d60,0x1b468a368,303153152
shared-library,/usr/lib/swift/libswiftMetal.dylib,0x1d8f9a5c4,0x1d8f9c8d8,303153152
shared-library,/usr/lib/swift/libswiftOSLog.dylib,0x1e72d22b4,0x1e72d2a9c,303153152
shared-library,/usr/lib/swift/libswiftQuartzCore.dylib,0x1dd8c02e4,0x1dd8c0b50,303153152
shared-library,/usr/lib/swift/libswiftUniformTypeIdentifiers.dylib,0x1e1e4c9b0,0x1e1e578c0,303153152
shared-library,/usr/lib/swift/libswiftsimd.dylib,0x1cff01988,0x1cff16dc0,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x1ad95f1f8,0x1ad969b40,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x1a7dd450c,0x1a7ec3540,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x1ace29128,0x1ace9ac08,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x1b1d3ada8,0x1b1d65010,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x1b232d27c,0x1b23852a0,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x1abceae38,0x1abd4f060,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x1a4be5e14,0x1a4e028e0,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x1b3691e7c,0x1b36d9780,303153152
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x1ad96d9f4,0x1ad98a8d8,303153152
shared-library,/System/Library/Frameworks/GSS.framework/Versions/A/GSS,0x1b611720c,0x1b616aa08,303153152
shared-library,/usr/lib/liblzma.5.dylib,0x1b36e8c68,0x1b37001e0,303153152
shared-library,/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag,0x1b1532b28,0x1b1542ee0,303153152
shared-library,/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary,0x1b07159b8,0x1b0715dd0,303153152
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x1b3709d50,0x1b3760ae0,303153152
shared-library,/System/Library/PrivateFrameworks/AppleKeyStore.framework/Versions/A/AppleKeyStore,0x249a8fe8c,0x249add9c0,303153152
shared-library,/usr/lib/libutil.dylib,0x1b3789f78,0x1b378c610,303153152
shared-library,/usr/lib/libbz2.1.0.dylib,0x1b1d266f0,0x1b1d30fa0,303153152
shared-library,/usr/lib/libiconv.2.dylib,0x1b2289530,0x1b228f784,303153152
shared-library,/usr/lib/libcharset.1.dylib,0x1b21dd940,0x1b21ddd50,303153152
shared-library,/System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit,0x1b3a388dc,0x1b3a63468,303153152
shared-library,/System/Library/Frameworks/OSLog.framework/Versions/A/OSLog,0x1ee715cf4,0x1ee721440,303153152
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x1ad9325b4,0x1ad9392c0,303153152
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x1ad9409d0,0x1ad956420,303153152
shared-library,/System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit,0x1ba9aa0ac,0x1ba9d7330,303153152
shared-library,/System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording,0x1ba8f605c,0x1ba981608,303153152
shared-library,/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG,0x1b40b3ef0,0x1b40edd60,303153152
shared-library,/usr/lib/libexpat.1.dylib,0x1b3b3a92c,0x1b3b534a8,303153152
shared-library,/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync,0x1aaeee3fc,0x1aaf67870,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib,0x1b46e7294,0x1b470d220,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib,0x1b47127a0,0x1b474f7d0,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib,0x1b47fce48,0x1b4801a74,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib,0x1b40f9878,0x1b41b4730,303153152
shared-library,/usr/lib/libate.dylib,0x1b383f84c,0x1b387b8e8,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib,0x1b47a2ccc,0x1b47ca0e0,303153152
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib,0x1b4799c6c,0x1b479bc60,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x1acebaf30,0x1ad1eea90,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x1b98e3000,0x1b98e3000,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x1b37c22e8,0x1b3838eb0,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x1a5048790,0x1a53d096c,303153152
shared-library,/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText,0x1a6db6560,0x1a6f267c8,303153152
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices,0x253d67f40,0x253d67f48,303153152
shared-library,/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers,0x1a9886328,0x1a9893060,303153152
shared-library,/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG,0x1b3d25ed0,0x1b3d5df10,303153152
shared-library,/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib,0x1ad65e8fc,0x1ad69da90,303153152
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib,0x1b3d707d0,0x1b3d78c44,303153152
shared-library,/System/Library/PrivateFrameworks/ParsingInternal.framework/Versions/A/ParsingInternal,0x265cbd450,0x265e6b1c8,303153152
shared-library,/usr/lib/swift/libswiftRegexBuilder.dylib,0x284b55150,0x284b5d390,303153152
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x284cf2594,0x284d7d8a0,303153152
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib,0x253d68a68,0x253d68a68,303153152
shared-library,/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage,0x1b0299e58,0x1b0551a18,303153152
shared-library,/System/Library/PrivateFrameworks/FramePacing.framework/Versions/A/FramePacing,0x253e2ec80,0x253e34f50,303153152
shared-library,/System/Library/PrivateFrameworks/ASEProcessing.framework/Versions/A/ASEProcessing,0x1bf0e2cb0,0x1bf0f5bd8,303153152
shared-library,/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication,0x1eaa60604,0x1eab14748,303153152
shared-library,/System/Library/PrivateFrameworks/PhotosensitivityProcessing.framework/Versions/A/PhotosensitivityProcessing,0x268e645d0,0x268e71ce0,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL,0x2014f692c,0x201503d54,303153152
shared-library,/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer,0x1b3d19d44,0x1b3d22148,303153152
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libllvm-flatbuffers.dylib,0x258b372b0,0x258b776b0,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib,0x2014e8508,0x2014ede90,303153152
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libGPUCompilerUtils.dylib,0x2549de918,0x2549e2e60,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib,0x2015477f4,0x20157bbdc,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib,0x20150a598,0x2015107f8,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib,0x2016da860,0x2016e3f38,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib,0x201512f1c,0x201546690,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib,0x201507034,0x201508c7c,303153152
shared-library,/usr/lib/libRosetta.dylib,0x28410a628,0x28410fd40,303153152
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib,0x2014efdf0,0x2014f3c40,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore,0x1b065805c,0x1b06e7860,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage,0x1b1c87364,0x1b1ccd4d8,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork,0x1b16d66d0,0x1b18af0a0,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix,0x1b1b0c9d0,0x1b1b300e0,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector,0x1b1924fe4,0x1b1965a70,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray,0x1b1b3ef68,0x1b1c1ebc0,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions,0x2052d4680,0x2052e2db8,303153152
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSBenchmarkLoop.framework/Versions/A/MPSBenchmarkLoop,0x2052b92e8,0x2052c35f8,303153152
shared-library,/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools,0x1a4ecc85c,0x1a4fc04c8,303153152
shared-library,/System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo,0x1d126ba20,0x1d1271420,303153152
shared-library,/System/Library/PrivateFrameworks/kperf.framework/Versions/A/kperf,0x1ddcbbe44,0x1ddcc0610,303153152
shared-library,/System/Library/PrivateFrameworks/GPURawCounter.framework/Versions/A/GPURawCounter,0x1cc706414,0x1cc7074d8,303153152
shared-library,/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication,0x1bbb712e8,0x1bbc67700,303153152
shared-library,/System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging,0x1cc6a0508,0x1cc6a9640,303153152
shared-library,/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport,0x1b38d96b0,0x1b38e6b88,303153152
shared-library,/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols,0x1bbb2b798,0x1bbb67650,303153152
shared-library,/System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics,0x1dcf56b20,0x1dcf97c10,303153152
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos,0x1b6105a14,0x1b6113564,303153152
shared-library,/usr/lib/libresolv.9.dylib,0x1b5d71d44,0x1b5d877b0,303153152
shared-library,/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal,0x1b3d82f3c,0x1b3e40c30,303153152
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib,0x1bdeff000,0x1bdeff000,303153152
shared-library,/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth,0x1b61720c0,0x1b6182f60,303153152
shared-library,/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox,0x1b5aabe5c,0x1b5c0be78,303153152
shared-library,/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio,0x1a6fc5b00,0x1a75b0b84,303153152
shared-library,/usr/lib/libAudioStatistics.dylib,0x1b5cacd0c,0x1b5cbbc90,303153152
shared-library,/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk,0x1af797df8,0x1af7b55e8,303153152
shared-library,/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore,0x1a6a0e290,0x1a6d1ba60,303153152
shared-library,/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI,0x1c018b9a0,0x1c0224d90,303153152
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession,0x1b5c4f8f4,0x1b5c8dcd0,303153152
shared-library,/System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience,0x1b3c410e0,0x1b3cc9010,303153152
shared-library,/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport,0x1b3d662c0,0x1b3d6bed0,303153152
shared-library,/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata,0x1b60e997c,0x1b60f1a20,303153152
shared-library,/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy,0x1cb90aab4,0x1cb922710,303153152
shared-library,/usr/lib/libSMC.dylib,0x1b5f88078,0x1b5f8d768,303153152
shared-library,/usr/lib/libAudioToolboxUtility.dylib,0x1b46b1bc0,0x1b46decc0,303153152
shared-library,/usr/lib/libperfcheck.dylib,0x1b60f6e14,0x1b6101910,303153152
shared-library,/System/Library/PrivateFrameworks/AudioAnalytics.framework/Versions/A/AudioAnalytics,0x24a0748f0,0x24a09a250,303153152
shared-library,/System/Library/PrivateFrameworks/FeatureFlags.framework/Versions/A/FeatureFlags,0x1f5a67ac0,0x1f5a67eb0,303153152
shared-library,/usr/lib/libmis.dylib,0x1cc6d29c0,0x1cc6f9770,303153152
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib,0x1b5a6257c,0x1b5a9fb28,303153152
shared-library,/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore,0x1b48032f0,0x1b480506c,303153152
shared-library,/usr/lib/libspindump.dylib,0x1b3d7c1a0,0x1b3d80858,303153152
shared-library,/System/Library/Frameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation,0x20314ade4,0x2031e4140,303153152
shared-library,/System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime,0x1bbc85b5c,0x1bbc8c630,303153152
shared-library,/System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog,0x1ba8ba224,0x1ba8d8028,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x1b120b900,0x1b12f5f6c,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x1b24d4188,0x1b367c5f0,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x1b16c0fcc,0x1b16d2c28,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x1b23e30f4,0x1b23f4950,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x1b24cf244,0x1b24d21c0,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x1b0844e30,0x1b119153c,303153152
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x1a54da9b8,0x1a5534c70,303153152
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x2609ecce8,0x260f86c90,303153152
shared-library,/System/Library/PrivateFrameworks/VideoToolboxParavirtualizationSupport.framework/Versions/A/VideoToolboxParavirtualizationSupport,0x27a4a460c,0x27a4a4d10,303153152
shared-library,/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA,0x1b3af11dc,0x1b3b33630,303153152
shared-library,/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler,0x1b4794eb4,0x1b4798638,303153152
shared-library,/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment,0x1b4774f28,0x1b478fd20,303153152
shared-library,/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay,0x1b479d138,0x1b47a0c58,303153152
shared-library,/System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth,0x1b60c8f34,0x1b60d4488,303153152
shared-library,/System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport,0x1adb2fb60,0x1adb315d0,303153152
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x249c8f2e8,0x249c9f5e0,303153152
shared-library,/usr/lib/libTLE.dylib,0x2841500ac,0x284157668,303153152
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x1fe4583a8,0x1fe459758,303153152
shared-library,/usr/lib/libmecab.dylib,0x1b165cec8,0x1b16b0170,303153152
shared-library,/usr/lib/libCRFSuite.dylib,0x1a55cf2c8,0x1a55fe954,303153152
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x1b071e560,0x1b0816910,303153152
shared-library,/usr/lib/libgermantok.dylib,0x1b16be240,0x1b16bfd30,303153152
shared-library,/usr/lib/libThaiTokenizer.dylib,0x1b23994dc,0x1b239e530,303153152
shared-library,/usr/lib/libCheckFix.dylib,0x1b1627474,0x1b162fcf4,303153152
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x1acdc8910,0x1ace178e0,303153152
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x25c8ceee8,0x25c97a260,303153152
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x1a810a924,0x1a813bc08,303153152
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x1ad9977a0,0x1ad999710,303153152
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x1dddc89dc,0x1dddcae00,303153152
shared-library,/usr/lib/libxslt.1.dylib,0x1b378e2b8,0x1b37b0a60,303153152
shared-library,/System/Library/PrivateFrameworks/HIDDisplay.framework/Versions/A/HIDDisplay,0x1eeb21c50,0x1eeb29590,303153152
shared-library,/System/Library/PrivateFrameworks/HID.framework/Versions/A/HID,0x1c56460a8,0x1c564d6e0,303153152
shared-library,/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages,0x1bd4ec038,0x1bd57bb08,303153152
shared-library,/System/Library/Frameworks/NetFS.framework/Versions/A/NetFS,0x1c9a0d82c,0x1c9a18ff0,303153152
shared-library,/usr/lib/libcurl.4.dylib,0x1bd6ada5c,0x1bd71a710,303153152
shared-library,/usr/lib/libcrypto.46.dylib,0x2843889fc,0x28445ad00,303153152
shared-library,/usr/lib/libssl.48.dylib,0x2848d6380,0x284906bcc,303153152
shared-library,/System/Library/Frameworks/LDAP.framework/Versions/A/LDAP,0x1bd380da4,0x1bd3b1f08,303153152
shared-library,/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent,0x1bd3bcea4,0x1bd3bdc4c,303153152
shared-library,/usr/lib/libsasl2.2.dylib,0x1b5d8aea0,0x1b5d9a3dc,303153152
shared-library-end
tick,0x1921b587c,2125,0,0x0,6
profiler,begin,1000
tick,0x100e1d510,3417,0,0x0,6
new,CodeRange,0x107f80000,0
new,MemoryChunk,0x248b6d4c0000,262144
new,MemoryChunk,0x3b00df380000,262144
tick,0x19259ea90,4667,0,0x0,6
tick,0x10114c86c,5917,0,0x0,6
new,MemoryChunk,0x7d2d1600000,262144
new,MemoryChunk,0x1acfa7440000,262144
new,MemoryChunk,0x396e7d400000,262144
new,MemoryChunk,0x1f4ffea80000,262144
heap-capacity,1030912
heap-available,4346312192
new,MemoryChunk,0x2aa13b300000,262144
tick,0x1012ab114,7167,0,0x0,6
tick,0x100cef7ac,8417,0,0x0,6
new,MemoryChunk,0x1a7c5b200000,262144
new,MemoryChunk,0x1849a2240000,278528
new,MemoryChunk,0x22b216cc0000,262144
tick,0x1012ab114,9667,0,0x0,6
new,MemoryChunk,0x3a8f56100000,262144
new,MemoryChunk,0x2ddc31ec0000,262144
tick,0x19259e7ec,10917,0,0x0,6
new,MemoryChunk,0x7769ed80000,262144
new,MemoryChunk,0x6ba9c780000,262144
tick,0x1012ab114,12208,0,0x0,6
code-creation,Builtin,2,13125,0x101660000,788,DeoptimizationEntry_Eager
code-creation,Builtin,2,13125,0x101660320,788,DeoptimizationEntry_Lazy
code-creation,Builtin,2,13125,0x101660640,1972,RecordWriteSaveFP
code-creation,Builtin,2,13125,0x101660e00,1300,RecordWriteIgnoreFP
code-creation,Builtin,2,13125,0x101661320,268,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,13125,0x101661440,172,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,13167,0x101661500,76,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,13167,0x101661560,40,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,13167,0x1016615a0,40,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,13167,0x1016615e0,336,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,13167,0x101661740,412,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,13167,0x1016618e0,452,CallFunction_ReceiverIsAny
code-creation,Builtin,2,13167,0x101661ac0,232,CallBoundFunction
code-creation,Builtin,2,13167,0x101661bc0,908,CallWrappedFunction
code-creation,Builtin,2,13167,0x101661f60,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,13167,0x101662040,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,13167,0x101662120,192,Call_ReceiverIsAny
code-creation,Builtin,2,13167,0x101662200,820,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,13167,0x101662540,820,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,13167,0x101662880,956,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,13208,0x101662c40,956,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,13208,0x101663000,956,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,13208,0x1016633c0,956,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,13208,0x101663780,792,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,13208,0x101663aa0,792,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,13208,0x101663dc0,792,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,13208,0x1016640e0,764,CallProxy
code-creation,Builtin,2,13208,0x1016643e0,172,CallVarargs
code-creation,Builtin,2,13208,0x1016644a0,1152,CallWithSpread
code-creation,Builtin,2,13208,0x101664940,1896,CallWithSpread_Baseline
code-creation,Builtin,2,13208,0x1016650c0,1960,CallWithSpread_WithFeedback
code-creation,Builtin,2,13208,0x101665880,1172,CallWithArrayLike
code-creation,Builtin,2,13250,0x101665d20,1948,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,13250,0x1016664c0,196,CallForwardVarargs
code-creation,Builtin,2,13250,0x1016665a0,196,CallFunctionForwardVarargs
code-creation,Builtin,2,13250,0x101666680,396,CallFunctionTemplate_Generic
code-creation,Builtin,2,13250,0x101666820,188,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,13250,0x1016668e0,268,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,13250,0x101666a00,356,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,13250,0x101666b80,24,ConstructFunction
code-creation,Builtin,2,13250,0x101666ba0,236,ConstructBoundFunction
code-creation,Builtin,2,13250,0x101666ca0,44,ConstructedNonConstructable
code-creation,Builtin,2,13250,0x101666ce0,88,Construct
code-creation,Builtin,2,13250,0x101666d40,172,ConstructVarargs
code-creation,Builtin,2,13250,0x101666e00,1180,ConstructWithSpread
code-creation,Builtin,2,13250,0x1016672a0,1912,ConstructWithSpread_Baseline
code-creation,Builtin,2,13292,0x101667a20,1892,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,13292,0x1016681a0,1300,ConstructWithArrayLike
code-creation,Builtin,2,13292,0x1016686c0,2012,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,13292,0x101668ea0,248,ConstructForwardVarargs
code-creation,Builtin,2,13292,0x101668fa0,120,ConstructForwardAllArgs
code-creation,Builtin,2,13292,0x101669020,696,ConstructForwardAllArgs_Baseline
code-creation,Builtin,2,13292,0x1016692e0,684,ConstructForwardAllArgs_WithFeedback
code-creation,Builtin,2,13292,0x1016695a0,248,ConstructFunctionForwardVarargs
code-creation,Builtin,2,13292,0x1016696a0,712,Construct_Baseline
code-creation,Builtin,2,13292,0x101669980,716,Construct_WithFeedback
code-creation,Builtin,2,13292,0x101669c60,540,JSConstructStubGeneric
code-creation,Builtin,2,13292,0x101669e80,448,JSBuiltinsConstructStub
code-creation,Builtin,2,13292,0x10166a060,840,FastNewObject
code-creation,Builtin,2,13292,0x10166a3c0,376,FastNewClosure
code-creation,Builtin,2,13292,0x10166a540,796,ConstructProxy
code-creation,Builtin,2,13333,0x10166a860,236,JSEntry
code-creation,Builtin,2,13333,0x10166a960,236,JSConstructEntry
code-creation,Builtin,2,13333,0x10166aa60,236,JSRunMicrotasksEntry
code-creation,Builtin,2,13333,0x10166ab60,184,JSEntryTrampoline
code-creation,Builtin,2,13333,0x10166ac20,184,JSConstructEntryTrampoline
code-creation,Builtin,2,13333,0x10166ace0,356,ResumeGeneratorTrampoline
code-creation,Builtin,2,13333,0x10166ae60,1400,StringFromCodePointAt
code-creation,Builtin,2,13333,0x10166b3e0,808,StringEqual
code-creation,Builtin,2,13333,0x10166b720,380,StringGreaterThan
code-creation,Builtin,2,13333,0x10166b8a0,380,StringGreaterThanOrEqual
code-creation,Builtin,2,13333,0x10166ba20,380,StringLessThan
code-creation,Builtin,2,13333,0x10166bba0,380,StringLessThanOrEqual
code-creation,Builtin,2,13333,0x10166bd20,380,StringCompare
code-creation,Builtin,2,13333,0x10166bea0,3772,StringSubstring
code-creation,Builtin,2,13333,0x10166cd60,124,OrderedHashTableHealIndex
code-creation,Builtin,2,13333,0x10166cde0,1088,InterpreterEntryTrampoline
code-creation,Builtin,2,13375,0x10166d240,1124,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,13375,0x10166d6c0,120,InterpreterForwardAllArgsThenConstruct
code-creation,Builtin,2,13375,0x10166d740,124,InterpreterPushArgsThenCall
code-creation,Builtin,2,13375,0x10166d7c0,132,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,13375,0x10166d860,132,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,13375,0x10166d900,132,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,13375,0x10166d9a0,840,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,13375,0x10166dd00,132,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,13375,0x10166dda0,140,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,13375,0x10166de40,88,InterpreterEnterAtBytecode
code-creation,Builtin,2,13375,0x10166dea0,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,13375,0x10166df80,144,InterpreterOnStackReplacement
code-creation,Builtin,2,13417,0x10166e020,496,BaselineOutOfLinePrologue
code-creation,Builtin,2,13417,0x10166e220,24,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,13417,0x10166e240,140,BaselineOnStackReplacement
code-creation,Builtin,2,13417,0x10166e2e0,100,BaselineLeaveFrame
code-creation,Builtin,2,13417,0x10166e360,224,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,13417,0x10166e460,228,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,13417,0x10166e560,204,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,13417,0x10166e640,4,MaglevOnStackReplacement
code-creation,Builtin,2,13417,0x10166e660,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,13417,0x10166e680,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,13417,0x10166e6a0,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,13417,0x10166e6c0,1192,CompileLazy
code-creation,Builtin,2,13417,0x10166eb80,76,CompileLazyDeoptimizedCode
code-creation,Builtin,2,13417,0x10166ebe0,276,InstantiateAsmJs
code-creation,Builtin,2,13458,0x10166ed00,44,NotifyDeoptimized
code-creation,Builtin,2,13458,0x10166ed40,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,13458,0x10166eda0,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,13458,0x10166ee00,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,13458,0x10166ee60,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,13458,0x10166eee0,364,CallApiCallbackGeneric
code-creation,Builtin,2,13500,0x10166f060,304,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,13500,0x10166f1a0,336,CallApiCallbackOptimized
code-creation,Builtin,2,13500,0x10166f300,304,CallApiGetter
code-creation,Builtin,2,13500,0x10166f440,40,HandleApiCallOrConstruct
code-creation,Builtin,2,13500,0x10166f480,8,HandleApiConstruct
code-creation,Builtin,2,13500,0x10166f4a0,8,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,13500,0x10166f4c0,8,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,13500,0x10166f4e0,52,AllocateInYoungGeneration
code-creation,Builtin,2,13500,0x10166f520,52,AllocateInOldGeneration
code-creation,Builtin,2,13500,0x10166f560,52,WasmAllocateInYoungGeneration
code-creation,Builtin,2,13542,0x10166f5a0,52,WasmAllocateInOldGeneration
code-creation,Builtin,2,13542,0x10166f5e0,140,NewHeapNumber
code-creation,Builtin,2,13542,0x10166f680,644,CopyFastSmiOrObjectElements
code-creation,Builtin,2,13542,0x10166f920,548,GrowFastDoubleElements
code-creation,Builtin,2,13542,0x10166fb60,480,GrowFastSmiOrObjectElements
code-creation,Builtin,2,13542,0x10166fd60,448,DebugBreakTrampoline
code-creation,Builtin,2,13542,0x10166ff40,320,RestartFrameTrampoline
code-creation,Builtin,2,13542,0x1016700a0,220,ToNumber
code-creation,Builtin,2,13542,0x101670180,124,ToBigInt
code-creation,Builtin,2,13542,0x101670200,324,ToNumber_Baseline
code-creation,Builtin,2,13583,0x101670360,388,ToNumeric_Baseline
code-creation,Builtin,2,13583,0x101670500,140,PlainPrimitiveToNumber
code-creation,Builtin,2,13583,0x1016705a0,260,ToNumberConvertBigInt
code-creation,Builtin,2,13583,0x1016706c0,100,ToBigIntConvertNumber
code-creation,Builtin,2,13583,0x101670740,208,Typeof
code-creation,Builtin,2,13583,0x101670820,140,BigIntToI64
code-creation,Builtin,2,13583,0x1016708c0,8,BigIntToI32Pair
code-creation,Builtin,2,13583,0x1016708e0,248,I64ToBigInt
code-creation,Builtin,2,13583,0x1016709e0,8,I32PairToBigInt
code-creation,Builtin,2,13583,0x101670a00,152,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,13625,0x101670aa0,176,MathCeilContinuation
code-creation,Builtin,2,13625,0x101670b60,176,MathFloorContinuation
code-creation,Builtin,2,13625,0x101670c20,200,MathRoundContinuation
code-creation,Builtin,2,13625,0x101670d00,4124,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,13625,0x101671d20,21300,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,13625,0x101677060,12500,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,13625,0x10167a140,740,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,13625,0x10167a440,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,13625,0x10167a4a0,16,LoadIC_StringLength
code-creation,Builtin,2,13625,0x10167a4c0,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,13667,0x10167a4e0,4100,LoadIC_NoFeedback
code-creation,Builtin,2,13667,0x10167b500,44,StoreGlobalIC_Slow
code-creation,Builtin,2,13667,0x10167b540,8552,StoreIC_NoFeedback
code-creation,Builtin,2,13667,0x10167d6c0,4372,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,13667,0x10167e7e0,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,13667,0x10167e8c0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,13667,0x10167e920,288,KeyedStoreIC_SloppyArguments_InBounds
code-creation,Builtin,2,13667,0x10167ea60,288,KeyedStoreIC_SloppyArguments_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,13667,0x10167eba0,288,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,13667,0x10167ece0,288,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,13708,0x10167ee20,16340,StoreFastElementIC_InBounds
code-creation,Builtin,2,13708,0x101682e00,12568,StoreFastElementIC_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,13708,0x101685f20,15332,StoreFastElementIC_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,13708,0x101689b20,7516,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,13708,0x10168b880,8880,ElementsTransitionAndStore_InBounds
code-creation,Builtin,2,13708,0x10168db40,22960,ElementsTransitionAndStore_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,13708,0x101693500,8880,ElementsTransitionAndStore_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,13708,0x1016957c0,13628,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,13708,0x101698d00,1096,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,13750,0x101699160,196,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,13750,0x101699240,68,HasIndexedInterceptorIC
code-creation,Builtin,2,13750,0x1016992a0,152,EnqueueMicrotask
code-creation,Builtin,2,13750,0x101699340,8,RunMicrotasksTrampoline
code-creation,Builtin,2,13750,0x101699360,3216,RunMicrotasks
code-creation,Builtin,2,13750,0x10169a000,4672,HasProperty
code-creation,Builtin,2,13750,0x10169b260,1252,DeleteProperty
code-creation,Builtin,2,13750,0x10169b760,2588,CopyDataProperties
code-creation,Builtin,2,13750,0x10169c180,10664,SetDataProperties
code-creation,Builtin,2,13750,0x10169eb40,3556,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,13792,0x10169f940,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,13792,0x10169f9a0,32,Abort
code-creation,Builtin,2,13792,0x10169f9e0,32,AbortCSADcheck
code-creation,Builtin,2,13792,0x10169fa20,8,EmptyFunction
code-creation,Builtin,2,13792,0x10169fa40,8,Illegal
code-creation,Builtin,2,13792,0x10169fa60,8,StrictPoisonPillThrower
code-creation,Builtin,2,13792,0x10169fa80,8,UnsupportedThrower
code-creation,Builtin,2,13792,0x10169faa0,80,ReturnReceiver
code-creation,Builtin,2,13792,0x10169fb00,36,ArrayConstructor
code-creation,Builtin,2,13792,0x10169fb40,452,ArrayConstructorImpl
code-creation,Builtin,2,13792,0x10169fd20,228,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13833,0x10169fe20,228,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13833,0x10169ff20,188,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13833,0x10169ffe0,188,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13833,0x1016a00a0,188,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13833,0x1016a0160,188,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13833,0x1016a0220,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a0300,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a03e0,864,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13875,0x1016a0760,840,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13875,0x1016a0ac0,752,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a0dc0,728,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a10a0,752,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a13a0,728,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13875,0x1016a1680,844,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13917,0x1016a19e0,820,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13917,0x1016a1d20,60,ArrayNArgumentsConstructor
code-creation,Builtin,2,13917,0x1016a1d60,8,ArrayConcat
code-creation,Builtin,2,13917,0x1016a1d80,8,ArrayPrototypeFill
code-creation,Builtin,2,13917,0x1016a1da0,1996,ArrayIncludesSmi
code-creation,Builtin,2,13917,0x1016a2580,1932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,13917,0x1016a2d20,344,ArrayIncludesPackedDoubles
code-creation,Builtin,2,13917,0x1016a2e80,472,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,13917,0x1016a3060,648,ArrayIncludes
code-creation,Builtin,2,13917,0x1016a3300,1820,ArrayIndexOfSmi
code-creation,Builtin,2,13917,0x1016a3a20,1760,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,13958,0x1016a4120,276,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,13958,0x1016a4240,276,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,13958,0x1016a4360,648,ArrayIndexOf
code-creation,Builtin,2,13958,0x1016a4600,8,ArrayPop
code-creation,Builtin,2,13958,0x1016a4620,580,ArrayPrototypePop
code-creation,Builtin,2,13958,0x1016a4880,8,ArrayPush
code-creation,Builtin,2,13958,0x1016a48a0,2504,ArrayPrototypePush
code-creation,Builtin,2,13958,0x1016a5280,8,ArrayShift
code-creation,Builtin,2,13958,0x1016a52a0,8,ArrayUnshift
code-creation,Builtin,2,13958,0x1016a52c0,1252,CloneFastJSArray
code-creation,Builtin,2,13958,0x1016a57c0,2712,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,14000,0x1016a6260,1248,ExtractFastJSArray
code-creation,Builtin,2,14000,0x1016a6760,256,ArrayPrototypeEntries
code-creation,Builtin,2,14000,0x1016a6880,252,ArrayPrototypeKeys
code-creation,Builtin,2,14000,0x1016a6980,256,ArrayPrototypeValues
code-creation,Builtin,2,14000,0x1016a6aa0,4268,ArrayIteratorPrototypeNext
code-creation,Builtin,2,14000,0x1016a7b60,8,ArrayBufferConstructor
code-creation,Builtin,2,14000,0x1016a7b80,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,14000,0x1016a7ba0,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,14000,0x1016a7bc0,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,14042,0x1016a7be0,8,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,14042,0x1016a7c00,8,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,14042,0x1016a7c20,1256,AsyncFunctionEnter
code-creation,Builtin,2,14042,0x1016a8120,96,AsyncFunctionReject
code-creation,Builtin,2,14042,0x1016a81a0,92,AsyncFunctionResolve
code-creation,Builtin,2,14042,0x1016a8200,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,14042,0x1016a8220,1936,AsyncFunctionAwaitCaught
code-creation,Builtin,2,14042,0x1016a89c0,1936,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,14042,0x1016a9160,208,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,14042,0x1016a9240,204,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,14083,0x1016a9320,8,BigIntConstructor
code-creation,Builtin,2,14083,0x1016a9340,8,BigIntAsUintN
code-creation,Builtin,2,14083,0x1016a9360,8,BigIntAsIntN
code-creation,Builtin,2,14083,0x1016a9380,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,14083,0x1016a93a0,8,BigIntPrototypeToString
code-creation,Builtin,2,14083,0x1016a93c0,8,BigIntPrototypeValueOf
code-creation,Builtin,2,14083,0x1016a93e0,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,14083,0x1016a9400,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,14083,0x1016a9420,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,14083,0x1016a9440,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,14125,0x1016a9460,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,14125,0x1016a9480,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,14125,0x1016a94a0,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,14125,0x1016a94c0,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,14125,0x1016a94e0,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,14125,0x1016a9500,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,14125,0x1016a9520,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,14125,0x1016a9540,8,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,14125,0x1016a9560,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,14125,0x1016a9580,8,CallSitePrototypeGetThis
code-creation,Builtin,2,14167,0x1016a95a0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,14167,0x1016a95c0,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,14167,0x1016a95e0,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,14167,0x1016a9600,8,CallSitePrototypeIsEval
code-creation,Builtin,2,14167,0x1016a9620,8,CallSitePrototypeIsNative
code-creation,Builtin,2,14167,0x1016a9640,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,14167,0x1016a9660,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,14167,0x1016a9680,8,CallSitePrototypeToString
code-creation,Builtin,2,14167,0x1016a96a0,8,ConsoleDebug
code-creation,Builtin,2,14167,0x1016a96c0,8,ConsoleError
code-creation,Builtin,2,14167,0x1016a96e0,8,ConsoleInfo
code-creation,Builtin,2,14208,0x1016a9700,8,ConsoleLog
code-creation,Builtin,2,14208,0x1016a9720,8,ConsoleWarn
code-creation,Builtin,2,14208,0x1016a9740,8,ConsoleDir
code-creation,Builtin,2,14208,0x1016a9760,8,ConsoleDirXml
code-creation,Builtin,2,14208,0x1016a9780,8,ConsoleTable
code-creation,Builtin,2,14208,0x1016a97a0,8,ConsoleTrace
code-creation,Builtin,2,14208,0x1016a97c0,8,ConsoleGroup
code-creation,Builtin,2,14208,0x1016a97e0,8,ConsoleGroupCollapsed
code-creation,Builtin,2,14208,0x1016a9800,8,ConsoleGroupEnd
code-creation,Builtin,2,14208,0x1016a9820,8,ConsoleClear
code-creation,Builtin,2,14208,0x1016a9840,8,ConsoleCount
code-creation,Builtin,2,14208,0x1016a9860,8,ConsoleCountReset
code-creation,Builtin,2,14250,0x1016a9880,8,ConsoleAssert
code-creation,Builtin,2,14250,0x1016a98a0,8,ConsoleProfile
code-creation,Builtin,2,14250,0x1016a98c0,8,ConsoleProfileEnd
code-creation,Builtin,2,14250,0x1016a98e0,8,ConsoleTime
code-creation,Builtin,2,14250,0x1016a9900,8,ConsoleTimeLog
code-creation,Builtin,2,14250,0x1016a9920,8,ConsoleTimeEnd
code-creation,Builtin,2,14250,0x1016a9940,8,ConsoleTimeStamp
code-creation,Builtin,2,14250,0x1016a9960,8,ConsoleContext
code-creation,Builtin,2,14250,0x1016a9980,8,DataViewConstructor
code-creation,Builtin,2,14250,0x1016a99a0,8,DateConstructor
code-creation,Builtin,2,14250,0x1016a99c0,196,DatePrototypeGetDate
code-creation,Builtin,2,14292,0x1016a9aa0,196,DatePrototypeGetDay
code-creation,Builtin,2,14292,0x1016a9b80,196,DatePrototypeGetFullYear
code-creation,Builtin,2,14292,0x1016a9c60,196,DatePrototypeGetHours
code-creation,Builtin,2,14292,0x1016a9d40,168,DatePrototypeGetMilliseconds
code-creation,Builtin,2,14292,0x1016a9e00,196,DatePrototypeGetMinutes
code-creation,Builtin,2,14292,0x1016a9ee0,196,DatePrototypeGetMonth
code-creation,Builtin,2,14292,0x1016a9fc0,196,DatePrototypeGetSeconds
code-creation,Builtin,2,14292,0x1016aa0a0,144,DatePrototypeGetTime
code-creation,Builtin,2,14292,0x1016aa140,168,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,14292,0x1016aa200,168,DatePrototypeGetUTCDate
code-creation,Builtin,2,14333,0x1016aa2c0,168,DatePrototypeGetUTCDay
code-creation,Builtin,2,14333,0x1016aa380,168,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,14333,0x1016aa440,168,DatePrototypeGetUTCHours
code-creation,Builtin,2,14333,0x1016aa500,168,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,14333,0x1016aa5c0,168,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,14333,0x1016aa680,168,DatePrototypeGetUTCMonth
code-creation,Builtin,2,14333,0x1016aa740,168,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,14333,0x1016aa800,144,DatePrototypeValueOf
code-creation,Builtin,2,14333,0x1016aa8a0,460,DatePrototypeToPrimitive
code-creation,Builtin,2,14333,0x1016aaa80,8,DatePrototypeGetYear
code-creation,Builtin,2,14333,0x1016aaaa0,8,DatePrototypeSetYear
code-creation,Builtin,2,14375,0x1016aaac0,8,DateNow
code-creation,Builtin,2,14375,0x1016aaae0,8,DateParse
code-creation,Builtin,2,14375,0x1016aab00,8,DatePrototypeSetDate
code-creation,Builtin,2,14375,0x1016aab20,8,DatePrototypeSetFullYear
code-creation,Builtin,2,14375,0x1016aab40,8,DatePrototypeSetHours
code-creation,Builtin,2,14375,0x1016aab60,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,14375,0x1016aab80,8,DatePrototypeSetMinutes
code-creation,Builtin,2,14375,0x1016aaba0,8,DatePrototypeSetMonth
code-creation,Builtin,2,14375,0x1016aabc0,8,DatePrototypeSetSeconds
code-creation,Builtin,2,14417,0x1016aabe0,8,DatePrototypeSetTime
code-creation,Builtin,2,14417,0x1016aac00,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,14417,0x1016aac20,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,14417,0x1016aac40,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,14417,0x1016aac60,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,14417,0x1016aac80,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,14417,0x1016aaca0,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,14458,0x1016aacc0,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,14458,0x1016aace0,8,DatePrototypeToDateString
code-creation,Builtin,2,14458,0x1016aad00,8,DatePrototypeToISOString
code-creation,Builtin,2,14458,0x1016aad20,8,DatePrototypeToUTCString
code-creation,Builtin,2,14458,0x1016aad40,8,DatePrototypeToString
code-creation,Builtin,2,14458,0x1016aad60,8,DatePrototypeToTimeString
code-creation,Builtin,2,14458,0x1016aad80,8,DatePrototypeToJson
code-creation,Builtin,2,14458,0x1016aada0,8,DateUTC
code-creation,Builtin,2,14458,0x1016aadc0,8,ErrorConstructor
code-creation,Builtin,2,14458,0x1016aade0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,14500,0x1016aae00,8,ErrorPrototypeToString
code-creation,Builtin,2,14500,0x1016aae20,8,FunctionConstructor
code-creation,Builtin,2,14500,0x1016aae40,80,FunctionPrototypeApply
code-creation,Builtin,2,14500,0x1016aaea0,8,FunctionPrototypeBind
code-creation,Builtin,2,14500,0x1016aaec0,8,WebAssemblyFunctionPrototypeBind
code-creation,Builtin,2,14500,0x1016aaee0,152,FunctionPrototypeCall
code-creation,Builtin,2,14500,0x1016aaf80,8,FunctionPrototypeToString
code-creation,Builtin,2,14500,0x1016aafa0,276,CreateIterResultObject
code-creation,Builtin,2,14500,0x1016ab0c0,1060,CreateGeneratorObject
code-creation,Builtin,2,14500,0x1016ab500,8,GeneratorFunctionConstructor
code-creation,Builtin,2,14500,0x1016ab520,436,GeneratorPrototypeNext
code-creation,Builtin,2,14542,0x1016ab6e0,440,GeneratorPrototypeReturn
code-creation,Builtin,2,14542,0x1016ab8a0,452,GeneratorPrototypeThrow
code-creation,Builtin,2,14542,0x1016aba80,8,AsyncFunctionConstructor
code-creation,Builtin,2,14542,0x1016abaa0,368,SuspendGeneratorBaseline
code-creation,Builtin,2,14542,0x1016abc20,116,ResumeGeneratorBaseline
code-creation,Builtin,2,14542,0x1016abca0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,14542,0x1016abce0,116,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,14542,0x1016abd60,8,GlobalDecodeURI
code-creation,Builtin,2,14542,0x1016abd80,8,GlobalDecodeURIComponent
code-creation,Builtin,2,14583,0x1016abda0,8,GlobalEncodeURI
code-creation,Builtin,2,14583,0x1016abdc0,8,GlobalEncodeURIComponent
code-creation,Builtin,2,14583,0x1016abde0,8,GlobalEscape
code-creation,Builtin,2,14583,0x1016abe00,8,GlobalUnescape
code-creation,Builtin,2,14583,0x1016abe20,8,GlobalEval
code-creation,Builtin,2,14583,0x1016abe40,160,GlobalIsFinite
code-creation,Builtin,2,14583,0x1016abf00,156,GlobalIsNaN
code-creation,Builtin,2,14583,0x1016abfa0,8,JsonParse
code-creation,Builtin,2,14583,0x1016abfc0,8,JsonStringify
code-creation,Builtin,2,14583,0x1016abfe0,8,JsonRawJson
code-creation,Builtin,2,14625,0x1016ac000,8,JsonIsRawJson
code-creation,Builtin,2,14625,0x1016ac020,4704,LoadIC
code-creation,Builtin,2,14625,0x1016ad2a0,4348,LoadIC_Megamorphic
code-creation,Builtin,2,14625,0x1016ae3a0,4584,LoadIC_Noninlined
code-creation,Builtin,2,14625,0x1016af5a0,48,LoadICTrampoline
code-creation,Builtin,2,14625,0x1016af5e0,28,LoadICBaseline
code-creation,Builtin,2,14625,0x1016af600,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,14625,0x1016af640,9504,LoadSuperIC
code-creation,Builtin,2,14625,0x1016b1b80,28,LoadSuperICBaseline
code-creation,Builtin,2,14625,0x1016b1ba0,9048,KeyedLoadIC
code-creation,Builtin,2,14625,0x1016b3f00,9448,EnumeratedKeyedLoadIC
code-creation,Builtin,2,14667,0x1016b6400,17016,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,14667,0x1016ba680,48,KeyedLoadICTrampoline
code-creation,Builtin,2,14667,0x1016ba6c0,28,KeyedLoadICBaseline
code-creation,Builtin,2,14667,0x1016ba6e0,36,EnumeratedKeyedLoadICBaseline
code-creation,Builtin,2,14667,0x1016ba720,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,14667,0x1016ba760,5580,StoreGlobalIC
code-creation,Builtin,2,14667,0x1016bbd40,48,StoreGlobalICTrampoline
code-creation,Builtin,2,14667,0x1016bbd80,28,StoreGlobalICBaseline
code-creation,Builtin,2,14667,0x1016bbda0,5720,StoreIC
code-creation,Builtin,2,14667,0x1016bd400,5524,StoreIC_Megamorphic
code-creation,Builtin,2,14667,0x1016be9a0,48,StoreICTrampoline
code-creation,Builtin,2,14708,0x1016be9e0,48,StoreICTrampoline_Megamorphic
code-creation,Builtin,2,14708,0x1016bea20,28,StoreICBaseline
code-creation,Builtin,2,14708,0x1016bea40,5568,DefineNamedOwnIC
code-creation,Builtin,2,14708,0x1016c0020,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,14708,0x1016c0060,28,DefineNamedOwnICBaseline
code-creation,Builtin,2,14708,0x1016c0080,6148,KeyedStoreIC
code-creation,Builtin,2,14708,0x1016c18a0,48,KeyedStoreICTrampoline
code-creation,Builtin,2,14708,0x1016c18e0,48,KeyedStoreICTrampoline_Megamorphic
code-creation,Builtin,2,14708,0x1016c1920,28,KeyedStoreICBaseline
code-creation,Builtin,2,14750,0x1016c1940,5660,DefineKeyedOwnIC
code-creation,Builtin,2,14750,0x1016c2f60,56,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,14750,0x1016c2fa0,36,DefineKeyedOwnICBaseline
code-creation,Builtin,2,14750,0x1016c2fe0,368,StoreInArrayLiteralIC
code-creation,Builtin,2,14750,0x1016c3160,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,14750,0x1016c3180,172,LookupContextTrampoline
code-creation,Builtin,2,14750,0x1016c3240,184,LookupContextBaseline
code-creation,Builtin,2,14750,0x1016c3300,172,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,14750,0x1016c33c0,184,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,14750,0x1016c3480,2740,LoadGlobalIC
code-creation,Builtin,2,14792,0x1016c3f40,2720,LoadGlobalICInsideTypeof
code-creation,Builtin,2,14792,0x1016c4a00,48,LoadGlobalICTrampoline
code-creation,Builtin,2,14792,0x1016c4a40,28,LoadGlobalICBaseline
code-creation,Builtin,2,14792,0x1016c4a60,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,14792,0x1016c4aa0,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,14792,0x1016c4ac0,152,LookupGlobalIC
code-creation,Builtin,2,14792,0x1016c4b60,192,LookupGlobalICTrampoline
code-creation,Builtin,2,14792,0x1016c4c40,176,LookupGlobalICBaseline
code-creation,Builtin,2,14792,0x1016c4d00,152,LookupGlobalICInsideTypeof
code-creation,Builtin,2,14792,0x1016c4da0,192,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,14792,0x1016c4e80,176,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,14833,0x1016c4f40,3116,CloneObjectIC
code-creation,Builtin,2,14833,0x1016c5b80,28,CloneObjectICBaseline
code-creation,Builtin,2,14833,0x1016c5ba0,2816,CloneObjectIC_Slow
code-creation,Builtin,2,14833,0x1016c66c0,3072,KeyedHasIC
code-creation,Builtin,2,14833,0x1016c72e0,28,KeyedHasICBaseline
code-creation,Builtin,2,14833,0x1016c7300,4672,KeyedHasIC_Megamorphic
code-creation,Builtin,2,14833,0x1016c8560,1736,IterableToList
code-creation,Builtin,2,14833,0x1016c8c40,1544,IterableToFixedArray
code-creation,Builtin,2,14833,0x1016c9260,968,IterableToListWithSymbolLookup
code-creation,Builtin,2,14875,0x1016c9640,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,14875,0x1016c96a0,120,IterableToListMayPreserveHoles
code-creation,Builtin,2,14875,0x1016c9720,120,IterableToListConvertHoles
code-creation,Builtin,2,14875,0x1016c97a0,1264,IterableToFixedArrayForWasm
code-creation,Builtin,2,14875,0x1016c9ca0,1664,StringListFromIterable
code-creation,Builtin,2,14875,0x1016ca340,1280,FindOrderedHashMapEntry
code-creation,Builtin,2,14875,0x1016ca860,4696,MapConstructor
code-creation,Builtin,2,14875,0x1016cbac0,1936,MapPrototypeSet
code-creation,Builtin,2,14875,0x1016cc260,1516,MapPrototypeDelete
code-creation,Builtin,2,14875,0x1016cc860,236,MapPrototypeGet
code-creation,Builtin,2,14917,0x1016cc960,192,MapPrototypeHas
code-creation,Builtin,2,14917,0x1016cca40,8,MapPrototypeClear
code-creation,Builtin,2,14917,0x1016cca60,288,MapPrototypeEntries
code-creation,Builtin,2,14917,0x1016ccba0,160,MapPrototypeGetSize
code-creation,Builtin,2,14917,0x1016ccc60,532,MapPrototypeForEach
code-creation,Builtin,2,14917,0x1016cce80,288,MapPrototypeKeys
code-creation,Builtin,2,14917,0x1016ccfc0,288,MapPrototypeValues
code-creation,Builtin,2,14917,0x1016cd100,868,MapIteratorPrototypeNext
code-creation,Builtin,2,14917,0x1016cd480,1184,MapIteratorToList
code-creation,Builtin,2,14917,0x1016cd940,8,NumberPrototypeToExponential
code-creation,Builtin,2,14917,0x1016cd960,8,NumberPrototypeToFixed
code-creation,Builtin,2,14958,0x1016cd980,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,14958,0x1016cd9a0,8,NumberPrototypeToPrecision
code-creation,Builtin,2,14958,0x1016cd9c0,348,SameValue
code-creation,Builtin,2,14958,0x1016cdb20,184,SameValueNumbersOnly
code-creation,Builtin,2,14958,0x1016cdbe0,1492,Add_Baseline
code-creation,Builtin,2,14958,0x1016ce1c0,1024,AddSmi_Baseline
code-creation,Builtin,2,14958,0x1016ce5e0,1396,Subtract_Baseline
code-creation,Builtin,2,14958,0x1016ceb60,1000,SubtractSmi_Baseline
code-creation,Builtin,2,14958,0x1016cef60,1492,Multiply_Baseline
code-creation,Builtin,2,14958,0x1016cf540,1092,MultiplySmi_Baseline
code-creation,Builtin,2,14958,0x1016cf9a0,1536,Divide_Baseline
code-creation,Builtin,2,15000,0x1016cffc0,1216,DivideSmi_Baseline
code-creation,Builtin,2,15000,0x1016d04a0,1432,Modulus_Baseline
code-creation,Builtin,2,15000,0x1016d0a40,1060,ModulusSmi_Baseline
code-creation,Builtin,2,15000,0x1016d0e80,668,Exponentiate_Baseline
code-creation,Builtin,2,15000,0x1016d1120,572,ExponentiateSmi_Baseline
code-creation,Builtin,2,15000,0x1016d1360,1452,BitwiseAnd_Baseline
code-creation,Builtin,2,15000,0x1016d1920,400,BitwiseAndSmi_Baseline
code-creation,Builtin,2,15000,0x1016d1ac0,1452,BitwiseOr_Baseline
code-creation,Builtin,2,15000,0x1016d2080,400,BitwiseOrSmi_Baseline
code-creation,Builtin,2,15000,0x1016d2220,1452,BitwiseXor_Baseline
code-creation,Builtin,2,15000,0x1016d27e0,400,BitwiseXorSmi_Baseline
code-creation,Builtin,2,15042,0x1016d2980,968,ShiftLeft_Baseline
code-creation,Builtin,2,15042,0x1016d2d60,408,ShiftLeftSmi_Baseline
code-creation,Builtin,2,15042,0x1016d2f00,968,ShiftRight_Baseline
code-creation,Builtin,2,15042,0x1016d32e0,396,ShiftRightSmi_Baseline
code-creation,Builtin,2,15042,0x1016d3480,1036,ShiftRightLogical_Baseline
code-creation,Builtin,2,15042,0x1016d38a0,644,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,15042,0x1016d3b40,1380,Add_WithFeedback
code-creation,Builtin,2,15042,0x1016d40c0,1328,Subtract_WithFeedback
code-creation,Builtin,2,15042,0x1016d4600,1416,Multiply_WithFeedback
code-creation,Builtin,2,15042,0x1016d4ba0,1448,Divide_WithFeedback
code-creation,Builtin,2,15083,0x1016d5160,1344,Modulus_WithFeedback
code-creation,Builtin,2,15083,0x1016d56c0,620,Exponentiate_WithFeedback
code-creation,Builtin,2,15083,0x1016d5940,1372,BitwiseAnd_WithFeedback
code-creation,Builtin,2,15083,0x1016d5ea0,1372,BitwiseOr_WithFeedback
code-creation,Builtin,2,15083,0x1016d6400,1372,BitwiseXor_WithFeedback
code-creation,Builtin,2,15083,0x1016d6960,896,ShiftLeft_WithFeedback
code-creation,Builtin,2,15083,0x1016d6d00,896,ShiftRight_WithFeedback
code-creation,Builtin,2,15083,0x1016d70a0,984,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,15083,0x1016d7480,2004,Equal_Baseline
code-creation,Builtin,2,15083,0x1016d7c60,1024,StrictEqual_Baseline
code-creation,Builtin,2,15083,0x1016d8080,1364,LessThan_Baseline
code-creation,Builtin,2,15125,0x1016d85e0,1364,GreaterThan_Baseline
code-creation,Builtin,2,15125,0x1016d8b40,1364,LessThanOrEqual_Baseline
code-creation,Builtin,2,15125,0x1016d90a0,1364,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,15125,0x1016d9600,2016,Equal_WithFeedback
code-creation,Builtin,2,15125,0x1016d9e00,1008,StrictEqual_WithFeedback
code-creation,Builtin,2,15125,0x1016da200,1332,LessThan_WithFeedback
code-creation,Builtin,2,15125,0x1016da740,1332,GreaterThan_WithFeedback
code-creation,Builtin,2,15125,0x1016dac80,1332,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,15125,0x1016db1c0,1332,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,15125,0x1016db700,380,BitwiseNot_Baseline
code-creation,Builtin,2,15125,0x1016db880,508,Decrement_Baseline
code-creation,Builtin,2,15167,0x1016dba80,508,Increment_Baseline
code-creation,Builtin,2,15167,0x1016dbc80,528,Negate_Baseline
code-creation,Builtin,2,15167,0x1016dbea0,356,BitwiseNot_WithFeedback
code-creation,Builtin,2,15167,0x1016dc020,484,Decrement_WithFeedback
code-creation,Builtin,2,15167,0x1016dc220,484,Increment_WithFeedback
code-creation,Builtin,2,15167,0x1016dc420,504,Negate_WithFeedback
code-creation,Builtin,2,15167,0x1016dc620,300,ObjectAssign
code-creation,Builtin,2,15167,0x1016dc760,916,ObjectCreate
code-creation,Builtin,2,15167,0x1016dcb00,8,ObjectDefineGetter
code-creation,Builtin,2,15167,0x1016dcb20,8,ObjectDefineProperties
code-creation,Builtin,2,15167,0x1016dcb40,8,ObjectDefineProperty
code-creation,Builtin,2,15208,0x1016dcb60,8,ObjectDefineSetter
code-creation,Builtin,2,15208,0x1016dcb80,1464,ObjectEntries
code-creation,Builtin,2,15208,0x1016dd140,8,ObjectFreeze
code-creation,Builtin,2,15208,0x1016dd160,4504,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,15208,0x1016de300,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,15208,0x1016de320,916,ObjectGetOwnPropertyNames
code-creation,Builtin,2,15208,0x1016de6c0,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,15208,0x1016de6e0,208,ObjectHasOwn
code-creation,Builtin,2,15208,0x1016de7c0,400,ObjectIs
code-creation,Builtin,2,15208,0x1016de960,8,ObjectIsFrozen
code-creation,Builtin,2,15208,0x1016de980,8,ObjectIsSealed
code-creation,Builtin,2,15250,0x1016de9a0,856,ObjectKeys
code-creation,Builtin,2,15250,0x1016ded00,8,ObjectLookupGetter
code-creation,Builtin,2,15250,0x1016ded20,8,ObjectLookupSetter
code-creation,Builtin,2,15250,0x1016ded40,2924,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,15250,0x1016df8c0,268,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,15250,0x1016df9e0,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,15250,0x1016dfa00,8,ObjectPrototypeGetProto
code-creation,Builtin,2,15250,0x1016dfa20,8,ObjectPrototypeSetProto
code-creation,Builtin,2,15250,0x1016dfa40,8,ObjectSeal
code-creation,Builtin,2,15250,0x1016dfa60,1316,ObjectToString
code-creation,Builtin,2,15250,0x1016dffa0,1220,ObjectValues
code-creation,Builtin,2,15292,0x1016e0480,416,OrdinaryHasInstance
code-creation,Builtin,2,15292,0x1016e0640,448,InstanceOf
code-creation,Builtin,2,15292,0x1016e0820,848,InstanceOf_WithFeedback
code-creation,Builtin,2,15292,0x1016e0b80,868,InstanceOf_Baseline
code-creation,Builtin,2,15292,0x1016e0f00,276,ForInEnumerate
code-creation,Builtin,2,15292,0x1016e1020,136,ForInPrepare
code-creation,Builtin,2,15292,0x1016e10c0,4656,ForInFilter
code-creation,Builtin,2,15292,0x1016e2300,68,ReflectApply
code-creation,Builtin,2,15292,0x1016e2360,72,ReflectConstruct
code-creation,Builtin,2,15292,0x1016e23c0,8,ReflectDefineProperty
code-creation,Builtin,2,15292,0x1016e23e0,8,ReflectOwnKeys
code-creation,Builtin,2,15333,0x1016e2400,8,ReflectSet
code-creation,Builtin,2,15333,0x1016e2420,8,RegExpCapture1Getter
code-creation,Builtin,2,15333,0x1016e2440,8,RegExpCapture2Getter
code-creation,Builtin,2,15333,0x1016e2460,8,RegExpCapture3Getter
code-creation,Builtin,2,15333,0x1016e2480,8,RegExpCapture4Getter
code-creation,Builtin,2,15333,0x1016e24a0,8,RegExpCapture5Getter
code-creation,Builtin,2,15333,0x1016e24c0,8,RegExpCapture6Getter
code-creation,Builtin,2,15333,0x1016e24e0,8,RegExpCapture7Getter
code-creation,Builtin,2,15333,0x1016e2500,8,RegExpCapture8Getter
code-creation,Builtin,2,15333,0x1016e2520,8,RegExpCapture9Getter
code-creation,Builtin,2,15333,0x1016e2540,2288,RegExpConstructor
code-creation,Builtin,2,15375,0x1016e2e40,8,RegExpInputGetter
code-creation,Builtin,2,15375,0x1016e2e60,8,RegExpInputSetter
code-creation,Builtin,2,15375,0x1016e2e80,8,RegExpLastMatchGetter
code-creation,Builtin,2,15375,0x1016e2ea0,8,RegExpLastParenGetter
code-creation,Builtin,2,15375,0x1016e2ec0,8,RegExpLeftContextGetter
code-creation,Builtin,2,15375,0x1016e2ee0,852,RegExpPrototypeCompile
code-creation,Builtin,2,15375,0x1016e3240,8,RegExpPrototypeToString
code-creation,Builtin,2,15375,0x1016e3260,8,RegExpRightContextGetter
code-creation,Builtin,2,15375,0x1016e3280,240,RegExpExecAtom
code-creation,Builtin,2,15375,0x1016e3380,1180,RegExpExecInternal
code-creation,Builtin,2,15375,0x1016e3820,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,15417,0x1016e3840,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,15417,0x1016e3860,1252,FindOrderedHashSetEntry
code-creation,Builtin,2,15417,0x1016e3d60,5172,SetConstructor
code-creation,Builtin,2,15417,0x1016e51a0,192,SetPrototypeHas
code-creation,Builtin,2,15417,0x1016e5280,1736,SetPrototypeAdd
code-creation,Builtin,2,15417,0x1016e5960,1524,SetPrototypeDelete
code-creation,Builtin,2,15417,0x1016e5f60,8,SetPrototypeClear
code-creation,Builtin,2,15417,0x1016e5f80,288,SetPrototypeEntries
code-creation,Builtin,2,15417,0x1016e60c0,160,SetPrototypeGetSize
code-creation,Builtin,2,15417,0x1016e6180,500,SetPrototypeForEach
code-creation,Builtin,2,15458,0x1016e6380,288,SetPrototypeValues
code-creation,Builtin,2,15458,0x1016e64c0,800,SetIteratorPrototypeNext
code-creation,Builtin,2,15458,0x1016e6800,1068,SetOrSetIteratorToList
code-creation,Builtin,2,15458,0x1016e6c40,8,ShadowRealmConstructor
code-creation,Builtin,2,15458,0x1016e6c60,708,ShadowRealmGetWrappedValue
code-creation,Builtin,2,15458,0x1016e6f40,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,15458,0x1016e6f60,1388,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,15458,0x1016e74e0,284,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,15458,0x1016e7600,88,ShadowRealmImportValueRejected
code-creation,Builtin,2,15458,0x1016e7660,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,15458,0x1016e7680,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,15500,0x1016e76a0,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,15500,0x1016e76c0,2056,AtomicsLoad
code-creation,Builtin,2,15500,0x1016e7ee0,2196,AtomicsStore
code-creation,Builtin,2,15500,0x1016e8780,2780,AtomicsExchange
code-creation,Builtin,2,15500,0x1016e9260,3152,AtomicsCompareExchange
code-creation,Builtin,2,15500,0x1016e9ec0,2648,AtomicsAdd
code-creation,Builtin,2,15500,0x1016ea920,2680,AtomicsSub
code-creation,Builtin,2,15500,0x1016eb3a0,2680,AtomicsAnd
code-creation,Builtin,2,15500,0x1016ebe20,2648,AtomicsOr
code-creation,Builtin,2,15500,0x1016ec880,2648,AtomicsXor
code-creation,Builtin,2,15500,0x1016ed2e0,8,AtomicsNotify
code-creation,Builtin,2,15542,0x1016ed300,8,AtomicsIsLockFree
code-creation,Builtin,2,15542,0x1016ed320,8,AtomicsWait
code-creation,Builtin,2,15542,0x1016ed340,8,AtomicsWaitAsync
code-creation,Builtin,2,15542,0x1016ed360,8,StringFromCodePoint
code-creation,Builtin,2,15542,0x1016ed380,1356,StringFromCharCode
code-creation,Builtin,2,15542,0x1016ed8e0,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,15542,0x1016ed900,4592,StringPrototypeMatchAll
code-creation,Builtin,2,15542,0x1016eeb00,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,15542,0x1016eeb20,1296,StringPrototypeReplace
code-creation,Builtin,2,15542,0x1016ef040,2748,StringPrototypeSplit
code-creation,Builtin,2,15583,0x1016efb00,8,StringRaw
code-creation,Builtin,2,15583,0x1016efb20,8,SymbolConstructor
code-creation,Builtin,2,15583,0x1016efb40,8,SymbolFor
code-creation,Builtin,2,15583,0x1016efb60,8,SymbolKeyFor
code-creation,Builtin,2,15583,0x1016efb80,96,TypedArrayBaseConstructor
code-creation,Builtin,2,15583,0x1016efc00,304,TypedArrayConstructor
code-creation,Builtin,2,15583,0x1016efd40,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,15583,0x1016efd60,876,TypedArrayPrototypeByteLength
code-creation,Builtin,2,15583,0x1016f00e0,328,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,15583,0x1016f0240,588,TypedArrayPrototypeLength
code-creation,Builtin,2,15583,0x1016f04a0,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,15625,0x1016f04c0,8,TypedArrayPrototypeFill
code-creation,Builtin,2,15625,0x1016f04e0,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,15625,0x1016f0500,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,15625,0x1016f0520,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,15625,0x1016f0540,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,15625,0x1016f0560,572,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,15625,0x1016f07a0,28828,TypedArrayPrototypeMap
code-creation,Builtin,2,15625,0x1016f7840,208,JSToWasmWrapperAsm
code-creation,Builtin,2,15625,0x1016f7920,736,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,15625,0x1016f7c20,40,WasmToJsWrapperAsm
code-creation,Builtin,2,15625,0x1016f7c60,5040,WasmToJsWrapperCSA
code-creation,Builtin,2,15667,0x1016f9020,40,WasmToJsWrapperInvalidSig
code-creation,Builtin,2,15667,0x1016f9060,192,WasmSuspend
code-creation,Builtin,2,15667,0x1016f9140,300,WasmResume
code-creation,Builtin,2,15667,0x1016f9280,316,WasmReject
code-creation,Builtin,2,15667,0x1016f93c0,8,WasmTrapHandlerLandingPad
code-creation,Builtin,2,15667,0x1016f93e0,132,WasmCompileLazy
code-creation,Builtin,2,15667,0x1016f9480,144,WasmLiftoffFrameSetup
code-creation,Builtin,2,15667,0x1016f9520,260,WasmDebugBreak
code-creation,Builtin,2,15667,0x1016f9640,4,WasmOnStackReplace
code-creation,Builtin,2,15667,0x1016f9660,152,WasmFloat32ToNumber
code-creation,Builtin,2,15667,0x1016f9700,140,WasmFloat64ToNumber
code-creation,Builtin,2,15708,0x1016f97a0,1524,WasmFloat64ToString
code-creation,Builtin,2,15708,0x1016f9da0,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,15708,0x1016f9dc0,4952,WeakMapConstructor
code-creation,Builtin,2,15708,0x1016fb120,268,WeakMapLookupHashIndex
code-creation,Builtin,2,15708,0x1016fb240,244,WeakMapGet
code-creation,Builtin,2,15708,0x1016fb340,204,WeakMapPrototypeHas
code-creation,Builtin,2,15708,0x1016fb420,260,WeakMapPrototypeSet
code-creation,Builtin,2,15708,0x1016fb540,212,WeakMapPrototypeDelete
code-creation,Builtin,2,15708,0x1016fb620,3596,WeakSetConstructor
code-creation,Builtin,2,15708,0x1016fc440,204,WeakSetPrototypeHas
code-creation,Builtin,2,15708,0x1016fc520,260,WeakSetPrototypeAdd
code-creation,Builtin,2,15750,0x1016fc640,212,WeakSetPrototypeDelete
code-creation,Builtin,2,15750,0x1016fc720,476,WeakCollectionDelete
code-creation,Builtin,2,15750,0x1016fc900,760,WeakCollectionSet
code-creation,Builtin,2,15750,0x1016fcc00,8,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,15750,0x1016fcc20,8,SharedStructTypeConstructor
code-creation,Builtin,2,15750,0x1016fcc40,8,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,15750,0x1016fcc60,8,SharedStructConstructor
code-creation,Builtin,2,15750,0x1016fcc80,8,SharedArrayConstructor
code-creation,Builtin,2,15750,0x1016fcca0,8,SharedArrayIsSharedArray
code-creation,Builtin,2,15792,0x1016fccc0,8,AtomicsMutexConstructor
code-creation,Builtin,2,15792,0x1016fcce0,8,AtomicsMutexIsMutex
code-creation,Builtin,2,15792,0x1016fcd00,8,AtomicsMutexLock
code-creation,Builtin,2,15792,0x1016fcd20,8,AtomicsMutexLockWithTimeout
code-creation,Builtin,2,15792,0x1016fcd40,8,AtomicsMutexTryLock
code-creation,Builtin,2,15792,0x1016fcd60,8,AtomicsConditionConstructor
code-creation,Builtin,2,15792,0x1016fcd80,8,AtomicsConditionIsCondition
code-creation,Builtin,2,15792,0x1016fcda0,8,AtomicsConditionWait
code-creation,Builtin,2,15792,0x1016fcdc0,8,AtomicsConditionNotify
code-creation,Builtin,2,15833,0x1016fcde0,340,AsyncGeneratorResolve
code-creation,Builtin,2,15833,0x1016fcf40,108,AsyncGeneratorReject
code-creation,Builtin,2,15833,0x1016fcfc0,1992,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,15833,0x1016fd7a0,2332,AsyncGeneratorReturn
code-creation,Builtin,2,15833,0x1016fe0c0,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,15833,0x1016fe240,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,15833,0x1016fe260,1064,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,15833,0x1016fe6a0,1072,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,15833,0x1016feae0,1072,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,15833,0x1016fef20,1964,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,15833,0x1016ff6e0,1964,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,15875,0x1016ffea0,188,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,15875,0x1016fff60,192,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,15875,0x101700040,128,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,15875,0x1017000e0,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,15875,0x101700180,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,15875,0x101700200,192,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,15875,0x1017002e0,1732,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,15875,0x1017009c0,1852,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,15875,0x101701100,1876,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,15917,0x101701860,128,AsyncIteratorValueUnwrap
code-creation,Builtin,2,15917,0x101701900,188,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,15917,0x1017019c0,216,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,15917,0x101701aa0,216,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,15917,0x101701b80,188,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,15917,0x101701c40,216,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,15917,0x101701d20,216,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,15917,0x101701e00,316,WasmCEntry
code-creation,Builtin,2,15917,0x101701f40,16,DirectCEntry
code-creation,Builtin,2,15917,0x101701f60,1408,StringAdd_CheckNone
code-creation,Builtin,2,15958,0x101702500,3736,SubString
code-creation,Builtin,2,15958,0x1017033a0,80,DoubleToI
code-creation,Builtin,2,15958,0x101703400,3608,GetProperty
code-creation,Builtin,2,15958,0x101704220,3960,GetPropertyWithReceiver
code-creation,Builtin,2,15958,0x1017051a0,16324,SetProperty
code-creation,Builtin,2,15958,0x101709180,13208,CreateDataProperty
code-creation,Builtin,2,15958,0x10170c520,48,GetOwnPropertyDescriptor
code-creation,Builtin,2,15958,0x10170c560,4,MemCopyUint8Uint8
code-creation,Builtin,2,15958,0x10170c580,4,MemMove
code-creation,Builtin,2,15958,0x10170c5a0,192,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,15958,0x10170c680,2628,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,16000,0x10170d0e0,8,IsTraceCategoryEnabled
code-creation,Builtin,2,16000,0x10170d100,8,Trace
code-creation,Builtin,2,16000,0x10170d120,8,FinalizationRegistryUnregister
code-creation,Builtin,2,16000,0x10170d140,440,AsyncModuleEvaluate
code-creation,Builtin,2,16000,0x10170d300,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,16000,0x10170d320,8,CallAsyncModuleRejected
code-creation,Builtin,2,16000,0x10170d340,8,TemporalNowTimeZone
code-creation,Builtin,2,16000,0x10170d360,8,TemporalNowInstant
code-creation,Builtin,2,16000,0x10170d380,8,TemporalNowPlainDateTime
code-creation,Builtin,2,16000,0x10170d3a0,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,16042,0x10170d3c0,8,TemporalNowZonedDateTime
code-creation,Builtin,2,16042,0x10170d3e0,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,16042,0x10170d400,8,TemporalNowPlainDate
code-creation,Builtin,2,16042,0x10170d420,8,TemporalNowPlainDateISO
code-creation,Builtin,2,16042,0x10170d440,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,16042,0x10170d460,8,TemporalPlainDateConstructor
code-creation,Builtin,2,16042,0x10170d480,8,TemporalPlainDateFrom
code-creation,Builtin,2,16042,0x10170d4a0,8,TemporalPlainDateCompare
code-creation,Builtin,2,16042,0x10170d4c0,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,16042,0x10170d4e0,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,16083,0x10170d500,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,16083,0x10170d520,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,16083,0x10170d540,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,16083,0x10170d560,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,16083,0x10170d580,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,16083,0x10170d5a0,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,16083,0x10170d5c0,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,16083,0x10170d5e0,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,16083,0x10170d600,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,16083,0x10170d620,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,16125,0x10170d640,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,16125,0x10170d660,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,16125,0x10170d680,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,16125,0x10170d6a0,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,16125,0x10170d6c0,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,16125,0x10170d6e0,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,16125,0x10170d700,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,16125,0x10170d720,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,16125,0x10170d740,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,16125,0x10170d760,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,16167,0x10170d780,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,16167,0x10170d7a0,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,16167,0x10170d7c0,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,16167,0x10170d7e0,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,16167,0x10170d800,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,16167,0x10170d820,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,16167,0x10170d840,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,16167,0x10170d860,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,16167,0x10170d880,8,TemporalPlainTimeFrom
code-creation,Builtin,2,16167,0x10170d8a0,8,TemporalPlainTimeCompare
code-creation,Builtin,2,16208,0x10170d8c0,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,16208,0x10170d8e0,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,16208,0x10170d900,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,16208,0x10170d920,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,16208,0x10170d940,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,16208,0x10170d960,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,16208,0x10170d980,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,16208,0x10170d9a0,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,16208,0x10170d9c0,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,16208,0x10170d9e0,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,16250,0x10170da00,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,16250,0x10170da20,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,16250,0x10170da40,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,16250,0x10170da60,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,16250,0x10170da80,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,16250,0x10170daa0,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,16250,0x10170dac0,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,16250,0x10170dae0,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,16250,0x10170db00,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,16292,0x10170db20,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,16292,0x10170db40,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,16292,0x10170db60,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,16292,0x10170db80,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,16292,0x10170dba0,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,16292,0x10170dbc0,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,16292,0x10170dbe0,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,16292,0x10170dc00,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,16292,0x10170dc20,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,16292,0x10170dc40,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,16333,0x10170dc60,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,16333,0x10170dc80,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,16333,0x10170dca0,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,16333,0x10170dcc0,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,16333,0x10170dce0,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,16333,0x10170dd00,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,16333,0x10170dd20,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,16333,0x10170dd40,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,16333,0x10170dd60,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,16333,0x10170dd80,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,16375,0x10170dda0,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,16375,0x10170ddc0,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,16375,0x10170dde0,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,16375,0x10170de00,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,16375,0x10170de20,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,16375,0x10170de40,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,16375,0x10170de60,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,16375,0x10170de80,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,16417,0x10170dea0,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,16417,0x10170dec0,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,16417,0x10170dee0,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,16417,0x10170df00,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,16417,0x10170df20,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,16417,0x10170df40,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,16417,0x10170df60,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,16417,0x10170df80,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,16417,0x10170dfa0,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,16417,0x10170dfc0,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,16458,0x10170dfe0,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,16458,0x10170e000,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,16458,0x10170e020,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,16458,0x10170e040,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,16458,0x10170e060,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,16458,0x10170e080,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,16458,0x10170e0a0,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,16458,0x10170e0c0,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,16458,0x10170e0e0,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,16500,0x10170e100,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,16500,0x10170e120,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,16500,0x10170e140,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,16500,0x10170e160,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,16500,0x10170e180,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,16500,0x10170e1a0,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,16500,0x10170e1c0,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,16500,0x10170e1e0,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,16500,0x10170e200,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,16542,0x10170e220,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,16542,0x10170e240,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,16542,0x10170e260,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,16542,0x10170e280,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,16542,0x10170e2a0,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,16542,0x10170e2c0,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,16542,0x10170e2e0,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,16542,0x10170e300,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,16542,0x10170e320,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,16542,0x10170e340,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,16583,0x10170e360,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,16583,0x10170e380,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,16583,0x10170e3a0,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,16583,0x10170e3c0,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,16583,0x10170e3e0,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,16583,0x10170e400,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,16583,0x10170e420,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,16583,0x10170e440,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,16583,0x10170e460,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,16625,0x10170e480,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,16625,0x10170e4a0,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,16625,0x10170e4c0,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,16625,0x10170e4e0,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,16625,0x10170e500,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,16625,0x10170e520,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,16625,0x10170e540,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,16625,0x10170e560,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,16625,0x10170e580,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,16667,0x10170e5a0,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,16667,0x10170e5c0,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,16667,0x10170e5e0,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,16667,0x10170e600,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,16667,0x10170e620,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,16667,0x10170e640,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,16667,0x10170e660,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,16708,0x10170e680,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,16708,0x10170e6a0,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,16708,0x10170e6c0,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,16708,0x10170e6e0,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,16708,0x10170e700,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,16708,0x10170e720,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,16708,0x10170e740,8,TemporalDurationConstructor
code-creation,Builtin,2,16708,0x10170e760,8,TemporalDurationFrom
code-creation,Builtin,2,16708,0x10170e780,8,TemporalDurationCompare
code-creation,Builtin,2,16708,0x10170e7a0,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,16750,0x10170e7c0,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,16750,0x10170e7e0,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,16750,0x10170e800,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,16750,0x10170e820,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,16750,0x10170e840,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,16750,0x10170e860,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,16750,0x10170e880,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,16750,0x10170e8a0,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,16750,0x10170e8c0,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,16750,0x10170e8e0,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,16792,0x10170e900,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,16792,0x10170e920,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,16792,0x10170e940,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,16792,0x10170e960,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,16792,0x10170e980,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,16792,0x10170e9a0,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,16792,0x10170e9c0,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,16792,0x10170e9e0,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,16792,0x10170ea00,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,16792,0x10170ea20,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,16833,0x10170ea40,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,16833,0x10170ea60,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,16833,0x10170ea80,8,TemporalInstantConstructor
code-creation,Builtin,2,16833,0x10170eaa0,8,TemporalInstantFrom
code-creation,Builtin,2,16833,0x10170eac0,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,16833,0x10170eae0,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,16833,0x10170eb00,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,16833,0x10170eb20,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,16833,0x10170eb40,8,TemporalInstantCompare
code-creation,Builtin,2,16833,0x10170eb60,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,16875,0x10170eb80,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,16875,0x10170eba0,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,16875,0x10170ebc0,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,16875,0x10170ebe0,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,16875,0x10170ec00,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,16875,0x10170ec20,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,16875,0x10170ec40,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,16875,0x10170ec60,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,16875,0x10170ec80,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,16875,0x10170eca0,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,16917,0x10170ecc0,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,16917,0x10170ece0,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,16917,0x10170ed00,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,16917,0x10170ed20,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,16917,0x10170ed40,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,16917,0x10170ed60,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,16958,0x10170ed80,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,16958,0x10170eda0,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,16958,0x10170edc0,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,16958,0x10170ede0,8,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,16958,0x10170ee00,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,16958,0x10170ee20,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,16958,0x10170ee40,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,16958,0x10170ee60,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,16958,0x10170ee80,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,16958,0x10170eea0,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,17000,0x10170eec0,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,17000,0x10170eee0,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,17000,0x10170ef00,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,17000,0x10170ef20,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,17000,0x10170ef40,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,17000,0x10170ef60,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,17000,0x10170ef80,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,17000,0x10170efa0,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,17000,0x10170efc0,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,17042,0x10170efe0,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,17042,0x10170f000,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,17042,0x10170f020,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,17042,0x10170f040,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,17042,0x10170f060,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,17042,0x10170f080,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,17042,0x10170f0a0,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,17042,0x10170f0c0,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,17042,0x10170f0e0,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,17042,0x10170f100,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,17083,0x10170f120,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,17083,0x10170f140,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,17083,0x10170f160,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,17083,0x10170f180,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,17083,0x10170f1a0,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,17083,0x10170f1c0,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,17083,0x10170f1e0,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,17083,0x10170f200,8,TemporalTimeZoneFrom
code-creation,Builtin,2,17083,0x10170f220,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,17083,0x10170f240,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,17125,0x10170f260,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,17125,0x10170f280,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,17125,0x10170f2a0,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,17125,0x10170f2c0,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,17125,0x10170f2e0,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,17125,0x10170f300,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,17125,0x10170f320,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,17125,0x10170f340,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,17125,0x10170f360,8,TemporalCalendarConstructor
code-creation,Builtin,2,17167,0x10170f380,8,TemporalCalendarFrom
code-creation,Builtin,2,17167,0x10170f3a0,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,17167,0x10170f3c0,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,17167,0x10170f3e0,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,17167,0x10170f400,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,17167,0x10170f420,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,17167,0x10170f440,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,17167,0x10170f460,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,17167,0x10170f480,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,17208,0x10170f4a0,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,17208,0x10170f4c0,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,17208,0x10170f4e0,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,17208,0x10170f500,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,17208,0x10170f520,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,17208,0x10170f540,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,17208,0x10170f560,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,17208,0x10170f580,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,17208,0x10170f5a0,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,17250,0x10170f5c0,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,17250,0x10170f5e0,3556,TemporalCalendarPrototypeFields
code-creation,Builtin,2,17250,0x1017103e0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,17250,0x101710400,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,17250,0x101710420,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,17250,0x101710440,8,DatePrototypeToTemporalInstant
code-creation,Builtin,2,17250,0x101710460,1720,StringFixedArrayFromIterable
code-creation,Builtin,2,17250,0x101710b20,1720,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,17250,0x1017111e0,296,AggregateErrorConstructor
code-creation,Builtin,2,17250,0x101711320,852,ArrayPrototypeAt
code-creation,Builtin,2,17292,0x101711680,544,ArrayPrototypeConcat
code-creation,Builtin,2,17292,0x1017118c0,4508,ArrayPrototypeCopyWithin
code-creation,Builtin,2,17292,0x101712a60,240,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,17292,0x101712b60,560,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,17292,0x101712da0,4280,ArrayEveryLoopContinuation
code-creation,Builtin,2,17292,0x101713e60,1572,ArrayEvery
code-creation,Builtin,2,17292,0x1017144a0,296,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,17292,0x1017145e0,828,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,17292,0x101714920,4436,ArrayFilterLoopContinuation
code-creation,Builtin,2,17292,0x101715a80,4388,ArrayFilter
code-creation,Builtin,2,17333,0x101716bc0,232,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,17333,0x101716cc0,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,17333,0x101716d00,364,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,17333,0x101716e80,508,ArrayFindLoopContinuation
code-creation,Builtin,2,17333,0x101717080,1540,ArrayPrototypeFind
code-creation,Builtin,2,17333,0x1017176a0,232,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,17333,0x1017177a0,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,17333,0x1017177e0,364,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,17333,0x101717960,500,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,17333,0x101717b60,1540,ArrayPrototypeFindIndex
code-creation,Builtin,2,17375,0x101718180,452,ArrayFindLastLoopContinuation
code-creation,Builtin,2,17375,0x101718360,1656,ArrayPrototypeFindLast
code-creation,Builtin,2,17375,0x1017189e0,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,17375,0x101718ba0,1652,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,17375,0x101719220,3148,FlattenIntoArrayWithoutMapFn
code-creation,Builtin,2,17375,0x101719e80,3100,FlattenIntoArrayWithMapFn
code-creation,Builtin,2,17375,0x10171aaa0,852,ArrayPrototypeFlat
code-creation,Builtin,2,17375,0x10171ae00,820,ArrayPrototypeFlatMap
code-creation,Builtin,2,17375,0x10171b140,240,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,17417,0x10171b240,240,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,17417,0x10171b340,4168,ArrayForEachLoopContinuation
code-creation,Builtin,2,17417,0x10171c3a0,1380,ArrayForEach
code-creation,Builtin,2,17417,0x10171c920,6320,ArrayFromAsyncIterableOnFulfilled
code-creation,Builtin,2,17417,0x10171e1e0,6344,ArrayFromAsyncIterableOnRejected
code-creation,Builtin,2,17417,0x10171fac0,3232,ArrayFromAsyncArrayLikeOnFulfilled
code-creation,Builtin,2,17417,0x101720780,3272,ArrayFromAsyncArrayLikeOnRejected
code-creation,Builtin,2,17417,0x101721460,15520,ArrayFromAsync
code-creation,Builtin,2,17417,0x101725120,4752,ArrayFrom
code-creation,Builtin,2,17458,0x1017263c0,192,ArrayIsArray
code-creation,Builtin,2,17458,0x1017264a0,380,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,17458,0x101726620,60,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,17458,0x101726660,160,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,17458,0x101726720,240,ConvertToLocaleString
code-creation,Builtin,2,17458,0x101726820,792,JoinStackPush
code-creation,Builtin,2,17458,0x101726b40,300,JoinStackPop
code-creation,Builtin,2,17458,0x101726c80,8812,ArrayPrototypeJoin
code-creation,Builtin,2,17458,0x101728f00,5672,ArrayPrototypeToLocaleString
code-creation,Builtin,2,17458,0x10172a540,276,ArrayPrototypeToString
code-creation,Builtin,2,17458,0x10172a660,8676,TypedArrayPrototypeJoin
code-creation,Builtin,2,17500,0x10172c860,5472,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,17500,0x10172dde0,3992,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,17500,0x10172ed80,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,17500,0x10172eea0,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,17500,0x10172efc0,452,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,17500,0x10172f1a0,4144,ArrayMapLoopContinuation
code-creation,Builtin,2,17500,0x1017301e0,3840,ArrayMap
code-creation,Builtin,2,17500,0x101731100,1744,ArrayOf
code-creation,Builtin,2,17500,0x1017317e0,400,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,17500,0x101731980,232,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,17542,0x101731a80,232,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,17542,0x101731b80,4172,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,17542,0x101732be0,1864,ArrayReduceRight
code-creation,Builtin,2,17542,0x101733340,208,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,17542,0x101733420,232,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,17542,0x101733520,232,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,17542,0x101733620,4224,ArrayReduceLoopContinuation
code-creation,Builtin,2,17542,0x1017346c0,1580,ArrayReduce
code-creation,Builtin,2,17542,0x101734d00,3228,ArrayPrototypeReverse
code-creation,Builtin,2,17542,0x1017359a0,3416,ArrayPrototypeShift
code-creation,Builtin,2,17583,0x101736700,5996,ArrayPrototypeSlice
code-creation,Builtin,2,17583,0x101737e80,240,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,17583,0x101737f80,544,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,17583,0x1017381c0,4268,ArraySomeLoopContinuation
code-creation,Builtin,2,17583,0x101739280,1548,ArraySome
code-creation,Builtin,2,17583,0x1017398a0,12568,ArrayPrototypeSplice
code-creation,Builtin,2,17583,0x10173c9c0,2032,GenericArrayToReversed
code-creation,Builtin,2,17583,0x10173d1c0,2860,ArrayPrototypeToReversed
code-creation,Builtin,2,17583,0x10173dd00,5308,ArrayTimSortIntoCopy
code-creation,Builtin,2,17625,0x10173f1c0,1880,ArrayPrototypeToSorted
code-creation,Builtin,2,17625,0x10173f920,8220,ArrayPrototypeToSpliced
code-creation,Builtin,2,17625,0x101741940,2816,ArrayPrototypeUnshift
code-creation,Builtin,2,17625,0x101742460,1356,GenericArrayWith
code-creation,Builtin,2,17625,0x1017429c0,1128,ArrayPrototypeWith
code-creation,Builtin,2,17625,0x101742e40,308,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,17625,0x101742f80,428,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,17625,0x101743140,228,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,17625,0x101743240,228,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,17625,0x101743340,308,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,17667,0x101743480,228,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,17667,0x101743580,128,ArrayBufferIsView
code-creation,Builtin,2,17667,0x101743620,224,ToInteger
code-creation,Builtin,2,17667,0x101743720,3900,FastCreateDataProperty
code-creation,Builtin,2,17667,0x101744660,1076,BooleanConstructor
code-creation,Builtin,2,17667,0x101744aa0,196,BooleanPrototypeToString
code-creation,Builtin,2,17667,0x101744b80,192,BooleanPrototypeValueOf
code-creation,Builtin,2,17667,0x101744c60,976,BigIntAddNoThrow
code-creation,Builtin,2,17667,0x101745040,1152,BigIntAdd
code-creation,Builtin,2,17667,0x1017454e0,976,BigIntSubtractNoThrow
code-creation,Builtin,2,17667,0x1017458c0,1152,BigIntSubtract
code-creation,Builtin,2,17708,0x101745d60,308,BigIntMultiplyNoThrow
code-creation,Builtin,2,17708,0x101745ea0,516,BigIntMultiply
code-creation,Builtin,2,17708,0x1017460c0,492,BigIntDivideNoThrow
code-creation,Builtin,2,17708,0x1017462c0,608,BigIntDivide
code-creation,Builtin,2,17708,0x101746540,404,BigIntModulusNoThrow
code-creation,Builtin,2,17708,0x1017466e0,520,BigIntModulus
code-creation,Builtin,2,17708,0x101746900,868,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,17708,0x101746c80,1060,BigIntBitwiseAnd
code-creation,Builtin,2,17708,0x1017470c0,832,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,17708,0x101747420,996,BigIntBitwiseOr
code-creation,Builtin,2,17708,0x101747820,896,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,17750,0x101747bc0,1088,BigIntBitwiseXor
code-creation,Builtin,2,17750,0x101748020,1220,BigIntShiftLeftNoThrow
code-creation,Builtin,2,17750,0x101748500,1412,BigIntShiftLeft
code-creation,Builtin,2,17750,0x101748aa0,1220,BigIntShiftRightNoThrow
code-creation,Builtin,2,17750,0x101748f80,1412,BigIntShiftRight
code-creation,Builtin,2,17750,0x101749520,132,BigIntEqual
code-creation,Builtin,2,17750,0x1017495c0,184,BigIntLessThan
code-creation,Builtin,2,17750,0x101749680,188,BigIntGreaterThan
code-creation,Builtin,2,17750,0x101749740,188,BigIntLessThanOrEqual
code-creation,Builtin,2,17750,0x101749800,184,BigIntGreaterThanOrEqual
code-creation,Builtin,2,17750,0x1017498c0,324,BigIntUnaryMinus
code-creation,Builtin,2,17792,0x101749a20,2060,ToString
code-creation,Builtin,2,17792,0x10174a240,188,StringPrototypeToString
code-creation,Builtin,2,17792,0x10174a300,188,StringPrototypeValueOf
code-creation,Builtin,2,17792,0x10174a3c0,2216,StringToList
code-creation,Builtin,2,17792,0x10174ac80,808,StringPrototypeCharAt
code-creation,Builtin,2,17792,0x10174afc0,692,StringPrototypeCharCodeAt
code-creation,Builtin,2,17792,0x10174b280,1204,StringPrototypeCodePointAt
code-creation,Builtin,2,17792,0x10174b740,436,StringPrototypeConcat
code-creation,Builtin,2,17792,0x10174b900,1116,StringConstructor
code-creation,Builtin,2,17792,0x10174bd60,2132,StringAddConvertLeft
code-creation,Builtin,2,17833,0x10174c5c0,2168,StringAddConvertRight
code-creation,Builtin,2,17833,0x10174ce40,660,StringCharAt
code-creation,Builtin,2,17833,0x10174d0e0,20,FastNewClosureBaseline
code-creation,Builtin,2,17833,0x10174d100,296,FastNewFunctionContextEval
code-creation,Builtin,2,17833,0x10174d240,296,FastNewFunctionContextFunction
code-creation,Builtin,2,17833,0x10174d380,296,CreateRegExpLiteral
code-creation,Builtin,2,17833,0x10174d4c0,1376,CreateShallowArrayLiteral
code-creation,Builtin,2,17833,0x10174da40,480,CreateEmptyArrayLiteral
code-creation,Builtin,2,17833,0x10174dc40,2208,CreateShallowObjectLiteral
code-creation,Builtin,2,17875,0x10174e500,472,ObjectConstructor
code-creation,Builtin,2,17875,0x10174e6e0,256,CreateEmptyLiteralObject
code-creation,Builtin,2,17875,0x10174e800,592,NumberConstructor
code-creation,Builtin,2,17875,0x10174ea60,92,GenericLazyDeoptContinuation
code-creation,Builtin,2,17875,0x10174eac0,84,StringToNumber
code-creation,Builtin,2,17875,0x10174eb20,240,NonNumberToNumber
code-creation,Builtin,2,17875,0x10174ec20,288,NonNumberToNumeric
code-creation,Builtin,2,17875,0x10174ed60,60,ToNumeric
code-creation,Builtin,2,17875,0x10174eda0,1392,NumberToString
code-creation,Builtin,2,17875,0x10174f320,140,ToBoolean
code-creation,Builtin,2,17917,0x10174f3c0,140,ToBooleanForBaselineJump
code-creation,Builtin,2,17917,0x10174f460,536,ToLength
code-creation,Builtin,2,17917,0x10174f680,1300,ToName
code-creation,Builtin,2,17917,0x10174fba0,940,ToObject
code-creation,Builtin,2,17917,0x10174ff60,460,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,17917,0x101750140,460,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,17917,0x101750320,824,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,17917,0x101750660,36,OrdinaryToPrimitive_Number
code-creation,Builtin,2,17917,0x1017506a0,412,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,17917,0x101750840,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,17917,0x1017509e0,280,FastConsoleAssert
code-creation,Builtin,2,17958,0x101750b00,216,DataViewPrototypeGetBuffer
code-creation,Builtin,2,17958,0x101750be0,712,DataViewPrototypeGetByteLength
code-creation,Builtin,2,17958,0x101750ec0,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,17958,0x101751080,772,DataViewPrototypeGetUint8
code-creation,Builtin,2,17958,0x1017513a0,772,DataViewPrototypeGetInt8
code-creation,Builtin,2,17958,0x1017516c0,856,DataViewPrototypeGetUint16
code-creation,Builtin,2,17958,0x101751a20,852,DataViewPrototypeGetInt16
code-creation,Builtin,2,17958,0x101751d80,996,DataViewPrototypeGetUint32
code-creation,Builtin,2,17958,0x101752180,884,DataViewPrototypeGetInt32
code-creation,Builtin,2,17958,0x101752500,1064,DataViewPrototypeGetFloat16
code-creation,Builtin,2,18000,0x101752940,1020,DataViewPrototypeGetFloat32
code-creation,Builtin,2,18000,0x101752d40,1084,DataViewPrototypeGetFloat64
code-creation,Builtin,2,18000,0x101753180,1144,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,18000,0x101753600,1168,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,18000,0x101753aa0,1168,DataViewPrototypeSetUint8
code-creation,Builtin,2,18000,0x101753f40,1168,DataViewPrototypeSetInt8
code-creation,Builtin,2,18000,0x1017543e0,1256,DataViewPrototypeSetUint16
code-creation,Builtin,2,18000,0x1017548e0,1256,DataViewPrototypeSetInt16
code-creation,Builtin,2,18000,0x101754de0,1288,DataViewPrototypeSetUint32
code-creation,Builtin,2,18000,0x101755300,1288,DataViewPrototypeSetInt32
code-creation,Builtin,2,18000,0x101755820,1380,DataViewPrototypeSetFloat16
code-creation,Builtin,2,18042,0x101755da0,1292,DataViewPrototypeSetFloat32
code-creation,Builtin,2,18042,0x1017562c0,1352,DataViewPrototypeSetFloat64
code-creation,Builtin,2,18042,0x101756820,1200,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,18042,0x101756ce0,1200,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,18042,0x1017571a0,976,FinalizationRegistryConstructor
code-creation,Builtin,2,18042,0x101757580,1056,FinalizationRegistryRegister
code-creation,Builtin,2,18042,0x1017579c0,660,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,18042,0x101757c60,360,FunctionPrototypeHasInstance
code-creation,Builtin,2,18042,0x101757de0,912,FastFunctionPrototypeBind
code-creation,Builtin,2,18042,0x101758180,144,IncBlockCounter
code-creation,Builtin,2,18083,0x101758220,308,GetTemplateObject
code-creation,Builtin,2,18083,0x101758360,128,ForInNext
code-creation,Builtin,2,18083,0x101758400,184,GetImportMetaObjectBaseline
code-creation,Builtin,2,18083,0x1017584c0,128,GetIteratorWithFeedback
code-creation,Builtin,2,18083,0x101758560,124,GetIteratorBaseline
code-creation,Builtin,2,18083,0x1017585e0,316,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,18083,0x101758720,1136,CallIteratorWithFeedback
code-creation,Builtin,2,18083,0x101758ba0,936,IteratorConstructor
code-creation,Builtin,2,18083,0x101758f60,80,IteratorPrototypeGetToStringTag
code-creation,Builtin,2,18083,0x101758fc0,368,IteratorPrototypeSetToStringTag
code-creation,Builtin,2,18125,0x101759140,120,IteratorPrototypeGetConstructor
code-creation,Builtin,2,18125,0x1017591c0,368,IteratorPrototypeSetConstructor
code-creation,Builtin,2,18125,0x101759340,912,IteratorFrom
code-creation,Builtin,2,18125,0x1017596e0,184,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,18125,0x1017597a0,436,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,18125,0x101759960,436,IteratorHelperPrototypeNext
code-creation,Builtin,2,18125,0x101759b20,1348,IteratorHelperPrototypeReturn
code-creation,Builtin,2,18125,0x10175a080,388,IteratorPrototypeMap
code-creation,Builtin,2,18125,0x10175a220,1356,IteratorMapHelperNext
code-creation,Builtin,2,18125,0x10175a780,388,IteratorPrototypeFilter
code-creation,Builtin,2,18167,0x10175a920,1520,IteratorFilterHelperNext
code-creation,Builtin,2,18167,0x10175af20,500,IteratorPrototypeTake
code-creation,Builtin,2,18167,0x10175b120,1552,IteratorTakeHelperNext
code-creation,Builtin,2,18167,0x10175b740,500,IteratorPrototypeDrop
code-creation,Builtin,2,18167,0x10175b940,1804,IteratorDropHelperNext
code-creation,Builtin,2,18167,0x10175c060,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,18167,0x10175c200,2668,IteratorFlatMapHelperNext
code-creation,Builtin,2,18167,0x10175cc80,1744,IteratorPrototypeReduce
code-creation,Builtin,2,18167,0x10175d360,1568,IteratorPrototypeToArray
code-creation,Builtin,2,18167,0x10175d9a0,1084,IteratorPrototypeForEach
code-creation,Builtin,2,18167,0x10175dde0,1368,IteratorPrototypeSome
code-creation,Builtin,2,18208,0x10175e340,1364,IteratorPrototypeEvery
code-creation,Builtin,2,18208,0x10175e8a0,1376,IteratorPrototypeFind
code-creation,Builtin,2,18208,0x10175ee20,7676,MapGroupBy
code-creation,Builtin,2,18208,0x101760c20,276,MathAbs
code-creation,Builtin,2,18208,0x101760d40,256,MathCeil
code-creation,Builtin,2,18208,0x101760e60,256,MathFloor
code-creation,Builtin,2,18208,0x101760f80,280,MathRound
code-creation,Builtin,2,18208,0x1017610a0,256,MathTrunc
code-creation,Builtin,2,18208,0x1017611c0,360,MathPow
code-creation,Builtin,2,18208,0x101761340,404,MathMax
code-creation,Builtin,2,18208,0x1017614e0,404,MathMin
code-creation,Builtin,2,18250,0x101761680,280,MathAcos
code-creation,Builtin,2,18250,0x1017617a0,280,MathAcosh
code-creation,Builtin,2,18250,0x1017618c0,280,MathAsin
code-creation,Builtin,2,18250,0x1017619e0,280,MathAsinh
code-creation,Builtin,2,18250,0x101761b00,280,MathAtan
code-creation,Builtin,2,18250,0x101761c20,356,MathAtan2
code-creation,Builtin,2,18250,0x101761da0,280,MathAtanh
code-creation,Builtin,2,18250,0x101761ec0,280,MathCbrt
code-creation,Builtin,2,18250,0x101761fe0,156,MathClz32
code-creation,Builtin,2,18250,0x101762080,280,MathCos
code-creation,Builtin,2,18250,0x1017621a0,280,MathCosh
code-creation,Builtin,2,18250,0x1017622c0,280,MathExp
code-creation,Builtin,2,18292,0x1017623e0,280,MathExpm1
code-creation,Builtin,2,18292,0x101762500,264,MathFround
code-creation,Builtin,2,18292,0x101762620,476,MathF16round
code-creation,Builtin,2,18292,0x101762800,228,MathImul
code-creation,Builtin,2,18292,0x101762900,280,MathLog
code-creation,Builtin,2,18292,0x101762a20,280,MathLog1p
code-creation,Builtin,2,18292,0x101762b40,280,MathLog10
code-creation,Builtin,2,18292,0x101762c60,280,MathLog2
code-creation,Builtin,2,18292,0x101762d80,280,MathSin
code-creation,Builtin,2,18292,0x101762ea0,180,MathSign
code-creation,Builtin,2,18292,0x101762f60,280,MathSinh
code-creation,Builtin,2,18292,0x101763080,260,MathSqrt
code-creation,Builtin,2,18333,0x1017631a0,280,MathTan
code-creation,Builtin,2,18333,0x1017632c0,280,MathTanh
code-creation,Builtin,2,18333,0x1017633e0,1024,MathHypot
code-creation,Builtin,2,18333,0x101763800,320,MathRandom
code-creation,Builtin,2,18333,0x101763960,2572,NumberPrototypeToString
code-creation,Builtin,2,18333,0x101764380,156,NumberIsFinite
code-creation,Builtin,2,18333,0x101764420,156,NumberIsInteger
code-creation,Builtin,2,18333,0x1017644c0,152,NumberIsNaN
code-creation,Builtin,2,18333,0x101764560,184,NumberIsSafeInteger
code-creation,Builtin,2,18333,0x101764620,192,NumberPrototypeValueOf
code-creation,Builtin,2,18375,0x101764700,228,NumberParseFloat
code-creation,Builtin,2,18375,0x101764800,188,ParseInt
code-creation,Builtin,2,18375,0x1017648c0,108,NumberParseInt
code-creation,Builtin,2,18375,0x101764940,732,Add
code-creation,Builtin,2,18375,0x101764c20,404,Subtract
code-creation,Builtin,2,18375,0x101764dc0,528,Multiply
code-creation,Builtin,2,18375,0x101764fe0,452,Divide
code-creation,Builtin,2,18375,0x1017651c0,496,Modulus
code-creation,Builtin,2,18375,0x1017653c0,504,Exponentiate
code-creation,Builtin,2,18375,0x1017655c0,316,Negate
code-creation,Builtin,2,18375,0x101765700,152,BitwiseNot
code-creation,Builtin,2,18375,0x1017657a0,120,Decrement
code-creation,Builtin,2,18417,0x101765820,120,Increment
code-creation,Builtin,2,18417,0x1017658a0,476,ShiftLeft
code-creation,Builtin,2,18417,0x101765a80,476,ShiftRight
code-creation,Builtin,2,18417,0x101765c60,532,ShiftRightLogical
code-creation,Builtin,2,18417,0x101765e80,264,BitwiseAnd
code-creation,Builtin,2,18417,0x101765fa0,264,BitwiseOr
code-creation,Builtin,2,18417,0x1017660c0,264,BitwiseXor
code-creation,Builtin,2,18417,0x1017661e0,1004,LessThan
code-creation,Builtin,2,18417,0x1017665e0,1004,LessThanOrEqual
code-creation,Builtin,2,18417,0x1017669e0,1004,GreaterThan
code-creation,Builtin,2,18417,0x101766de0,1004,GreaterThanOrEqual
code-creation,Builtin,2,18417,0x1017671e0,1132,Equal
code-creation,Builtin,2,18458,0x101767660,540,StrictEqual
code-creation,Builtin,2,18458,0x101767880,3356,ObjectFromEntries
code-creation,Builtin,2,18458,0x1017685a0,3880,GroupByGeneric
code-creation,Builtin,2,18458,0x1017694e0,7920,ObjectGroupBy
code-creation,Builtin,2,18458,0x10176b3e0,932,CreateObjectWithoutProperties
code-creation,Builtin,2,18458,0x10176b7a0,176,ObjectIsExtensible
code-creation,Builtin,2,18458,0x10176b860,180,ObjectPreventExtensions
code-creation,Builtin,2,18458,0x10176b920,184,ObjectGetPrototypeOf
code-creation,Builtin,2,18458,0x10176b9e0,312,ObjectSetPrototypeOf
code-creation,Builtin,2,18458,0x10176bb20,92,ObjectPrototypeToString
code-creation,Builtin,2,18500,0x10176bb80,116,ObjectPrototypeValueOf
code-creation,Builtin,2,18500,0x10176bc00,208,ObjectPrototypeToLocaleString
code-creation,Builtin,2,18500,0x10176bce0,828,FulfillPromise
code-creation,Builtin,2,18500,0x10176c020,984,RejectPromise
code-creation,Builtin,2,18500,0x10176c400,2776,NewPromiseCapability
code-creation,Builtin,2,18500,0x10176cee0,212,PromiseCapabilityDefaultReject
code-creation,Builtin,2,18500,0x10176cfc0,192,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,18500,0x10176d0a0,1160,PerformPromiseThen
code-creation,Builtin,2,18500,0x10176d540,716,PromiseReject
code-creation,Builtin,2,18500,0x10176d820,300,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,18542,0x10176d960,144,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,18542,0x10176da00,4100,PromiseAll
code-creation,Builtin,2,18542,0x10176ea20,4416,PromiseAllSettled
code-creation,Builtin,2,18542,0x10176fb80,1084,PromiseAllResolveElementClosure
code-creation,Builtin,2,18542,0x10176ffc0,1416,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,18542,0x101770560,1416,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,18542,0x101770b00,1152,PromiseAnyRejectElementClosure
code-creation,Builtin,2,18542,0x101770fa0,2688,PromiseAny
code-creation,Builtin,2,18542,0x101771a40,3184,PromiseConstructor
code-creation,Builtin,2,18583,0x1017726c0,364,PromisePrototypeCatch
code-creation,Builtin,2,18583,0x101772840,108,PromiseValueThunkFinally
code-creation,Builtin,2,18583,0x1017728c0,108,PromiseThrowerFinally
code-creation,Builtin,2,18583,0x101772940,1052,PromiseCatchFinally
code-creation,Builtin,2,18583,0x101772d60,1052,PromiseThenFinally
code-creation,Builtin,2,18583,0x101773180,1724,PromisePrototypeFinally
code-creation,Builtin,2,18583,0x101773840,1344,PromiseResolveThenableJob
code-creation,Builtin,2,18583,0x101773da0,84,GetContinuationPreservedEmbedderData
code-creation,Builtin,2,18583,0x101773e00,100,SetContinuationPreservedEmbedderData
code-creation,Builtin,2,18625,0x101773e80,1536,PromiseRace
code-creation,Builtin,2,18625,0x1017744a0,384,PromiseFulfillReactionJob
code-creation,Builtin,2,18625,0x101774640,472,PromiseRejectReactionJob
code-creation,Builtin,2,18625,0x101774820,172,PromiseResolveTrampoline
code-creation,Builtin,2,18625,0x1017748e0,1000,PromiseResolve
code-creation,Builtin,2,18625,0x101774ce0,820,ResolvePromise
code-creation,Builtin,2,18625,0x101775020,2032,PromisePrototypeThen
code-creation,Builtin,2,18625,0x101775820,332,PromiseWithResolvers
code-creation,Builtin,2,18625,0x101775980,448,ProxyConstructor
code-creation,Builtin,2,18625,0x101775b60,2408,ProxyDeleteProperty
code-creation,Builtin,2,18625,0x1017764e0,2708,ProxyGetProperty
code-creation,Builtin,2,18667,0x101776f80,1068,ProxyGetPrototypeOf
code-creation,Builtin,2,18667,0x1017773c0,2328,ProxyHasProperty
code-creation,Builtin,2,18667,0x101777ce0,844,ProxyIsExtensible
code-creation,Builtin,2,18667,0x101778040,876,ProxyPreventExtensions
code-creation,Builtin,2,18667,0x1017783c0,1096,ProxyRevocable
code-creation,Builtin,2,18667,0x101778820,144,ProxyRevoke
code-creation,Builtin,2,18667,0x1017788c0,2840,ProxySetProperty
code-creation,Builtin,2,18667,0x1017793e0,1336,ProxySetPrototypeOf
code-creation,Builtin,2,18667,0x101779920,228,ReflectIsExtensible
code-creation,Builtin,2,18667,0x101779a20,232,ReflectPreventExtensions
code-creation,Builtin,2,18667,0x101779b20,208,ReflectGetPrototypeOf
code-creation,Builtin,2,18708,0x101779c00,336,ReflectSetPrototypeOf
code-creation,Builtin,2,18708,0x101779d60,312,ReflectGet
code-creation,Builtin,2,18708,0x101779ea0,176,ReflectDeleteProperty
code-creation,Builtin,2,18708,0x101779f60,172,ReflectHas
code-creation,Builtin,2,18708,0x10177a020,4380,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,18708,0x10177b140,5240,RegExpPrototypeExecSlow
code-creation,Builtin,2,18708,0x10177c5c0,5324,RegExpPrototypeExec
code-creation,Builtin,2,18708,0x10177daa0,2492,RegExpPrototypeMatchAll
code-creation,Builtin,2,18708,0x10177e460,9180,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,18708,0x101780840,9080,RegExpMatchFast
code-creation,Builtin,2,18750,0x101782bc0,3652,RegExpPrototypeMatch
code-creation,Builtin,2,18750,0x101783a20,6092,RegExpReplace
code-creation,Builtin,2,18750,0x101785200,568,RegExpPrototypeReplace
code-creation,Builtin,2,18750,0x101785440,1616,RegExpSearchFast
code-creation,Builtin,2,18750,0x101785aa0,1588,RegExpPrototypeSearch
code-creation,Builtin,2,18750,0x1017860e0,220,RegExpPrototypeSourceGetter
code-creation,Builtin,2,18750,0x1017861c0,5684,RegExpSplit
code-creation,Builtin,2,18750,0x101787800,504,RegExpPrototypeSplit
code-creation,Builtin,2,18750,0x101787a00,2204,RegExpPrototypeTest
code-creation,Builtin,2,18750,0x1017882a0,1524,RegExpPrototypeTestFast
code-creation,Builtin,2,18750,0x1017888a0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,18792,0x1017889a0,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,18792,0x101788aa0,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,18792,0x101788ba0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,18792,0x101788ca0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,18792,0x101788da0,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,18792,0x101788ea0,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,18792,0x101788fc0,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,18792,0x1017890e0,244,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,18792,0x1017891e0,2608,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,18792,0x101789c20,11212,SetPrototypeDifference
code-creation,Builtin,2,18833,0x10178c800,12212,SetPrototypeIntersection
code-creation,Builtin,2,18833,0x10178f7c0,2960,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,18833,0x101790360,1736,SetPrototypeIsSubsetOf
code-creation,Builtin,2,18833,0x101790a40,2232,SetPrototypeIsSupersetOf
code-creation,Builtin,2,18833,0x101791300,11248,SetPrototypeSymmetricDifference
code-creation,Builtin,2,18833,0x101793f00,7260,SetPrototypeUnion
code-creation,Builtin,2,18833,0x101795b60,1172,StringPrototypeAt
code-creation,Builtin,2,18833,0x101796000,3248,StringPrototypeEndsWith
code-creation,Builtin,2,18833,0x101796cc0,468,CreateHTML
code-creation,Builtin,2,18833,0x101796ea0,180,StringPrototypeAnchor
code-creation,Builtin,2,18875,0x101796f60,148,StringPrototypeBig
code-creation,Builtin,2,18875,0x101797000,148,StringPrototypeBlink
code-creation,Builtin,2,18875,0x1017970a0,148,StringPrototypeBold
code-creation,Builtin,2,18875,0x101797140,180,StringPrototypeFontcolor
code-creation,Builtin,2,18875,0x101797200,180,StringPrototypeFontsize
code-creation,Builtin,2,18875,0x1017972c0,148,StringPrototypeFixed
code-creation,Builtin,2,18875,0x101797360,148,StringPrototypeItalics
code-creation,Builtin,2,18875,0x101797400,180,StringPrototypeLink
code-creation,Builtin,2,18875,0x1017974c0,148,StringPrototypeSmall
code-creation,Builtin,2,18875,0x101797560,148,StringPrototypeStrike
code-creation,Builtin,2,18875,0x101797600,148,StringPrototypeSub
code-creation,Builtin,2,18917,0x1017976a0,148,StringPrototypeSup
code-creation,Builtin,2,18917,0x101797740,976,StringPrototypeIncludes
code-creation,Builtin,2,18917,0x101797b20,580,StringPrototypeIndexOf
code-creation,Builtin,2,18917,0x101797d80,652,StringPrototypeIsWellFormed
code-creation,Builtin,2,18917,0x101798020,344,StringPrototypeIterator
code-creation,Builtin,2,18917,0x101798180,1668,StringIteratorPrototypeNext
code-creation,Builtin,2,18917,0x101798820,1432,StringPrototypeMatch
code-creation,Builtin,2,18917,0x101798dc0,1432,StringPrototypeSearch
code-creation,Builtin,2,18917,0x101799360,832,StringPrototypePadStart
code-creation,Builtin,2,18917,0x1017996c0,836,StringPrototypePadEnd
code-creation,Builtin,2,18958,0x101799a20,136,StringRepeat
code-creation,Builtin,2,18958,0x101799ac0,408,StringPrototypeRepeat
code-creation,Builtin,2,18958,0x101799c60,12432,StringPrototypeReplaceAll
code-creation,Builtin,2,18958,0x10179cd00,4152,StringPrototypeSlice
code-creation,Builtin,2,18958,0x10179dd40,3256,StringPrototypeStartsWith
code-creation,Builtin,2,18958,0x10179ea00,4136,StringPrototypeSubstr
code-creation,Builtin,2,18958,0x10179fa40,4080,StringPrototypeSubstring
code-creation,Builtin,2,18958,0x1017a0a40,960,StringPrototypeToWellFormed
code-creation,Builtin,2,18958,0x1017a0e20,8768,StringPrototypeTrim
code-creation,Builtin,2,18958,0x1017a3080,8224,StringPrototypeTrimStart
code-creation,Builtin,2,18958,0x1017a50c0,7816,StringPrototypeTrimEnd
code-creation,Builtin,2,19000,0x1017a6f60,1196,SuppressedErrorConstructor
code-creation,Builtin,2,19000,0x1017a7420,196,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,19000,0x1017a7500,204,SymbolPrototypeToPrimitive
code-creation,Builtin,2,19000,0x1017a75e0,216,SymbolPrototypeToString
code-creation,Builtin,2,19000,0x1017a76c0,192,SymbolPrototypeValueOf
code-creation,Builtin,2,19000,0x1017a77a0,1060,TypedArrayPrototypeAt
code-creation,Builtin,2,19000,0x1017a7be0,9744,CreateTypedArray
code-creation,Builtin,2,19000,0x1017aa200,1740,TypedArrayPrototypeEvery
code-creation,Builtin,2,19000,0x1017aa8e0,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,19000,0x1017aaa80,4324,TypedArrayPrototypeFilter
code-creation,Builtin,2,19042,0x1017abb80,1712,TypedArrayPrototypeFind
code-creation,Builtin,2,19042,0x1017ac240,1716,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,19042,0x1017ac900,1684,TypedArrayPrototypeFindLast
code-creation,Builtin,2,19042,0x1017acfa0,1688,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,19042,0x1017ad640,1580,TypedArrayPrototypeForEach
code-creation,Builtin,2,19042,0x1017adc80,3488,TypedArrayFrom
code-creation,Builtin,2,19042,0x1017aea40,408,TypedArrayPrototypeKeys
code-creation,Builtin,2,19042,0x1017aebe0,1300,TypedArrayOf
code-creation,Builtin,2,19042,0x1017af100,1692,TypedArrayPrototypeReduce
code-creation,Builtin,2,19042,0x1017af7a0,1680,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,19083,0x1017afe40,3032,TypedArrayPrototypeSet
code-creation,Builtin,2,19083,0x1017b0a20,3800,TypedArrayPrototypeSlice
code-creation,Builtin,2,19083,0x1017b1900,1716,TypedArrayPrototypeSome
code-creation,Builtin,2,19083,0x1017b1fc0,980,TypedArrayMergeSort
code-creation,Builtin,2,19083,0x1017b23a0,2192,TypedArrayPrototypeSort
code-creation,Builtin,2,19083,0x1017b2c40,2884,TypedArrayPrototypeSubArray
code-creation,Builtin,2,19083,0x1017b37a0,1676,TypedArrayPrototypeToReversed
code-creation,Builtin,2,19083,0x1017b3e40,3128,TypedArrayPrototypeToSorted
code-creation,Builtin,2,19083,0x1017b4a80,412,TypedArrayPrototypeValues
code-creation,Builtin,2,19083,0x1017b4c20,2880,TypedArrayPrototypeWith
code-creation,Builtin,2,19083,0x1017b5780,1116,WeakRefConstructor
code-creation,Builtin,2,19125,0x1017b5be0,212,WeakRefDeref
code-creation,Builtin,2,19125,0x1017b5cc0,732,NewSloppyArgumentsElements
code-creation,Builtin,2,19125,0x1017b5fa0,336,NewStrictArgumentsElements
code-creation,Builtin,2,19125,0x1017b6100,376,NewRestArgumentsElements
code-creation,Builtin,2,19125,0x1017b6280,1640,FastNewSloppyArguments
code-creation,Builtin,2,19125,0x1017b6900,556,FastNewStrictArguments
code-creation,Builtin,2,19125,0x1017b6b40,604,FastNewRestArguments
code-creation,Builtin,2,19125,0x1017b6da0,628,StoreCurrentScriptContextSlotBaseline
code-creation,Builtin,2,19125,0x1017b7020,660,StoreScriptContextSlotBaseline
code-creation,Builtin,2,19125,0x1017b72c0,624,StringSlowFlatten
code-creation,Builtin,2,19167,0x1017b7540,2012,StringIndexOf
code-creation,Builtin,2,19167,0x1017b7d20,1384,TestTurbofanType
code-creation,Builtin,2,19167,0x1017b82a0,208,CheckTurbofanType
code-creation,Builtin,2,19167,0x1017b8380,644,CheckTurboshaftWord32Type
code-creation,Builtin,2,19167,0x1017b8620,1092,CheckTurboshaftWord64Type
code-creation,Builtin,2,19167,0x1017b8a80,936,CheckTurboshaftFloat32Type
code-creation,Builtin,2,19167,0x1017b8e40,920,CheckTurboshaftFloat64Type
code-creation,Builtin,2,19167,0x1017b91e0,196,DebugPrintWordPtr
code-creation,Builtin,2,19167,0x1017b92c0,192,DebugPrintFloat64
code-creation,Builtin,2,19167,0x1017b93a0,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,19167,0x1017b93c0,16,TestHelperPlus1
code-creation,Builtin,2,19208,0x1017b93e0,16,TestHelperPlus2
code-creation,Builtin,2,19208,0x1017b9400,108,NewSmiBox
code-creation,Builtin,2,19208,0x1017b9480,20,ReturnTwoValues
code-creation,Builtin,2,19208,0x1017b94a0,48,ThrowAsBuiltin
code-creation,Builtin,2,19208,0x1017b94e0,124,TestCallNever
code-creation,Builtin,2,19208,0x1017b9560,44,Load_FastSmiElements_0
code-creation,Builtin,2,19208,0x1017b95a0,44,Load_FastObjectElements_0
code-creation,Builtin,2,19208,0x1017b95e0,164,Load_FastDoubleElements_0
code-creation,Builtin,2,19208,0x1017b96a0,48,Store_FastSmiElements_0
code-creation,Builtin,2,19208,0x1017b96e0,108,Store_FastObjectElements_0
code-creation,Builtin,2,19208,0x1017b9760,56,Store_FastDoubleElements_0
code-creation,Builtin,2,19250,0x1017b97a0,52,Delete_FastSmiElements_0
code-creation,Builtin,2,19250,0x1017b97e0,52,Delete_FastObjectElements_0
code-creation,Builtin,2,19250,0x1017b9820,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,19250,0x1017b9860,180,SortCompareDefault
code-creation,Builtin,2,19250,0x1017b9920,128,SortCompareUserFn
code-creation,Builtin,2,19250,0x1017b99c0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,19250,0x1017b99e0,328,Copy
code-creation,Builtin,2,19250,0x1017b9b40,5392,MergeAt
code-creation,Builtin,2,19250,0x1017bb060,852,GallopLeft
code-creation,Builtin,2,19250,0x1017bb3c0,888,GallopRight
code-creation,Builtin,2,19250,0x1017bb740,3676,ArrayTimSort
code-creation,Builtin,2,19292,0x1017bc5a0,1784,ArrayPrototypeSort
code-creation,Builtin,2,19292,0x1017bcca0,3924,StringFastLocaleCompare
code-creation,Builtin,2,19292,0x1017bdc00,72,JSToJSWrapperInvalidSig
code-creation,Builtin,2,19292,0x1017bdc60,2668,JSToJSWrapper
code-creation,Builtin,2,19292,0x1017be6e0,3048,JSToWasmWrapper
code-creation,Builtin,2,19292,0x1017bf2e0,2976,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,19292,0x1017bfea0,3560,JSToWasmHandleReturns
code-creation,Builtin,2,19292,0x1017c0ca0,108,WasmInt32ToHeapNumber
code-creation,Builtin,2,19292,0x1017c0d20,76,WasmFuncRefToJS
code-creation,Builtin,2,19292,0x1017c0d80,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,19333,0x1017c0de0,96,WasmTaggedToFloat64
code-creation,Builtin,2,19333,0x1017c0e60,100,WasmTaggedToFloat32
code-creation,Builtin,2,19333,0x1017c0ee0,108,WasmMemoryGrow
code-creation,Builtin,2,19333,0x1017c0f60,100,WasmTableInit
code-creation,Builtin,2,19333,0x1017c0fe0,100,WasmTableCopy
code-creation,Builtin,2,19333,0x1017c1060,88,WasmTableFill
code-creation,Builtin,2,19333,0x1017c10c0,72,WasmTableGrow
code-creation,Builtin,2,19333,0x1017c1120,100,WasmTableGet
code-creation,Builtin,2,19333,0x1017c11a0,164,WasmTableSet
code-creation,Builtin,2,19333,0x1017c1260,184,WasmTableGetFuncRef
code-creation,Builtin,2,19333,0x1017c1320,56,WasmFunctionTableGet
code-creation,Builtin,2,19375,0x1017c1360,104,WasmTableSetFuncRef
code-creation,Builtin,2,19375,0x1017c13e0,92,WasmRefFunc
code-creation,Builtin,2,19375,0x1017c1440,56,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,19375,0x1017c1480,204,WasmAllocateZeroedFixedArray
code-creation,Builtin,2,19375,0x1017c1560,196,WasmAllocateFixedArray
code-creation,Builtin,2,19375,0x1017c1640,40,WasmThrow
code-creation,Builtin,2,19375,0x1017c1680,56,WasmRethrow
code-creation,Builtin,2,19375,0x1017c16c0,48,WasmRethrowExplicitContext
code-creation,Builtin,2,19375,0x1017c1700,44,WasmTriggerTierUp
code-creation,Builtin,2,19375,0x1017c1740,28,WasmStackGuard
code-creation,Builtin,2,19375,0x1017c1760,28,WasmStackOverflow
code-creation,Builtin,2,19417,0x1017c1780,40,WasmTraceMemory
code-creation,Builtin,2,19417,0x1017c17c0,28,WasmTraceEnter
code-creation,Builtin,2,19417,0x1017c17e0,40,WasmTraceExit
code-creation,Builtin,2,19417,0x1017c1820,688,WasmAllocateJSArray
code-creation,Builtin,2,19417,0x1017c1ae0,128,WasmAllocateStructWithRtt
code-creation,Builtin,2,19417,0x1017c1b80,172,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,19417,0x1017c1c40,104,WasmArrayNewSegment
code-creation,Builtin,2,19417,0x1017c1cc0,148,WasmArrayInitSegment
code-creation,Builtin,2,19417,0x1017c1d60,160,WasmArrayCopyWithChecks
code-creation,Builtin,2,19417,0x1017c1e20,108,WasmArrayCopy
code-creation,Builtin,2,19417,0x1017c1ea0,124,WasmUint32ToNumber
code-creation,Builtin,2,19458,0x1017c1f20,128,UintPtr53ToNumber
code-creation,Builtin,2,19458,0x1017c1fc0,140,WasmI32AtomicWait
code-creation,Builtin,2,19458,0x1017c2060,136,WasmI64AtomicWait
code-creation,Builtin,2,19458,0x1017c2100,1300,CallRefIC
code-creation,Builtin,2,19458,0x1017c2620,1680,WasmGetOwnProperty
code-creation,Builtin,2,19458,0x1017c2cc0,96,WasmTrap
code-creation,Builtin,2,19458,0x1017c2d40,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,19458,0x1017c2d60,84,WasmTrapHandlerThrowTrap
code-creation,Builtin,2,19458,0x1017c2dc0,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,19458,0x1017c2de0,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,19458,0x1017c2e00,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,19500,0x1017c2e20,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,19500,0x1017c2e40,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,19500,0x1017c2e60,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,19500,0x1017c2e80,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,19500,0x1017c2ea0,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,19500,0x1017c2ec0,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,19500,0x1017c2ee0,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,19500,0x1017c2f00,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,19500,0x1017c2f20,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,19500,0x1017c2f40,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,19542,0x1017c2f60,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,19542,0x1017c2f80,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,19542,0x1017c2fa0,12,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,19542,0x1017c2fc0,136,WasmStringNewWtf8
code-creation,Builtin,2,19542,0x1017c3060,204,WasmStringNewWtf8Array
code-creation,Builtin,2,19542,0x1017c3140,128,WasmStringNewWtf16
code-creation,Builtin,2,19542,0x1017c31e0,1348,WasmStringNewWtf16Array
code-creation,Builtin,2,19542,0x1017c3740,156,WasmStringFromDataSegment
code-creation,Builtin,2,19542,0x1017c37e0,80,WasmStringAsWtf16
code-creation,Builtin,2,19583,0x1017c3840,44,WasmStringConst
code-creation,Builtin,2,19583,0x1017c3880,88,WasmStringMeasureUtf8
code-creation,Builtin,2,19583,0x1017c38e0,88,WasmStringMeasureWtf8
code-creation,Builtin,2,19583,0x1017c3940,148,WasmStringEncodeWtf8
code-creation,Builtin,2,19583,0x1017c39e0,132,WasmStringEncodeWtf8Array
code-creation,Builtin,2,19583,0x1017c3a80,68,WasmStringToUtf8Array
code-creation,Builtin,2,19583,0x1017c3ae0,136,WasmStringEncodeWtf16
code-creation,Builtin,2,19583,0x1017c3b80,856,WasmStringEncodeWtf16Array
code-creation,Builtin,2,19583,0x1017c3ee0,72,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,19583,0x1017c3f40,72,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,19625,0x1017c3fa0,60,ThrowDataViewTypeError
code-creation,Builtin,2,19625,0x1017c3fe0,64,ThrowDataViewDetachedError
code-creation,Builtin,2,19625,0x1017c4040,64,ThrowDataViewOutOfBounds
code-creation,Builtin,2,19625,0x1017c40a0,20,WasmStringConcat
code-creation,Builtin,2,19625,0x1017c40c0,100,WasmStringEqual
code-creation,Builtin,2,19625,0x1017c4140,124,WasmStringIsUSVSequence
code-creation,Builtin,2,19625,0x1017c41c0,40,WasmStringAsWtf8
code-creation,Builtin,2,19625,0x1017c4200,332,WasmStringViewWtf8Advance
code-creation,Builtin,2,19625,0x1017c4360,212,WasmStringViewWtf8Encode
code-creation,Builtin,2,19625,0x1017c4440,180,WasmStringViewWtf8Slice
code-creation,Builtin,2,19625,0x1017c4500,588,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,19667,0x1017c4760,176,WasmStringViewWtf16Encode
code-creation,Builtin,2,19667,0x1017c4820,5500,WasmStringViewWtf16Slice
code-creation,Builtin,2,19667,0x1017c5da0,112,WasmStringAsIter
code-creation,Builtin,2,19667,0x1017c5e20,1228,WasmStringCodePointAt
code-creation,Builtin,2,19667,0x1017c6300,1200,WasmStringViewIterNext
code-creation,Builtin,2,19667,0x1017c67c0,1292,WasmStringViewIterAdvance
code-creation,Builtin,2,19667,0x1017c6ce0,1252,WasmStringViewIterRewind
code-creation,Builtin,2,19667,0x1017c71e0,5100,WasmStringViewIterSlice
code-creation,Builtin,2,19667,0x1017c85e0,2880,WasmIntToString
code-creation,Builtin,2,19667,0x1017c9140,168,WasmStringToDouble
code-creation,Builtin,2,19667,0x1017c9200,72,WasmStringFromCodePoint
code-creation,Builtin,2,19708,0x1017c9260,64,WasmStringHash
code-creation,Builtin,2,19708,0x1017c92c0,48,WasmAnyConvertExtern
code-creation,Builtin,2,19708,0x1017c9300,404,WasmFastApiCallTypeCheckAndUpdateIC
code-creation,Builtin,2,19708,0x1017c94a0,180,WebAssemblyStringCast
code-creation,Builtin,2,19708,0x1017c9560,164,WebAssemblyStringTest
code-creation,Builtin,2,19708,0x1017c9620,384,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,19708,0x1017c97c0,392,WebAssemblyStringFromUtf8Array
code-creation,Builtin,2,19708,0x1017c9960,484,WebAssemblyStringIntoUtf8Array
code-creation,Builtin,2,19750,0x1017c9b60,212,WebAssemblyStringToUtf8Array
code-creation,Builtin,2,19750,0x1017c9c40,364,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,19750,0x1017c9dc0,344,WebAssemblyStringFromCharCode
code-creation,Builtin,2,19750,0x1017c9f20,412,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,19750,0x1017ca0c0,1292,WebAssemblyStringCodePointAt
code-creation,Builtin,2,19750,0x1017ca5e0,768,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,19750,0x1017ca900,184,WebAssemblyStringLength
code-creation,Builtin,2,19792,0x1017ca9c0,212,WebAssemblyStringMeasureUtf8
code-creation,Builtin,2,19792,0x1017caaa0,244,WebAssemblyStringConcat
code-creation,Builtin,2,19792,0x1017caba0,428,WebAssemblyStringSubstring
code-creation,Builtin,2,19792,0x1017cad60,504,WebAssemblyStringEquals
code-creation,Builtin,2,19792,0x1017caf60,244,WebAssemblyStringCompare
code-creation,Builtin,2,19792,0x1017cb060,156,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,19792,0x1017cb100,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,19792,0x1017cb120,224,LoadJoinTypedElement_Float16Elements_0
code-creation,Builtin,2,19792,0x1017cb220,124,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,19792,0x1017cb2a0,120,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,19833,0x1017cb320,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,19833,0x1017cb340,232,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,19833,0x1017cb440,264,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,19833,0x1017cb560,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,19833,0x1017cb580,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,19833,0x1017cb5a0,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,19833,0x1017cb5c0,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,19833,0x1017cb5e0,140,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,19833,0x1017cb680,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,19875,0x1017cb6a0,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,19875,0x1017cb6e0,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,19875,0x1017cb720,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,19875,0x1017cb760,40,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,19875,0x1017cb7a0,4920,Load_GenericElementsAccessor_0
code-creation,Builtin,2,19875,0x1017ccae0,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,19875,0x1017ccb20,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,19875,0x1017ccb60,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,19875,0x1017ccb80,180,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,19875,0x1017ccc40,532,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,19917,0x1017cce60,224,LoadTypedElement_Float16Elements_0
code-creation,Builtin,2,19917,0x1017ccf60,160,StoreTypedElementNumeric_Float16Elements_0
code-creation,Builtin,2,19917,0x1017cd020,796,StoreTypedElementJSAny_Float16Elements_0
code-creation,Builtin,2,19917,0x1017cd340,124,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,19917,0x1017cd3c0,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,19917,0x1017cd400,536,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,19917,0x1017cd620,120,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,19917,0x1017cd6a0,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,19917,0x1017cd6e0,532,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,19958,0x1017cd900,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,19958,0x1017cd920,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,19958,0x1017cd960,612,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,19958,0x1017cdbe0,232,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,19958,0x1017cdce0,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,19958,0x1017cdd40,568,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,19958,0x1017cdf80,264,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,19958,0x1017ce0a0,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,19958,0x1017ce100,568,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,20000,0x1017ce340,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,20000,0x1017ce360,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,20000,0x1017ce3a0,532,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,20000,0x1017ce5c0,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,20000,0x1017ce5e0,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,20000,0x1017ce620,532,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,20000,0x1017ce840,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,20000,0x1017ce860,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,20000,0x1017ce8a0,532,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,20042,0x1017ceac0,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,20042,0x1017ceae0,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,20042,0x1017ceb20,532,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,20042,0x1017ced40,140,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,20042,0x1017cede0,180,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,20042,0x1017ceea0,532,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,20042,0x1017cf0c0,8,CollatorConstructor
code-creation,Builtin,2,20042,0x1017cf0e0,8,CollatorInternalCompare
code-creation,Builtin,2,20042,0x1017cf100,8,CollatorPrototypeCompare
code-creation,Builtin,2,20042,0x1017cf120,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,20083,0x1017cf140,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,20083,0x1017cf160,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,20083,0x1017cf180,8,DatePrototypeToLocaleString
code-creation,Builtin,2,20083,0x1017cf1a0,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,20083,0x1017cf1c0,8,DateTimeFormatConstructor
code-creation,Builtin,2,20083,0x1017cf1e0,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,20083,0x1017cf200,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,20083,0x1017cf220,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,20083,0x1017cf240,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,20083,0x1017cf260,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,20125,0x1017cf280,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,20125,0x1017cf2a0,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,20125,0x1017cf2c0,8,DisplayNamesConstructor
code-creation,Builtin,2,20125,0x1017cf2e0,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,20125,0x1017cf300,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,20125,0x1017cf320,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,20125,0x1017cf340,8,DurationFormatConstructor
code-creation,Builtin,2,20125,0x1017cf360,8,DurationFormatPrototypeFormat
code-creation,Builtin,2,20125,0x1017cf380,8,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,20125,0x1017cf3a0,8,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,20167,0x1017cf3c0,8,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,20167,0x1017cf3e0,8,IntlGetCanonicalLocales
code-creation,Builtin,2,20167,0x1017cf400,8,IntlSupportedValuesOf
code-creation,Builtin,2,20167,0x1017cf420,8,ListFormatConstructor
code-creation,Builtin,2,20167,0x1017cf440,240,ListFormatPrototypeFormat
code-creation,Builtin,2,20167,0x1017cf540,240,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,20167,0x1017cf640,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,20167,0x1017cf660,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,20167,0x1017cf680,8,LocaleConstructor
code-creation,Builtin,2,20167,0x1017cf6a0,8,LocalePrototypeBaseName
code-creation,Builtin,2,20208,0x1017cf6c0,8,LocalePrototypeCalendar
code-creation,Builtin,2,20208,0x1017cf6e0,8,LocalePrototypeCalendars
code-creation,Builtin,2,20208,0x1017cf700,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,20208,0x1017cf720,8,LocalePrototypeCollation
code-creation,Builtin,2,20208,0x1017cf740,8,LocalePrototypeCollations
code-creation,Builtin,2,20208,0x1017cf760,8,LocalePrototypeGetCalendars
code-creation,Builtin,2,20208,0x1017cf780,8,LocalePrototypeGetCollations
code-creation,Builtin,2,20208,0x1017cf7a0,8,LocalePrototypeGetHourCycles
code-creation,Builtin,2,20208,0x1017cf7c0,8,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,20208,0x1017cf7e0,8,LocalePrototypeGetTimeZones
code-creation,Builtin,2,20208,0x1017cf800,8,LocalePrototypeGetTextInfo
code-creation,Builtin,2,20250,0x1017cf820,8,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,20250,0x1017cf840,8,LocalePrototypeHourCycle
code-creation,Builtin,2,20250,0x1017cf860,8,LocalePrototypeHourCycles
code-creation,Builtin,2,20250,0x1017cf880,8,LocalePrototypeLanguage
code-creation,Builtin,2,20250,0x1017cf8a0,8,LocalePrototypeMaximize
code-creation,Builtin,2,20250,0x1017cf8c0,8,LocalePrototypeMinimize
code-creation,Builtin,2,20250,0x1017cf8e0,8,LocalePrototypeNumeric
code-creation,Builtin,2,20250,0x1017cf900,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,20250,0x1017cf920,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,20292,0x1017cf940,8,LocalePrototypeRegion
code-creation,Builtin,2,20292,0x1017cf960,8,LocalePrototypeScript
code-creation,Builtin,2,20292,0x1017cf980,8,LocalePrototypeTextInfo
code-creation,Builtin,2,20292,0x1017cf9a0,8,LocalePrototypeTimeZones
code-creation,Builtin,2,20292,0x1017cf9c0,8,LocalePrototypeToString
code-creation,Builtin,2,20292,0x1017cf9e0,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,20292,0x1017cfa00,8,NumberFormatConstructor
code-creation,Builtin,2,20292,0x1017cfa20,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,20292,0x1017cfa40,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,20292,0x1017cfa60,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,20292,0x1017cfa80,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,20333,0x1017cfaa0,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,20333,0x1017cfac0,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,20333,0x1017cfae0,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,20333,0x1017cfb00,8,PluralRulesConstructor
code-creation,Builtin,2,20333,0x1017cfb20,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,20333,0x1017cfb40,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,20333,0x1017cfb60,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,20333,0x1017cfb80,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,20333,0x1017cfba0,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,20333,0x1017cfbc0,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,20375,0x1017cfbe0,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,20375,0x1017cfc00,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,20375,0x1017cfc20,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,20375,0x1017cfc40,8,SegmenterConstructor
code-creation,Builtin,2,20375,0x1017cfc60,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,20375,0x1017cfc80,8,SegmenterPrototypeSegment
code-creation,Builtin,2,20375,0x1017cfca0,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,20375,0x1017cfcc0,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,20375,0x1017cfce0,8,SegmentsPrototypeContaining
code-creation,Builtin,2,20375,0x1017cfd00,8,SegmentsPrototypeIterator
code-creation,Builtin,2,20417,0x1017cfd20,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,20417,0x1017cfd40,1160,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,20417,0x1017d01e0,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,20417,0x1017d0200,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,20417,0x1017d02e0,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,20417,0x1017d0300,716,StringToLowerCaseIntl
code-creation,Builtin,2,20417,0x1017d05e0,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,20417,0x1017d0600,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,20417,0x1017d0620,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,20417,0x1017d0640,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,20458,0x1017d0660,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,20458,0x1017d0680,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,20458,0x1017d06a0,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,20458,0x1017d06c0,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,20458,0x1017d06e0,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,20458,0x1017d0700,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,20458,0x1017d0720,8,V8BreakIteratorConstructor
code-creation,Builtin,2,20458,0x1017d0740,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,20500,0x1017d0760,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,20500,0x1017d0780,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,20500,0x1017d07a0,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,20500,0x1017d07c0,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,20500,0x1017d07e0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,20500,0x1017d0800,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,20500,0x1017d0820,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,20500,0x1017d0840,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,20500,0x1017d0860,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,20500,0x1017d0880,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,20542,0x1017d08a0,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,20542,0x1017d08c0,28,Wide
code-creation,BytecodeHandler,0,20542,0x1017d08e0,28,ExtraWide
code-creation,BytecodeHandler,0,20542,0x1017d0900,120,DebugBreakWide
code-creation,BytecodeHandler,0,20542,0x1017d0980,120,DebugBreakExtraWide
code-creation,BytecodeHandler,0,20542,0x1017d0a00,184,DebugBreak0
code-creation,BytecodeHandler,0,20542,0x1017d0ac0,120,DebugBreak1
code-creation,BytecodeHandler,0,20542,0x1017d0b40,120,DebugBreak2
code-creation,BytecodeHandler,0,20542,0x1017d0bc0,120,DebugBreak3
code-creation,BytecodeHandler,0,20542,0x1017d0c40,120,DebugBreak4
code-creation,BytecodeHandler,0,20542,0x1017d0cc0,120,DebugBreak5
code-creation,BytecodeHandler,0,20583,0x1017d0d40,120,DebugBreak6
code-creation,BytecodeHandler,0,20583,0x1017d0dc0,44,Ldar
code-creation,BytecodeHandler,0,20583,0x1017d0e00,76,LdaZero
code-creation,BytecodeHandler,0,20583,0x1017d0e60,84,LdaSmi
code-creation,BytecodeHandler,0,20583,0x1017d0ec0,76,LdaUndefined
code-creation,BytecodeHandler,0,20583,0x1017d0f20,76,LdaNull
code-creation,BytecodeHandler,0,20583,0x1017d0f80,76,LdaTheHole
code-creation,BytecodeHandler,0,20583,0x1017d0fe0,28,LdaTrue
code-creation,BytecodeHandler,0,20583,0x1017d1000,28,LdaFalse
code-creation,BytecodeHandler,0,20583,0x1017d1020,92,LdaConstant
code-creation,BytecodeHandler,0,20583,0x1017d1080,176,LdaContextSlot
tick,0x19252adc4,20625,0,0x0,6
tick,0x19252adc4,20625,0,0x0,6
tick,0x19252adc4,20625,0,0x0,6
tick,0x192529d88,20625,0,0x0,6
tick,0x19252adc4,20625,0,0x0,6
tick,0x19252adc4,20625,0,0x0,6
code-creation,BytecodeHandler,0,20625,0x1017d1140,176,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,20625,0x1017d1200,108,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,20667,0x1017d1280,108,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,20667,0x1017d1300,40,Star
code-creation,BytecodeHandler,0,20667,0x1017d1340,52,Mov
code-creation,BytecodeHandler,0,20667,0x1017d1380,48,PushContext
code-creation,BytecodeHandler,0,20667,0x1017d13c0,44,PopContext
code-creation,BytecodeHandler,0,20667,0x1017d1400,64,TestReferenceEqual
code-creation,BytecodeHandler,0,20667,0x1017d1460,64,TestUndetectable
code-creation,BytecodeHandler,0,20667,0x1017d14c0,52,TestNull
code-creation,BytecodeHandler,0,20667,0x1017d1500,52,TestUndefined
code-creation,BytecodeHandler,0,20667,0x1017d1540,384,TestTypeOf
code-creation,BytecodeHandler,0,20667,0x1017d16e0,5492,LdaGlobal
code-creation,BytecodeHandler,0,20667,0x1017d2c60,4028,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,20667,0x1017d3c20,148,StaGlobal
code-creation,BytecodeHandler,0,20667,0x1017d3cc0,192,StaContextSlot
code-creation,BytecodeHandler,0,20667,0x1017d3da0,124,StaCurrentContextSlot
code-creation,BytecodeHandler,0,20667,0x1017d3e20,752,StaScriptContextSlot
code-creation,BytecodeHandler,0,20667,0x1017d4120,680,StaCurrentScriptContextSlot
code-creation,BytecodeHandler,0,20708,0x1017d43e0,148,LdaLookupSlot
code-creation,BytecodeHandler,0,20708,0x1017d4480,312,LdaLookupContextSlot
code-creation,BytecodeHandler,0,20708,0x1017d45c0,4356,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,20708,0x1017d56e0,148,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,20708,0x1017d5780,312,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,20708,0x1017d58c0,4280,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,20708,0x1017d6980,236,StaLookupSlot
code-creation,BytecodeHandler,0,20708,0x1017d6a80,4652,GetNamedProperty
code-creation,BytecodeHandler,0,20708,0x1017d7cc0,172,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,20708,0x1017d7d80,196,GetKeyedProperty
code-creation,BytecodeHandler,0,20708,0x1017d7e60,180,GetEnumeratedKeyedProperty
code-creation,BytecodeHandler,0,20708,0x1017d7f20,228,LdaModuleVariable
code-creation,BytecodeHandler,0,20708,0x1017d8020,348,StaModuleVariable
code-creation,BytecodeHandler,0,20708,0x1017d8180,164,SetNamedProperty
code-creation,BytecodeHandler,0,20750,0x1017d8240,164,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,20750,0x1017d8300,156,SetKeyedProperty
code-creation,BytecodeHandler,0,20750,0x1017d83a0,176,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,20750,0x1017d8460,156,StaInArrayLiteral
code-creation,BytecodeHandler,0,20750,0x1017d8500,192,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,20750,0x1017d85e0,1460,Add
code-creation,BytecodeHandler,0,20750,0x1017d8ba0,1468,Sub
code-creation,BytecodeHandler,0,20750,0x1017d9160,1564,Mul
code-creation,BytecodeHandler,0,20750,0x1017d9780,1592,Div
code-creation,BytecodeHandler,0,20750,0x1017d9dc0,1476,Mod
code-creation,BytecodeHandler,0,20750,0x1017da3a0,824,Exp
code-creation,BytecodeHandler,0,20750,0x1017da6e0,1720,BitwiseOr
code-creation,BytecodeHandler,0,20750,0x1017dada0,1720,BitwiseXor
code-creation,BytecodeHandler,0,20750,0x1017db460,1720,BitwiseAnd
code-creation,BytecodeHandler,0,20750,0x1017dbb20,1188,ShiftLeft
code-creation,BytecodeHandler,0,20750,0x1017dbfe0,1188,ShiftRight
code-creation,BytecodeHandler,0,20750,0x1017dc4a0,1248,ShiftRightLogical
code-creation,BytecodeHandler,0,20792,0x1017dc9a0,1420,AddSmi
code-creation,BytecodeHandler,0,20792,0x1017dcf40,1320,SubSmi
code-creation,BytecodeHandler,0,20792,0x1017dd480,1372,MulSmi
code-creation,BytecodeHandler,0,20792,0x1017dd9e0,1512,DivSmi
code-creation,BytecodeHandler,0,20792,0x1017ddfe0,1324,ModSmi
code-creation,BytecodeHandler,0,20792,0x1017de520,732,ExpSmi
code-creation,BytecodeHandler,0,20792,0x1017de800,520,BitwiseOrSmi
code-creation,BytecodeHandler,0,20792,0x1017dea20,520,BitwiseXorSmi
code-creation,BytecodeHandler,0,20792,0x1017dec40,520,BitwiseAndSmi
code-creation,BytecodeHandler,0,20792,0x1017dee60,548,ShiftLeftSmi
code-creation,BytecodeHandler,0,20792,0x1017df0a0,528,ShiftRightSmi
code-creation,BytecodeHandler,0,20792,0x1017df2c0,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,20792,0x1017df600,708,Inc
tick,0x19259c184,21000,0,0x0,6
code-creation,BytecodeHandler,0,21000,0x1017df8e0,708,Dec
code-creation,BytecodeHandler,0,21000,0x1017dfbc0,680,Negate
code-creation,BytecodeHandler,0,21000,0x1017dfe80,520,BitwiseNot
code-creation,BytecodeHandler,0,21000,0x1017e00a0,160,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,21042,0x1017e0160,44,LogicalNot
code-creation,BytecodeHandler,0,21042,0x1017e01a0,292,TypeOf
code-creation,BytecodeHandler,0,21042,0x1017e02e0,128,DeletePropertyStrict
code-creation,BytecodeHandler,0,21042,0x1017e0380,128,DeletePropertySloppy
code-creation,BytecodeHandler,0,21042,0x1017e0420,48,GetSuperConstructor
code-creation,BytecodeHandler,0,21042,0x1017e0460,340,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,21042,0x1017e05c0,860,CallAnyReceiver
code-creation,BytecodeHandler,0,21042,0x1017e0920,860,CallProperty
code-creation,BytecodeHandler,0,21042,0x1017e0c80,880,CallProperty0
code-creation,BytecodeHandler,0,21042,0x1017e1000,892,CallProperty1
code-creation,BytecodeHandler,0,21042,0x1017e1380,912,CallProperty2
code-creation,BytecodeHandler,0,21042,0x1017e1720,864,CallUndefinedReceiver
code-creation,BytecodeHandler,0,21042,0x1017e1aa0,856,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,21042,0x1017e1e00,868,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,21083,0x1017e2180,888,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,21083,0x1017e2500,860,CallWithSpread
code-creation,BytecodeHandler,0,21083,0x1017e2860,136,CallRuntime
code-creation,BytecodeHandler,0,21083,0x1017e2900,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,21083,0x1017e29a0,96,CallJSRuntime
code-creation,BytecodeHandler,0,21083,0x1017e2a20,1844,InvokeIntrinsic
code-creation,BytecodeHandler,0,21083,0x1017e3160,1172,Construct
code-creation,BytecodeHandler,0,21083,0x1017e3600,452,ConstructWithSpread
code-creation,BytecodeHandler,0,21083,0x1017e37e0,1016,ConstructForwardAllArgs
code-creation,BytecodeHandler,0,21083,0x1017e3be0,2224,TestEqual
code-creation,BytecodeHandler,0,21083,0x1017e44a0,1120,TestEqualStrict
code-creation,BytecodeHandler,0,21083,0x1017e4920,1612,TestLessThan
code-creation,BytecodeHandler,0,21083,0x1017e4f80,1612,TestGreaterThan
code-creation,BytecodeHandler,0,21083,0x1017e55e0,1612,TestLessThanOrEqual
code-creation,BytecodeHandler,0,21083,0x1017e5c40,1612,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,21083,0x1017e62a0,1056,TestInstanceOf
code-creation,BytecodeHandler,0,21125,0x1017e66e0,140,TestIn
code-creation,BytecodeHandler,0,21125,0x1017e6780,104,ToName
code-creation,BytecodeHandler,0,21125,0x1017e6800,200,ToNumber
code-creation,BytecodeHandler,0,21125,0x1017e68e0,220,ToNumeric
code-creation,BytecodeHandler,0,21125,0x1017e69c0,124,ToObject
code-creation,BytecodeHandler,0,21125,0x1017e6a40,152,ToString
code-creation,BytecodeHandler,0,21125,0x1017e6ae0,160,ToBoolean
code-creation,BytecodeHandler,0,21125,0x1017e6ba0,416,CreateRegExpLiteral
code-creation,BytecodeHandler,0,21125,0x1017e6d60,1824,CreateArrayLiteral
code-creation,BytecodeHandler,0,21125,0x1017e74a0,104,CreateArrayFromIterable
code-creation,BytecodeHandler,0,21125,0x1017e7520,752,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,21125,0x1017e7820,2784,CreateObjectLiteral
code-creation,BytecodeHandler,0,21125,0x1017e8320,304,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,21125,0x1017e8460,156,CloneObject
code-creation,BytecodeHandler,0,21125,0x1017e8500,208,GetTemplateObject
code-creation,BytecodeHandler,0,21125,0x1017e85e0,352,CreateClosure
code-creation,BytecodeHandler,0,21125,0x1017e8760,136,CreateBlockContext
code-creation,BytecodeHandler,0,21167,0x1017e8800,144,CreateCatchContext
code-creation,BytecodeHandler,0,21167,0x1017e88a0,376,CreateFunctionContext
code-creation,BytecodeHandler,0,21167,0x1017e8a20,376,CreateEvalContext
code-creation,BytecodeHandler,0,21167,0x1017e8ba0,144,CreateWithContext
code-creation,BytecodeHandler,0,21167,0x1017e8c40,1924,CreateMappedArguments
code-creation,BytecodeHandler,0,21167,0x1017e93e0,636,CreateUnmappedArguments
code-creation,BytecodeHandler,0,21167,0x1017e9660,684,CreateRestParameter
code-creation,BytecodeHandler,0,21167,0x1017e9920,1316,JumpLoop
code-creation,BytecodeHandler,0,21167,0x1017e9e60,32,Jump
code-creation,BytecodeHandler,0,21167,0x1017e9ea0,48,JumpConstant
code-creation,BytecodeHandler,0,21167,0x1017e9ee0,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,21208,0x1017e9f40,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,21208,0x1017e9fa0,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,21208,0x1017ea000,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,21208,0x1017ea060,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,21208,0x1017ea0c0,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,21208,0x1017ea120,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,21208,0x1017ea180,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,21208,0x1017ea1e0,188,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,21208,0x1017ea2a0,188,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,21208,0x1017ea360,172,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,21208,0x1017ea420,172,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,21208,0x1017ea4e0,64,JumpIfTrue
code-creation,BytecodeHandler,0,21208,0x1017ea540,64,JumpIfFalse
code-creation,BytecodeHandler,0,21208,0x1017ea5a0,64,JumpIfNull
code-creation,BytecodeHandler,0,21208,0x1017ea600,64,JumpIfNotNull
code-creation,BytecodeHandler,0,21250,0x1017ea660,64,JumpIfUndefined
code-creation,BytecodeHandler,0,21250,0x1017ea6c0,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,21250,0x1017ea720,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,21250,0x1017ea780,72,JumpIfJSReceiver
code-creation,BytecodeHandler,0,21250,0x1017ea7e0,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,21250,0x1017ea860,532,ForInEnumerate
code-creation,BytecodeHandler,0,21250,0x1017eaa80,236,ForInPrepare
code-creation,BytecodeHandler,0,21250,0x1017eab80,76,ForInContinue
code-creation,BytecodeHandler,0,21250,0x1017eabe0,268,ForInNext
code-creation,BytecodeHandler,0,21250,0x1017ead00,48,ForInStep
code-creation,BytecodeHandler,0,21250,0x1017ead40,36,SetPendingMessage
code-creation,BytecodeHandler,0,21250,0x1017ead80,124,Throw
code-creation,BytecodeHandler,0,21250,0x1017eae00,124,ReThrow
code-creation,BytecodeHandler,0,21250,0x1017eae80,120,Return
code-creation,BytecodeHandler,0,21250,0x1017eaf00,224,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,21250,0x1017eb000,144,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,21292,0x1017eb0a0,144,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,21292,0x1017eb140,168,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,21292,0x1017eb200,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,21292,0x1017eb280,400,SuspendGenerator
code-creation,BytecodeHandler,0,21292,0x1017eb420,176,ResumeGenerator
code-creation,BytecodeHandler,0,21292,0x1017eb4e0,140,GetIterator
code-creation,BytecodeHandler,0,21292,0x1017eb580,112,Debugger
code-creation,BytecodeHandler,0,21292,0x1017eb600,132,IncBlockCounter
code-creation,BytecodeHandler,0,21292,0x1017eb6a0,72,Abort
code-creation,BytecodeHandler,0,21292,0x1017eb700,44,Star0
code-creation,BytecodeHandler,0,21292,0x1017eb740,68,Illegal
code-creation,BytecodeHandler,0,21292,0x1017eb7a0,124,DebugBreak1.Wide
code-creation,BytecodeHandler,0,21292,0x1017eb820,124,DebugBreak2.Wide
code-creation,BytecodeHandler,0,21292,0x1017eb8a0,124,DebugBreak3.Wide
code-creation,BytecodeHandler,0,21292,0x1017eb920,124,DebugBreak4.Wide
code-creation,BytecodeHandler,0,21292,0x1017eb9a0,124,DebugBreak5.Wide
code-creation,BytecodeHandler,0,21333,0x1017eba20,124,DebugBreak6.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebaa0,44,Ldar.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebae0,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebb20,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebb60,136,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebc00,136,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebca0,68,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebd00,68,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebd60,40,Star.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebda0,52,Mov.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebde0,48,PushContext.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebe20,44,PopContext.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebe60,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,21333,0x1017ebec0,4164,LdaGlobal.Wide
code-creation,BytecodeHandler,0,21333,0x1017ecf20,4080,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,21375,0x1017edf20,152,StaGlobal.Wide
code-creation,BytecodeHandler,0,21375,0x1017edfc0,192,StaContextSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee0a0,124,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee120,756,StaScriptContextSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee420,684,StaCurrentScriptContextSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee6e0,152,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee780,316,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ee8c0,4364,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,21375,0x1017ef9e0,152,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,21375,0x1017efa80,316,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,21375,0x1017efbc0,4288,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,21375,0x1017f0ca0,240,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,21417,0x1017f0da0,4676,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2000,176,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,21417,0x1017f20c0,144,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2160,184,GetEnumeratedKeyedProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2220,228,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2320,352,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,21417,0x1017f24a0,168,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2560,168,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2620,160,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f26e0,180,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,21417,0x1017f27a0,160,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2860,196,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2940,1424,Add.Wide
code-creation,BytecodeHandler,0,21417,0x1017f2ee0,1428,Sub.Wide
code-creation,BytecodeHandler,0,21417,0x1017f3480,1524,Mul.Wide
code-creation,BytecodeHandler,0,21417,0x1017f3a80,1604,Div.Wide
code-creation,BytecodeHandler,0,21458,0x1017f40e0,1484,Mod.Wide
code-creation,BytecodeHandler,0,21458,0x1017f46c0,836,Exp.Wide
code-creation,BytecodeHandler,0,21458,0x1017f4a20,1768,BitwiseOr.Wide
code-creation,BytecodeHandler,0,21458,0x1017f5120,1768,BitwiseXor.Wide
code-creation,BytecodeHandler,0,21458,0x1017f5820,1768,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,21458,0x1017f5f20,1220,ShiftLeft.Wide
code-creation,BytecodeHandler,0,21458,0x1017f6400,1220,ShiftRight.Wide
code-creation,BytecodeHandler,0,21458,0x1017f68e0,1276,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,21458,0x1017f6de0,1396,AddSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f7360,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f7880,1380,MulSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f7e00,1520,DivSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f8400,1336,ModSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f8940,724,ExpSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f8c20,532,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f8e40,532,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,21458,0x1017f9060,532,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,21500,0x1017f9280,560,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,21500,0x1017f94c0,540,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,21500,0x1017f96e0,836,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,21500,0x1017f9a40,672,Inc.Wide
code-creation,BytecodeHandler,0,21500,0x1017f9d00,672,Dec.Wide
code-creation,BytecodeHandler,0,21500,0x1017f9fc0,692,Negate.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa280,536,BitwiseNot.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa4a0,132,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa540,132,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa5e0,48,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa620,344,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,21500,0x1017fa780,868,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,21500,0x1017fab00,868,CallProperty.Wide
code-creation,BytecodeHandler,0,21500,0x1017fae80,880,CallProperty0.Wide
code-creation,BytecodeHandler,0,21500,0x1017fb200,892,CallProperty1.Wide
code-creation,BytecodeHandler,0,21542,0x1017fb580,912,CallProperty2.Wide
code-creation,BytecodeHandler,0,21542,0x1017fb920,864,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,21542,0x1017fbca0,856,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,21542,0x1017fc000,868,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,21542,0x1017fc380,888,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,21542,0x1017fc700,868,CallWithSpread.Wide
code-creation,BytecodeHandler,0,21542,0x1017fca80,140,CallRuntime.Wide
code-creation,BytecodeHandler,0,21542,0x1017fcb20,164,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,21542,0x1017fcbe0,100,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,21542,0x1017fcc60,1852,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,21542,0x1017fd3a0,1124,Construct.Wide
code-creation,BytecodeHandler,0,21542,0x1017fd820,400,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,21542,0x1017fd9c0,1016,ConstructForwardAllArgs.Wide
code-creation,BytecodeHandler,0,21542,0x1017fddc0,2232,TestEqual.Wide
code-creation,BytecodeHandler,0,21583,0x1017fe680,1128,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,21583,0x1017feb00,1624,TestLessThan.Wide
code-creation,BytecodeHandler,0,21583,0x1017ff160,1624,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,21583,0x1017ff7c0,1624,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,21583,0x1017ffe20,1624,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,21583,0x101800480,1064,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,21583,0x1018008c0,144,TestIn.Wide
code-creation,BytecodeHandler,0,21583,0x101800960,204,ToNumber.Wide
code-creation,BytecodeHandler,0,21583,0x101800a40,224,ToNumeric.Wide
code-creation,BytecodeHandler,0,21583,0x101800b40,128,ToObject.Wide
code-creation,BytecodeHandler,0,21583,0x101800be0,420,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,21583,0x101800da0,1736,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,21583,0x101801480,752,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,21583,0x101801780,2700,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,21583,0x101802220,160,CloneObject.Wide
code-creation,BytecodeHandler,0,21625,0x1018022e0,156,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,21625,0x101802380,348,CreateClosure.Wide
code-creation,BytecodeHandler,0,21625,0x1018024e0,140,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,21625,0x101802580,148,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,21625,0x101802620,376,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,21625,0x1018027a0,376,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,21625,0x101802920,148,CreateWithContext.Wide
code-creation,BytecodeHandler,0,21625,0x1018029c0,1344,JumpLoop.Wide
code-creation,BytecodeHandler,0,21625,0x101802f20,32,Jump.Wide
code-creation,BytecodeHandler,0,21625,0x101802f60,48,JumpConstant.Wide
code-creation,BytecodeHandler,0,21625,0x101802fa0,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,21625,0x101803000,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,21625,0x101803060,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,21625,0x1018030c0,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,21625,0x101803120,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,21667,0x101803180,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,21667,0x1018031e0,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,21667,0x101803240,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,21667,0x1018032a0,188,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,21667,0x101803360,188,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,21667,0x101803420,172,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,21667,0x1018034e0,172,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,21667,0x1018035a0,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,21667,0x101803600,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,21667,0x101803660,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,21667,0x1018036c0,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,21667,0x101803720,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,21667,0x101803780,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,21667,0x1018037e0,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,21708,0x101803840,72,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,21708,0x1018038a0,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,21708,0x101803920,536,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,21708,0x101803b40,236,ForInPrepare.Wide
code-creation,BytecodeHandler,0,21708,0x101803c40,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,21708,0x101803ca0,272,ForInNext.Wide
code-creation,BytecodeHandler,0,21708,0x101803dc0,48,ForInStep.Wide
code-creation,BytecodeHandler,0,21708,0x101803e00,184,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,21708,0x101803ec0,172,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,21708,0x101803f80,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,21750,0x101804000,408,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,21833,0x1018041a0,176,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,21833,0x101804260,144,GetIterator.Wide
code-creation,BytecodeHandler,0,21833,0x101804300,136,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,21833,0x1018043a0,76,Abort.Wide
code-creation,BytecodeHandler,0,21833,0x101804400,124,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,21833,0x101804480,124,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,21833,0x101804500,124,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,21833,0x101804580,124,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,21833,0x101804600,124,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,21833,0x101804680,124,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804700,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804740,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804780,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,21875,0x1018047c0,136,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804860,136,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804900,68,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804960,68,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21875,0x1018049c0,40,Star.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804a00,52,Mov.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804a40,48,PushContext.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804a80,44,PopContext.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804ac0,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101804b20,4164,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101805b80,4080,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,21875,0x101806b80,152,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101806c20,192,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101806d00,124,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101806d80,756,StaScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101807080,684,StaCurrentScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101807340,152,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x1018073e0,316,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101807520,4364,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101808640,152,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,21917,0x1018086e0,316,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101808820,4288,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101809900,240,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,21917,0x101809a00,4676,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,21917,0x10180ac60,176,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180ad20,144,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180adc0,184,GetEnumeratedKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180ae80,228,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180af80,352,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b100,168,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b1c0,168,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b280,160,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b340,180,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b400,160,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,21958,0x10180b4c0,196,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180b5a0,1424,Add.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180bb40,1428,Sub.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180c0e0,1524,Mul.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180c6e0,1604,Div.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180cd40,1484,Mod.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180d320,836,Exp.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180d680,1768,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180dd80,1768,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180e480,1768,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180eb80,1220,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180f060,1220,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180f540,1276,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180fa40,1396,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,22000,0x10180ffc0,1284,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,22000,0x1018104e0,1380,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,22000,0x101810a60,1520,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101811060,1336,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x1018115a0,724,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101811880,528,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101811aa0,528,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101811cc0,528,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101811ee0,548,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812120,536,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812340,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812680,672,Inc.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812940,672,Dec.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812c00,692,Negate.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101812ec0,536,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,22042,0x1018130e0,132,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101813180,132,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,22042,0x101813220,48,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101813260,344,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,22083,0x1018133c0,868,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101813740,868,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101813ac0,880,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101813e40,892,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,22083,0x1018141c0,912,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101814560,864,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,22083,0x1018148e0,856,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101814c40,868,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101814fc0,888,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101815340,868,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,22083,0x1018156c0,140,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,22083,0x101815760,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101815820,100,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,22125,0x1018158a0,1852,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101815fe0,1124,Construct.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101816460,400,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101816600,1016,ConstructForwardAllArgs.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101816a00,2232,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,22125,0x1018172c0,1128,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101817740,1624,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101817da0,1624,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101818400,1624,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101818a60,1624,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,22125,0x1018190c0,1064,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,22125,0x101819500,144,TestIn.ExtraWide
code-creation,BytecodeHandler,0,22125,0x1018195a0,204,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,22167,0x101819680,224,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,22167,0x101819780,128,ToObject.ExtraWide
code-creation,BytecodeHandler,0,22167,0x101819820,420,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,22167,0x1018199e0,1736,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181a0c0,752,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181a3c0,2700,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181ae60,160,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181af20,156,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181afc0,348,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181b120,140,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181b1c0,148,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181b260,376,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181b3e0,376,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,22167,0x10181b560,148,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181b600,1344,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bb60,32,Jump.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bba0,48,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bbe0,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bc40,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bca0,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bd00,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bd60,92,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bdc0,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181be20,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181be80,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bee0,188,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181bfa0,188,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,22208,0x10181c060,172,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c120,172,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c1e0,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c240,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c2a0,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c300,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c360,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c3c0,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,22250,0x10181c420,76,JumpIfUndefinedOrNull.ExtraWide
tick,0x19252adc4,22292,0,0x0,6
code-creation,BytecodeHandler,0,22292,0x10181c480,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,22292,0x10181c4e0,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,22292,0x10181c560,536,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,22292,0x10181c780,236,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,22292,0x10181c880,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,22292,0x10181c8e0,272,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181ca00,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181ca40,184,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cb00,172,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cbc0,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cc40,408,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cde0,176,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cea0,144,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cf40,136,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,22333,0x10181cfe0,76,Abort.ExtraWide
new,MemoryChunk,0x2216b9fc0000,262144
tick,0x100e7bf24,23542,0,0x0,5
new,MemoryChunk,0x3cad45200000,262144
tick,0x1012ab114,24792,0,0x0,5
new,MemoryChunk,0x498be480000,262144
new,MemoryChunk,0x3a9ac2cc0000,262144
tick,0x1012ab114,26042,0,0x0,5
new,MemoryChunk,0x3320241c0000,262144
new,MemoryChunk,0x3564d1280000,262144
tick,0x100d63914,27292,0,0x0,5
tick,0x100d180cc,28542,0,0x0,5
tick,0x100e16354,29792,0,0x0,5
tick,0x1011f6b04,31042,0,0x0,2
new,MemoryChunk,0x12ea98640000,262144
tick,0x100f7dfa8,32292,0,0x0,3
code-creation,Eval,9,32458,0x12ea98641198,5, node:internal/main/run_main_module:1:1,0x3564d12917a8,~
script-source,73,node:internal/main/run_main_module,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\x2C\n} = require('internal/process/pre_execution');\nconst { getOptionValue } = require('internal/options');\nconst { emitExperimentalWarning } = require('internal/util');\n\nconst isEntryURL = getOptionValue('--entry-url');\nconst mainEntry = prepareMainThreadExecution(!isEntryURL);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\nif (isEntryURL) {\n  emitExperimentalWarning('--entry-url');\n}\n\nif (getOptionValue('--experimental-default-type') === 'module') {\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\n} else {\n  /**\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\n   */\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\n}\n
code-source-info,0x12ea98641198,73,0,1367,C0O0C4O1367,,
code-creation,JS,9,32500,0x12ea98641298,154, node:internal/main/run_main_module:1:1,0x3564d1291870,~
code-source-info,0x12ea98641298,73,0,1367,C0O25C5O131C8O131C13O74C18O104C23O201C26O201C31O182C36O266C39O266C44O238C49O312C52O312C57O361C59O389C61O361C66O403C69O489C78O489C83O520C87O540C90O540C94O583C97O587C104O633C109O651C112O651C117O687C122O688C129O1299C132O1299C137O1337C142O1344C147O1345C153O1366,,
tick,0x101701aa0,33625,0,0x0,0,0x12ea986412a0
tick,0x1016dcb40,34833,0,0x0,0,0x7769ed87978,0x7769ed87730,0x12ea986412d5
tick,0x1015c73ac,36083,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
new,MemoryChunk,0x107f80000,262144
code-creation,JS,10,36958,0x107f88020,2936,normalizeString node:path:77:25,0x2ddc31ec3ef8,^
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  getLazy\x2C\n  emitExperimentalWarning\x2C\n  isWindows\x2C\n  isMacOS\x2C\n} = require('internal/util');\n\nconst lazyMinimatch = getLazy(() => require('internal/deps/minimatch/index'));\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nfunction glob(path\x2C pattern\x2C windows) {\n  emitExperimentalWarning('glob');\n  validateString(path\x2C 'path');\n  validateString(pattern\x2C 'pattern');\n  return lazyMinimatch().minimatch(path\x2C pattern\x2C {\n    __proto__: null\x2C\n    nocase: isMacOS || isWindows\x2C\n    windowsPathsNoEscape: true\x2C\n    nonegate: true\x2C\n    nocomment: true\x2C\n    optimizationLevel: 2\x2C\n    platform: windows ? 'win32' : 'posix'\x2C\n    nocaseMagicOnly: true\x2C\n  });\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C `paths[${i}]`);\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    if (fromOrig.length !== from.length || toOrig.length !== to.length) {\n      const fromSplit = StringPrototypeSplit(fromOrig\x2C '\\\\');\n      const toSplit = StringPrototypeSplit(toOrig\x2C '\\\\');\n      if (fromSplit[fromSplit.length - 1] === '') {\n        fromSplit.pop();\n      }\n      if (toSplit[toSplit.length - 1] === '') {\n        toSplit.pop();\n      }\n\n      const fromLen = fromSplit.length;\n      const toLen = toSplit.length;\n      const length = fromLen < toLen ? fromLen : toLen;\n\n      let i;\n      for (i = 0; i < length; i++) {\n        if (StringPrototypeToLowerCase(fromSplit[i]) !== StringPrototypeToLowerCase(toSplit[i])) {\n          break;\n        }\n      }\n\n      if (i === 0) {\n        return toOrig;\n      } else if (i === length) {\n        if (toLen > length) {\n          return ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n        }\n        if (fromLen > length) {\n          return StringPrototypeRepeat('..\\\\'\x2C fromLen - 1 - i) + '..';\n        }\n        return '';\n      }\n\n      return StringPrototypeRepeat('..\\\\'\x2C fromLen - i) + ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n    }\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return resolvedPath;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C true);\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nconst posixCwd = (() => {\n  if (isWindows) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= 0 && !resolvedAbsolute; i--) {\n      const path = args[i];\n      validateString(path\x2C `paths[${i}]`);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    if (!resolvedAbsolute) {\n      const cwd = posixCwd();\n      resolvedPath = `${cwd}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(cwd\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    const path = [];\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        path.push(arg);\n      }\n    }\n\n    if (path.length === 0)\n      return '.';\n\n    return posix.normalize(ArrayPrototypeJoin(path\x2C '/'));\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const char = path[i];\n      if (char === '/') {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (char === '.') {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C false);\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = isWindows ? win32 : posix;\n
code-source-info,0x107f88020,35,2379,4303,,,
tick,0x1009ee310,38667,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
tick,0x192562d10,38667,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,38875,0x107f88bc0,728,requireBuiltin node:internal/bootstrap/realm:421:24,0x22b216cc5080,^
script-source,6,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\n// Only per-realm internal states and bindings should be bootstrapped in this\n// file and no globals should be exposed to the user code.\n//\n// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.cc\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/realm') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n});\n\n\n// processBindingAllowList contains the name of bindings that are allowed\n// for access via process.binding(). This is used to provide a transition\n// path for modules that are being moved over to internalBinding.\n// Certain bindings may not actually correspond to an internalBinding any\n// more\x2C we just implement them as legacy wrappers instead. See the\n// legacyWrapperList.\nconst processBindingAllowList = new SafeSet([\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'uv'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'natives'\x2C\n  'util'\x2C\n]);\n\n// The code bellow assumes that the two lists must not contain any modules\n// beginning with "internal/".\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'sea'\x2C\n  'sqlite'\x2C\n  'test'\x2C\n  'test/reporters'\x2C\n]);\n// Modules that will only be enabled at run time.\nconst experimentalModuleList = new SafeSet(['sqlite']);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    const mod = bindingObj[module];\n    if (typeof mod === 'object') {\n      return mod;\n    }\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (runtimeDeprecatedList.has(module)) {\n      process.emitWarning(\n        `Access to process.binding('${module}') is deprecated.`\x2C\n        'DeprecationWarning'\x2C\n        'DEP0111');\n      return internalBinding(module);\n    }\n    if (legacyWrapperList.has(module)) {\n      return requireBuiltin('internal/legacy/processbinding')[module]();\n    }\n    if (processBindingAllowList.has(module)) {\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n/**\n * Set up internalBinding() in the closure.\n * @type {import('typings/globals').internalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst selfId = 'internal/bootstrap/realm';\nconst {\n  builtinIds\x2C\n  compileFunction\x2C\n  setInternalLoaders\x2C\n} = internalBinding('builtins');\n\nconst { ModuleWrap } = internalBinding('module_wrap');\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\nconst publicBuiltinIds = builtinIds\n  .filter((id) =>\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\n      !experimentalModuleList.has(id)\x2C\n  );\n// Do not expose the loaders to user land even with --expose-internals.\nconst internalBuiltinIds = builtinIds\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\n\n// When --expose-internals is on we'll add the internal builtin ids to these.\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\nlet canBeRequiredByUsersWithoutSchemeList =\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  static allowRequireByUsers(id) {\n    if (id === selfId) {\n      // No code because this is an assertion against bugs.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not allow ${id}`);\n    }\n    canBeRequiredByUsersList.add(id);\n    if (!schemelessBlockList.has(id)) {\n      canBeRequiredByUsersWithoutSchemeList.add(id);\n    }\n  }\n\n  static setRealmAllowRequireByUsers(ids) {\n    canBeRequiredByUsersList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\n    canBeRequiredByUsersWithoutSchemeList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    return canBeRequiredByUsersList.has(id);\n  }\n\n  static canBeRequiredWithoutScheme(id) {\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\n  }\n\n  static normalizeRequirableId(id) {\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\n        return normalizedId;\n      }\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      return id;\n    }\n\n    return undefined;\n  }\n\n  static isBuiltin(id) {\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\n      typeof id === 'string' &&\n        StringPrototypeStartsWith(id\x2C 'node:') &&\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\n    );\n  }\n\n  static getCanBeRequiredByUsersWithoutSchemeList() {\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\n      ArrayPrototypePush(exportsKeys\x2C 'default');\n    }\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\x2C\n};\n\nfunction requireBuiltin(id) {\n  if (id === selfId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    request = StringPrototypeSlice(request\x2C 5);\n  } else if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\x2C\n  } = internalBinding('errors');\n  const {\n    prepareStackTraceCallback\x2C\n    ErrorPrepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\x2C\n    }\x2C\n  } = requireBuiltin('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n  // Setup the default Error.prepareStackTrace.\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: ErrorPrepareStackTrace\x2C\n  });\n}\n\n// Store the internal loaders in C++.\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\n\n// Setup per-realm bindings.\nsetupPrepareStackTrace();\n
code-source-info,0x107f88bc0,6,13549,13891,,,
code-creation,JS,10,39417,0x107f88ec0,1336,compileForInternalLoader node:internal/bootstrap/realm:384:27,0x22b216cc4fb0,^
code-source-info,0x107f88ec0,6,12533,13331,,,
code-creation,JS,10,39458,0x107f89420,568,internalBinding node:internal/bootstrap/realm:185:45,0x22b216cc40a8,^
code-source-info,0x107f89420,6,6027,6265,,,
tick,0x101197fbc,39833,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,39917,0x107f89680,664,wrappedFn node:internal/errors:535:21,0x22b216cc9610,^
script-source,7,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: ["error"\x2C {checkErrorDeclarations: true}] */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectIsExtensible\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\n\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\n\n/**\n * The default implementation of `Error.prepareStackTrace` with simple\n * concatenation of stack frames.\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n */\nfunction defaultPrepareStackTrace(error\x2C trace) {\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n}\n\nfunction setInternalPrepareStackTrace(callback) {\n  internalPrepareStackTrace = callback;\n}\n\n/**\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\n * of error objects created in a VM Context will always invoke the\n * prepareStackTraceCallback of the principal realm.\n * @param {object} globalThis The global object of the realm that the error was\n *   created in. When the error object is created in a VM Context\x2C this is the\n *   global object of that VM Context.\n * @param {object} error The error object.\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\n  // internal implementation.\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\n/**\n * The default Error.prepareStackTrace implementation.\n */\nfunction ErrorPrepareStackTrace(error\x2C trace) {\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    let err;\n    if (isErrorStackTraceLimitWritable()) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n      Error.stackTraceLimit = limit;\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\n    } else {\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n    }\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n};\n\nclass NodeAggregateError extends AggregateError {\n  constructor(errors\x2C message) {\n    super(new SafeArrayIterator(errors)\x2C message);\n    this.code = errors[0]?.code;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  get ['constructor']() {\n    return AggregateError;\n  }\n}\n\nconst assert = require('internal/assert');\n\n// Lazily loaded\nlet util;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    super();\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\x2C\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\n// This is a special error type that is only used for the E function.\nclass HideStackFramesError extends Error {\n}\n\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\n  class HideStackFramesError extends Base {\n    constructor(...args) {\n      if (isErrorStackTraceLimitWritable()) {\n        const limit = Error.stackTraceLimit;\n        Error.stackTraceLimit = 0;\n        super(...args);\n        Error.stackTraceLimit = limit;\n      } else {\n        super(...args);\n      }\n    }\n\n    // This is a workaround for wpt tests that expect that the error\n    // constructor has a `name` property of the base class.\n    get ['constructor']() {\n      return clazz;\n    }\n  }\n\n  return HideStackFramesError;\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  const msg = messages.get(key);\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\n\n  switch (expectedLength) {\n    case 0: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === 0\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n          super(msg);\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    case -1: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          super();\n          ObjectDefineProperty(this\x2C 'message'\x2C {\n            __proto__: null\x2C\n            value: getMessage(key\x2C args\x2C this)\x2C\n            enumerable: false\x2C\n            writable: true\x2C\n            configurable: true\x2C\n          });\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    default: {\n\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === expectedLength\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n\n          ArrayPrototypeUnshift(args\x2C msg);\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n  }\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  function wrappedFn(...args) {\n    try {\n      return ReflectApply(fn\x2C this\x2C args);\n    } catch (error) {\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\n      throw error;\n    }\n  }\n  wrappedFn.withoutStackTrace = fn;\n  return wrappedFn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n\n  const ErrClass = def === SystemError ?\n    makeSystemErrorWithCode(sym) :\n    makeNodeErrorWithCode(def\x2C sym);\n\n  if (otherClasses.length !== 0) {\n    if (otherClasses.includes(HideStackFramesError)) {\n      if (otherClasses.length !== 1) {\n        otherClasses.forEach((clazz) => {\n          if (clazz !== HideStackFramesError) {\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\n          }\n        });\n      }\n    } else {\n      otherClasses.forEach((clazz) => {\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n      });\n    }\n  }\n\n  if (otherClasses.includes(HideStackFramesError)) {\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\n  }\n\n  codes[sym] = ErrClass;\n}\n\nfunction getExpectedArgumentLength(msg) {\n  let expectedLength = 0;\n  const regex = /%[dfijoOs]/g;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  return expectedLength;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\x2C\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength = getExpectedArgumentLength(msg);\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\x2C\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n */\nclass UVException extends Error {\n  /**\n   * @param {object} ctx\n   */\n  constructor(ctx) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n    let path;\n    let dest;\n    if (ctx.path) {\n      path = ctx.path.toString();\n      message += ` '${path}'`;\n    }\n    if (ctx.dest) {\n      dest = ctx.dest.toString();\n      message += ` -> '${dest}'`;\n    }\n\n    super(message);\n\n    for (const prop of ObjectKeys(ctx)) {\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\n        continue;\n      }\n      this[prop] = ctx[prop];\n    }\n\n    this.code = code;\n    if (path) {\n      this.path = path;\n    }\n    if (dest) {\n      this.dest = dest;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n */\nclass UVExceptionWithHostPort extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} address\n   * @param {number} [port]\n   */\n  constructor(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    super(`${message}${details}`);\n\n    this.code = code;\n    this.errno = err;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This used to be util._errnoException().\n */\nclass ErrnoException extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} [original] err\n   */\n  constructor(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    super(message);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nclass ExceptionWithHostPort extends Error {\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    super(`${syscall} ${code}${details}`);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass DNSException extends Error {\n  /**\n   * @param {number|string} code - A libuv error number or a c-ares error code\n   * @param {string} syscall\n   * @param {string} [hostname]\n   */\n  constructor(code\x2C syscall\x2C hostname) {\n    let errno;\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n    // c-ares error code.\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n    // make them available in a property that's not error.errno (since they\n    // can be in conflict with libuv error codes). Also make sure\n    // util.getSystemErrorName() can understand them when an being informed that\n    // the number is a c-ares error code.\n    if (typeof code === 'number') {\n      errno = code;\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n      // long enough that it's not practical to remove it.\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n        code = 'ENOTFOUND'; // Fabricated error name.\n      } else {\n        code = lazyInternalUtil().getSystemErrorName(code);\n      }\n    }\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\n    this.errno = errno;\n    this.code = code;\n    this.syscall = syscall;\n    if (hostname) {\n      this.hostname = hostname;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass ConnResetException extends Error {\n  constructor(msg) {\n    super(msg);\n    this.code = 'ECONNRESET';\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (isWindows) {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\x2C\n      }\x2C\n    } = lazyInternalUtilInspect();\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\n      });\n    } catch {\n      return originalStack;\n    }\n  }\x2C\n};\n\nconst {\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n// Ensures the printed error line is from user code.\nfunction setArrowMessage(err\x2C arrowMessage) {\n  err[arrow_message_private_symbol] = arrowMessage;\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\x2C\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  }\n\n  const type = typeof value;\n\n  switch (type) {\n    case 'bigint':\n      return `type bigint (${value}n)`;\n    case 'number':\n      if (value === 0) {\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\n      } else if (value !== value) { // eslint-disable-line no-self-compare\n        return 'type number (NaN)';\n      } else if (value === Infinity) {\n        return 'type number (Infinity)';\n      } else if (value === -Infinity) {\n        return 'type number (-Infinity)';\n      }\n      return `type number (${value})`;\n    case 'boolean':\n      return value ? 'type boolean (true)' : 'type boolean (false)';\n    case 'symbol':\n      return `type symbol (${String(value)})`;\n    case 'function':\n      return `function ${value.name}`;\n    case 'object':\n      if (value.constructor && 'name' in value.constructor) {\n        return `an instance of ${value.constructor.name}`;\n      }\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n    case 'string':\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\n        return `type string ('${value}')`;\n      }\n      return `type string (${JSONStringify(value)})`;\n    default:\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\n      if (value.length > 28) {\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\n      }\n\n      return `type ${type} (${value})`;\n  }\n}\n\n/**\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n * @param {string[]} array An array of strings.\n * @param {string} [type] The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array\x2C type = 'and') {\n  switch (array.length) {\n    case 0: return '';\n    case 1: return `${array[0]}`;\n    case 2: return `${array[0]} ${type} ${array[1]}`;\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\n    default:\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\n  }\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  NodeAggregateError\x2C\n  codes\x2C\n  ConnResetException\x2C\n  DNSException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  formatList\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  defaultPrepareStackTrace\x2C\n  setInternalPrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTraceCallback\x2C\n  ErrorPrepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  UVException\x2C\n  UVExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_ACCESS_DENIED'\x2C\n  function(msg\x2C permission = ''\x2C resource = '') {\n    this.permission = permission;\n    this.resource = resource;\n    return msg;\n  }\x2C\n  Error);\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error\x2C HideStackFramesError);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\n  'ServerResponse has an already assigned socket'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        msg += `one of ${formatList(other\x2C 'or')}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\n}\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_TYPESCRIPT_SYNTAX'\x2C '%s'\x2C SyntaxError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\n  this.input = input;\n\n  if (base != null) {\n    this.base = base;\n  }\n\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\x2C\n);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\x2C\n    );\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\n  if (exactUrl) {\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\n  }\n  return `Cannot find ${\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_NO_TYPESCRIPT'\x2C\n  'Node.js is not compiled with TypeScript support'\x2C Error);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError\x2C HideStackFramesError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_QUIC_CONNECTION_FAILED'\x2C 'QUIC connection failed'\x2C Error);\nE('ERR_QUIC_ENDPOINT_CLOSED'\x2C 'QUIC endpoint closed: %s (%d)'\x2C Error);\nE('ERR_QUIC_OPEN_STREAM_FAILED'\x2C 'Failed to open QUIC stream'\x2C Error);\nE('ERR_REQUIRE_ASYNC_MODULE'\x2C 'require() cannot be used on an ESM ' +\n  'graph with top-level await. Use import() instead. To see where the' +\n  ' top-level await comes from\x2C use --experimental-print-required-tla.'\x2C Error);\nE('ERR_REQUIRE_CYCLE_MODULE'\x2C '%s'\x2C Error);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\n  'Cannot find asset %s for the single executable application'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\n}\x2C RangeError\x2C HideStackFramesError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\n  'Socket closed before the connection was established'\x2C\n  Error);\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\n  'Socket connection timeout'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SOURCE_MAP_CORRUPT'\x2C `The source map for '%s' does not exist or is corrupt.`\x2C Error);\nE('ERR_SOURCE_MAP_MISSING_SOURCE'\x2C `Cannot find '%s' imported from the source map for '%s'`\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\n  hideInternalStackFrames(this);\n  this.cause = tokenCausedError;\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\n  return errorMsg + errorDetails;\n}\x2C SyntaxError);\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\n         "The 'failureType' argument must be of type string or symbol.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\n  return `ALPN callback returned a value (${\n    value\n  }) that did not match any of the client's offered protocols (${\n    protocols.join('\x2C ')\n  })`;\n}\x2C TypeError);\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\n  TypeError);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\n  return `Directory import '${path}' is not supported ` +\n    `resolving ES modules imported from ${base}`;\n}\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_UNSUPPORTED_NODE_MODULES_TYPE_STRIPPING'\x2C\n  'Stripping types is currently unsupported for files under node_modules\x2C for "%s"'\x2C\n  Error);\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\n  TypeError);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\n  TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_MESSAGING_ERRORED'\x2C 'The destination thread threw an error while processing the message'\x2C Error);\nE('ERR_WORKER_MESSAGING_FAILED'\x2C 'Cannot find the destination thread or listener'\x2C Error);\nE('ERR_WORKER_MESSAGING_SAME_THREAD'\x2C 'Cannot sent a message to the same thread'\x2C Error);\nE('ERR_WORKER_MESSAGING_TIMEOUT'\x2C 'Sending a message to another thread timed out'\x2C Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\n
code-source-info,0x107f89680,7,14729,14917,,,
tick,0x192475198,42250,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
tick,0x101197fbc,42333,0,0x0,0,0x3a8f56103933,0x3a8f561064df,0x7769ed87f7e,0x7769ed87978,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,42500,0x107f89940,312, node:internal/validators:161:40,0x22b216cd3ba0,^
script-source,12,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\x2C\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\x2C\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nconst validateString = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n});\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n});\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nconst validateBoolean = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n});\n\nconst kValidateObjectNone = 0;\nconst kValidateObjectAllowNullable = 1 << 0;\nconst kValidateObjectAllowArray = 1 << 1;\nconst kValidateObjectAllowFunction = 1 << 2;\nconst kValidateObjectAllowObjects = kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\n  kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {number} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = kValidateObjectNone) => {\n    if (options === kValidateObjectNone) {\n      if (value === null || ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      if (typeof value !== 'object') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    } else {\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\n\n      if (throwOnNullable && value === null) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\n\n      if (throwOnArray && ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\n      const typeofValue = typeof value;\n\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nconst validateStringArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateString here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (typeof value[i] !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateBoolean here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (value[i] !== true && value[i] !== false) {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i];\n    const indexedName = `${name}[${i}]`;\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\n    }\n    validateAbortSignal(signal\x2C indexedName);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n});\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n});\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n});\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n    );\n  }\n});\n\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\n  }\n});\n\n/**\n * @param {any} hints\n * @return {string}\n */\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n  );\n});\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst validateFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!validateFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\x2C\n);\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateAbortSignalArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  kValidateObjectNone\x2C\n  kValidateObjectAllowNullable\x2C\n  kValidateObjectAllowArray\x2C\n  kValidateObjectAllowFunction\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateInternalField\x2C\n  validateFiniteNumber\x2C\n  checkRangesOrGetDefault\x2C\n};\n
code-source-info,0x107f89940,12,4381,4493,,,
code-creation,JS,10,43125,0x107f89aa0,144,isPosixPathSeparator node:path:67:30,0x2ddc31ec3d78,^
code-source-info,0x107f89aa0,35,2072,2120,,,
tick,0x1017e3be0,43583,0,0x0,0,0x1a7c5b218776,0x7769ed88986,0x7769ed879a4,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,44292,0x107f89b60,1784,resolve node:path:1162:10,0x2ddc31ec4de8,^
code-source-info,0x107f89b60,35,35775,36872,,,
code-creation,JS,10,44500,0x107f8a280,320,getCLIOptionsFromBinding node:internal/options:19:34,0x22b216cd9e70,^
script-source,14,node:internal/options,'use strict';\n\nconst {\n  getCLIOptionsValues\x2C\n  getCLIOptionsInfo\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsDict;\nlet cliInfo;\nlet embedderOptions;\n\n// getCLIOptionsValues() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  return optionsDict ??= getCLIOptionsValues();\n}\n\nfunction getCLIOptionsInfoFromBinding() {\n  return cliInfo ??= getCLIOptionsInfo();\n}\n\nfunction getEmbedderOptions() {\n  return embedderOptions ??= getEmbedderOptionsFromBinding();\n}\n\nfunction refreshOptions() {\n  optionsDict = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  return getCLIOptionsFromBinding()[optionName];\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  getCLIOptionsInfo: getCLIOptionsInfoFromBinding\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n};\n
code-source-info,0x107f8a280,14,528,582,,,
code-creation,JS,10,44542,0x107f8a3e0,120,getOptionValue node:internal/options:35:24,0x22b216cda230,^
code-source-info,0x107f8a3e0,14,849,914,,,
code-creation,JS,10,44792,0x107f8a480,488,addReadOnlyProcessAlias node:internal/process/pre_execution:280:33,0x6ba9c7842e8,^
script-source,67,node:internal/process/pre_execution,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetFullYear\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  String\x2C\n  Symbol\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n  getEmbedderOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n  setupCoverageHooks\x2C\n  emitExperimentalWarning\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n  deprecate\x2C\n} = require('internal/util');\n\nconst {\n  ERR_INVALID_THIS\x2C\n  ERR_NO_CRYPTO\x2C\n  ERR_MISSING_OPTION\x2C\n  ERR_ACCESS_DENIED\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n  runDeserializeCallbacks\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  return prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\x2C\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C\n    isMainThread: false\x2C\n  });\n}\n\nfunction prepareShadowRealmExecution() {\n  // Patch the process object with legacy properties and normalizations.\n  // Do not expand argv1 as it is not available in ShadowRealm.\n  patchProcessObject(false);\n  setupDebugEnv();\n\n  // Disable custom loaders in ShadowRealm.\n  setupUserModules(true);\n  const {\n    privateSymbols: {\n      host_defined_option_symbol\x2C\n    }\x2C\n  } = internalBinding('util');\n  const {\n    vm_dynamic_import_default_internal\x2C\n  } = internalBinding('symbols');\n\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\n  // always null\x2C so the native ImportModuleDynamically() callback would\n  // always fallback to look up the host-defined option from the\n  // global object using host_defined_option_symbol. Using\n  // vm_dynamic_import_default_internal as the host-defined option\n  // instructs the JS-land importModuleDynamicallyCallback() to\n  // proxy the request to defaultImportModuleDynamically().\n  globalThis[host_defined_option_symbol] =\n    vm_dynamic_import_default_internal;\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\n\n  refreshRuntimeOptions();\n  reconnectZeroFillToggle();\n\n  // Patch the process object and get the resolved main entry point.\n  const mainEntry = patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupInspectorHooks();\n  setupNetworkInspection();\n  setupNavigator();\n  setupWarningHandler();\n  setupUndici();\n  setupWebCrypto();\n  setupSQLite();\n  setupWebStorage();\n  setupCustomEvent();\n  setupEventsource();\n  setupCodeCoverage();\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n\n  // Load permission system API\n  initializePermission();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n\n  require('internal/dns/utils').initializeDns();\n\n  setupSymbolDisposePolyfill();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules();\n  }\n\n  return mainEntry;\n}\n\nfunction setupSymbolDisposePolyfill() {\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.dispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolDispose\x2C\n      writable: false\x2C\n    });\n  }\n\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.asyncDispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolAsyncDispose\x2C\n      writable: false\x2C\n    });\n  }\n}\n\nfunction setupUserModules(forceDefaultLoader = false) {\n  initializeCJSLoader();\n  initializeESMLoader(forceDefaultLoader);\n  const {\n    hasStartedUserCJSExecution\x2C\n    hasStartedUserESMExecution\x2C\n  } = require('internal/modules/helpers');\n  assert(!hasStartedUserCJSExecution());\n  assert(!hasStartedUserESMExecution());\n  if (getEmbedderOptions().hasEmbedderPreload) {\n    runEmbedderPreload();\n  }\n  // Do not enable preload modules if custom loaders are disabled.\n  // For example\x2C loader workers are responsible for doing this themselves.\n  // And preload modules are not supported in ShadowRealm as well.\n  if (!forceDefaultLoader) {\n    loadPreloadModules();\n  }\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\n/**\n * Patch the process object with legacy properties and normalizations.\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\n * the main entry point.\n */\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: isBuildingSnapshot()\x2C\n    value: process.argv[0]\x2C\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  /** @type {string} */\n  let mainEntry;\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\n  // the entry point.\n  if (expandArgv1 && process.argv[1] && process.argv[1][0] !== '-') {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      mainEntry = path.resolve(process.argv[1]);\n      process.argv[1] = mainEntry;\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n\n  return mainEntry;\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\x2C\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\x2C\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\n// https://websockets.spec.whatwg.org/\nfunction setupUndici() {\n  if (getOptionValue('--no-experimental-fetch')) {\n    delete globalThis.fetch;\n    delete globalThis.FormData;\n    delete globalThis.Headers;\n    delete globalThis.Request;\n    delete globalThis.Response;\n  }\n\n  if (getOptionValue('--no-experimental-websocket')) {\n    delete globalThis.WebSocket;\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/server-sent-events.html\nfunction setupEventsource() {\n  if (!getOptionValue('--experimental-eventsource')) {\n    delete globalThis.EventSource;\n  }\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupNavigator() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-navigator')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-webcrypto')) {\n    return;\n  }\n\n  if (internalBinding('config').hasOpenSSL) {\n    defineReplaceableLazyAttribute(\n      globalThis\x2C\n      'internal/crypto/webcrypto'\x2C\n      ['crypto']\x2C\n      false\x2C\n      function cryptoThisCheck() {\n        if (this !== globalThis && this != null)\n          throw new ERR_INVALID_THIS(\n            'nullish or must be the global object');\n      }\x2C\n    );\n    exposeLazyInterfaces(\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\n    );\n  } else {\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                           get crypto() {\n                             throw new ERR_NO_CRYPTO();\n                           }\x2C\n                         }\x2C 'crypto') });\n\n  }\n}\n\nfunction setupSQLite() {\n  if (!getOptionValue('--experimental-sqlite')) {\n    return;\n  }\n\n  const { BuiltinModule } = require('internal/bootstrap/realm');\n  BuiltinModule.allowRequireByUsers('sqlite');\n}\n\nfunction setupWebStorage() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      !getOptionValue('--experimental-webstorage')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/webstorage.html#webstorage\n  exposeLazyInterfaces(globalThis\x2C 'internal/webstorage'\x2C ['Storage']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/webstorage'\x2C [\n    'localStorage'\x2C 'sessionStorage'\x2C\n  ]);\n}\n\nfunction setupCodeCoverage() {\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd. Don't do anything if the\n  // --experimental-test-coverage flag is present\x2C as the test runner will\n  // handle coverage.\n  if (process.env.NODE_V8_COVERAGE &&\n      !getOptionValue('--experimental-test-coverage')) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\x2C\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\n    writeHeapSnapshot(heapSnapshotFilename);\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\nfunction setupNetworkInspection() {\n  if (internalBinding('config').hasInspector && getOptionValue('--experimental-network-inspection')) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_network_tracking');\n    internalBinding('inspector').setupNetworkTracking(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\x2C\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePermission() {\n  const experimentalPermission = getOptionValue('--experimental-permission');\n  if (experimentalPermission) {\n    process.binding = function binding(_module) {\n      throw new ERR_ACCESS_DENIED('process.binding');\n    };\n    // Guarantee path module isn't monkey-patched to bypass permission model\n    ObjectFreeze(require('path'));\n    emitExperimentalWarning('Permission');\n    const { has } = require('internal/process/permission');\n    const warnFlags = [\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    for (const flag of warnFlags) {\n      if (getOptionValue(flag)) {\n        process.emitWarning(\n          `The flag ${flag} must be used with extreme caution. ` +\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\n      }\n    }\n    const warnCommaFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n    ];\n    for (const flag of warnCommaFlags) {\n      const value = getOptionValue(flag);\n      if (value.length === 1 && value[0].includes('\x2C')) {\n        process.emitWarning(\n          `The ${flag} CLI flag has changed. ` +\n        'Passing a comma-separated list of paths is no longer valid. ' +\n        'Documentation can be found at ' +\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\n          'Warning'\x2C\n        );\n      }\n    }\n\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: {\n        has\x2C\n      }\x2C\n    });\n  } else {\n    const availablePermissionFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\n      const value = getOptionValue(flag);\n      if (value.length) {\n        throw new ERR_MISSING_OPTION('--experimental-permission');\n      }\n    });\n  }\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader(forceDefaultLoader) {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM(forceDefaultLoader);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const {\n    setSourceMapsEnabled\x2C\n  } = require('internal/source_map/source_map_cache');\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    emitExperimentalWarning('Frozen intristics');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction runEmbedderPreload() {\n  internalBinding('mksnapshot').runEmbedderPreload(process\x2C require);\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\x2C\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\n// Sequence number for diagnostic filenames\nlet sequenceNumOfheapSnapshot = 0;\n\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\nfunction getHeapSnapshotFilename(diagnosticDir) {\n  if (!diagnosticDir) return undefined;\n\n  const date = new Date();\n\n  const year = DatePrototypeGetFullYear(date);\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\n\n  const dateString = `${year}${month}${day}`;\n  const timeString = `${hours}${minutes}${seconds}`;\n  const pid = process.pid;\n  const threadId = internalBinding('worker').threadId;\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\n\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  prepareShadowRealmExecution\x2C\n  markBootstrapComplete\x2C\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n};\n
code-source-info,0x107f8a480,67,8863,9112,,,
tick,0x192475198,45625,0,0x0,0,0x3a8f5610649a,0x7769ed82989,0x3a8f5613c9ce,0x7769ed8a5c0,0x7769ed87d05,0x7769ed87a6e,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,45875,0x107f8a6a0,168,exposeLazyInterfaces node:internal/util:687:30,0x22b216cd8cc0,^
script-source,13,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_NO_TYPESCRIPT\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  overrideStackTrace\x2C\n  uvErrmapGet\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  guessHandleType: _guessHandleType\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n} = internalBinding('util');\nconst { isNativeError\x2C isPromise } = internalBinding('types');\nconst { getOptionValue } = require('internal/options');\nconst { encodings } = internalBinding('string_decoder');\n\nconst noCrypto = !process.versions.openssl;\nconst noTypeScript = !process.versions.amaro;\n\nconst isWindows = process.platform === 'win32';\nconst isMacOS = process.platform === 'darwin';\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\nfunction getDeprecationWarningEmitter(\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  shouldEmitWarning = () => true\x2C\n) {\n  let warned = false;\n  return function() {\n    if (!warned && shouldEmitWarning()) {\n      warned = true;\n      if (code === 'ExperimentalWarning') {\n        process.emitWarning(msg\x2C code\x2C deprecated);\n      } else if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n  };\n}\n\nfunction isPendingDeprecation() {\n  return getOptionValue('--pending-deprecation') &&\n    !getOptionValue('--no-deprecation');\n}\n\n// Internal deprecator for pending --pending-deprecation. This can be invoked\n// at snapshot building time as the warning permission is only queried at\n// run time.\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\n  );\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n  return deprecated;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  );\n\n  function deprecated(...args) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    if (!process.noDeprecation) {\n      emitDeprecationWarning();\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\nfunction assertTypeScript() {\n  if (noTypeScript)\n    throw new ERR_NO_TYPESCRIPT();\n}\n\n/**\n * Move the "slow cases" to a separate function to make sure this function gets\n * inlined properly. That prioritizes the common case.\n * @param {unknown} enc\n * @returns {string | undefined} Returns undefined if there is no match.\n */\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n      StringPrototypeToLowerCase(enc) === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n      StringPrototypeToLowerCase(enc) === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\n/**\n * @param {string} feature Feature name used in the warning message\n * @param {string} messagePrefix Prefix of the warning message\n * @param {string} code See documentation of process.emitWarning\n * @param {string} ctor See documentation of process.emitWarning\n */\nfunction emitExperimentalWarning(feature\x2C messagePrefix\x2C code\x2C ctor) {\n  if (experimentalWarnings.has(feature)) return;\n  experimentalWarnings.add(feature);\n  let msg = `${feature} is an experimental feature and might change at any time`;\n  if (messagePrefix) {\n    msg = messagePrefix + msg;\n  }\n  process.emitWarning(msg\x2C 'ExperimentalWarning'\x2C code\x2C ctor);\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nlet cachedURL;\nlet cachedCWD;\n\n/**\n * Get the current working directory while accounting for the possibility that it has been deleted.\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\n */\nfunction getCWDURL() {\n  const { sep } = require('path');\n  const { pathToFileURL } = require('internal/url');\n\n  let cwd;\n\n  try {\n    // The implementation of `process.cwd()` already uses proper cache when it can.\n    // It's a relatively cheap call performance-wise for the most common use case.\n    cwd = process.cwd();\n  } catch {\n    cachedURL ??= pathToFileURL(sep);\n  }\n\n  if (cwd != null && cwd !== cachedCWD) {\n    cachedURL = pathToFileURL(cwd + sep);\n    cachedCWD = cwd;\n  }\n\n  return cachedURL;\n}\n\nfunction getSystemErrorMessage(err) {\n  return lazyUv().getErrorMessage(err);\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\n                            'DeprecationWarning'\x2C 'DEP0174');\n      }\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(?:.*)[\\\\/]node_modules[\\\\/]/;\n\nfunction isUnderNodeModules(filename) {\n  return filename && (RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null);\n}\n\nlet getStructuredStackImpl;\n\nfunction lazyGetStructuredStack() {\n  if (getStructuredStackImpl === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\n    // and module mocking\x2C the perf implications should be okay.\n    getStructuredStackImpl = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  return getStructuredStackImpl;\n}\n\nfunction getStructuredStack() {\n  const getStructuredStackImpl = lazyGetStructuredStack();\n\n  return getStructuredStackImpl();\n}\n\nfunction once(callback\x2C { preserveReturnValue = false } = kEmptyObject) {\n  let called = false;\n  let returnValue;\n  return function(...args) {\n    if (called) return returnValue;\n    called = true;\n    const result = ReflectApply(callback\x2C this\x2C args);\n    returnValue = preserveReturnValue ? result : undefined;\n    return result;\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\x2C\n  });\n}\n\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: getter\x2C\n    set: setter\x2C\n  });\n}\n\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\n  const descriptors = { __proto__: null };\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let lazyLoadedValue;\n    function set(value) {\n      ObjectDefineProperty(target\x2C key\x2C {\n        __proto__: null\x2C\n        writable: true\x2C\n        value\x2C\n      });\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n    function get() {\n      mod ??= require(id);\n      if (lazyLoadedValue === undefined) {\n        lazyLoadedValue = mod[key];\n        set(lazyLoadedValue);\n      }\n      return lazyLoadedValue;\n    }\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n    descriptors[key] = {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      get\x2C\n      set\x2C\n    };\n  }\n  ObjectDefineProperties(target\x2C descriptors);\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = (message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const ex = new _DOMException(message\x2C name);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\n    return ex;\n  }\n  return new _DOMException(message\x2C name);\n\n};\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRealmRegexes = new SafeWeakMap();\nfunction getCrossRealmRegex(regex) {\n  const cached = crossRealmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRealmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRealmRegexes.set(regex\x2C crossRealmRegex);\n  return crossRealmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRealmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRealmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage objects to a specified directory.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\n\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\nfunction guessHandleType(fd) {\n  const type = _guessHandleType(fd);\n  return handleTypes[type];\n}\n\nclass WeakReference {\n  #weak = null;\n  // eslint-disable-next-line no-unused-private-class-members\n  #strong = null;\n  #refCount = 0;\n  constructor(object) {\n    this.#weak = new SafeWeakRef(object);\n  }\n\n  incRef() {\n    this.#refCount++;\n    if (this.#refCount === 1) {\n      const derefed = this.#weak.deref();\n      if (derefed !== undefined) {\n        this.#strong = derefed;\n      }\n    }\n    return this.#refCount;\n  }\n\n  decRef() {\n    this.#refCount--;\n    if (this.#refCount === 0) {\n      this.#strong = null;\n    }\n    return this.#refCount;\n  }\n\n  get() {\n    return this.#weak.deref();\n  }\n}\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  assertTypeScript\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  encodingsMap\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  exposeNamespace\x2C\n  exposeGetterAndSetter\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getCWDURL\x2C\n  getInternalGlobal\x2C\n  getStructuredStack\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  getSystemErrorMessage\x2C\n  guessHandleType\x2C\n  isError\x2C\n  isUnderNodeModules\x2C\n  isMacOS\x2C\n  isWindows\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  setupCoverageHooks\x2C\n  removeColors\x2C\n\n  // Define Symbol.dispose and Symbol.asyncDispose\n  // Until these are defined by the environment.\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in primordials.\n  // eslint-disable-next-line node-core/prefer-primordials\n  SymbolDispose: Symbol.dispose || SymbolFor('nodejs.dispose')\x2C\n  // eslint-disable-next-line node-core/prefer-primordials\n  SymbolAsyncDispose: Symbol.asyncDispose || SymbolFor('nodejs.asyncDispose')\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n  pendingDeprecate\x2C\n  WeakReference\x2C\n};\n
code-source-info,0x107f8a6a0,13,18971,19042,,,
tick,0x1009ee21c,46833,0,0x0,0,0x3a8f5610649a,0x7769ed82989,0x3a8f5613c9ce,0x7769ed8a5c0,0x7769ed87d05,0x7769ed87a6e,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,46833,0x107f8a780,2616,defineLazyProperties node:internal/util:604:30,0x22b216cd8518,^
code-source-info,0x107f8a780,13,17134,18038,,,
code-creation,JS,10,46875,0x107f8b1e0,136,next node:internal/per_context/primordials:331:9,0x2aa13b33f2d0,^
script-source,3,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'Atomics'\x2C\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectGet\x2C\n  ReflectSet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {(() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x107f8b1e0,3,9242,9287,,,
tick,0x1924008a0,47667,0,0x0,0,0x3a8f5610649a,0x7769ed82989,0x3a8f5613c9ce,0x7769ed8a5c0,0x7769ed87d05,0x7769ed87a6e,0x7769ed87730,0x12ea986412d5
code-creation,JS,10,47667,0x107f8b2a0,376,SafeSet node:internal/per_context/primordials:422:16,0x2aa13b33fa68,^
code-source-info,0x107f8b2a0,3,11967,11984,,,
tick,0x100aa8198,48625,0,0x0,0,0x3a8f5611d804,0x3a8f561121db,0x3a8f5613debf,0x7769ed8b562,0x7769ed8bd0f,0x12ea9864132b
tick,0x100cfbab0,49875,0,0x0,2,0x107f890bc,0x107f88e30,0x7769ed8b9a8,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,Eval,9,50167,0x12ea98641d20,5, node:internal/modules/esm/loader:1:1,0x3564d12a7180,~
script-source,74,node:internal/modules/esm/loader,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypeReduce\x2C\n  FunctionPrototypeCall\x2C\n  JSONStringify\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  encodeURIComponent\x2C\n  hardenRegExp\x2C\n} = primordials;\n\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nconst {\n  kIsExecuting\x2C\n  kRequiredModuleSymbol\x2C\n} = require('internal/modules/cjs/loader');\n\nconst { imported_cjs_symbol } = internalBinding('symbols');\n\nconst assert = require('internal/assert');\nconst {\n  ERR_REQUIRE_ASYNC_MODULE\x2C\n  ERR_REQUIRE_CYCLE_MODULE\x2C\n  ERR_REQUIRE_ESM\x2C\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\n} = require('internal/errors').codes;\nconst { getOptionValue } = require('internal/options');\nconst { isURL\x2C pathToFileURL\x2C URLParse } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\nconst {\n  compileSourceTextModule\x2C\n  getDefaultConditions\x2C\n  forceDefaultLoader\x2C\n} = require('internal/modules/esm/utils');\nconst { kImplicitTypeAttribute } = require('internal/modules/esm/assert');\nconst { ModuleWrap\x2C kEvaluating\x2C kEvaluated } = internalBinding('module_wrap');\nconst {\n  urlToFilename\x2C\n} = require('internal/modules/helpers');\nlet defaultResolve\x2C defaultLoad\x2C defaultLoadSync\x2C importMetaInitializer;\n\nconst { tracingChannel } = require('diagnostics_channel');\nconst onImport = tracingChannel('module.import');\n\n/**\n * @typedef {import('url').URL} URL\n */\n\n/**\n * Lazy loads the module_map module and returns a new instance of ResolveCache.\n * @returns {import('./module_map.js').ResolveCache}\n */\nfunction newResolveCache() {\n  const { ResolveCache } = require('internal/modules/esm/module_map');\n  return new ResolveCache();\n}\n\n/**\n * Generate a load cache (to store the final result of a load-chain for a particular module).\n * @returns {import('./module_map.js').LoadCache}\n */\nfunction newLoadCache() {\n  const { LoadCache } = require('internal/modules/esm/module_map');\n  return new LoadCache();\n}\n\n/**\n * Lazy-load translators to avoid potentially unnecessary work at startup (ex if ESM is not used).\n * @returns {import('./translators.js').Translators}\n */\nfunction getTranslators() {\n  const { translators } = require('internal/modules/esm/translators');\n  return translators;\n}\n\n/**\n * @type {HooksProxy}\n * Multiple loader instances exist for various\x2C specific reasons (see code comments at site).\n * In order to maintain consistency\x2C we use a single worker (sandbox)\x2C which must sit apart of an\n * individual loader instance.\n */\nlet hooksProxy;\n\n/**\n * @typedef {import('../cjs/loader.js').Module} CJSModule\n */\n\n/**\n * @typedef {Record<string\x2C any>} ModuleExports\n */\n\n/**\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\n */\n\n/**\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\n */\n\n/**\n * This class covers the base machinery of module loading. To add custom\n * behavior you can pass a customizations object and this object will be\n * used to do the loading/resolving/registration process.\n */\nclass ModuleLoader {\n  /**\n   * The conditions for resolving packages if `--conditions` is not used.\n   */\n  #defaultConditions = getDefaultConditions();\n\n  /**\n   * Registry of resolved specifiers\n   */\n  #resolveCache = newResolveCache();\n\n  /**\n   * Registry of loaded modules\x2C akin to `require.cache`\n   */\n  loadCache = newLoadCache();\n\n  /**\n   * Methods which translate input code or other information into ES modules\n   */\n  translators = getTranslators();\n\n  /**\n   * Truthy to allow the use of `import.meta.resolve`. This is needed\n   * currently because the `Hooks` class does not have `resolveSync`\n   * implemented and `import.meta.resolve` requires it.\n   */\n  allowImportMetaResolve;\n\n  /**\n   * Customizations to pass requests to.\n   *\n   * Note that this value _MUST_ be set with `setCustomizations`\n   * because it needs to copy `customizations.allowImportMetaResolve`\n   *  to this property and failure to do so will cause undefined\n   * behavior when invoking `import.meta.resolve`.\n   * @see {ModuleLoader.setCustomizations}\n   */\n  #customizations;\n\n  constructor(customizations) {\n    this.setCustomizations(customizations);\n  }\n\n  /**\n   * Change the currently activate customizations for this module\n   * loader to be the provided `customizations`.\n   *\n   * If present\x2C this class customizes its core functionality to the\n   * `customizations` object\x2C including registration\x2C loading\x2C and resolving.\n   * There are some responsibilities that this class _always_ takes\n   * care of\x2C like validating outputs\x2C so that the customizations object\n   * does not have to do so.\n   *\n   * The customizations object has the shape:\n   *\n   * ```ts\n   * interface LoadResult {\n   *   format: ModuleFormat;\n   *   source: ModuleSource;\n   * }\n   *\n   * interface ResolveResult {\n   *   format: string;\n   *   url: URL['href'];\n   * }\n   *\n   * interface Customizations {\n   *   allowImportMetaResolve: boolean;\n   *   load(url: string\x2C context: object): Promise<LoadResult>\n   *   resolve(\n   *     originalSpecifier:\n   *     string\x2C parentURL: string\x2C\n   *     importAttributes: Record<string\x2C string>\n   *   ): Promise<ResolveResult>\n   *   resolveSync(\n   *     originalSpecifier:\n   *     string\x2C parentURL: string\x2C\n   *     importAttributes: Record<string\x2C string>\n   *   ) ResolveResult;\n   *   register(specifier: string\x2C parentURL: string): any;\n   *   forceLoadHooks(): void;\n   * }\n   * ```\n   *\n   * Note that this class _also_ implements the `Customizations`\n   * interface\x2C as does `CustomizedModuleLoader` and `Hooks`.\n   *\n   * Calling this function alters how modules are loaded and should be\n   * invoked with care.\n   * @param {object} customizations\n   */\n  setCustomizations(customizations) {\n    this.#customizations = customizations;\n    if (customizations) {\n      this.allowImportMetaResolve = customizations.allowImportMetaResolve;\n    } else {\n      this.allowImportMetaResolve = true;\n    }\n  }\n\n  async eval(source\x2C url\x2C isEntryPoint = false) {\n    const { ModuleJob } = require('internal/modules/esm/module_job');\n    const wrap = compileSourceTextModule(url\x2C source\x2C this);\n    const module = await onImport.tracePromise(async () => {\n      const job = new ModuleJob(\n        this\x2C url\x2C undefined\x2C wrap\x2C false\x2C false);\n      this.loadCache.set(url\x2C undefined\x2C job);\n      const { module } = await job.run(isEntryPoint);\n      return module;\n    }\x2C {\n      __proto__: null\x2C\n      parentURL: '<eval>'\x2C\n      url\x2C\n    });\n\n    return {\n      __proto__: null\x2C\n      namespace: module.getNamespace()\x2C\n      module\x2C\n    };\n  }\n\n  /**\n   * Get a (possibly not yet fully linked) module job from the cache\x2C or create one and return its Promise.\n   * @param {string} specifier The module request of the module to be resolved. Typically\x2C what's\n   *                           requested by `import '<specifier>'` or `import('<specifier>')`.\n   * @param {string} [parentURL] The URL of the module where the module request is initiated.\n   *                             It's undefined if it's from the root module.\n   * @param {ImportAttributes} importAttributes Attributes from the import statement or expression.\n   * @returns {Promise<ModuleJobBase}\n   */\n  async getModuleJobForImport(specifier\x2C parentURL\x2C importAttributes) {\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAttributes);\n    return this.#getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C false);\n  }\n\n  /**\n   * Similar to {@link getModuleJobForImport} but it's used for `require()` resolved by the ESM loader\n   * in imported CJS modules. This runs synchronously and when it returns\x2C the module job's module\n   * requests are all linked.\n   * @param {string} specifier See {@link getModuleJobForImport}\n   * @param {string} [parentURL] See {@link getModuleJobForImport}\n   * @param {ImportAttributes} importAttributes See {@link getModuleJobForImport}\n   * @returns {Promise<ModuleJobBase}\n   */\n  getModuleJobForRequireInImportedCJS(specifier\x2C parentURL\x2C importAttributes) {\n    const resolveResult = this.resolveSync(specifier\x2C parentURL\x2C importAttributes);\n    return this.#getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C true);\n  }\n\n  /**\n   * Given a resolved module request\x2C obtain a ModuleJobBase from it - if it's already cached\x2C\n   * return the cached ModuleJobBase. Otherwise\x2C load its source and translate it into a ModuleWrap first.\n   * @param {{ format: string\x2C url: string }} resolveResult Resolved module request.\n   * @param {string} [parentURL] See {@link getModuleJobForImport}\n   * @param {ImportAttributes} importAttributes See {@link getModuleJobForImport}\n   * @param {boolean} isForRequireInImportedCJS Whether this is done for require() in imported CJS.\n   * @returns {ModuleJobBase}\n   */\n  #getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C isForRequireInImportedCJS = false) {\n    const { url\x2C format } = resolveResult;\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\n\n    if (job === undefined) {\n      job = this.#createModuleJob(url\x2C resolvedImportAttributes\x2C parentURL\x2C format\x2C isForRequireInImportedCJS);\n    }\n\n    return job;\n  }\n\n  /**\n   * This constructs (creates\x2C instantiates and evaluates) a module graph that\n   * is require()'d.\n   * @param {CJSModule} mod CJS module wrapper of the ESM.\n   * @param {string} filename Resolved filename of the module being require()'d\n   * @param {string} source Source code. TODO(joyeecheung): pass the raw buffer.\n   * @param {string} isMain Whether this module is a main module.\n   * @param {CJSModule|undefined} parent Parent module\x2C if any.\n   * @returns {{wrap: ModuleWrap\x2C namespace: ModuleNamespaceObject}}\n   */\n  importSyncForRequire(mod\x2C filename\x2C source\x2C isMain\x2C parent) {\n    const url = pathToFileURL(filename).href;\n    let job = this.loadCache.get(url\x2C kImplicitTypeAttribute);\n    // This module job is already created:\n    // 1. If it was loaded by `require()` before\x2C at this point the instantiation\n    //    is already completed and we can check the whether it is in a cycle\n    //    (in that case the module status is kEvaluaing)\x2C and whether the\n    //    required graph is synchronous.\n    // 2. If it was loaded by `import` before\x2C only allow it if it's already evaluated\n    //    to forbid cycles.\n    //    TODO(joyeecheung): ensure that imported synchronous graphs are evaluated\n    //    synchronously so that any previously imported synchronous graph is already\n    //    evaluated at this point.\n    if (job !== undefined) {\n      mod[kRequiredModuleSymbol] = job.module;\n      if (job.module.async) {\n        throw new ERR_REQUIRE_ASYNC_MODULE();\n      }\n      if (job.module.getStatus() !== kEvaluated) {\n        const parentFilename = urlToFilename(parent?.filename);\n        let message = `Cannot require() ES Module ${filename} in a cycle.`;\n        if (parentFilename) {\n          message += ` (from ${parentFilename})`;\n        }\n        throw new ERR_REQUIRE_CYCLE_MODULE(message);\n      }\n      return { wrap: job.module\x2C namespace: job.module.getNamespaceSync() };\n    }\n    // TODO(joyeecheung): refactor this so that we pre-parse in C++ and hit the\n    // cache here\x2C or use a carrier object to carry the compiled module script\n    // into the constructor to ensure cache hit.\n    const wrap = compileSourceTextModule(url\x2C source\x2C this);\n    const inspectBrk = (isMain && getOptionValue('--inspect-brk'));\n\n    const { ModuleJobSync } = require('internal/modules/esm/module_job');\n    job = new ModuleJobSync(this\x2C url\x2C kEmptyObject\x2C wrap\x2C isMain\x2C inspectBrk);\n    this.loadCache.set(url\x2C kImplicitTypeAttribute\x2C job);\n    mod[kRequiredModuleSymbol] = job.module;\n    return { wrap: job.module\x2C namespace: job.runSync().namespace };\n  }\n\n  /**\n   * Resolve individual module requests and create or get the cached ModuleWraps for\n   * each of them. This is only used to create a module graph being require()'d.\n   * @param {string} specifier Specifier of the the imported module.\n   * @param {string} parentURL Where the import comes from.\n   * @param {object} importAttributes import attributes from the import statement.\n   * @returns {ModuleJobBase}\n   */\n  getModuleJobForRequire(specifier\x2C parentURL\x2C importAttributes) {\n    const parsed = URLParse(specifier);\n    if (parsed != null) {\n      const protocol = parsed.protocol;\n      if (protocol === 'https:' || protocol === 'http:') {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(specifier\x2C parentURL\x2C\n                                                'ES modules cannot be loaded by require() from the network');\n      }\n      assert(protocol === 'file:' || protocol === 'node:' || protocol === 'data:');\n    }\n\n    // TODO(joyeecheung): consolidate cache behavior and use resolveSync() and\n    // loadSync() here.\n    const resolveResult = this.#cachedDefaultResolve(specifier\x2C parentURL\x2C importAttributes);\n    const { url\x2C format } = resolveResult;\n    if (!getOptionValue('--experimental-require-module')) {\n      throw new ERR_REQUIRE_ESM(url\x2C true);\n    }\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\n    if (job !== undefined) {\n      // This module is being evaluated\x2C which means it's imported in a previous link\n      // in a cycle.\n      if (job.module.getStatus() === kEvaluating) {\n        const parentFilename = urlToFilename(parentURL);\n        let message = `Cannot import Module ${specifier} in a cycle.`;\n        if (parentFilename) {\n          message += ` (from ${parentFilename})`;\n        }\n        throw new ERR_REQUIRE_CYCLE_MODULE(message);\n      }\n      // Otherwise the module could be imported before but the evaluation may be already\n      // completed (e.g. the require call is lazy) so it's okay. We will return the\n      // module now and check asynchronicity of the entire graph later\x2C after the\n      // graph is instantiated.\n      return job;\n    }\n\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\n    const loadResult = defaultLoadSync(url\x2C { format\x2C importAttributes });\n\n    // Use the synchronous commonjs translator which can deal with cycles.\n    const finalFormat = loadResult.format === 'commonjs' ? 'commonjs-sync' : loadResult.format;\n\n    if (finalFormat === 'wasm') {\n      assert.fail('WASM is currently unsupported by require(esm)');\n    }\n\n    const { source } = loadResult;\n    const isMain = (parentURL === undefined);\n    const wrap = this.#translate(url\x2C finalFormat\x2C source\x2C isMain);\n    assert(wrap instanceof ModuleWrap\x2C `Translator used for require(${url}) should not be async`);\n\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\n      process.send({ 'watch:import': [url] });\n    }\n\n    const cjsModule = wrap[imported_cjs_symbol];\n    if (cjsModule) {\n      assert(finalFormat === 'commonjs-sync');\n      // Check if the ESM initiating import CJS is being required by the same CJS module.\n      if (cjsModule?.[kIsExecuting]) {\n        const parentFilename = urlToFilename(parentURL);\n        let message = `Cannot import CommonJS Module ${specifier} in a cycle.`;\n        if (parentFilename) {\n          message += ` (from ${parentFilename})`;\n        }\n        throw new ERR_REQUIRE_CYCLE_MODULE(message);\n      }\n    }\n\n    const inspectBrk = (isMain && getOptionValue('--inspect-brk'));\n    const { ModuleJobSync } = require('internal/modules/esm/module_job');\n    job = new ModuleJobSync(this\x2C url\x2C importAttributes\x2C wrap\x2C isMain\x2C inspectBrk);\n\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\n    return job;\n  }\n\n  /**\n   * Translate a loaded module source into a ModuleWrap. This is run synchronously\x2C\n   * but the translator may return the ModuleWrap in a Promise.\n   * @param {string} url URL of the module to be translated.\n   * @param {string} format Format of the module to be translated. This is used to find\n   *                        matching translators.\n   * @param {ModuleSource} source Source of the module to be translated.\n   * @param {boolean} isMain Whether the module to be translated is the entry point.\n   * @returns {ModuleWrap | Promise<ModuleWrap>}\n   */\n  #translate(url\x2C format\x2C source\x2C isMain) {\n    this.validateLoadResult(url\x2C format);\n    const translator = getTranslators().get(format);\n\n    if (!translator) {\n      throw new ERR_UNKNOWN_MODULE_FORMAT(format\x2C url);\n    }\n\n    return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\n  }\n\n  /**\n   * Load a module and translate it into a ModuleWrap for require() in imported CJS.\n   * This is run synchronously\x2C and the translator always return a ModuleWrap synchronously.\n   * @param {string} url URL of the module to be translated.\n   * @param {object} loadContext See {@link load}\n   * @param {boolean} isMain Whether the module to be translated is the entry point.\n   * @returns {ModuleWrap}\n   */\n  loadAndTranslateForRequireInImportedCJS(url\x2C loadContext\x2C isMain) {\n    const { format: formatFromLoad\x2C source } = this.#loadSync(url\x2C loadContext);\n\n    if (formatFromLoad === 'wasm') {  // require(wasm) is not supported.\n      throw new ERR_UNKNOWN_MODULE_FORMAT(formatFromLoad\x2C url);\n    }\n\n    if (formatFromLoad === 'module' || formatFromLoad === 'module-typescript') {\n      if (!getOptionValue('--experimental-require-module')) {\n        throw new ERR_REQUIRE_ESM(url\x2C true);\n      }\n    }\n\n    let finalFormat = formatFromLoad;\n    if (formatFromLoad === 'commonjs') {\n      finalFormat = 'require-commonjs';\n    }\n    if (formatFromLoad === 'commonjs-typescript') {\n      finalFormat = 'require-commonjs-typescript';\n    }\n\n    const wrap = this.#translate(url\x2C finalFormat\x2C source\x2C isMain);\n    assert(wrap instanceof ModuleWrap\x2C `Translator used for require(${url}) should not be async`);\n    return wrap;\n  }\n\n  /**\n   * Load a module and translate it into a ModuleWrap for ordinary imported ESM.\n   * This is run asynchronously.\n   * @param {string} url URL of the module to be translated.\n   * @param {object} loadContext See {@link load}\n   * @param {boolean} isMain Whether the module to be translated is the entry point.\n   * @returns {Promise<ModuleWrap>}\n   */\n  async loadAndTranslate(url\x2C loadContext\x2C isMain) {\n    const { format\x2C source } = await this.load(url\x2C loadContext);\n    return this.#translate(url\x2C format\x2C source\x2C isMain);\n  }\n\n  /**\n   * Load a module and translate it into a ModuleWrap\x2C and create a ModuleJob from it.\n   * This runs synchronously. If isForRequireInImportedCJS is true\x2C the module should be linked\n   * by the time this returns. Otherwise it may still have pending module requests.\n   * @param {string} url The URL that was resolved for this module.\n   * @param {ImportAttributes} importAttributes See {@link getModuleJobForImport}\n   * @param {string} [parentURL] See {@link getModuleJobForImport}\n   * @param {string} [format] The format hint possibly returned by the `resolve` hook\n   * @param {boolean} isForRequireInImportedCJS Whether this module job is created for require()\n   *                                            in imported CJS.\n   * @returns {ModuleJobBase} The (possibly pending) module job\n   */\n  #createModuleJob(url\x2C importAttributes\x2C parentURL\x2C format\x2C isForRequireInImportedCJS) {\n    const context = { format\x2C importAttributes };\n\n    const isMain = parentURL === undefined;\n    let moduleOrModulePromise;\n    if (isForRequireInImportedCJS) {\n      moduleOrModulePromise = this.loadAndTranslateForRequireInImportedCJS(url\x2C context\x2C isMain);\n    } else {\n      moduleOrModulePromise = this.loadAndTranslate(url\x2C context\x2C isMain);\n    }\n\n    const inspectBrk = (\n      isMain &&\n      getOptionValue('--inspect-brk')\n    );\n\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\n      process.send({ 'watch:import': [url] });\n    }\n\n    const { ModuleJob } = require('internal/modules/esm/module_job');\n    const job = new ModuleJob(\n      this\x2C\n      url\x2C\n      importAttributes\x2C\n      moduleOrModulePromise\x2C\n      isMain\x2C\n      inspectBrk\x2C\n      isForRequireInImportedCJS\x2C\n    );\n\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\n\n    return job;\n  }\n\n  /**\n   * This method is usually called indirectly as part of the loading processes.\n   * Use directly with caution.\n   * @param {string} specifier The first parameter of an `import()` expression.\n   * @param {string} parentURL Path of the parent importing the module.\n   * @param {Record<string\x2C string>} importAttributes Validations for the\n   *                                                  module import.\n   * @returns {Promise<ModuleExports>}\n   */\n  async import(specifier\x2C parentURL\x2C importAttributes\x2C isEntryPoint = false) {\n    return onImport.tracePromise(async () => {\n      const moduleJob = await this.getModuleJobForImport(specifier\x2C parentURL\x2C importAttributes);\n      const { module } = await moduleJob.run(isEntryPoint);\n      return module.getNamespace();\n    }\x2C {\n      __proto__: null\x2C\n      parentURL\x2C\n      url: specifier\x2C\n    });\n  }\n\n  /**\n   * @see {@link CustomizedModuleLoader.register}\n   */\n  register(specifier\x2C parentURL\x2C data\x2C transferList\x2C isInternal) {\n    if (!this.#customizations) {\n      // `CustomizedModuleLoader` is defined at the bottom of this file and\n      // available well before this line is ever invoked. This is here in\n      // order to preserve the git diff instead of moving the class.\n      // eslint-disable-next-line no-use-before-define\n      this.setCustomizations(new CustomizedModuleLoader());\n    }\n    return this.#customizations.register(`${specifier}`\x2C `${parentURL}`\x2C data\x2C transferList\x2C isInternal);\n  }\n\n  /**\n   * Resolve a module request to a URL identifying the location of the module. Handles customization hooks\x2C\n   * if any.\n   * @param {string|URL} specifier The module request of the module to be resolved. Typically\x2C what's\n   *                               requested by `import specifier`\x2C `import(specifier)` or\n   *                               `import.meta.resolve(specifier)`.\n   * @param {string} [parentURL] The URL of the module where the module request is initiated.\n   *                             It's undefined if it's from the root module.\n   * @param {ImportAttributes} importAttributes Attributes from the import statement or expression.\n   * @returns {Promise<{format: string\x2C url: string}>}\n   */\n  resolve(specifier\x2C parentURL\x2C importAttributes) {\n    specifier = `${specifier}`;\n    if (this.#customizations) {  // Only has module.register hooks.\n      return this.#customizations.resolve(specifier\x2C parentURL\x2C importAttributes);\n    }\n    return this.#cachedDefaultResolve(specifier\x2C parentURL\x2C importAttributes);\n  }\n\n  /**\n   * Either return a cached resolution\x2C or perform the default resolution which is synchronous\x2C and\n   * cache the result.\n   * @param {string} specifier See {@link resolve}.\n   * @param {string} [parentURL] See {@link resolve}.\n   * @param {ImportAttributes} importAttributes See {@link resolve}.\n   * @returns {{ format: string\x2C url: string }}\n   */\n  #cachedDefaultResolve(specifier\x2C parentURL\x2C importAttributes) {\n    const requestKey = this.#resolveCache.serializeKey(specifier\x2C importAttributes);\n    const cachedResult = this.#resolveCache.get(requestKey\x2C parentURL);\n    if (cachedResult != null) {\n      return cachedResult;\n    }\n    const result = this.defaultResolve(specifier\x2C parentURL\x2C importAttributes);\n    this.#resolveCache.set(requestKey\x2C parentURL\x2C result);\n    return result;\n  }\n\n  /**\n   * This is the default resolve step for future synchronous hooks\x2C which incorporates asynchronous hooks\n   * from module.register() which are run in a blocking fashion for it to be synchronous.\n   * @param {string|URL} specifier See {@link resolveSync}.\n   * @param {{ parentURL?: string\x2C importAttributes: ImportAttributes}} context See {@link resolveSync}.\n   * @returns {{ format: string\x2C url: string }}\n   */\n  #resolveAndMaybeBlockOnLoaderThread(specifier\x2C context) {\n    if (this.#customizations) {\n      return this.#customizations.resolveSync(specifier\x2C context.parentURL\x2C context.importAttributes);\n    }\n    return this.#cachedDefaultResolve(specifier\x2C context.parentURL\x2C context.importAttributes);\n  }\n\n  /**\n   * Similar to {@link resolve}\x2C but the results are always synchronously returned. If there are any\n   * asynchronous resolve hooks from module.register()\x2C it will block until the results are returned\n   * from the loader thread for this to be synchornous.\n   * This is here to support `import.meta.resolve()`\x2C `require()` in imported CJS\x2C and\n   * future synchronous hooks.\n   *\n   * TODO(joyeecheung): consolidate the cache behavior and use this in require(esm).\n   * @param {string|URL} specifier See {@link resolve}.\n   * @param {string} [parentURL] See {@link resolve}.\n   * @param {ImportAttributes} [importAttributes] See {@link resolve}.\n   * @returns {{ format: string\x2C url: string }}\n   */\n  resolveSync(specifier\x2C parentURL\x2C importAttributes = { __proto__: null }) {\n    return this.#resolveAndMaybeBlockOnLoaderThread(`${specifier}`\x2C { parentURL\x2C importAttributes });\n  }\n\n  /**\n   * Our `defaultResolve` is synchronous and can be used in both\n   * `resolve` and `resolveSync`. This function is here just to avoid\n   * repeating the same code block twice in those functions.\n   */\n  defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\n    defaultResolve ??= require('internal/modules/esm/resolve').defaultResolve;\n\n    const context = {\n      __proto__: null\x2C\n      conditions: this.#defaultConditions\x2C\n      importAttributes\x2C\n      parentURL\x2C\n    };\n\n    return defaultResolve(originalSpecifier\x2C context);\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators. Handles customization hooks\x2C\n   * if any.\n   * @param {string} url The URL of the module to be loaded.\n   * @param {object} context Metadata about the module\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\n   */\n  async load(url\x2C context) {\n    if (this.#customizations) {\n      return this.#customizations.load(url\x2C context);\n    }\n\n    defaultLoad ??= require('internal/modules/esm/load').defaultLoad;\n    return defaultLoad(url\x2C context);\n  }\n\n  /**\n   * This is the default load step for future synchronous hooks\x2C which incorporates asynchronous hooks\n   * from module.register() which are run in a blocking fashion for it to be synchronous.\n   * @param {string} url See {@link load}\n   * @param {object} context See {@link load}\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\n   */\n  #loadAndMaybeBlockOnLoaderThread(url\x2C context) {\n    if (this.#customizations) {\n      return this.#customizations.loadSync(url\x2C context);\n    }\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\n    return defaultLoadSync(url\x2C context);\n  }\n\n  /**\n   * Similar to {@link load} but this is always run synchronously. If there are asynchronous hooks\n   * from module.register()\x2C this blocks on the loader thread for it to return synchronously.\n   *\n   * This is here to support `require()` in imported CJS and future synchronous hooks.\n   *\n   * TODO(joyeecheung): consolidate the cache behavior and use this in require(esm).\n   * @param {string} url See {@link load}\n   * @param {object} [context] See {@link load}\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\n   */\n  #loadSync(url\x2C context) {\n    return this.#loadAndMaybeBlockOnLoaderThread(url\x2C context);\n  }\n\n  validateLoadResult(url\x2C format) {\n    if (format == null) {\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\n    }\n  }\n\n  importMetaInitialize(meta\x2C context) {\n    if (this.#customizations) {\n      return this.#customizations.importMetaInitialize(meta\x2C context\x2C this);\n    }\n    importMetaInitializer ??= require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\n    meta = importMetaInitializer(meta\x2C context\x2C this);\n    return meta;\n  }\n\n  /**\n   * No-op when no hooks have been supplied.\n   */\n  forceLoadHooks() {\n    this.#customizations?.forceLoadHooks();\n  }\n}\nObjectSetPrototypeOf(ModuleLoader.prototype\x2C null);\n\nclass CustomizedModuleLoader {\n\n  allowImportMetaResolve = true;\n\n  /**\n   * Instantiate a module loader that uses user-provided custom loader hooks.\n   */\n  constructor() {\n    getHooksProxy();\n  }\n\n  /**\n   * Register some loader specifier.\n   * @param {string} originalSpecifier The specified URL path of the loader to\n   *                                   be registered.\n   * @param {string} parentURL The parent URL from where the loader will be\n   *                           registered if using it package name as specifier\n   * @param {any} [data] Arbitrary data to be passed from the custom loader\n   * (user-land) to the worker.\n   * @param {any[]} [transferList] Objects in `data` that are changing ownership\n   * @param {boolean} [isInternal] For internal loaders that should not be publicly exposed.\n   * @returns {{ format: string\x2C url: URL['href'] }}\n   */\n  register(originalSpecifier\x2C parentURL\x2C data\x2C transferList\x2C isInternal) {\n    return hooksProxy.makeSyncRequest('register'\x2C transferList\x2C originalSpecifier\x2C parentURL\x2C data\x2C isInternal);\n  }\n\n  /**\n   * Resolve the location of the module.\n   * @param {string} originalSpecifier The specified URL path of the module to\n   *                                   be resolved.\n   * @param {string} [parentURL] The URL path of the module's parent.\n   * @param {ImportAttributes} importAttributes Attributes from the import\n   *                                            statement or expression.\n   * @returns {{ format: string\x2C url: URL['href'] }}\n   */\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\n    return hooksProxy.makeAsyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\n  }\n\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\n    // This happens only as a result of `import.meta.resolve` calls\x2C which must be sync per spec.\n    return hooksProxy.makeSyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators.\n   * @param {URL['href']} url The URL/path of the module to be loaded\n   * @param {object} [context] Metadata about the module\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\n   */\n  load(url\x2C context) {\n    return hooksProxy.makeAsyncRequest('load'\x2C undefined\x2C url\x2C context);\n  }\n  loadSync(url\x2C context) {\n    return hooksProxy.makeSyncRequest('load'\x2C undefined\x2C url\x2C context);\n  }\n\n  importMetaInitialize(meta\x2C context\x2C loader) {\n    hooksProxy.importMetaInitialize(meta\x2C context\x2C loader);\n  }\n\n  forceLoadHooks() {\n    hooksProxy.waitForWorker();\n  }\n}\n\nlet emittedLoaderFlagWarning = false;\n/**\n * A loader instance is used as the main entry point for loading ES modules. Currently\x2C this is a singleton; there is\n * only one used for loading the main module and everything in its dependency graph\x2C though separate instances of this\n * class might be instantiated as part of bootstrap for other purposes.\n * @returns {ModuleLoader}\n */\nfunction createModuleLoader() {\n  let customizations = null;\n  // Don't spawn a new worker if custom loaders are disabled. For instance\x2C if\n  // we're already in a worker thread created by instantiating\n  // CustomizedModuleLoader; doing so would cause an infinite loop.\n  if (!forceDefaultLoader()) {\n    const userLoaderPaths = getOptionValue('--experimental-loader');\n    if (userLoaderPaths.length > 0) {\n      if (!emittedLoaderFlagWarning) {\n        const readableURIEncode = (string) => ArrayPrototypeReduce(\n          [\n            [/'/g\x2C '%27']\x2C // We need to URL-encode the single quote as it's the delimiter for the --import flag.\n            [/%22/g\x2C '"']\x2C // We can decode the double quotes to improve readability.\n            [/%2F/ig\x2C '/']\x2C // We can decode the slashes to improve readability.\n          ]\x2C\n          (str\x2C { 0: regex\x2C 1: replacement }) => RegExpPrototypeSymbolReplace(hardenRegExp(regex)\x2C str\x2C replacement)\x2C\n          encodeURIComponent(string));\n        process.emitWarning(\n          '`--experimental-loader` may be removed in the future; instead use `register()`:\\n' +\n          `--import 'data:text/javascript\x2Cimport { register } from "node:module"; import { pathToFileURL } from "node:url"; ${ArrayPrototypeJoin(\n            ArrayPrototypeMap(userLoaderPaths\x2C (loader) => `register(${readableURIEncode(JSONStringify(loader))}\x2C pathToFileURL("./"))`)\x2C\n            '; '\x2C\n          )};'`\x2C\n          'ExperimentalWarning'\x2C\n        );\n        emittedLoaderFlagWarning = true;\n      }\n      customizations = new CustomizedModuleLoader();\n    }\n  }\n\n  return new ModuleLoader(customizations);\n}\n\n\n/**\n * Get the HooksProxy instance. If it is not defined\x2C then create a new one.\n * @returns {HooksProxy}\n */\nfunction getHooksProxy() {\n  if (!hooksProxy) {\n    const { HooksProxy } = require('internal/modules/esm/hooks');\n    hooksProxy = new HooksProxy();\n  }\n\n  return hooksProxy;\n}\n\nlet cascadedLoader;\n\n/**\n * This is a singleton ESM loader that integrates the loader hooks\x2C if any.\n * It it used by other internal built-ins when they need to load ESM code\n * while also respecting hooks.\n * When built-ins need access to this loader\x2C they should do\n * require('internal/module/esm/loader').getOrInitializeCascadedLoader()\n * lazily only right before the loader is actually needed\x2C and don't do it\n * in the top-level\x2C to avoid circular dependencies.\n * @returns {ModuleLoader}\n */\nfunction getOrInitializeCascadedLoader() {\n  cascadedLoader ??= createModuleLoader();\n  return cascadedLoader;\n}\n\n/**\n * Register a single loader programmatically.\n * @param {string|URL} specifier\n * @param {string|URL} [parentURL] Base to use when resolving `specifier`; optional if\n * `specifier` is absolute. Same as `options.parentUrl`\x2C just inline\n * @param {object} [options] Additional options to apply\x2C described below.\n * @param {string|URL} [options.parentURL] Base to use when resolving `specifier`\n * @param {any} [options.data] Arbitrary data passed to the loader's `initialize` hook\n * @param {any[]} [options.transferList] Objects in `data` that are changing ownership\n * @returns {void} We want to reserve the return value for potential future extension of the API.\n * @example\n * ```js\n * register('./myLoader.js');\n * register('ts-node/esm'\x2C { parentURL: import.meta.url });\n * register('./myLoader.js'\x2C { parentURL: import.meta.url });\n * register('ts-node/esm'\x2C import.meta.url);\n * register('./myLoader.js'\x2C import.meta.url);\n * register(new URL('./myLoader.js'\x2C import.meta.url));\n * register('./myLoader.js'\x2C {\n *   parentURL: import.meta.url\x2C\n *   data: { banana: 'tasty' }\x2C\n * });\n * register('./myLoader.js'\x2C {\n *   parentURL: import.meta.url\x2C\n *   data: someArrayBuffer\x2C\n *   transferList: [someArrayBuffer]\x2C\n * });\n * ```\n */\nfunction register(specifier\x2C parentURL = undefined\x2C options) {\n  if (parentURL != null && typeof parentURL === 'object' && !isURL(parentURL)) {\n    options = parentURL;\n    parentURL = options.parentURL;\n  }\n  getOrInitializeCascadedLoader().register(\n    specifier\x2C\n    parentURL ?? 'data:'\x2C\n    options?.data\x2C\n    options?.transferList\x2C\n  );\n}\n\nmodule.exports = {\n  createModuleLoader\x2C\n  getHooksProxy\x2C\n  getOrInitializeCascadedLoader\x2C\n  register\x2C\n};\n
code-source-info,0x12ea98641d20,74,0,35495,C0O0C4O35495,,
code-creation,JS,9,51375,0x12ea986420c8,859, node:internal/modules/esm/loader:1:1,0x3564d12a76d0,~
code-source-info,0x12ea986420c
code-creation,JS,9,51417,0x12ea98642568,7,CustomizedModuleLoader node:internal/modules/esm/loader:727:30,0x3564d12a8538,~
code-source-info,0x12ea98642568,74,28291,30889,C0O28321C6O30889,,
code-creation,JS,9,51417,0x12ea98642600,74,ModuleLoader node:internal/modules/esm/loader:110:20,0x3564d12a8238,~
code-source-info,0x12ea98642600,74,3042,28208,C3O3153C10O3153C21O3245C26O3245C34O3348C39O3348C46O3470C51O3470C59O3698C67O4077C73O28208,,
tick,0x192562e24,51458,0,0x0,3,0x107f890bc,0x107f88e30,0x7769ed8b9a8,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,Eval,9,51917,0x12ea986426e0,5, node:internal/modules/esm/assert:1:1,0x3564d12a94d0,~
script-source,75,node:internal/modules/esm/assert,'use strict';\n\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n} = primordials;\nconst { validateString } = require('internal/validators');\n\nconst {\n  ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE\x2C\n  ERR_IMPORT_ATTRIBUTE_MISSING\x2C\n  ERR_IMPORT_ATTRIBUTE_UNSUPPORTED\x2C\n} = require('internal/errors').codes;\n\n// The HTML spec has an implied default type of `'javascript'`.\nconst kImplicitTypeAttribute = 'javascript';\n\n/**\n * Define a map of module formats to import attributes types (the value of\n * `type` in `with { type: 'json' }`).\n * @type {Map<string\x2C string>}\n */\nconst formatTypeMap = {\n  '__proto__': null\x2C\n  'builtin': kImplicitTypeAttribute\x2C\n  'commonjs': kImplicitTypeAttribute\x2C\n  'json': 'json'\x2C\n  'module': kImplicitTypeAttribute\x2C\n  'wasm': kImplicitTypeAttribute\x2C // It's unclear whether the HTML spec will require an type attribute or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\n};\n\n/**\n * The HTML spec disallows the default type to be explicitly specified\n * (for now); so `import './file.js'` is okay but\n * `import './file.js' with { type: 'javascript' }` throws.\n * @type {Array<string\x2C string>}\n */\nconst supportedTypeAttributes = ArrayPrototypeFilter(\n  ObjectValues(formatTypeMap)\x2C\n  (type) => type !== kImplicitTypeAttribute);\n\n\n/**\n * Test a module's import attributes.\n * @param {string} url The URL of the imported module\x2C for error reporting.\n * @param {string} format One of Node's supported translators\n * @param {Record<string\x2C string>} importAttributes Validations for the\n *                                                  module import.\n * @returns {true}\n * @throws {TypeError} If the format and type attribute are incompatible.\n */\nfunction validateAttributes(url\x2C format\x2C\n                            importAttributes = { __proto__: null }) {\n  const keys = ObjectKeys(importAttributes);\n  for (let i = 0; i < keys.length; i++) {\n    if (keys[i] !== 'type') {\n      throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED(keys[i]\x2C importAttributes[keys[i]]);\n    }\n  }\n  const validType = formatTypeMap[format];\n\n  switch (validType) {\n    case undefined:\n      // Ignore attributes for module formats we don't recognize\x2C to allow new\n      // formats in the future.\n      return true;\n\n    case kImplicitTypeAttribute:\n      // This format doesn't allow an import type attribute\x2C so the property\n      // must not be set on the import attributes object.\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\n        return true;\n      }\n      return handleInvalidType(url\x2C importAttributes.type);\n\n    case importAttributes.type:\n      // The type attribute is the valid type for this format.\n      return true;\n\n    default:\n      // There is an expected type for this format\x2C but the value of\n      // `importAttributes.type` might not have been it.\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\n        // `type` wasn't specified at all.\n        throw new ERR_IMPORT_ATTRIBUTE_MISSING(url\x2C 'type'\x2C validType);\n      }\n      return handleInvalidType(url\x2C importAttributes.type);\n  }\n}\n\n/**\n * Throw the correct error depending on what's wrong with the type attribute.\n * @param {string} url The resolved URL for the module to be imported\n * @param {string} type The value of the import attributes' `type` property\n */\nfunction handleInvalidType(url\x2C type) {\n  // `type` might have not been a string.\n  validateString(type\x2C 'type');\n\n  // `type` might not have been one of the types we understand.\n  if (!ArrayPrototypeIncludes(supportedTypeAttributes\x2C type)) {\n    throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED('type'\x2C type);\n  }\n\n  // `type` was the wrong value for this format.\n  throw new ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE(url\x2C type);\n}\n\n\nmodule.exports = {\n  kImplicitTypeAttribute\x2C\n  validateAttributes\x2C\n};\n
code-source-info,0x12ea986426e0,75,0,3875,C0O0C4O3875,,
code-creation,JS,9,52083,0x12ea98642820,201, node:internal/modules/esm/assert:1:1,0x3564d12a9648,~
code-source-info,0x12ea98642820,75,0,3875,C0O0C46O25C51O49C57O75C63O89C69O122C74O180C77O180C82O161C88O335C91O335C96O361C101O223C107O265C113O297C119O465C121O465C123O655C130O691C136O729C142O783C148O817C154O655C156O1246C159O1270C169O1246C174O1246C176O3805C183O3826C189O3852C195O3820C200O3874,,
code-creation,JS,9,52125,0x12ea986429b0,9, node:internal/modules/esm/assert:43:3,0x3564d12a9760,~
code-source-info,0x12ea986429b0,75,1301,1342,C0O1316C2O1320C4O1316C8O1342,,
tick,0x10176b9e0,52375,0,0x0,0,0x107f89188,0x107f88e30,0x7769ed8b9a8,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,JS,9,52458,0x12ea98642a38,19,getOrInitializeCascadedLoader node:internal/modules/esm/loader:861:39,0x3564d12a78f0,~
code-source-info,0x12ea98642a38,74,33726,33800,C0O33733C11O33752C14O33748C16O33776C18O33798,,
code-creation,JS,9,52500,0x12ea98642b50,158,createModuleLoader node:internal/modules/esm/loader:801:28,0x3564d12a7840,~
code-source-info,0x12ea98642b50,74,31300,32897,C0O31328C2O31546C7O31551C12O31603C20O31603C25O31668C31O31675C36O31688C49O31755C53O31755C55O32260C60O32268C75O32503C82O32535C85O32553C90O32535C99O32503C114O32375C121O32268C127O32748C128O32773C134O32795C139O32812C145O32855C152O32862C157O32895,,
code-creation,JS,9,52542,0x12ea98642ca8,36,ModuleLoader node:internal/modules/esm/loader:149:14,0x3564d12a7c08,~
code-source-info,0x12ea98642ca8,74,4108,4174,C5O4108C24O4136C29O4136C35O4173,,
code-creation,JS,9,52542,0x12ea98642d50,22,newResolveCache node:internal/modules/esm/loader:58:25,0x3564d12a7738,~
code-source-info,0x12ea98642d50,74,1604,1710,C0O1636C6O1636C11O1619C16O1689C21O1708,,
code-creation,Eval,9,52625,0x12ea98642de0,5, node:internal/modules/esm/module_map:1:1,0x3564d12ad260,~
script-source,76,node:internal/modules/esm/module_map,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypeSort\x2C\n  JSONStringify\x2C\n  ObjectKeys\x2C\n  SafeMap\x2C\n} = primordials;\nconst { kImplicitTypeAttribute } = require('internal/modules/esm/assert');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n/**\n * Cache the results of the `resolve` step of the module resolution and loading process.\n * Future resolutions of the same input (specifier\x2C parent URL and import attributes)\n * must return the same result if the first attempt was successful\x2C per\n * https://tc39.es/ecma262/#sec-HostLoadImportedModule.\n * This cache is *not* used when custom loaders are registered.\n */\nclass ResolveCache extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n\n  /**\n   * Generates the internal serialized cache key and returns it along the actual cache object.\n   *\n   * It is exposed to allow more efficient read and overwrite a cache entry.\n   * @param {string} specifier\n   * @param {Record<string\x2Cstring>} importAttributes\n   * @returns {string}\n   */\n  serializeKey(specifier\x2C importAttributes) {\n    // To serialize the ModuleRequest (specifier + list of import attributes)\x2C\n    // we need to sort the attributes by key\x2C then stringifying\x2C\n    // so that different import statements with the same attributes are always treated\n    // as identical.\n    const keys = ObjectKeys(importAttributes);\n\n    if (keys.length === 0) {\n      return specifier + '::';\n    }\n\n    return specifier + '::' + ArrayPrototypeJoin(\n      ArrayPrototypeMap(\n        ArrayPrototypeSort(keys)\x2C\n        (key) => JSONStringify(key) + JSONStringify(importAttributes[key]))\x2C\n      '\x2C');\n  }\n\n  #getModuleCachedImports(parentURL) {\n    let internalCache = super.get(parentURL);\n    if (internalCache == null) {\n      super.set(parentURL\x2C internalCache = { __proto__: null });\n    }\n    return internalCache;\n  }\n\n  /**\n   * @param {string} serializedKey\n   * @param {string} parentURL\n   * @returns {import('./loader').ModuleExports | Promise<import('./loader').ModuleExports>}\n   */\n  get(serializedKey\x2C parentURL) {\n    return this.#getModuleCachedImports(parentURL)[serializedKey];\n  }\n\n  /**\n   * @param {string} serializedKey\n   * @param {string} parentURL\n   * @param {{ format: string\x2C url: URL['href'] }} result\n   */\n  set(serializedKey\x2C parentURL\x2C result) {\n    this.#getModuleCachedImports(parentURL)[serializedKey] = result;\n    return this;\n  }\n\n  has(serializedKey\x2C parentURL) {\n    return serializedKey in this.#getModuleCachedImports(parentURL);\n  }\n}\n\n/**\n * Cache the results of the `load` step of the module resolution and loading process.\n */\nclass LoadCache extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url\x2C type = kImplicitTypeAttribute) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type];\n  }\n  set(url\x2C type = kImplicitTypeAttribute\x2C job) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n\n    const { ModuleJobBase } = require('internal/modules/esm/module_job');\n    if (job instanceof ModuleJobBase !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} (${\n      type === kImplicitTypeAttribute ? 'implicit type' : type\n    }) in ModuleLoadMap`);\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\n    cachedJobsForUrl[type] = job;\n    return super.set(url\x2C cachedJobsForUrl);\n  }\n  has(url\x2C type = kImplicitTypeAttribute) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type] !== undefined;\n  }\n  delete(url\x2C type = kImplicitTypeAttribute) {\n    const cached = super.get(url);\n    if (cached) {\n      cached[type] = undefined;\n    }\n  }\n}\n\nmodule.exports = {\n  LoadCache\x2C\n  ResolveCache\x2C\n};\n
code-source-info,0x12ea98642de0,76,0,4046,C0O0C4O4046,,
code-creation,JS,9,52792,0x12ea98642f78,304, node:internal/modules/esm/module_map:1:1,0x3564d12ad498,~
code-source-info,0x12ea98642f78,76,0,4046,C0O0C36O25C42O47C48O68C54O90C60O107C66O121C71O182C77O182C82O155C88O234C94O234C99O267C112O268C118O234C120O345C126O345C131O371C136O320C142O406C148O406C153O387C179O841C227O814C231O2835C279O3995C286O4016C292O4029C298O4010C303O4045,,
code-creation,JS,9,52833,0x12ea98643148,53,ResolveCache node:internal/modules/esm/module_map:26:14,0x3564d12ad5b0,~
code-source-info,0x12ea98643148,76,864,881,C3O870C27O870C52O880,,
code-creation,JS,9,52875,0x12ea98643200,22,newLoadCache node:internal/modules/esm/loader:67:22,0x3564d12a7790,~
code-source-info,0x12ea98643200,74,1885,1985,C0O1914C6O1914C11O1900C16O1967C21O1983,,
code-creation,JS,9,52875,0x12ea98643278,43,LoadCache node:internal/modules/esm/module_map:90:14,0x3564d12ad768,~
code-source-info,0x12ea98643278,76,2858,2875,C3O2864C27O2864C42O2874,,
code-creation,JS,9,52875,0x12ea98643328,17,getTranslators node:internal/modules/esm/loader:76:24,0x3564d12a77e8,~
code-source-info,0x12ea98643328,74,2170,2269,C0O2201C6O2201C11O2185C16O2267,,
code-creation,Eval,9,53458,0x12ea986433b8,5, node:internal/modules/esm/translators:1:1,0x3564d12aff70,~
script-source,77,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nconst {\n  compileFunctionForCJSLoader\x2C\n} = internalBinding('contextify');\n\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst assert = require('internal/assert');\nconst { readFileSync } = require('fs');\nconst { dirname\x2C extname\x2C isAbsolute } = require('path');\nconst {\n  assertBufferSource\x2C\n  loadBuiltinModule\x2C\n  stringify\x2C\n  stripTypeScriptTypes\x2C\n  stripBOM\x2C\n  urlToFilename\x2C\n} = require('internal/modules/helpers');\nconst {\n  kIsCachedByESMLoader\x2C\n  Module: CJSModule\x2C\n  wrapModuleLoad\x2C\n  kModuleSource\x2C\n  kModuleExport\x2C\n  kModuleExportNames\x2C\n} = require('internal/modules/cjs/loader');\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning\x2C kEmptyObject\x2C setOwnProperty\x2C isWindows } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\n\n// Lazy-loading to avoid circular dependencies.\nlet getSourceSync;\n/**\n * @param {Parameters<typeof import('./load').getSourceSync>[0]} url\n * @returns {ReturnType<typeof import('./load').getSourceSync>}\n */\nfunction getSource(url) {\n  getSourceSync ??= require('internal/modules/esm/load').getSourceSync;\n  return getSourceSync(url);\n}\n\n/** @type {import('deps/cjs-module-lexer/lexer.js').parse} */\nlet cjsParse;\n/**\n * Initializes the CommonJS module lexer parser using the JavaScript version.\n * TODO(joyeecheung): Use `require('internal/deps/cjs-module-lexer/dist/lexer').initSync()`\n * when cjs-module-lexer 1.4.0 is rolled in.\n */\nfunction initCJSParseSync() {\n  if (cjsParse === undefined) {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\n\n/**\n * Converts a URL to a file path if the URL protocol is 'file:'.\n * @param {string} url - The URL to convert.\n */\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C function moduleStrategy(url\x2C source\x2C isMain) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  source = stringify(source);\n  debug(`Translating StandardModule ${url}`);\n  const { compileSourceTextModule } = require('internal/modules/esm/utils');\n  const module = compileSourceTextModule(url\x2C source\x2C this);\n  return module;\n});\n\n/**\n * Loads a CommonJS module via the ESM Loader sync CommonJS translator.\n * This translator creates its own version of the `require` function passed into CommonJS modules.\n * Any monkey patches applied to the CommonJS Loader will not affect this module.\n * Any `require` calls in this module will load all children in the same way.\n * @param {import('internal/modules/cjs/loader').Module} module - The module to load.\n * @param {string} source - The source code of the module.\n * @param {string} url - The URL of the module.\n * @param {string} filename - The filename of the module.\n * @param {boolean} isMain - Whether the module is the entrypoint\n */\nfunction loadCJSModule(module\x2C source\x2C url\x2C filename\x2C isMain) {\n  const compileResult = compileFunctionForCJSLoader(source\x2C filename\x2C false /* is_sea_main */\x2C false);\n\n  const { function: compiledWrapper\x2C sourceMapURL } = compileResult;\n  // Cache the source map for the cjs module if present.\n  if (sourceMapURL) {\n    maybeCacheSourceMap(url\x2C source\x2C module\x2C false\x2C undefined\x2C sourceMapURL);\n  }\n\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  const __dirname = dirname(filename);\n  // eslint-disable-next-line func-name-matching\x2Cfunc-style\n  const requireFn = function require(specifier) {\n    let importAttributes = kEmptyObject;\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:') && !BuiltinModule.normalizeRequirableId(specifier)) {\n      // TODO: do not depend on the monkey-patchable CJS loader here.\n      const path = CJSModule._resolveFilename(specifier\x2C module);\n      switch (extname(path)) {\n        case '.json':\n          importAttributes = { __proto__: null\x2C type: 'json' };\n          break;\n        case '.node':\n          return wrapModuleLoad(specifier\x2C module);\n        default:\n            // fall through\n      }\n      specifier = `${pathToFileURL(path)}`;\n    }\n    const job = cascadedLoader.getModuleJobForRequireInImportedCJS(specifier\x2C url\x2C importAttributes);\n    job.runSync();\n    return cjsCache.get(job.url).exports;\n  };\n  setOwnProperty(requireFn\x2C 'resolve'\x2C function resolve(specifier) {\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\n      const path = CJSModule._resolveFilename(specifier\x2C module);\n      if (specifier !== path) {\n        specifier = `${pathToFileURL(path)}`;\n      }\n    }\n    const { url: resolvedURL } = cascadedLoader.resolveSync(specifier\x2C url\x2C kEmptyObject);\n    return urlToFilename(resolvedURL);\n  });\n  setOwnProperty(requireFn\x2C 'main'\x2C process.mainModule);\n\n  ReflectApply(compiledWrapper\x2C module.exports\x2C\n               [module.exports\x2C requireFn\x2C module\x2C filename\x2C __dirname]);\n  setOwnProperty(module\x2C 'loaded'\x2C true);\n}\n\n// TODO: can we use a weak map instead?\nconst cjsCache = new SafeMap();\n/**\n * Creates a ModuleWrap object for a CommonJS module.\n * @param {string} url - The URL of the module.\n * @param {string} source - The source code of the module.\n * @param {boolean} isMain - Whether the module is the main module.\n * @param {typeof loadCJSModule} [loadCJS=loadCJSModule] - The function to load the CommonJS module.\n * @returns {ModuleWrap} The ModuleWrap object for the CommonJS module.\n */\nfunction createCJSModuleWrap(url\x2C source\x2C isMain\x2C loadCJS = loadCJSModule) {\n  debug(`Translating CJSModule ${url}`);\n\n  const filename = urlToFilename(url);\n  // In case the source was not provided by the `load` step\x2C we need fetch it now.\n  source = stringify(source ?? getSource(new URL(url)).source);\n\n  const { exportNames\x2C module } = cjsPreparseModuleExports(filename\x2C source);\n  cjsCache.set(url\x2C module);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  if (isMain) {\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\n  }\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    if (!module.loaded) {\n      loadCJS(module\x2C source\x2C url\x2C filename\x2C !!isMain);\n    }\n\n    let exports;\n    if (module[kModuleExport] !== undefined) {\n      exports = module[kModuleExport];\n      module[kModuleExport] = undefined;\n    } else {\n      ({ exports } = module);\n    }\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default') {\n        continue;\n      }\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {\n        // Continue regardless of error.\n      }\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  }\x2C module);\n}\n\ntranslators.set('commonjs-sync'\x2C function requireCommonJS(url\x2C source\x2C isMain) {\n  initCJSParseSync();\n\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C (module\x2C source\x2C url\x2C filename\x2C isMain) => {\n    assert(module === CJSModule._cache[filename]);\n    wrapModuleLoad(filename\x2C null\x2C isMain);\n  });\n});\n\n// Handle CommonJS modules referenced by `require` calls.\n// This translator function must be sync\x2C as `require` is sync.\ntranslators.set('require-commonjs'\x2C (url\x2C source\x2C isMain) => {\n  initCJSParseSync();\n  assert(cjsParse);\n\n  return createCJSModuleWrap(url\x2C source);\n});\n\n// Handle CommonJS modules referenced by `require` calls.\n// This translator function must be sync\x2C as `require` is sync.\ntranslators.set('require-commonjs-typescript'\x2C (url\x2C source\x2C isMain) => {\n  emitExperimentalWarning('Type Stripping');\n  assert(cjsParse);\n  const code = stripTypeScriptTypes(stringify(source)\x2C url);\n  return createCJSModuleWrap(url\x2C code);\n});\n\n// Handle CommonJS modules referenced by `import` statements or expressions\x2C\n// or as the initial entry point when the ESM loader handles a CommonJS entry.\ntranslators.set('commonjs'\x2C function commonjsStrategy(url\x2C source\x2C isMain) {\n  if (!cjsParse) {\n    initCJSParseSync();\n  }\n\n  // For backward-compatibility\x2C it's possible to return a nullish value for\n  // CJS source associated with a file: URL. In this case\x2C the source is\n  // obtained by calling the monkey-patchable CJS loader.\n  const cjsLoader = source == null ? (module\x2C source\x2C url\x2C filename\x2C isMain) => {\n    assert(module === CJSModule._cache[filename]);\n    wrapModuleLoad(filename\x2C undefined\x2C isMain);\n  } : loadCJSModule;\n\n  try {\n    // We still need to read the FS to detect the exports.\n    source ??= readFileSync(new URL(url)\x2C 'utf8');\n  } catch {\n    // Continue regardless of error.\n  }\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C cjsLoader);\n});\n\n/**\n * Pre-parses a CommonJS module's exports and re-exports.\n * @param {string} filename - The filename of the module.\n * @param {string} [source] - The source code of the module.\n */\nfunction cjsPreparseModuleExports(filename\x2C source) {\n  // TODO: Do we want to keep hitting the user mutable CJS loader here?\n  let module = CJSModule._cache[filename];\n  if (module && module[kModuleExportNames] !== undefined) {\n    return { module\x2C exportNames: module[kModuleExportNames] };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    module[kIsCachedByESMLoader] = true;\n    module[kModuleSource] = source;\n    CJSModule._cache[filename] = module;\n  }\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  module[kModuleExportNames] = exportNames;\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    for (let i = 0; i < reexports.length; i++) {\n      const reexport = reexports[i];\n      let resolved;\n      try {\n        // TODO: this should be calling the `resolve` hook chain instead.\n        // Doing so would mean dropping support for CJS in the loader thread\x2C as\n        // this call needs to be sync from the perspective of the main thread\x2C\n        // which we can do via HooksProxy and Atomics\x2C but we can't do within\n        // the loaders thread. Until this is done\x2C the lexer will use the\n        // monkey-patchable CJS loader to get the path to the module file to\n        // load (which may or may not be aligned with the URL that the `resolve`\n        // hook have returned).\n        resolved = CJSModule._resolveFilename(reexport\x2C module);\n      } catch {\n        continue;\n      }\n      // TODO: this should be calling the `load` hook chain and check if it returns\n      // `format: 'commonjs'` instead of relying on file extensions.\n      const ext = extname(resolved);\n      if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n      isAbsolute(resolved)) {\n        // TODO: this should be calling the `load` hook chain to get the source\n        // (and fallback to reading the FS only if the source is nullish).\n        const source = readFileSync(resolved\x2C 'utf-8');\n        const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved\x2C source);\n        for (const name of reexportNames) {\n          exportNames.add(name);\n        }\n      }\n    }\n  }\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadBuiltinModule(id\x2C url);\n  cjsCache.set(url\x2C module);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C function jsonStrategy(url\x2C source) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  const shouldCheckAndPopulateCJSModuleCache =\n    // We want to involve the CJS loader cache only for `file:` URL with no search query and no hash.\n    pathname && !StringPrototypeIncludes(url\x2C '?') && !StringPrototypeIncludes(url\x2C '#');\n  let modulePath;\n  let module;\n  if (shouldCheckAndPopulateCJSModuleCache) {\n    modulePath = isWindows ?\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module?.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  source = stringify(source);\n  if (shouldCheckAndPopulateCJSModuleCache) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    // TODO: remove CJS loader from here as well.\n    module = CJSModule._cache[modulePath];\n    if (module?.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\x2C\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (shouldCheckAndPopulateCJSModuleCache) {\n    CJSModule._cache[modulePath] = module;\n  }\n  cjsCache.set(url\x2C module);\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url\x2C source) {\n  emitExperimentalWarning('Importing WebAssembly modules');\n\n  assertBufferSource(source\x2C false\x2C 'load');\n\n  debug(`Translating WASMModule ${url}`);\n\n  let compiled;\n  try {\n    // TODO(joyeecheung): implement a translator that just uses\n    // compiled = new WebAssembly.Module(source) to compile it\n    // synchronously.\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  const createDynamicModule = require(\n    'internal/modules/esm/create_dynamic_module');\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports)) {\n      reflect.exports[expt].set(exports[expt]);\n    }\n  }).module;\n});\n\n// Strategy for loading a commonjs TypeScript module\ntranslators.set('commonjs-typescript'\x2C function(url\x2C source) {\n  emitExperimentalWarning('Type Stripping');\n  assertBufferSource(source\x2C true\x2C 'load');\n  const code = stripTypeScriptTypes(stringify(source)\x2C url);\n  debug(`Translating TypeScript ${url}`);\n  return FunctionPrototypeCall(translators.get('commonjs')\x2C this\x2C url\x2C code\x2C false);\n});\n\n// Strategy for loading an esm TypeScript module\ntranslators.set('module-typescript'\x2C function(url\x2C source) {\n  emitExperimentalWarning('Type Stripping');\n  assertBufferSource(source\x2C true\x2C 'load');\n  const code = stripTypeScriptTypes(stringify(source)\x2C url);\n  debug(`Translating TypeScript ${url}`);\n  return FunctionPrototypeCall(translators.get('module')\x2C this\x2C url\x2C code\x2C false);\n});\n
code-source-info,0x12ea986433b8,77,0,16987,C0O0C4O16987,,
code-creation,JS,9,54083,0x12ea986436f8,871, node:internal/modules/esm/translators:1:1,0x3564d12b03b8,~
code-source-info,0x12ea986436f
tick,0x192400c00,54125,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9864332e,0x12ea98642633,0x12ea98642cb9,0x12ea98642be8,0x12ea98642a43,0x7769ed8b9b2,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,JS,9,54167,0x12ea98643be8,30,setCustomizations node:internal/modules/esm/loader:201:20,0x3564d12a7c60,~
code-source-info,0x12ea98643be8,74,5731,5958,C0O5754C5O5775C9O5797C13O5870C17O5853C23O5913C24O5941C29O5957,,
code-creation,JS,9,54167,0x12ea98643c88,22,forceLoadHooks node:internal/modules/esm/loader:721:17,0x3564d12a81e0,~
code-source-info,0x12ea98643c88,74,28154,28206,C0O28163C2O28168C8O28183C13O28185C21O28205,,
code-creation,JS,9,54208,0x12ea98643d88,156,import node:internal/modules/esm/loader:544:15,0x3564d12a7f20,~
code-source-info,0x12ea98643d88,74,20751,21139,C0O20751C85O20820C92O20836C109O21095C115O21117C119O20836C133O21135,,
code-creation,JS,9,54250,0x12ea98643f18,171,onImport.tracePromise.__proto__ node:internal/modules/esm/loader:545:34,0x3564d12b1018,~
code-source-info,0x12ea98643f18,74,20849,21062,C10O20849C18O20887C21O20898C28O20920C33O20931C38O20942C41O20898C54O20887C80O21002C87O21006C90O21002C103O20986C126O20975C131O21041C136O21041C148O21056,,
code-creation,JS,9,54250,0x12ea98644088,132,getModuleJobForImport node:internal/modules/esm/loader:241:30,0x3564d12a7d10,~
code-source-info,0x12ea98644088,74,7241,7466,C10O7241C18O7321C35O7321C48O7310C74O7374C76O7386C96O7410C109O7462,,
code-creation,JS,9,54292,0x12ea98644190,64,resolve node:internal/modules/esm/loader:581:10,0x3564d12a7fd0,~
code-source-info,0x12ea98644190,74,22485,22799,C0O22532C5O22564C7O22573C12O22634C14O22646C18O22662C32O22662C37O22710C38O22721C40O22733C58O22754C63O22795,,
code-creation,JS,9,54292,0x12ea98644278,93,#cachedDefaultResolve node:internal/modules/esm/loader:597:24,0x3564d12a7aa8,~
code-source-info,0x12ea98644278,74,23182,23608,C0O23248C2O23253C6O23267C11O23267C18O23335C20O23340C24O23354C29O23354C36O23386C39O23420C41O23440C42O23471C59O23471C65O23531C67O23536C71O23550C85O23550C90O23590C92O23604,,
code-creation,JS,9,54333,0x12ea986443b0,96,serializeKey node:internal/modules/esm/module_map:36:15,0x3564d12ad608,~
code-source-info,0x12ea986443b0,76,1239,1839,C0O1239C9O1540C19O1540C24O1584C30O1591C35O1606C37O1623C40O1630C41O1642C43O1659C51O1668C58O1694C65O1721C68O1721C78O1694C87O1668C92O1666C95O1835,,
code-creation,JS,9,54333,0x12ea98644490,26,get node:internal/modules/esm/module_map:67:6,0x3564d12ad660,~
code-source-info,0x12ea98644490,76,2237,2336,C0O2270C2O2282C14O2305C22O2316C25O2332,,
code-creation,JS,9,54375,0x12ea98644538,51,#getModuleCachedImports node:internal/modules/esm/module_map:54:26,0x3564d12ad558,~
code-source-info,0x12ea98644538,76,1866,2059,C0O1904C2O1910C13O1910C19O1930C22O1965C24O1971C29O1975C43O1971C48O2034C50O2055,,
code-creation,JS,9,54375,0x12ea98644620,71,defaultResolve node:internal/modules/esm/loader:644:17,0x3564d12a8080,~
code-source-info,0x12ea98644620,74,25448,25774,C0O25503C18O25522C23O25561C27O25518C31O25599C38O25647C47O25673C53O25697C60O25720C65O25727C70O25770,,
code-creation,Eval,9,54750,0x12ea986446f0,5, node:internal/modules/esm/resolve:1:1,0x3564d12b4bf0,~
script-source,78,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  JSONStringify\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  encodeURIComponent\x2C\n} = primordials;\nconst assert = require('internal/assert');\nconst internalFS = require('internal/fs/utils');\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst { realpathSync } = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst { sep\x2C posix: { relative: relativePosixPath }\x2C resolve } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst inputTypeFlag = getOptionValue('--input-type');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath\x2C isURL\x2C URLParse } = require('internal/url');\nconst { getCWDURL\x2C setOwnProperty } = require('internal/util');\nconst { canParse: URLCanParse } = internalBinding('url');\nconst { legacyMainResolve: FSLegacyMainResolve } = internalBinding('fs');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_UNSUPPORTED_RESOLVE_REQUEST\x2C\n} = require('internal/errors').codes;\n\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\nconst { getConditionsSet } = require('internal/modules/esm/utils');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst internalFsBinding = internalBinding('fs');\n\n/**\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\n */\n\n\nconst emittedPackageWarnings = new SafeSet();\n\n/**\n * Emits a deprecation warning for the use of a deprecated trailing slash pattern mapping in the "exports" field\n * module resolution of a package.\n * @param {string} match - The deprecated trailing slash pattern mapping.\n * @param {string} pjsonUrl - The URL of the package.json file.\n * @param {string} base - The URL of the module that imported the package.\n */\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\n  if (process.noDeprecation) {\n    return;\n  }\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) { return; }\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\n    `"exports" field module resolution of the package at ${pjsonPath}${\n      base ? ` imported from ${fileURLToPath(base)}` :\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0155'\x2C\n  );\n}\n\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\n\n/**\n * Emits a deprecation warning for invalid segment in module resolution.\n * @param {string} target - The target module.\n * @param {string} request - The requested module.\n * @param {string} match - The matched module.\n * @param {string} pjsonUrl - The package.json URL.\n * @param {boolean} internal - Whether the module is in the "imports" or "exports" field.\n * @param {string} base - The base URL.\n * @param {boolean} isTarget - Whether the target is a module.\n */\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\n  if (process.noDeprecation) {\n    return;\n  }\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\n  process.emitWarning(\n    `Use of deprecated ${double ? 'double slash' :\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0166'\x2C\n  );\n}\n\n/**\n * Emits a deprecation warning if the given URL is a module and\n * the package.json file does not define a "main" or "exports" field.\n * @param {URL} url - The URL of the module being resolved.\n * @param {string} path - The path of the module being resolved.\n * @param {string} pkgPath - The path of the parent dir of the package.json file for the module.\n * @param {string | URL} [base] - The base URL for the module being resolved.\n * @param {string} [main] - The "main" field from the package.json file.\n */\nfunction emitLegacyIndexDeprecation(url\x2C path\x2C pkgPath\x2C base\x2C main) {\n  if (process.noDeprecation) {\n    return;\n  }\n  const format = defaultGetFormatWithoutErrors(url);\n  if (format !== 'module') { return; }\n  const basePath = fileURLToPath(base);\n  if (!main) {\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\x2C\n    );\n  } else if (resolve(pkgPath\x2C main) !== path) {\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to "${main}"\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\x2C\n    );\n  }\n}\n\nconst realpathCache = new SafeMap();\n\nconst legacyMainResolveExtensions = [\n  ''\x2C\n  '.js'\x2C\n  '.json'\x2C\n  '.node'\x2C\n  '/index.js'\x2C\n  '/index.json'\x2C\n  '/index.node'\x2C\n  './index.js'\x2C\n  './index.json'\x2C\n  './index.node'\x2C\n];\n\nconst legacyMainResolveExtensionsIndexes = {\n  // 0-6: when packageConfig.main is defined\n  kResolvedByMain: 0\x2C\n  kResolvedByMainJs: 1\x2C\n  kResolvedByMainJson: 2\x2C\n  kResolvedByMainNode: 3\x2C\n  kResolvedByMainIndexJs: 4\x2C\n  kResolvedByMainIndexJson: 5\x2C\n  kResolvedByMainIndexNode: 6\x2C\n  // 7-9: when packageConfig.main is NOT defined\x2C\n  //      or when the previous case didn't found the file\n  kResolvedByPackageAndJs: 7\x2C\n  kResolvedByPackageAndJson: 8\x2C\n  kResolvedByPackageAndNode: 9\x2C\n};\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {import('typings/internalBinding/modules').PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  assert(isURL(packageJSONUrl));\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n\n  const baseStringified = isURL(base) ? base.href : base;\n\n  const resolvedOption = FSLegacyMainResolve(pkgPath\x2C packageConfig.main\x2C baseStringified);\n\n  const maybeMain = resolvedOption <= legacyMainResolveExtensionsIndexes.kResolvedByMainIndexNode ?\n    packageConfig.main || './' : '';\n  const resolvedPath = resolve(pkgPath\x2C maybeMain + legacyMainResolveExtensions[resolvedOption]);\n  const resolvedUrl = pathToFileURL(resolvedPath);\n\n  emitLegacyIndexDeprecation(resolvedUrl\x2C resolvedPath\x2C pkgPath\x2C base\x2C packageConfig.main);\n\n  return resolvedUrl;\n}\n\nconst encodedSepRegEx = /%2F|%5C/i;\n/**\n * Finalizes the resolution of a module specifier by checking if the resolved pathname contains encoded "/" or "\\\\"\n * characters\x2C checking if the resolved pathname is a directory or file\x2C and resolving any symlinks if necessary.\n * @param {URL} resolved - The resolved URL object.\n * @param {string | URL | undefined} base - The base URL object.\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks or not.\n * @returns {URL} - The finalized URL object.\n * @throws {ERR_INVALID_MODULE_SPECIFIER} - If the resolved pathname contains encoded "/" or "\\\\" characters.\n * @throws {ERR_UNSUPPORTED_DIR_IMPORT} - If the resolved pathname is a directory.\n * @throws {ERR_MODULE_NOT_FOUND} - If the resolved pathname is not a file.\n */\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null) {\n    let basePath;\n    try {\n      basePath = fileURLToPath(base);\n    } catch {\n      basePath = base;\n    }\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      basePath);\n  }\n\n  let path;\n  try {\n    path = fileURLToPath(resolved);\n  } catch (err) {\n    setOwnProperty(err\x2C 'input'\x2C `${resolved}`);\n    setOwnProperty(err\x2C 'module'\x2C `${base}`);\n    throw err;\n  }\n\n  const stats = internalFsBinding.internalModuleStat(\n    internalFsBinding\x2C\n    StringPrototypeEndsWith(internalFsBinding\x2C path\x2C '/') ? StringPrototypeSlice(path\x2C -1) : path\x2C\n  );\n\n  // Check for stats.isDirectory()\n  if (stats === 1) {\n    let basePath;\n    try {\n      basePath = fileURLToPath(base);\n    } catch {\n      basePath = base;\n    }\n    throw new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C basePath\x2C String(resolved));\n  } else if (stats !== 0) {\n    // Check for !stats.isFile()\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\n      process.send({ 'watch:require': [path || resolved.pathname] });\n    }\n    let basePath;\n    try {\n      basePath = fileURLToPath(base);\n    } catch {\n      basePath = base;\n    }\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C basePath\x2C resolved);\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(path\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\x2C\n    });\n    const { search\x2C hash } = resolved;\n    resolved =\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved;\n}\n\n/**\n * Returns an error object indicating that the specified import is not defined.\n * @param {string} specifier - The import specifier that is not defined.\n * @param {URL} packageJSONUrl - The URL of the package.json file\x2C or null if not available.\n * @param {string | URL | undefined} base - The base URL to use for resolving relative URLs.\n * @returns {ERR_PACKAGE_IMPORT_NOT_DEFINED} - The error object.\n */\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * Returns an error object indicating that the specified subpath was not exported by the package.\n * @param {string} subpath - The subpath that was not exported.\n * @param {URL} packageJSONUrl - The URL of the package.json file.\n * @param {string | URL | undefined} [base] - The base URL to use for resolving the subpath.\n * @returns {ERR_PACKAGE_PATH_NOT_EXPORTED} - The error object.\n */\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n * Throws an error indicating that the given request is not a valid subpath match for the specified pattern.\n * @param {string} request - The request that failed to match the pattern.\n * @param {string} match - The pattern that the request was compared against.\n * @param {URL} packageJSONUrl - The URL of the package.json file being resolved.\n * @param {boolean} internal - Whether the resolution is for an "imports" or "exports" field in package.json.\n * @param {string | URL | undefined} base - The base URL for the resolution.\n * @throws {ERR_INVALID_MODULE_SPECIFIER} When the request is not a valid match for the pattern.\n */\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid match in pattern "${match}" for the "${\n    internal ? 'imports' : 'exports'}" resolution of ${\n    fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\n/**\n * Creates an error object for an invalid package target.\n * @param {string} subpath - The subpath.\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target.\n * @param {URL} packageJSONUrl - The URL of the package.json file.\n * @param {boolean} internal - Whether the package is internal.\n * @param {string | URL | undefined} base - The base URL.\n * @returns {ERR_INVALID_PACKAGE_TARGET} - The error object.\n */\nfunction invalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  return new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\n\n/**\n * Resolves the package target string to a URL object.\n * @param {string} target - The target string to resolve.\n * @param {string} subpath - The subpath to append to the resolved URL.\n * @param {RegExpMatchArray} match - The matched string array from the import statement.\n * @param {string} packageJSONUrl - The URL of the package.json file.\n * @param {string} base - The base URL to resolve the target against.\n * @param {RegExp} pattern - The pattern to replace in the target string.\n * @param {boolean} internal - Whether the target is internal to the package.\n * @param {boolean} isPathMap - Whether the target is a path map.\n * @param {string[]} conditions - The import conditions.\n * @returns {URL} - The resolved URL object.\n * @throws {ERR_INVALID_PACKAGE_TARGET} - If the target is invalid.\n * @throws {ERR_INVALID_SUBPATH} - If the subpath is invalid.\n */\nfunction resolvePackageTargetString(\n  target\x2C\n  subpath\x2C\n  match\x2C\n  packageJSONUrl\x2C\n  base\x2C\n  pattern\x2C\n  internal\x2C\n  isPathMap\x2C\n  conditions\x2C\n) {\n\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/') {\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal &&\n        target[0] !== '/' &&\n        !StringPrototypeStartsWith(target\x2C '../')) {\n      // No need to convert target to string\x2C since it's already presumed to be\n      if (!URLCanParse(target)) {\n        const exportTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target + subpath;\n        return packageResolve(\n          exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\n      if (!isPathMap) {\n        const request = pattern ?\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\n          match + subpath;\n        const resolvedTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target;\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\n      }\n    } else {\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n    }\n  }\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath)) {\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (subpath === '') { return resolved; }\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\n      if (!isPathMap) {\n        const resolvedTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target;\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\n      }\n    } else {\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\n    }\n  }\n\n  if (pattern) {\n    return new URL(\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\x2C\n    );\n  }\n\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * Checks if the given key is a valid array index.\n * @param {string} key - The key to check.\n * @returns {boolean} - Returns `true` if the key is a valid array index\x2C else `false`.\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) { return false; }\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\n/**\n * Resolves the target of a package based on the provided parameters.\n * @param {string} packageJSONUrl - The URL of the package.json file.\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target to resolve.\n * @param {string} subpath - The subpath to resolve.\n * @param {string} packageSubpath - The subpath of the package to resolve.\n * @param {string} base - The base path to resolve.\n * @param {RegExp} pattern - The pattern to match.\n * @param {boolean} internal - Whether the package is internal.\n * @param {boolean} isPathMap - Whether the package is a path map.\n * @param {Set<string>} conditions - The conditions to match.\n * @returns {URL | null | undefined} - The resolved target\x2C or null if not found\x2C or undefined if not resolvable.\n */\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      isPathMap\x2C conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0) {\n      return null;\n    }\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C isPathMap\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\n          continue;\n        }\n        throw e;\n      }\n      if (resolveResult === undefined) {\n        continue;\n      }\n      if (resolveResult === null) {\n        lastException = null;\n        continue;\n      }\n      return resolveResult;\n    }\n    if (lastException == null) {\n      return lastException;\n    }\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\n        if (resolveResult === undefined) { continue; }\n        return resolveResult;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                             base);\n}\n\n/**\n * Is the given exports object using the shorthand syntax?\n * @param {import('internal/modules/esm/package_config.js').PackageConfig['exports']} exports\n * @param {URL} packageJSONUrl The URL of the package.json file.\n * @param {string | URL | undefined} base The base URL.\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) { return true; }\n  if (typeof exports !== 'object' || exports === null) { return false; }\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * Resolves the exports of a package.\n * @param {URL} packageJSONUrl - The URL of the package.json file.\n * @param {string} packageSubpath - The subpath of the package to resolve.\n * @param {import('internal/modules/esm/package_config.js').PackageConfig} packageConfig - The package metadata.\n * @param {string | URL | undefined} base - The base path to resolve from.\n * @param {Set<string>} conditions - An array of conditions to match.\n * @returns {URL} - The resolved package target.\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let { exports } = packageConfig;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base)) {\n    exports = { '.': exports };\n  }\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n    const target = exports[packageSubpath];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\n      conditions\x2C\n    );\n\n    if (resolveResult == null) {\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n\n    return resolveResult;\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath;\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n    if (patternIndex !== -1 &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\n      //\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n      //   throwInvalidSubpath(packageSubpath)\n      //\n      // To match "imports" and the spec.\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\n                                            base);\n      }\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n      if (packageSubpath.length >= key.length &&\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n        bestMatch = key;\n        bestMatchSubpath = StringPrototypeSlice(\n          packageSubpath\x2C patternIndex\x2C\n          packageSubpath.length - patternTrailer.length);\n      }\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C\n      target\x2C\n      bestMatchSubpath\x2C\n      bestMatch\x2C\n      base\x2C\n      true\x2C\n      false\x2C\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\n      conditions);\n\n    if (resolveResult == null) {\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n    return resolveResult;\n  }\n\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * Compares two strings that may contain a wildcard character ('*') and returns a value indicating their order.\n * @param {string} a - The first string to compare.\n * @param {string} b - The second string to compare.\n * @returns {number} - A negative number if `a` should come before `b`\x2C a positive number if `a` should come after `b`\x2C\n * or 0 if they are equal.\n */\nfunction patternKeyCompare(a\x2C b) {\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLenA > baseLenB) { return -1; }\n  if (baseLenB > baseLenA) { return 1; }\n  if (aPatternIndex === -1) { return 1; }\n  if (bPatternIndex === -1) { return -1; }\n  if (a.length > b.length) { return -1; }\n  if (b.length > a.length) { return 1; }\n  return 0;\n}\n\n/**\n * Resolves the given import name for a package.\n * @param {string} name - The name of the import to resolve.\n * @param {string | URL | undefined} base - The base URL to resolve the import from.\n * @param {Set<string>} conditions - An object containing the import conditions.\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the import name is not valid.\n * @throws {ERR_PACKAGE_IMPORT_NOT_DEFINED} If the import name cannot be resolved.\n * @returns {URL} The resolved import URL.\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\n      StringPrototypeEndsWith(name\x2C '/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = packageJsonReader.getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\n          !StringPrototypeIncludes(name\x2C '*')) {\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\n          conditions\x2C\n        );\n        if (resolveResult != null) {\n          return resolveResult;\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath;\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n          if (patternIndex !== -1 &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C\n                                                             patternIndex))) {\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n            if (name.length >= key.length &&\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n              bestMatch = key;\n              bestMatchSubpath = StringPrototypeSlice(\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\n            }\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\n                                                     bestMatchSubpath\x2C\n                                                     bestMatch\x2C base\x2C true\x2C\n                                                     true\x2C false\x2C conditions);\n          if (resolveResult != null) {\n            return resolveResult;\n          }\n        }\n      }\n    }\n  }\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * Parse a package name from a specifier.\n * @param {string} specifier - The import specifier.\n * @param {string | URL | undefined} base - The parent URL.\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null) {\n    validPackageName = false;\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * Resolves a package specifier to a URL.\n * @param {string} specifier - The package specifier to resolve.\n * @param {string | URL | undefined} base - The base URL to use for resolution.\n * @param {Set<string>} conditions - An object containing the conditions for resolution.\n * @returns {URL} - The resolved URL.\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  // TODO(@anonrig): Move this to a C++ function.\n  if (BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n    return new URL('node:' + specifier);\n  }\n\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = packageJsonReader.getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    if (packageConfig.exports != null && packageConfig.name === packageName) {\n      const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = internalFsBinding.internalModuleStat(\n      internalFsBinding\x2C\n      StringPrototypeSlice(packageJSONPath\x2C 0\x2C packageJSONPath.length - 13)\x2C\n    );\n    // Check for !stat.isDirectory()\n    if (stat !== 1) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = packageJsonReader.read(packageJSONPath\x2C { __proto__: null\x2C specifier\x2C base\x2C isESM: true });\n    if (packageConfig.exports != null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n    if (packageSubpath === '.') {\n      return legacyMainResolve(\n        packageJSONUrl\x2C\n        packageConfig\x2C\n        base\x2C\n      );\n    }\n\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base)\x2C null);\n}\n\n/**\n * Checks if a specifier is a bare specifier.\n * @param {string} specifier - The specifier to check.\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\n/**\n * Determines whether a specifier is a relative path.\n * @param {string} specifier - The specifier to check.\n */\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') { return true; }\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') { return true; }\n    }\n  }\n  return false;\n}\n\n/**\n * Determines whether a specifier should be treated as a relative or absolute path.\n * @param {string} specifier - The specifier to check.\n */\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') { return false; }\n  if (specifier[0] === '/') { return true; }\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * Resolves a module specifier to a URL.\n * @param {string} specifier - The module specifier to resolve.\n * @param {string | URL | undefined} base - The base URL to resolve against.\n * @param {Set<string>} conditions - An object containing environment conditions.\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks in the resolved URL.\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\n  const protocol = typeof base === 'string' ?\n    StringPrototypeSlice(base\x2C 0\x2C StringPrototypeIndexOf(base\x2C ':') + 1) :\n    base.protocol;\n  const isData = protocol === 'data:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    try {\n      resolved = new URL(specifier\x2C base);\n    } catch (cause) {\n      const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier\x2C base);\n      setOwnProperty(error\x2C 'cause'\x2C cause);\n      throw error;\n    }\n  } else if (protocol === 'file:' && specifier[0] === '#') {\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch (cause) {\n      if (isData && !BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n        const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier\x2C base);\n        setOwnProperty(error\x2C 'cause'\x2C cause);\n        throw error;\n      }\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\n    }\n  }\n  if (resolved.protocol !== 'file:') {\n    return resolved;\n  }\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\n}\n\n/**\n * Try to resolve an import as a CommonJS module.\n * @param {string} specifier - The specifier to resolve.\n * @param {string} parentURL - The base URL.\n * @returns {string | Buffer | false}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      const foundURL = pathToFileURL(found).pathname;\n      found = relativePosixPath(\n        StringPrototypeSlice(parentURL\x2C 'file://'.length\x2C StringPrototypeLastIndexOf(parentURL\x2C '/'))\x2C\n        foundURL);\n\n      // Add './' if the path does not start with '../'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C '../')) {\n        found = `./${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const i = StringPrototypeIndexOf(specifier\x2C '/');\n      const pkg = i === -1 ? specifier : StringPrototypeSlice(specifier\x2C 0\x2C i);\n      const needle = `${sep}node_modules${sep}${pkg}${sep}`;\n      const index = StringPrototypeLastIndexOf(found\x2C needle);\n      if (index !== -1) {\n        found = pkg + '/' + ArrayPrototypeJoin(\n          ArrayPrototypeMap(\n            StringPrototypeSplit(StringPrototypeSlice(found\x2C index + needle.length)\x2C sep)\x2C\n            // Escape URL-special characters to avoid generating a incorrect suggestion\n            encodeURIComponent\x2C\n          )\x2C\n          '/'\x2C\n        );\n      } else {\n        found = `${pathToFileURL(found)}`;\n      }\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate user-input in `context` supplied by a custom loader.\n * @param {string | URL | undefined} parentURL - The parent URL.\n */\nfunction throwIfInvalidParentURL(parentURL) {\n  if (parentURL === undefined) {\n    return; // Main entry point\x2C so no parent\n  }\n  if (typeof parentURL !== 'string' && !isURL(parentURL)) {\n    throw new ERR_INVALID_ARG_TYPE('parentURL'\x2C ['string'\x2C 'URL']\x2C parentURL);\n  }\n}\n\n/**\n * Resolves the given specifier using the provided context\x2C which includes the parent URL and conditions.\n * Attempts to resolve the specifier and returns the resulting URL and format.\n * @param {string} specifier - The specifier to resolve.\n * @param {object} [context={}] - The context object containing the parent URL and conditions.\n * @param {string} [context.parentURL] - The URL of the parent module.\n * @param {string[]} [context.conditions] - The conditions for resolving the specifier.\n */\nfunction defaultResolve(specifier\x2C context = {}) {\n  let { parentURL\x2C conditions } = context;\n  throwIfInvalidParentURL(parentURL);\n\n  let parsedParentURL;\n  if (parentURL) {\n    parsedParentURL = URLParse(parentURL);\n  }\n\n  let parsed\x2C protocol;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    parsed = URLParse(specifier\x2C parsedParentURL);\n  } else {\n    parsed = URLParse(specifier);\n  }\n\n  if (parsed != null) {\n    // Avoid accessing the `protocol` property due to the lazy getters.\n    protocol = parsed.protocol;\n\n    if (protocol === 'data:') {\n      return { __proto__: null\x2C url: parsed.href };\n    }\n  }\n\n  protocol ??= parsed?.protocol;\n  if (protocol === 'node:') { return { __proto__: null\x2C url: specifier }; }\n\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = getCWDURL().href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (inputTypeFlag) { throw new ERR_INPUT_TYPE_NOT_ALLOWED(); }\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(\n      specifier\x2C\n      parentURL\x2C\n      conditions\x2C\n      isMain ? preserveSymlinksMain : preserveSymlinks\x2C\n    );\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL);\n    }\n    throw error;\n  }\n\n  return {\n    __proto__: null\x2C\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems\x2C silencing them\n    url: url.href\x2C\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\n  };\n}\n\n/**\n * Decorates the given error with a hint for CommonJS modules.\n * @param {Error} error - The error to decorate.\n * @param {string} specifier - The specifier that was attempted to be imported.\n * @param {string} parentURL - The URL of the parent module.\n */\nfunction decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL) {\n  const found = resolveAsCommonJS(specifier\x2C parentURL);\n  if (found && found !== specifier) { // Don't suggest the same input the user provided.\n    // Modify the stack and message string to include the hint\n    const endOfFirstLine = StringPrototypeIndexOf(error.stack\x2C '\\n');\n    const hint = `Did you mean to import ${JSONStringify(found)}?`;\n    error.stack =\n      StringPrototypeSlice(error.stack\x2C 0\x2C endOfFirstLine) + '\\n' +\n      hint +\n      StringPrototypeSlice(error.stack\x2C endOfFirstLine);\n    error.message += `\\n${hint}`;\n  }\n}\n\nmodule.exports = {\n  decorateErrorWithCommonJSHints\x2C\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\x2C\n  throwIfInvalidParentURL\x2C\n  legacyMainResolve\x2C\n};\n\n// cycle\nconst {\n  defaultGetFormatWithoutErrors\x2C\n} = require('internal/modules/esm/get_format');\n
code-source-info,0x12ea986446f0,78,0,41505,C0O0C4O41505,,
code-creation,JS,9,56250,0x12ea98644ad0,931, node:internal/modules/esm/resolve:1:1,0x3564d12b5fa8,~
code-source-info,0x12ea98644ad
tick,0x192562fa8,56333,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98644632,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
tick,0x192562d1c,56333,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98644632,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,Eval,9,56625,0x12ea98645010,5, node:internal/modules/esm/get_format:1:1,0x3564d12b7fd8,~
script-source,79,node:internal/modules/esm/get_format,'use strict';\n\nconst {\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\nconst {\n  extensionFormatMap\x2C\n  getFormatOfExtensionlessFile\x2C\n  mimeToFormat\x2C\n} = require('internal/modules/esm/formats');\n\nconst detectModule = getOptionValue('--experimental-detect-module');\nconst { containsModuleSyntax } = internalBinding('contextify');\nconst { getPackageScopeConfig\x2C getPackageType } = require('internal/modules/package_json_reader');\nconst { fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst protocolHandlers = {\n  '__proto__': null\x2C\n  'data:': getDataProtocolModuleFormat\x2C\n  'file:': getFileProtocolModuleFormat\x2C\n  'node:'() { return 'builtin'; }\x2C\n};\n\n/**\n * Determine whether the given ambiguous source contains CommonJS or ES module syntax.\n * @param {string | Buffer | undefined} source\n * @param {URL} url\n */\nfunction detectModuleFormat(source\x2C url) {\n  if (!source) { return detectModule ? null : 'commonjs'; }\n  if (!detectModule) { return 'commonjs'; }\n  return containsModuleSyntax(`${source}`\x2C fileURLToPath(url)\x2C url) ? 'module' : 'commonjs';\n}\n\n/**\n * @param {URL} parsed\n * @returns {string | null}\n */\nfunction getDataProtocolModuleFormat(parsed) {\n  const { 1: mime } = RegExpPrototypeExec(\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n    parsed.pathname\x2C\n  ) || [ null\x2C null\x2C null ];\n\n  return mimeToFormat(mime);\n}\n\nconst DOT_CODE = 46;\nconst SLASH_CODE = 47;\n\n/**\n * Returns the file extension from a URL. Should give similar result to\n * `require('node:path').extname(require('node:url').fileURLToPath(url))`\n * when used with a `file:` URL.\n * @param {URL} url\n * @returns {string}\n */\nfunction extname(url) {\n  const { pathname } = url;\n  for (let i = pathname.length - 1; i > 0; i--) {\n    switch (StringPrototypeCharCodeAt(pathname\x2C i)) {\n      case SLASH_CODE:\n        return '';\n\n      case DOT_CODE:\n        return StringPrototypeCharCodeAt(pathname\x2C i - 1) === SLASH_CODE ? '' : StringPrototypeSlice(pathname\x2C i);\n    }\n  }\n  return '';\n}\n\n/**\n * Determine whether the given file URL is under a `node_modules` folder.\n * This function assumes that the input has already been verified to be a `file:` URL\x2C\n * and is a file rather than a folder.\n * @param {URL} url\n */\nfunction underNodeModules(url) {\n  if (url.protocol !== 'file:') { return false; } // We determine module types for other protocols based on MIME header\n\n  return StringPrototypeIncludes(url.pathname\x2C '/node_modules/');\n}\n\nlet typelessPackageJsonFilesWarnedAbout;\nfunction warnTypelessPackageJsonFile(pjsonPath\x2C url) {\n  typelessPackageJsonFilesWarnedAbout ??= new SafeSet();\n  if (!underNodeModules(url) && !typelessPackageJsonFilesWarnedAbout.has(pjsonPath)) {\n    const warning = `Module type of ${url} is not specified and it doesn't parse as CommonJS.\\n` +\n      'Reparsing as ES module because module syntax was detected. This incurs a performance overhead.\\n' +\n      `To eliminate this warning\x2C add "type": "module" to ${pjsonPath}.`;\n    process.emitWarning(warning\x2C {\n      code: 'MODULE_TYPELESS_PACKAGE_JSON'\x2C\n    });\n    typelessPackageJsonFilesWarnedAbout.add(pjsonPath);\n  }\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string; source?: Buffer}} context\n * @param {boolean} ignoreErrors\n * @returns {string}\n */\nfunction getFileProtocolModuleFormat(url\x2C context = { __proto__: null }\x2C ignoreErrors) {\n  const { source } = context;\n  const ext = extname(url);\n\n  if (ext === '.js') {\n    const { type: packageType\x2C pjsonPath\x2C exists: foundPackageJson } = getPackageScopeConfig(url);\n    if (packageType !== 'none') {\n      return packageType;\n    }\n\n    // The controlling `package.json` file has no `type` field.\n    switch (getOptionValue('--experimental-default-type')) {\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\n        // An exception to the type flag making ESM the default everywhere is that package scopes under `node_modules`\n        // should retain the assumption that a lack of a `type` field means CommonJS.\n        return underNodeModules(url) ? 'commonjs' : 'module';\n      }\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\n        return 'commonjs';\n      }\n      default: { // The user did not pass `--experimental-default-type`.\n        // `source` is undefined when this is called from `defaultResolve`;\n        // but this gets called again from `defaultLoad`/`defaultLoadSync`.\n        // For ambiguous files (no type field\x2C .js extension) we return\n        // undefined from `resolve` and re-run the check in `load`.\n        const format = detectModuleFormat(source\x2C url);\n        if (format === 'module' && foundPackageJson) {\n          // This module has a .js extension\x2C a package.json with no `type` field\x2C and ESM syntax.\n          // Warn about the missing `type` field so that the user can avoid the performance penalty of detection.\n          warnTypelessPackageJsonFile(pjsonPath\x2C url);\n        }\n        return format;\n      }\n    }\n  }\n  if (ext === '.ts' && getOptionValue('--experimental-strip-types')) {\n    const { type: packageType\x2C pjsonPath\x2C exists: foundPackageJson } = getPackageScopeConfig(url);\n    if (packageType !== 'none') {\n      return `${packageType}-typescript`;\n    }\n    // The controlling `package.json` file has no `type` field.\n    switch (getOptionValue('--experimental-default-type')) {\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\n        // An exception to the type flag making ESM the default everywhere is that package scopes under `node_modules`\n        // should retain the assumption that a lack of a `type` field means CommonJS.\n        return underNodeModules(url) ? 'commonjs-typescript' : 'module-typescript';\n      }\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\n        return 'commonjs-typescript';\n      }\n      default: { // The user did not pass `--experimental-default-type`.\n        // `source` is undefined when this is called from `defaultResolve`;\n        // but this gets called again from `defaultLoad`/`defaultLoadSync`.\n        // Since experimental-strip-types depends on detect-module\x2C we always return null\n        // if source is undefined.\n        if (!source) { return null; }\n        const { stripTypeScriptTypes\x2C stringify } = require('internal/modules/helpers');\n        const stringifiedSource = stringify(source);\n        const parsedSource = stripTypeScriptTypes(stringifiedSource\x2C fileURLToPath(url));\n        const detectedFormat = detectModuleFormat(parsedSource\x2C url);\n        const format = `${detectedFormat}-typescript`;\n        if (format === 'module-typescript' && foundPackageJson) {\n          // This module has a .js extension\x2C a package.json with no `type` field\x2C and ESM syntax.\n          // Warn about the missing `type` field so that the user can avoid the performance penalty of detection.\n          warnTypelessPackageJsonFile(pjsonPath\x2C url);\n        }\n        return format;\n      }\n    }\n  }\n\n  if (ext === '') {\n    const packageType = getPackageType(url);\n    if (packageType === 'module') {\n      return getFormatOfExtensionlessFile(url);\n    }\n    if (packageType !== 'none') {\n      return packageType; // 'commonjs' or future package types\n    }\n\n    // The controlling `package.json` file has no `type` field.\n    switch (getOptionValue('--experimental-default-type')) {\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\n        return underNodeModules(url) ? 'commonjs' : getFormatOfExtensionlessFile(url);\n      }\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\n        return 'commonjs';\n      }\n      default: { // The user did not pass `--experimental-default-type`.\n        if (!source) {\n          return null;\n        }\n        const format = getFormatOfExtensionlessFile(url);\n        if (format === 'wasm') {\n          return format;\n        }\n        return detectModuleFormat(source\x2C url);\n      }\n    }\n  }\n\n  const format = extensionFormatMap[ext];\n  if (format) { return format; }\n\n  // Explicit undefined return indicates load hook should rerun format check\n  if (ignoreErrors) { return undefined; }\n  const filepath = fileURLToPath(url);\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\n  const protocol = url.protocol;\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\n    return null;\n  }\n  return protocolHandlers[protocol](url\x2C context\x2C true);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormat(url\x2C context) {\n  const protocol = url.protocol;\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\n    return null;\n  }\n  return protocolHandlers[protocol](url\x2C context\x2C false);\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  defaultGetFormatWithoutErrors\x2C\n  extensionFormatMap\x2C\n  extname\x2C\n};\n
code-source-info,0x12ea98645010,79,0,9428,C0O0C4O9428,,
code-creation,JS,9,56958,0x12ea986451d0,364, node:internal/modules/esm/get_format:1:1,0x3564d12b8240,~
code-source-info,0x12ea986451d0,79,0,9428,C0O0C117O25C123O58C129O81C135O92C141O121C147O148C153O214C159O214C164O195C170O325C176O325C181O253C187O275C193O307C199O388C205O388C209O388C211O469C214O469C219O444C225O550C231O550C236O508C242O531C248O625C254O625C259O607C265O689C271O689C276O715C281O658C287O749C294O783C300O823C304O854C314O749C316O1590C318O1590C320O1613C322O1613C324O2662C325O2662C327O9320C334O9341C340O9361C346O9394C352O9416C358O9335C363O9427,,
tick,0x1012a4c24,57167,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98645280,0x107f89188,0x107f88e30,0x12ea98644e66,0x107f89188,0x107f88e30,0x12ea98644632,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,Eval,9,57292,0x12ea98645428,5, node:internal/modules/esm/formats:1:1,0x3564d12b8ba8,~
script-source,80,node:internal/modules/esm/formats,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\n\nconst { getOptionValue } = require('internal/options');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst fsBindings = internalBinding('fs');\nconst { fs: fsConstants } = internalBinding('constants');\n\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.json': 'json'\x2C\n  '.mjs': 'module'\x2C\n};\n\nif (experimentalWasmModules) {\n  extensionFormatMap['.wasm'] = 'wasm';\n}\n\nif (getOptionValue('--experimental-strip-types')) {\n  extensionFormatMap['.ts'] = 'module-typescript';\n  extensionFormatMap['.mts'] = 'module-typescript';\n  extensionFormatMap['.cts'] = 'commonjs-typescript';\n}\n\n/**\n * @param {string} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    RegExpPrototypeExec(\n      /^\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?$/i\x2C\n      mime\x2C\n    ) !== null\n  ) { return 'module'; }\n  if (mime === 'application/json') { return 'json'; }\n  if (experimentalWasmModules && mime === 'application/wasm') { return 'wasm'; }\n  return null;\n}\n\n/**\n * For extensionless files in a `module` package scope\x2C or a default `module` scope enabled by the\n * `--experimental-default-type` flag\x2C we check the file contents to disambiguate between ES module JavaScript and Wasm.\n * We do this by taking advantage of the fact that all Wasm files start with the header `0x00 0x61 0x73 0x6d` (`_asm`).\n * @param {URL} url\n */\nfunction getFormatOfExtensionlessFile(url) {\n  if (!experimentalWasmModules) { return 'module'; }\n  const path = getValidatedPath(url);\n  switch (fsBindings.getFormatOfExtensionlessFile(path)) {\n    case fsConstants.EXTENSIONLESS_FORMAT_WASM:\n      return 'wasm';\n    default:\n      return 'module';\n  }\n}\n\nmodule.exports = {\n  extensionFormatMap\x2C\n  getFormatOfExtensionlessFile\x2C\n  mimeToFormat\x2C\n};\n
code-source-info,0x12ea98645428,80,0,1947,C0O0C4O1947,,
code-creation,JS,9,57375,0x12ea98645560,168, node:internal/modules/esm/formats:1:1,0x3564d12b8cc0,~
code-source-info,0x12ea98645560,80,0,1947,C0O0C30O25C36O91C39O91C44O72C49O149C52O149C57O128C63O198C66O198C70O198C72O249C75O249C80O233C86O312C89O312C93O312C95O387C100O494C104O527C106O555C110O568C113O572C119O622C121O648C125O673C127O700C131O725C133O752C137O1855C144O1876C150O1898C156O1930C162O1870C167O1946,,
code-creation,JS,9,57583,0x12ea986457b0,366,defaultResolve node:internal/modules/esm/resolve:1011:24,0x3564d12b6850,~
code-source-info,0x12ea986457b0,78,38195,40337,C7O38195C13O38231C18O38242C23O38268C26O38268C30O38311C32O38330C36O38351C41O38369C46O38401C48O38409C50O38421C53O38425C59O38483C64O38492C72O38545C77O38554C82O38582C87O38698C92O38713C94O38726C99O38747C104O38785C114O38792C115O38806C128O38825C136O38839C138O38852C143O38867C150O38898C156O38910C157O38932C161O38959C163O38977C168O38989C172O39000C177O39412C183O39433C188O39439C193O39433C194O39482C199O39495C204O39531C209O39548C223O39627C227O39636C233O39659C236O39554C245O39552C255O39803C258O39813C265O39818C273O39862C280O39867C285O39909C295O39913C302O39972C309O39984C314O40024C328O40024C333O40095C335O40095C336O40115C341O40268C351O40286C354O40286C365O40335,,
code-creation,JS,9,57667,0x12ea98645a40,49,throwIfInvalidParentURL node:internal/modules/esm/resolve:994:33,0x3564d12b67f8,~
code-source-info,0x12ea98645a40,78,37425,37666,C0O37441C4O37476C5O37483C6O37524C14O37562C17O37562C23O37586C41O37592C46O37586C48O37665,,
code-creation,JS,9,57667,0x12ea98645b08,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:886:49,0x3564d12b66f0,~
code-source-info,0x12ea98645b08,78,33439,33582,C0O33455C2O33469C7O33479C8O33492C9O33497C10O33510C16O33514C21O33525C22O33537C23O33542C26O33549C30O33580,,
code-creation,JS,9,57667,0x12ea98645bc0,81,isRelativeSpecifier node:internal/modules/esm/resolve:872:29,0x3564d12b6698,~
code-source-info,0x12ea98645bc0,78,32991,33242,C0O33007C1O33020C7O33024C12O33053C19O33060C26O33078C32O33082C37O33093C38O33105C39O33112C41O33125C47O33129C52O33160C59O33167C66O33185C72O33189C77O33200C78O33212C79O33227C80O33240,,
code-creation,JS,9,57750,0x12ea98645d50,335,moduleResolve node:internal/modules/esm/resolve:899:23,0x3564d12b6748,~
code-source-info,0x12ea98645d50,78,33967,35227,C0O34036C8O34067C15O34097C21O34097C26O34131C33O34067C40O34147C45O34174C47O34183C51O34302C53O34314C56O34318C65O34388C78O34399C87O34397C97O34467C112O34467C118O34527C134O34527C139O34572C141O34572C144O34600C146O34613C152O34637C158O34641C163O34656C175O34667C186O34746C193O34757C202O34755C212O34805C220O34820C223O34834C228O34834C235O34897C250O34897C256O34959C272O34959C277O35006C279O35006C280O35033C294O35044C302O35114C309O35123C314O35142C316O35158C317O35165C329O35172C334O35225,,
code-creation,JS,9,57833,0x12ea986460d8,490,finalizeResolution node:internal/modules/esm/resolve:228:28,0x3564d12b6170,~
code-source-info,0x12ea986460d
tick,0x1010553ac,58417,0,0x0,0,0x3a8f5611404a,0x3a8f5611d818,0x12ea9864627c,0x12ea98645e99,0x12ea9864589c,0x12ea98644661,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
new,MemoryChunk,0xcb659700000,262144
code-creation,JS,10,59042,0x107f8b440,5696,realpathSync node:fs:2629:22,0x2ddc31ed9b08,^
script-source,43,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  Boolean\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\x2C\n} = constants;\n\nconst pathModule = require('path');\nconst { isAbsolute } = pathModule;\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst binding = internalBinding('fs');\n\nconst { createBlobFromFilePath } = require('internal/blob');\n\nconst { Buffer } = require('buffer');\nconst { isBuffer: BufferIsBuffer } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_ACCESS_DENIED\x2C\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  FSReqCallback\x2C\n  statValues\x2C\n} = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  emitExperimentalWarning\x2C\n  getLazy\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  defineLazyProperties\x2C\n  isWindows\x2C\n  isMacOS\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  handleErrorFromBinding\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isInt32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n  kValidateObjectAllowNullable\x2C\n} = require('internal/validators');\n\nconst permission = require('internal/process/permission');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\nlet kResistStopPropagation;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isInt32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(path\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  binding.access(getValidatedPath(path)\x2C mode);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n\n  function suppressedCallback(err) {\n    callback(!err);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n\n  return binding.existsSync(path);\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\n  // wise\x2C similar to the promise based version (less peak memory and chunked\n  // stringify operations vs multiple C++/JS boundary crossings).\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\n      // the result and reuse the buffer instead of allocating a new one.\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { flag: 'r' });\n  const ReadFileContext = require('internal/fs/read/context');\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(getValidatedPath(path)\x2C flagsNumber\x2C 0o666\x2C req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\n  if (stats === undefined && !isUserFd) {\n    fs.closeSync(fd);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\n    if (!isInt32(path)) {\n      path = getValidatedPath(path);\n    }\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  binding.close(fd);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(path\x2C flagsNumber\x2C mode\x2C req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  return binding.open(\n    getValidatedPath(path)\x2C\n    stringToFlags(flags)\x2C\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\n  );\n}\n\n/**\n * @param {string | Buffer | URL } path\n * @param {{\n *   type?: string;\n *   }} [options]\n * @returns {Promise<Blob>}\n */\nfunction openAsBlob(path\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const type = options.type || '';\n  validateString(type\x2C 'options.type');\n  // The underlying implementation here returns the Blob synchronously for now.\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\n  // this API returns a Promise.\n  path = getValidatedPath(path);\n  return PromiseResolve(createBlobFromFilePath(path\x2C { type }));\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    if (params !== undefined) {\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n    ({\n      offset = 0\x2C\n      length = buffer?.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  validateFunction(callback\x2C 'cb');\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  let offset = offsetOrOptions;\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\n    if (offsetOrOptions !== undefined) {\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offsetOrOptions ?? kEmptyObject);\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[]\n * ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffer?: Buffer | TypedArray | DataView\n * ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback ||= position || length || offset;\n    validateFunction(callback\x2C 'cb');\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n    return;\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = buffer;\n  validateEncoding(str\x2C length);\n  callback = position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\x2C\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(\n    getValidatedPath(oldPath\x2C 'oldPath')\x2C\n    getValidatedPath(newPath\x2C 'newPath')\x2C\n    req\x2C\n  );\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  binding.rename(\n    getValidatedPath(oldPath\x2C 'oldPath')\x2C\n    getValidatedPath(newPath\x2C 'newPath')\x2C\n  );\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  validateFunction(callback\x2C 'cb');\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  try {\n    fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  binding.ftruncate(fd\x2C len < 0 ? 0 : len);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          binding.rmdir(path\x2C req);\n          return;\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(path\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  binding.rmdir(path);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(path\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  lazyLoadRimraf();\n  return rimrafSync(\n    getValidatedPath(path)\x2C\n    validateRmOptionsSync(path\x2C options\x2C false)\x2C\n  );\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  binding.fdatasync(fd);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  binding.fsync(fd);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = parseFileMode(options\x2C 'mode');\n  } else if (options) {\n    if (options.recursive !== undefined) {\n      recursive = options.recursive;\n      validateBoolean(recursive\x2C 'options.recursive');\n    }\n    if (options.mode !== undefined) {\n      mode = parseFileMode(options.mode\x2C 'options.mode');\n    }\n  }\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(\n    getValidatedPath(path)\x2C\n    mode\x2C\n    recursive\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = parseFileMode(options\x2C 'mode');\n  } else if (options) {\n    if (options.recursive !== undefined) {\n      recursive = options.recursive;\n      validateBoolean(recursive\x2C 'options.recursive');\n    }\n    if (options.mode !== undefined) {\n      mode = parseFileMode(options.mode\x2C 'options.mode');\n    }\n  }\n\n  const result = binding.mkdir(\n    getValidatedPath(path)\x2C\n    mode\x2C\n    recursive\x2C\n  );\n\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\n * This function does not validate `basePath` as a directory. It is passed directly to\n * `binding.readdir`.\n * @param {string} basePath\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\n * @returns {string[] | Dirent[]}\n */\nfunction readdirSyncRecursive(basePath\x2C options) {\n  const withFileTypes = Boolean(options.withFileTypes);\n  const encoding = options.encoding;\n\n  const readdirResults = [];\n  const pathsQueue = [basePath];\n\n  function read(path) {\n    const readdirResult = binding.readdir(\n      path\x2C\n      encoding\x2C\n      withFileTypes\x2C\n    );\n\n    if (readdirResult === undefined) {\n      return;\n    }\n\n    if (withFileTypes) {\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\n      // The first array is the names\x2C and the second array is the types.\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\n      // of the first array within the result.\n      const length = readdirResult[0].length;\n      for (let i = 0; i < length; i++) {\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\n        ArrayPrototypePush(readdirResults\x2C dirent);\n        if (dirent.isDirectory()) {\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.parentPath\x2C dirent.name));\n        }\n      }\n    } else {\n      for (let i = 0; i < readdirResult.length; i++) {\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\n        const stat = binding.internalModuleStat(binding\x2C resultPath);\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\n        // 1 indicates directory\n        if (stat === 1) {\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < pathsQueue.length; i++) {\n    read(pathsQueue[i]);\n  }\n\n  return readdirResults;\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Dirent[]\n * ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(\n    path\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    return readdirSyncRecursive(path\x2C options);\n  }\n\n  const result = binding.readdir(\n    path\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n  );\n\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} [callback]\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    const resource = BufferIsBuffer(path) ? BufferToString(path) : path;\n    callback(new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C resource));\n    return;\n  }\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(path\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(getValidatedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateFunction(callback\x2C 'cb');\n  path = getValidatedPath(path);\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = (err\x2C stats) => {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err\x2C getStatFsFromBinding(stats));\n  };\n  binding.statfs(getValidatedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @returns {Stats | undefined}\n */\nfunction fstatSync(fd\x2C options = { bigint: false }) {\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    const resource = BufferIsBuffer(path) ? BufferToString(path) : path;\n    throw new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C resource);\n  }\n  const stats = binding.lstat(\n    getValidatedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  const stats = binding.stat(\n    getValidatedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n  if (stats === undefined) {\n    return undefined;\n  }\n  return getStatsFromBinding(stats);\n}\n\nfunction statfsSync(path\x2C options = { bigint: false }) {\n  const stats = binding.statfs(getValidatedPath(path)\x2C options.bigint);\n  return getStatFsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(getValidatedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  return binding.readlink(getValidatedPath(path)\x2C options.encoding);\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n        return;\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n      return;\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(\n          destination\x2C\n          path\x2C\n          resolvedFlags\x2C\n          req\x2C\n        );\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C path\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        throw new ERR_ACCESS_DENIED('relative symbolic link target');\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  binding.symlink(\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n    path\x2C\n    stringToSymlinkType(type)\x2C\n  );\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(existingPath\x2C newPath\x2C req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  binding.link(\n    existingPath\x2C\n    newPath\x2C\n  );\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(getValidatedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  binding.unlink(getValidatedPath(path));\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.');\n  }\n  binding.fchmod(\n    fd\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n  );\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  try {\n    fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(path\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  binding.chmod(path\x2C mode);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(path\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.lchown(path\x2C uid\x2C gid);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.');\n  }\n\n  binding.fchown(fd\x2C uid\x2C gid);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(path\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.chown(path\x2C uid\x2C gid);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(\n    path\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  binding.utimes(\n    getValidatedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  binding.futimes(\n    fd\x2C\n    toUnixTimestamp(atime\x2C 'atime')\x2C\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\n  );\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(\n    path\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  binding.lutimes(\n    getValidatedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (!flush) {\n        if (isUserFd) {\n          callback(null);\n        } else {\n          fs.close(fd\x2C callback);\n        }\n      } else {\n        fs.fsync(fd\x2C (syncErr) => {\n          if (syncErr) {\n            if (isUserFd) {\n              callback(syncErr);\n            } else {\n              fs.close(fd\x2C (err) => {\n                callback(aggregateTwoErrors(err\x2C syncErr));\n              });\n            }\n          } else if (isUserFd) {\n            callback(null);\n          } else {\n            fs.close(fd\x2C callback);\n          }\n        });\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n  const flag = options.flag || 'w';\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  const flag = options.flag || 'w';\n\n  // C++ fast path for string data and UTF8 encoding\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\n    if (!isInt32(path)) {\n      path = getValidatedPath(path);\n    }\n\n    return binding.writeFileUtf8(\n      path\x2C\n      data\x2C\n      stringToFlags(flag)\x2C\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\n    );\n  }\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n\n    if (flush) {\n      fs.fsyncSync(fd);\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n\n  let watcher;\n  const watchers = require('internal/fs/watchers');\n  const path = getValidatedPath(filename);\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n  // e.g. Linux due to the limitations of inotify.\n  if (options.recursive && !isMacOS && !isWindows) {\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\n    watcher = new nonNativeWatcher.FSWatcher(options);\n    watcher[watchers.kFSWatchStart](path);\n  } else {\n    watcher = new watchers.FSWatcher();\n    watcher[watchers.kFSWatchStart](path\x2C\n                                    options.persistent\x2C\n                                    options.recursive\x2C\n                                    options.encoding);\n  }\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\x2C\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n  const watchers = require('internal/fs/watchers');\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n  const watchers = require('internal/fs/watchers');\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const out = binding.lstat(base\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n    if (out === undefined) {\n      return;\n    }\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const stats = binding.lstat(base\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (stats === undefined) {\n        return;\n      }\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        binding.stat(base\x2C false\x2C undefined\x2C true);\n        linkTarget = binding.readlink(base\x2C undefined);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const out = binding.lstat(base\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (out === undefined) {\n        return;\n      }\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  return binding.realpath(\n    getValidatedPath(path)\x2C\n    options.encoding\x2C\n  );\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  } else {\n    validateFunction(callback\x2C 'cb');\n  }\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(prefix\x2C options.encoding);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  binding.copyFile(\n    getValidatedPath(src\x2C 'src')\x2C\n    getValidatedPath(dest\x2C 'dest')\x2C\n    mode\x2C\n  );\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   highWaterMark?: number;\n *   flush?: boolean;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nconst lazyGlob = getLazy(() => require('internal/fs/glob').Glob);\n\nfunction glob(pattern\x2C options\x2C callback) {\n  emitExperimentalWarning('glob');\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n\n  const Glob = lazyGlob();\n  // TODO: Use iterator helpers when available\n  (async () => {\n    try {\n      const res = [];\n      for await (const entry of new Glob(pattern\x2C options).glob()) {\n        ArrayPrototypePush(res\x2C entry);\n      }\n      callback(null\x2C res);\n    } catch (err) {\n      callback(err);\n    }\n  })();\n}\n\nfunction globSync(pattern\x2C options) {\n  emitExperimentalWarning('globSync');\n  const Glob = lazyGlob();\n  return new Glob(pattern\x2C options).globSync();\n}\n\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  glob\x2C\n  globSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  openAsBlob\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statfs\x2C\n  statSync\x2C\n  statfsSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\x2C\n};\n\ndefineLazyProperties(\n  fs\x2C\n  'internal/fs/dir'\x2C\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\n);\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x107f8b440,43,68749,72419,,,
tick,0x192562efc,62083,0,0x0,0,0x3a8f5611d977,0x12ea9864627c,0x12ea98645e99,0x12ea9864589c,0x12ea98644661,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
tick,0x19241c5ac,62125,0,0x0,0,0x3a8f5611d977,0x12ea9864627c,0x12ea98645e99,0x12ea9864589c,0x12ea98644661,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,JS,10,62125,0x107f8caa0,376,SafeMap node:internal/per_context/primordials:409:16,0x2aa13b33f8e8,^
code-source-info,0x107f8caa0,3,11638,11655,,,
tick,0x101197fac,62208,0,0x0,0,0x3a8f5611d977,0x12ea9864627c,0x12ea98645e99,0x12ea9864589c,0x12ea98644661,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,JS,10,62250,0x107f8cc40,1320,getPathFromURLPosix node:internal/url:1484:29,0x2ddc31ecb4f0,^
script-source,36,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  Boolean\x2C\n  Int8Array\x2C\n  IteratorPrototype\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  kEnumerableProperty\x2C\n  kEmptyObject\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  isWindows\x2C\n} = require('internal/util');\n\nconst {\n  platform\x2C\n} = require('internal/process/per_thread');\n\nconst {\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\x2C\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst bindingUrl = internalBinding('url');\n\nconst FORWARD_SLASH = /\\//g;\n\nconst contextForInspect = Symbol('context');\n\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\n// deliberately moved to `internal/url` rather than `url`.\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\n// is not initialized on bootstrap. This case breaks the\n// test-require-delete-array-iterator test.\n\n// Protocols that can allow "unsafe" and "unwise" chars.\nconst unsafeProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that never have a hostname.\nconst hostlessProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that always contain a // bit.\nconst slashedProtocol = new SafeSet([\n  'http'\x2C\n  'http:'\x2C\n  'https'\x2C\n  'https:'\x2C\n  'ftp'\x2C\n  'ftp:'\x2C\n  'gopher'\x2C\n  'gopher:'\x2C\n  'file'\x2C\n  'file:'\x2C\n  'ws'\x2C\n  'ws:'\x2C\n  'wss'\x2C\n  'wss:'\x2C\n]);\n\nconst updateActions = {\n  kProtocol: 0\x2C\n  kHost: 1\x2C\n  kHostname: 2\x2C\n  kPort: 3\x2C\n  kUsername: 4\x2C\n  kPassword: 5\x2C\n  kPathname: 6\x2C\n  kSearch: 7\x2C\n  kHash: 8\x2C\n  kHref: 9\x2C\n};\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  // This is the maximum value uint32_t can get.\n  // Ada uses uint32_t(-1) for declaring omitted values.\n  static #omitted = 4294967295;\n\n  href = '';\n  protocol_end = 0;\n  username_end = 0;\n  host_start = 0;\n  host_end = 0;\n  pathname_start = 0;\n  search_start = 0;\n  hash_start = 0;\n  port = 0;\n  /**\n   * Refers to `ada::scheme::type`\n   *\n   * enum type : uint8_t {\n   *   HTTP = 0\x2C\n   *   NOT_SPECIAL = 1\x2C\n   *   HTTPS = 2\x2C\n   *   WS = 3\x2C\n   *   FTP = 4\x2C\n   *   WSS = 5\x2C\n   *   FILE = 6\n   * };\n   * @type {number}\n   */\n  scheme_type = 1;\n\n  get hasPort() {\n    return this.port !== URLContext.#omitted;\n  }\n\n  get hasSearch() {\n    return this.search_start !== URLContext.#omitted;\n  }\n\n  get hasHash() {\n    return this.hash_start !== URLContext.#omitted;\n  }\n}\n\nlet setURLSearchParamsModified;\nlet setURLSearchParamsContext;\nlet getURLSearchParamsList;\nlet setURLSearchParams;\n\nclass URLSearchParamsIterator {\n  #target;\n  #kind;\n  #index;\n\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\n  constructor(target\x2C kind) {\n    this.#target = target;\n    this.#kind = kind;\n    this.#index = 0;\n  }\n\n  next() {\n    if (typeof this !== 'object' || this === null || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\x2C\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this.#index = index + 2;\n\n    let result;\n    if (this.#kind === 'key') {\n      result = name;\n    } else if (this.#kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\x2C\n    };\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!this || typeof this !== 'object' || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(values\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (this.#kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\x2C\n    );\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\ndelete URLSearchParamsIterator.prototype.constructor;\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\n\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\n  next: kEnumerableProperty\x2C\n});\n\n\nclass URLSearchParams {\n  #searchParams = [];\n\n  // "associated url object"\n  #context;\n\n  static {\n    setURLSearchParamsContext = (obj\x2C ctx) => {\n      obj.#context = ctx;\n    };\n    getURLSearchParamsList = (obj) => obj.#searchParams;\n    setURLSearchParams = (obj\x2C query) => {\n      if (query === undefined) {\n        obj.#searchParams = [];\n      } else {\n        obj.#searchParams = parseParams(query);\n      }\n    };\n  }\n\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (init == null) {\n      // Do nothing\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator] && #searchParams in init) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init.#searchParams;\n        this.#searchParams = childParams.slice();\n      } else if (method != null) {\n        // Sequence<sequence<USVString>>\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // The following implementation differs from the URL specification:\n        // Sequences must first be converted from ECMAScript objects before\n        // and operations are done on them\x2C and the operation of converting\n        // the sequences would first exhaust the iterators. If the iterator\n        // returns something invalid in the middle\x2C whether it would be called\n        // after that would be an observable change to the users.\n        // Exhausting the iterator and later converting them to USVString comes\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\n        // creation duration\x2C Node.js merges the iteration and converting\n        // iterations into a single iteration.\n        for (const pair of init) {\n          if (pair == null) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          } else if (ArrayIsArray(pair)) {\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (pair.length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n            // Append (innerSequence[0]\x2C innerSequence[1]) to query's list.\n            ArrayPrototypePush(\n              this.#searchParams\x2C\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\n            );\n          } else {\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\n                typeof pair[SymbolIterator] !== 'function')) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n\n            let length = 0;\n\n            for (const element of pair) {\n              length++;\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\n            }\n\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n          }\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = new SafeMap();\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = StringPrototypeToWellFormed(key);\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\n\n            // Two different keys may become the same USVString after normalization.\n            // In that case\x2C we retain the later one. Refer to WPT.\n            const keyIdx = visited.get(typedKey);\n            if (keyIdx !== undefined) {\n              this.#searchParams[keyIdx] = typedValue;\n            } else {\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\n                                                       typedKey\x2C\n                                                       typedValue) - 1);\n            }\n          }\n        }\n      }\n    } else {\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\n      init = StringPrototypeToWellFormed(`${init}`);\n      this.#searchParams = init ? parseParams(init) : [];\n    }\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this.#searchParams;\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\x2C\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  get size() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n    return this.#searchParams.length / 2;\n  }\n\n  append(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  delete(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name && list[i + 1] === value) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    } else {\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  get(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    const values = [];\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n    }\n\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        if (value === undefined || list[i + 1] === value) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  sort() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    const a = this.#searchParams;\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this.#searchParams;\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this.#searchParams;\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this.#searchParams);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n * @param {*} self\n * @returns {self is URL}\n */\nfunction isURL(self) {\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\n}\n\n/**\n * A unique symbol used as a private identifier to safely invoke the URL constructor\n * with a special parsing behavior. When passed as the third argument to the URL\n * constructor\x2C it signals that the constructor should not throw an exception\n * for invalid URL inputs.\n */\nconst kParseURLSymbol = Symbol('kParseURL');\nconst kCreateURLFromPosixPathSymbol = Symbol('kCreateURLFromPosixPath');\nconst kCreateURLFromWindowsPathSymbol = Symbol('kCreateURLFromWindowsPath');\n\nclass URL {\n  #context = new URLContext();\n  #searchParams;\n  #searchParamsModified;\n\n  static {\n    setURLSearchParamsModified = (obj) => {\n      // When URLSearchParams changes\x2C we lazily update URL on the next read/write for performance.\n      obj.#searchParamsModified = true;\n\n      // If URL has an existing search\x2C remove it without cascading back to URLSearchParams.\n      // Do this to avoid any internal confusion about whether URLSearchParams or URL is up-to-date.\n      if (obj.#context.hasSearch) {\n        obj.#updateContext(bindingUrl.update(obj.#context.href\x2C updateActions.kSearch\x2C ''));\n      }\n    };\n  }\n\n  constructor(input\x2C base = undefined\x2C parseSymbol = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    // StringPrototypeToWellFormed is not needed.\n    input = `${input}`;\n\n    if (base !== undefined) {\n      base = `${base}`;\n    }\n\n    let href;\n    if (arguments.length < 3) {\n      href = bindingUrl.parse(input\x2C base\x2C true);\n    } else {\n      const raiseException = parseSymbol !== kParseURLSymbol;\n      const interpretAsWindowsPath = parseSymbol === kCreateURLFromWindowsPathSymbol;\n      const pathToFileURL = interpretAsWindowsPath || (parseSymbol === kCreateURLFromPosixPathSymbol);\n      href = pathToFileURL ?\n        bindingUrl.pathToFileURL(input\x2C interpretAsWindowsPath\x2C base) :\n        bindingUrl.parse(input\x2C base\x2C raiseException);\n    }\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  static parse(input\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n    const parsedURLObject = new URL(input\x2C base\x2C kParseURLSymbol);\n    return parsedURLObject.href ? parsedURLObject : null;\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = { __proto__: { constructor } };\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj[contextForInspect] = this.#context;\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  #getSearchFromContext() {\n    if (!this.#context.hasSearch) return '';\n    let endsAt = this.#context.href.length;\n    if (this.#context.hasHash) endsAt = this.#context.hash_start;\n    if (endsAt - this.#context.search_start <= 1) return '';\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\n  }\n\n  #getSearchFromParams() {\n    if (!this.#searchParams?.size) return '';\n    return `?${this.#searchParams}`;\n  }\n\n  #ensureSearchParamsUpdated() {\n    // URL is updated lazily to greatly improve performance when URLSearchParams is updated repeatedly.\n    // If URLSearchParams has been modified\x2C reflect that back into URL\x2C without cascading back.\n    if (this.#searchParamsModified) {\n      this.#searchParamsModified = false;\n      this.#updateContext(bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C this.#getSearchFromParams()));\n    }\n  }\n\n  /**\n   * Update the internal context state for URL.\n   * @param {string} href New href string from `bindingUrl.update`.\n   * @param {boolean} [shouldUpdateSearchParams] If the update has potential to update search params (href/search).\n   */\n  #updateContext(href\x2C shouldUpdateSearchParams = false) {\n    const previousSearch = shouldUpdateSearchParams && this.#searchParams &&\n      (this.#searchParamsModified ? this.#getSearchFromParams() : this.#getSearchFromContext());\n\n    this.#context.href = href;\n\n    const {\n      0: protocol_end\x2C\n      1: username_end\x2C\n      2: host_start\x2C\n      3: host_end\x2C\n      4: port\x2C\n      5: pathname_start\x2C\n      6: search_start\x2C\n      7: hash_start\x2C\n      8: scheme_type\x2C\n    } = bindingUrl.urlComponents;\n\n    this.#context.protocol_end = protocol_end;\n    this.#context.username_end = username_end;\n    this.#context.host_start = host_start;\n    this.#context.host_end = host_end;\n    this.#context.port = port;\n    this.#context.pathname_start = pathname_start;\n    this.#context.search_start = search_start;\n    this.#context.hash_start = hash_start;\n    this.#context.scheme_type = scheme_type;\n\n    if (this.#searchParams) {\n      // If the search string has updated\x2C URL becomes the source of truth\x2C and we update URLSearchParams.\n      // Only do this when we're expecting it to have changed\x2C otherwise a change to hash etc.\n      // would incorrectly compare the URLSearchParams state to the empty URL search state.\n      if (shouldUpdateSearchParams) {\n        const currentSearch = this.#getSearchFromContext();\n        if (previousSearch !== currentSearch) {\n          setURLSearchParams(this.#searchParams\x2C currentSearch);\n          this.#searchParamsModified = false;\n        }\n      }\n\n      // If we have a URLSearchParams\x2C ensure that URL is up-to-date with any modification to it.\n      this.#ensureSearchParamsUpdated();\n    }\n  }\n\n  toString() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  get href() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  set href(value) {\n    value = `${value}`;\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\n    if (!href) { throw new ERR_INVALID_URL(value); }\n    this.#updateContext(href\x2C true);\n  }\n\n  // readonly\n  get origin() {\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n\n    // Check if scheme_type is not `NOT_SPECIAL`\n    if (this.#context.scheme_type !== 1) {\n      // Check if scheme_type is `FILE`\n      if (this.#context.scheme_type === 6) {\n        return 'null';\n      }\n      return `${protocol}//${this.host}`;\n    }\n\n    if (protocol === 'blob:') {\n      const path = this.pathname;\n      if (path.length > 0) {\n        try {\n          const out = new URL(path);\n          // Only return origin of scheme is `http` or `https`\n          // Otherwise return a new opaque origin (null).\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\n            return `${out.protocol}//${out.host}`;\n          }\n        } catch {\n          // Do nothing.\n        }\n      }\n    }\n\n    return 'null';\n  }\n\n  get protocol() {\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n  }\n\n  set protocol(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get username() {\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\n    }\n    return '';\n  }\n\n  set username(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get password() {\n    if (this.#context.host_start - this.#context.username_end > 0) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\n    }\n    return '';\n  }\n\n  set password(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get host() {\n    let startsAt = this.#context.host_start;\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    // If we have an empty host\x2C then the space between components.host_end and\n    // components.pathname_start may be occupied by /.\n    if (startsAt === this.#context.host_end) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\n  }\n\n  set host(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get hostname() {\n    let startsAt = this.#context.host_start;\n    // host_start might be "@" if the URL has credentials\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\n  }\n\n  set hostname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get port() {\n    if (this.#context.hasPort) {\n      return `${this.#context.port}`;\n    }\n    return '';\n  }\n\n  set port(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get pathname() {\n    let endsAt;\n    if (this.#context.hasSearch) {\n      endsAt = this.#context.search_start;\n    } else if (this.#context.hasHash) {\n      endsAt = this.#context.hash_start;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\n  }\n\n  set pathname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get search() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#getSearchFromContext();\n  }\n\n  set search(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\n    if (href) {\n      this.#updateContext(href\x2C true);\n    }\n  }\n\n  // readonly\n  get searchParams() {\n    // Create URLSearchParams on demand to greatly improve the URL performance.\n    if (this.#searchParams == null) {\n      this.#searchParams = new URLSearchParams(this.#getSearchFromContext());\n      setURLSearchParamsContext(this.#searchParams\x2C this);\n      this.#searchParamsModified = false;\n    }\n    return this.#searchParams;\n  }\n\n  get hash() {\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\n  }\n\n  set hash(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  toJSON() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  static canParse(url\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    url = `${url}`;\n\n    if (base !== undefined) {\n      return bindingUrl.canParse(url\x2C `${base}`);\n    }\n\n    // It is important to differentiate the canParse call statements\n    // since they resolve into different v8 fast api overloads.\n    return bindingUrl.canParse(url);\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nObjectDefineProperties(URL\x2C {\n  canParse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n  parse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nfunction installObjectURLMethods() {\n  const bindingBlob = internalBinding('blob');\n\n  function createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  function revokeObjectURL(url) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    bindingBlob.revokeObjectURL(`${url}`);\n  }\n\n  ObjectDefineProperties(URL\x2C {\n    createObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: createObjectURL\x2C\n    }\x2C\n    revokeObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: revokeObjectURL\x2C\n    }\x2C\n  });\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i = qs[0] === '?' ? 1 : 0;\n  let pairStart = i;\n  let lastPos = i;\n  for (; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToUnicode(`${domain}`);\n}\n\n/**\n * Utility function that converts a URL object into an ordinary options object\n * as expected by the `http.request` and `https.request` APIs.\n * @param {URL} url\n * @returns {Record<string\x2C unknown>}\n */\nfunction urlToHttpOptions(url) {\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\n  const options = {\n    __proto__: null\x2C\n    ...url\x2C // In case the url object was extended by the user.\n    protocol: url.protocol\x2C\n    hostname: hostname && hostname[0] === '[' ?\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\n      hostname\x2C\n    hash: url.hash\x2C\n    search: search\x2C\n    pathname: pathname\x2C\n    path: `${pathname || ''}${search || ''}`\x2C\n    href: url.href\x2C\n  };\n  if (port !== '') {\n    options.port = Number(port);\n  }\n  if (username || password) {\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\n  }\n  return options;\n}\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\x2C\n        );\n      }\n    }\n  }\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return StringPrototypeSlice(pathname\x2C 1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\x2C\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURL(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return (windows ?? isWindows) ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\nfunction pathToFileURL(filepath\x2C options = kEmptyObject) {\n  const windows = options?.windows ?? isWindows;\n  if (windows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    // Handle extended UNC path and standard UNC path\n    // "\\\\?\\UNC\\" path prefix should be ignored.\n    // Ref: https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation\n    const isExtendedUNC = StringPrototypeStartsWith(filepath\x2C '\\\\\\\\?\\\\UNC\\\\');\n    const prefixLength = isExtendedUNC ? 8 : 2;\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C prefixLength);\n    if (hostnameEndIndex === -1) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\x2C\n      );\n    }\n    if (hostnameEndIndex === 2) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Empty UNC servername'\x2C\n      );\n    }\n    const hostname = StringPrototypeSlice(filepath\x2C prefixLength\x2C hostnameEndIndex);\n    return new URL(StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C hostname\x2C kCreateURLFromWindowsPathSymbol);\n  }\n  let resolved = windows ? path.win32.resolve(filepath) : path.posix.resolve(filepath);\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                 filepath.length - 1);\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\n       ((windows ?? isWindows) && filePathLast === CHAR_BACKWARD_SLASH)) &&\n      resolved[resolved.length - 1] !== path.sep)\n    resolved += '/';\n\n  return new URL(resolved\x2C undefined\x2C windows ? kCreateURLFromWindowsPathSymbol : kCreateURLFromPosixPathSymbol);\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURL(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\n/**\n * This util takes a string containing a URL and return the URL origin\x2C\n * its meant to avoid calls to `new URL` constructor.\n * @param {string} url\n * @returns {URL['origin']}\n */\nfunction getURLOrigin(url) {\n  return bindingUrl.getOrigin(url);\n}\n\nmodule.exports = {\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  installObjectURLMethods\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  URLParse: URL.parse\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  encodeStr\x2C\n  isURL\x2C\n\n  urlUpdateActions: updateActions\x2C\n  getURLOrigin\x2C\n  unsafeProtocol\x2C\n  hostlessProtocol\x2C\n  slashedProtocol\x2C\n};\n
code-source-info,0x107f8cc40,36,43218,43711,,,
tick,0x192563008,63875,0,0x0,0,0x3a8f5611d977,0x12ea9864627c,0x12ea98645e99,0x12ea9864589c,0x12ea98644661,0x12ea986442b3,0x12ea986441ca,0x12ea986440ab,0x12ea98643f41,0x7769ed85bc2,0x12ea98643dff,0x7769ed8beae,0x7769ed8ba39,0x7769ed8bc3b,0x7769ed8bd8f,0x12ea9864132b
code-creation,JS,10,63875,0x107f8d1a0,208,nextPart node:fs:2618:31,0x2ddc31ed9a48,^
code-source-info,0x107f8d1a0,43,68496,68554,,,
code-creation,JS,10,63917,0x107f8d2a0,344,isFileType node:fs:204:20,0x2ddc31ed3328,^
code-source-info,0x107f8d2a0,43,5148,5389,,,
code-creation,JS,9,64042,0x12ea98646820,47,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:226:39,0x3564d12b84b8,~
code-source-info,0x12ea98646820,79,8753,8950,C0O8793C5O8805C12O8840C15O8810C22O8875C23O8887C24O8894C29O8917C41O8927C46O8948,,
code-creation,JS,9,64125,0x12ea986469a8,580,getFileProtocolModuleFormat node:internal/modules/esm/get_format:111:37,0x3564d12b8460,~
code-source-info,0x12ea986469a
code-creation,JS,9,64167,0x12ea98646db0,102,extname node:internal/modules/esm/get_format:65:17,0x3564d12b8358,~
code-source-info,0x12ea98646db0,79,1862,2205,C0O1880C5O1922C9O1929C13O1936C14O1936C19O1952C24O1960C32O2013C41O2056C50O2033C52O2043C53O2074C58O2119C62O2081C70O2124C81O2146C84O2146C89O2180C90O1942C95O1900C99O2193C101O2203,,
code-creation,JS,9,64208,0x12ea98646ea8,29,set node:internal/modules/esm/module_map:76:6,0x3564d12ad6b8,~
code-source-info,0x12ea98646ea8,76,2479,2605,C0O2520C2O2525C14O2548C22O2575C26O2589C28O2601,,
code-creation,JS,9,64250,0x12ea98646f68,99,#getJobFromResolveResult node:internal/modules/esm/loader:269:27,0x3564d12a79a0,~
code-source-info,0x12ea98646f68,74,8829,9281,C19O8923C24O8928C29O9005C40O9062C45O9072C50O9106C55O9072C62O9118C64O9149C66O9160C90O9176C96O9266C98O9277,,
code-creation,JS,9,64292,0x12ea98647080,76,get node:internal/modules/esm/module_map:91:6,0x3564d12ad7c0,~
code-source-info,0x12ea98647080,76,2927,3070,C11O2940C18O2970C28O2970C33O3002C41O3002C46O3036C48O3049C59O3049C69O3059C75O3066,,
code-creation,JS,9,64333,0x12ea986471e0,239,#createModuleJob node:internal/modules/esm/loader:499:19,0x3564d12a7a50,~
code-source-info,0x12ea986471e0,74,19316,20277,C0O19408C7O19410C13O19418C20O19458C24O19491C26O19518C30O19586C47O19586C55O19697C72O19697C78O19767C86O19791C92O19791C97O19835C102O19847C107O19851C118O19888C124O19902C129O19910C139O19933C148O19934C158O19910C163O19976C171O19976C176O19962C181O20036C204O20036C210O20209C215O20219C220O20245C231O20219C236O20262C238O20273,,
code-creation,JS,9,64333,0x12ea986473d0,129,loadAndTranslate node:internal/modules/esm/loader:482:25,0x3564d12a7ec8,~
code-source-info,0x12ea986473d0,74,18333,18488,C10O18333C18O18404C23O18404C37O18393C60O18374C65O18382C70O18432C72O18444C93O18454C106O18484,,
code-creation,JS,9,64375,0x12ea98647518,119,load node:internal/modules/esm/loader:664:13,0x3564d12a80d8,~
code-source-info,0x12ea98647518,74,26099,26320,C6O26099C14O26120C16O26129C21O26154C23O26166C27O26182C32O26182C46O26201C47O26213C65O26229C70O26265C74O26225C78O26283C83O26290C96O26316,,
code-creation,Eval,9,64500,0x12ea98647620,5, node:internal/modules/esm/load:1:1,0xcb65970c780,~
script-source,81,node:internal/modules/esm/load,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst {\n  isUnderNodeModules\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { validateAttributes\x2C emitImportAssertionWarning } = require('internal/modules/esm/assert');\nconst { getOptionValue } = require('internal/options');\nconst { readFileSync } = require('fs');\n\nconst defaultType =\n  getOptionValue('--experimental-default-type');\n\nconst { Buffer: { from: BufferFrom } } = require('buffer');\n\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n  ERR_UNSUPPORTED_NODE_MODULES_TYPE_STRIPPING\x2C\n} = require('internal/errors').codes;\n\nconst {\n  dataURLProcessor\x2C\n} = require('internal/data_url');\n\n/**\n * @param {URL} url URL to the module\n * @param {ESModuleContext} context used to decorate error messages\n * @returns {Promise<{ responseURL: string\x2C source: string | BufferView }>}\n */\nasync function getSource(url\x2C context) {\n  const { protocol\x2C href } = url;\n  const responseURL = href;\n  let source;\n  if (protocol === 'file:') {\n    const { readFile: readFileAsync } = require('internal/fs/promises').exports;\n    source = await readFileAsync(url);\n  } else if (protocol === 'data:') {\n    const result = dataURLProcessor(url);\n    if (result === 'failure') {\n      throw new ERR_INVALID_URL(responseURL\x2C null);\n    }\n    source = BufferFrom(result.body);\n  } else {\n    const supportedSchemes = ['file'\x2C 'data'];\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url\x2C supportedSchemes);\n  }\n  return { __proto__: null\x2C responseURL\x2C source };\n}\n\n/**\n * @param {URL} url URL to the module\n * @param {ESModuleContext} context used to decorate error messages\n * @returns {{ responseURL: string\x2C source: string | BufferView }}\n */\nfunction getSourceSync(url\x2C context) {\n  const { protocol\x2C href } = url;\n  const responseURL = href;\n  let source;\n  if (protocol === 'file:') {\n    source = readFileSync(url);\n  } else if (protocol === 'data:') {\n    const result = dataURLProcessor(url);\n    if (result === 'failure') {\n      throw new ERR_INVALID_URL(responseURL);\n    }\n    source = BufferFrom(result.body);\n  } else {\n    const supportedSchemes = ['file'\x2C 'data'];\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url\x2C supportedSchemes);\n  }\n  return { __proto__: null\x2C responseURL\x2C source };\n}\n\n\n/**\n * Node.js default load hook.\n * @param {string} url\n * @param {LoadContext} context\n * @returns {LoadReturn}\n */\nasync function defaultLoad(url\x2C context = kEmptyObject) {\n  let responseURL = url;\n  let {\n    importAttributes\x2C\n    format\x2C\n    source\x2C\n  } = context;\n\n  if (importAttributes == null && !('importAttributes' in context) && 'importAssertions' in context) {\n    emitImportAssertionWarning();\n    importAttributes = context.importAssertions;\n    // Alias `importAssertions` to `importAttributes`\n    context = {\n      ...context\x2C\n      importAttributes\x2C\n    };\n  }\n\n  const urlInstance = new URL(url);\n\n  throwIfUnsupportedURLScheme(urlInstance);\n\n  if (urlInstance.protocol === 'node:') {\n    source = null;\n    format ??= 'builtin';\n  } else if (format !== 'commonjs' || defaultType === 'module') {\n    if (source == null) {\n      ({ responseURL\x2C source } = await getSource(urlInstance\x2C context));\n      context = { __proto__: context\x2C source };\n    }\n\n    if (format == null) {\n      // Now that we have the source for the module\x2C run `defaultGetFormat` to detect its format.\n      format = await defaultGetFormat(urlInstance\x2C context);\n\n      if (format === 'commonjs') {\n        // For backward compatibility reasons\x2C we need to discard the source in\n        // order for the CJS loader to re-fetch it.\n        source = null;\n      }\n    }\n  }\n\n  validateAttributes(url\x2C format\x2C importAttributes);\n\n  if (getOptionValue('--experimental-strip-types') &&\n    (format === 'module-typescript' || format === 'commonjs-typescript') &&\n    isUnderNodeModules(url)) {\n    throw new ERR_UNSUPPORTED_NODE_MODULES_TYPE_STRIPPING(url);\n  }\n\n  return {\n    __proto__: null\x2C\n    format\x2C\n    responseURL\x2C\n    source\x2C\n  };\n}\n/**\n * @typedef LoadContext\n * @property {string} [format] A hint (possibly returned from `resolve`)\n * @property {string | Buffer | ArrayBuffer} [source] source\n * @property {Record<string\x2C string>} [importAttributes] import attributes\n */\n\n/**\n * @typedef LoadReturn\n * @property {string} format format\n * @property {URL['href']} responseURL The module's fully resolved URL\n * @property {Buffer} source source\n */\n\n/**\n * @param {URL['href']} url\n * @param {LoadContext} [context]\n * @returns {LoadReturn}\n */\nfunction defaultLoadSync(url\x2C context = kEmptyObject) {\n  let responseURL = url;\n  const { importAttributes } = context;\n  let {\n    format\x2C\n    source\x2C\n  } = context;\n\n  const urlInstance = new URL(url);\n\n  throwIfUnsupportedURLScheme(urlInstance\x2C false);\n\n  if (urlInstance.protocol === 'node:') {\n    source = null;\n  } else if (source == null) {\n    ({ responseURL\x2C source } = getSourceSync(urlInstance\x2C context));\n    context.source = source;\n  }\n\n  format ??= defaultGetFormat(urlInstance\x2C context);\n\n  validateAttributes(url\x2C format\x2C importAttributes);\n\n  return {\n    __proto__: null\x2C\n    format\x2C\n    responseURL\x2C\n    source\x2C\n  };\n}\n\n\n/**\n * throws an error if the protocol is not one of the protocols\n * that can be loaded in the default loader\n * @param {URL} parsed\n */\nfunction throwIfUnsupportedURLScheme(parsed) {\n  // Avoid accessing the `protocol` property due to the lazy getters.\n  const protocol = parsed?.protocol;\n  if (\n    protocol &&\n    protocol !== 'file:' &&\n    protocol !== 'data:' &&\n    protocol !== 'node:' &&\n    (\n      protocol !== 'https:' &&\n      protocol !== 'http:'\n    )\n  ) {\n    const schemes = ['file'\x2C 'data'\x2C 'node'];\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C schemes);\n  }\n}\n\n/**\n * For a falsy `format` returned from `load`\x2C throw an error.\n * This could happen from either a custom user loader _or_ from the default loader\x2C because the default loader tries to\n * determine formats for data URLs.\n * @param {string} url The resolved URL of the module\n * @param {null | undefined | false | 0 | -0 | 0n | ''} format Falsy format returned from `load`\n */\nfunction throwUnknownModuleFormat(url\x2C format) {\n  const dataUrl = RegExpPrototypeExec(\n    /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n    url\x2C\n  );\n\n  throw new ERR_UNKNOWN_MODULE_FORMAT(\n    dataUrl ? dataUrl[1] : format\x2C\n    url);\n}\n\n\nmodule.exports = {\n  defaultLoad\x2C\n  defaultLoadSync\x2C\n  getSourceSync\x2C\n  throwUnknownModuleFormat\x2C\n};\n
code-source-info,0x12ea98647620,81,0,6608,C0O0C4O6608,,
code-creation,JS,9,64750,0x12ea986477d0,338, node:internal/modules/esm/load:1:1,0xcb65970c988,~
code-source-info,0x12ea986477d0,81,0,6608,C0O0C90O25C96O113C102O113C107O73C113O95C119O169C125O169C130O148C136O272C142O272C147O221C153O241C159O339C165O339C170O320C176O393C182O393C187O376C193O431C199O431C203O431C205O520C211O520C216O495C221O503C227O556C233O556C238O548C244O722C250O722C255O748C260O591C266O610C272O639C278O673C284O789C290O789C295O767C301O6507C308O6528C314O6543C320O6562C326O6579C332O6522C337O6607,,
tick,0x192475e28,64750,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98647559,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,65292,0x12ea98647a08,5, node:internal/data_url:1:1,0xcb65970de18,~
script-source,82,node:internal/data_url,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringFromCharCodeApply\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  TypedArrayPrototypeSubarray\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst { Buffer } = require('buffer');\nconst { MIMEType } = require('internal/mime');\n\nlet encoder;\nfunction lazyEncoder() {\n  if (encoder === undefined) {\n    const { TextEncoder } = require('internal/encoding');\n    encoder = new TextEncoder();\n  }\n\n  return encoder;\n}\n\nconst ASCII_WHITESPACE_REPLACE_REGEX = /[\\u0009\\u000A\\u000C\\u000D\\u0020]/g // eslint-disable-line\n\n// https://fetch.spec.whatwg.org/#data-url-processor\n/** @param {URL} dataURL */\nfunction dataURLProcessor(dataURL) {\n  // 1. Assert: dataURL's scheme is "data".\n  assert(dataURL.protocol === 'data:');\n\n  // 2. Let input be the result of running the URL\n  // serializer on dataURL with exclude fragment\n  // set to true.\n  let input = URLSerializer(dataURL\x2C true);\n\n  // 3. Remove the leading "data:" string from input.\n  input = StringPrototypeSlice(input\x2C 5);\n\n  // 4. Let position point at the start of input.\n  const position = { position: 0 };\n\n  // 5. Let mimeType be the result of collecting a\n  // sequence of code points that are not equal\n  // to U+002C (\x2C)\x2C given position.\n  let mimeType = collectASequenceOfCodePointsFast(\n    '\x2C'\x2C\n    input\x2C\n    position\x2C\n  );\n\n  // 6. Strip leading and trailing ASCII whitespace\n  // from mimeType.\n  // Undici implementation note: we need to store the\n  // length because if the mimetype has spaces removed\x2C\n  // the wrong amount will be sliced from the input in\n  // step #9\n  const mimeTypeLength = mimeType.length;\n  mimeType = removeASCIIWhitespace(mimeType\x2C true\x2C true);\n\n  // 7. If position is past the end of input\x2C then\n  // return failure\n  if (position.position >= input.length) {\n    return 'failure';\n  }\n\n  // 8. Advance position by 1.\n  position.position++;\n\n  // 9. Let encodedBody be the remainder of input.\n  const encodedBody = StringPrototypeSlice(input\x2C mimeTypeLength + 1);\n\n  // 10. Let body be the percent-decoding of encodedBody.\n  let body = stringPercentDecode(encodedBody);\n\n  // 11. If mimeType ends with U+003B (;)\x2C followed by\n  // zero or more U+0020 SPACE\x2C followed by an ASCII\n  // case-insensitive match for "base64"\x2C then:\n  if (RegExpPrototypeExec(/;(\\u0020){0\x2C}base64$/i\x2C mimeType) !== null) {\n    // 1. Let stringBody be the isomorphic decode of body.\n    const stringBody = isomorphicDecode(body);\n\n    // 2. Set body to the forgiving-base64 decode of\n    // stringBody.\n    body = forgivingBase64(stringBody);\n\n    // 3. If body is failure\x2C then return failure.\n    if (body === 'failure') {\n      return 'failure';\n    }\n\n    // 4. Remove the last 6 code points from mimeType.\n    mimeType = StringPrototypeSlice(mimeType\x2C 0\x2C -6);\n\n    // 5. Remove trailing U+0020 SPACE code points from mimeType\x2C\n    // if any.\n    mimeType = RegExpPrototypeSymbolReplace(/(\\u0020)+$/\x2C mimeType\x2C '');\n\n    // 6. Remove the last U+003B (;) code point from mimeType.\n    mimeType = StringPrototypeSlice(mimeType\x2C 0\x2C -1);\n  }\n\n  // 12. If mimeType starts with U+003B (;)\x2C then prepend\n  // "text/plain" to mimeType.\n  if (mimeType[0] === ';') {\n    mimeType = 'text/plain' + mimeType;\n  }\n\n  // 13. Let mimeTypeRecord be the result of parsing\n  // mimeType.\n  // 14. If mimeTypeRecord is failure\x2C then set\n  // mimeTypeRecord to text/plain;charset=US-ASCII.\n  let mimeTypeRecord;\n\n  try {\n    mimeTypeRecord = new MIMEType(mimeType);\n  } catch {\n    mimeTypeRecord = new MIMEType('text/plain;charset=US-ASCII');\n  }\n\n  // 15. Return a new data: URL struct whose MIME\n  // type is mimeTypeRecord and body is body.\n  // https://fetch.spec.whatwg.org/#data-url-struct\n  return { mimeType: mimeTypeRecord\x2C body };\n}\n\n// https://url.spec.whatwg.org/#concept-url-serializer\n/**\n * @param {URL} url\n * @param {boolean} excludeFragment\n */\nfunction URLSerializer(url\x2C excludeFragment = false) {\n  const { href } = url;\n\n  if (!excludeFragment) {\n    return href;\n  }\n\n  const hashLength = url.hash.length;\n  const serialized = hashLength === 0 ? href : StringPrototypeSlice(href\x2C 0\x2C href.length - hashLength);\n\n  if (!hashLength && href[href.length - 1] === '#') {\n    return StringPrototypeSlice(serialized\x2C 0\x2C -1);\n  }\n\n  return serialized;\n}\n\n/**\n * A faster collectASequenceOfCodePoints that only works when comparing a single character.\n * @param {string} char\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePointsFast(char\x2C input\x2C position) {\n  const idx = StringPrototypeIndexOf(input\x2C char\x2C position.position);\n  const start = position.position;\n\n  if (idx === -1) {\n    position.position = input.length;\n    return StringPrototypeSlice(input\x2C start);\n  }\n\n  position.position = idx;\n  return StringPrototypeSlice(input\x2C start\x2C position.position);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\n/** @param {string} input */\nfunction stringPercentDecode(input) {\n  // 1. Let bytes be the UTF-8 encoding of input.\n  const bytes = lazyEncoder().encode(input);\n\n  // 2. Return the percent-decoding of bytes.\n  return percentDecode(bytes);\n}\n\n/**\n * @param {number} byte\n */\nfunction isHexCharByte(byte) {\n  // 0-9 A-F a-f\n  return (byte >= 0x30 && byte <= 0x39) || (byte >= 0x41 && byte <= 0x46) || (byte >= 0x61 && byte <= 0x66);\n}\n\n/**\n * @param {number} byte\n */\nfunction hexByteToNumber(byte) {\n  return (\n    // 0-9\n    byte >= 0x30 && byte <= 0x39 ?\n      (byte - 48) :\n    // Convert to uppercase\n    // ((byte & 0xDF) - 65) + 10\n      ((byte & 0xDF) - 55)\n  );\n}\n\n// https://url.spec.whatwg.org/#percent-decode\n/** @param {Uint8Array} input */\nfunction percentDecode(input) {\n  const length = input.length;\n  // 1. Let output be an empty byte sequence.\n  /** @type {Uint8Array} */\n  const output = new Uint8Array(length);\n  let j = 0;\n  // 2. For each byte byte in input:\n  for (let i = 0; i < length; ++i) {\n    const byte = input[i];\n\n    // 1. If byte is not 0x25 (%)\x2C then append byte to output.\n    if (byte !== 0x25) {\n      output[j++] = byte;\n\n    // 2. Otherwise\x2C if byte is 0x25 (%) and the next two bytes\n    // after byte in input are not in the ranges\n    // 0x30 (0) to 0x39 (9)\x2C 0x41 (A) to 0x46 (F)\x2C\n    // and 0x61 (a) to 0x66 (f)\x2C all inclusive\x2C append byte\n    // to output.\n    } else if (\n      byte === 0x25 &&\n      !(isHexCharByte(input[i + 1]) && isHexCharByte(input[i + 2]))\n    ) {\n      output[j++] = 0x25;\n\n    // 3. Otherwise:\n    } else {\n      // 1. Let bytePoint be the two bytes after byte in input\x2C\n      // decoded\x2C and then interpreted as hexadecimal number.\n      // 2. Append a byte whose value is bytePoint to output.\n      output[j++] = (hexByteToNumber(input[i + 1]) << 4) | hexByteToNumber(input[i + 2]);\n\n      // 3. Skip the next two bytes in input.\n      i += 2;\n    }\n  }\n\n  // 3. Return output.\n  return length === j ? output : TypedArrayPrototypeSubarray(output\x2C 0\x2C j);\n}\n\n// https://infra.spec.whatwg.org/#forgiving-base64-decode\n/** @param {string} data */\nfunction forgivingBase64(data) {\n  // 1. Remove all ASCII whitespace from data.\n  data = RegExpPrototypeSymbolReplace(ASCII_WHITESPACE_REPLACE_REGEX\x2C data\x2C '');\n\n  let dataLength = data.length;\n  // 2. If data's code point length divides by 4 leaving\n  // no remainder\x2C then:\n  if (dataLength % 4 === 0) {\n    // 1. If data ends with one or two U+003D (=) code points\x2C\n    // then remove them from data.\n    if (data[dataLength - 1] === '=') {\n      --dataLength;\n      if (data[dataLength - 1] === '=') {\n        --dataLength;\n      }\n    }\n  }\n\n  // 3. If data's code point length divides by 4 leaving\n  // a remainder of 1\x2C then return failure.\n  if (dataLength % 4 === 1) {\n    return 'failure';\n  }\n\n  // 4. If data contains a code point that is not one of\n  //  U+002B (+)\n  //  U+002F (/)\n  //  ASCII alphanumeric\n  // then return failure.\n  if (RegExpPrototypeExec(/[^+/0-9A-Za-z]/\x2C data.length === dataLength ? data : StringPrototypeSlice(data\x2C 0\x2C dataLength)) !== null) {\n    return 'failure';\n  }\n\n  const buffer = Buffer.from(data\x2C 'base64');\n  return new Uint8Array(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n * @param {number} char\n */\nfunction isASCIIWhitespace(char) {\n  // "\\r\\n\\t\\f "\n  return char === 0x00d || char === 0x00a || char === 0x009 || char === 0x00c || char === 0x020;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\n * @param {string} str\n * @param {boolean} [leading=true]\n * @param {boolean} [trailing=true]\n */\nfunction removeASCIIWhitespace(str\x2C leading = true\x2C trailing = true) {\n  return removeChars(str\x2C leading\x2C trailing\x2C isASCIIWhitespace);\n}\n\n/**\n * @param {string} str\n * @param {boolean} leading\n * @param {boolean} trailing\n * @param {(charCode: number) => boolean} predicate\n */\nfunction removeChars(str\x2C leading\x2C trailing\x2C predicate) {\n  let lead = 0;\n  let trail = str.length - 1;\n\n  if (leading) {\n    while (lead < str.length && predicate(StringPrototypeCharCodeAt(str\x2C lead))) lead++;\n  }\n\n  if (trailing) {\n    while (trail > 0 && predicate(StringPrototypeCharCodeAt(str\x2C trail))) trail--;\n  }\n\n  return lead === 0 && trail === str.length - 1 ? str : StringPrototypeSlice(str\x2C lead\x2C trail + 1);\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-decode\n * @param {Uint8Array} input\n * @returns {string}\n */\nfunction isomorphicDecode(input) {\n  // 1. To isomorphic decode a byte sequence input\x2C return a string whose code point\n  //    length is equal to input's length and whose code points have the same values\n  //    as the values of input's bytes\x2C in the same order.\n  const length = input.length;\n  if ((2 << 15) - 1 > length) {\n    return StringFromCharCodeApply(input);\n  }\n  let result = ''; let i = 0;\n  let addition = (2 << 15) - 1;\n  while (i < length) {\n    if (i + addition > length) {\n      addition = length - i;\n    }\n    result += StringFromCharCodeApply(TypedArrayPrototypeSubarray(input\x2C i\x2C i += addition));\n  }\n  return result;\n}\n\nmodule.exports = {\n  dataURLProcessor\x2C\n};\n
code-source-info,0x12ea98647a08,82,0,10177,C0O0C4O10177,,
code-creation,JS,9,65667,0x12ea98647b70,248, node:internal/data_url:1:1,0xcb65970e080,~
code-source-info,0x12ea98647b70,82,0,10177,C0O0C125O25C131O48C137O80C143O107C149O136C155O162C161O186C167O217C173O262C179O262C183O262C185O309C191O309C196O298C202O349C208O349C213O336C219O380C220O380C222O601C227O601C229O10135C236O10156C242O10150C247O10176,,
code-creation,Eval,9,65917,0x12ea98647d10,5, node:internal/mime:1:1,0xcb65970fbe8,~
script-source,83,node:internal/mime,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeStringPrototypeSearch\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  SymbolIterator\x2C\n} = primordials;\nconst {\n  ERR_INVALID_MIME_SYNTAX\x2C\n} = require('internal/errors').codes;\n\nconst NOT_HTTP_TOKEN_CODE_POINT = /[^!#$%&'*+\\-.^_`|~A-Za-z0-9]/g;\nconst NOT_HTTP_QUOTED_STRING_CODE_POINT = /[^\\t\\u0020-~\\u0080-\\u00FF]/g;\n\nconst END_BEGINNING_WHITESPACE = /[^\\r\\n\\t ]|$/;\nconst START_ENDING_WHITESPACE = /[\\r\\n\\t ]*$/;\n\nfunction toASCIILower(str) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n\n    result += char >= 'A' && char <= 'Z' ?\n      StringPrototypeToLowerCase(char) :\n      char;\n  }\n  return result;\n}\n\nconst SOLIDUS = '/';\nconst SEMICOLON = ';';\n\nfunction parseTypeAndSubtype(str) {\n  // Skip only HTTP whitespace from start\n  let position = SafeStringPrototypeSearch(str\x2C END_BEGINNING_WHITESPACE);\n  // read until '/'\n  const typeEnd = StringPrototypeIndexOf(str\x2C SOLIDUS\x2C position);\n  const trimmedType = typeEnd === -1 ?\n    StringPrototypeSlice(str\x2C position) :\n    StringPrototypeSlice(str\x2C position\x2C typeEnd);\n  const invalidTypeIndex = SafeStringPrototypeSearch(trimmedType\x2C\n                                                     NOT_HTTP_TOKEN_CODE_POINT);\n  if (trimmedType === '' || invalidTypeIndex !== -1 || typeEnd === -1) {\n    throw new ERR_INVALID_MIME_SYNTAX('type'\x2C str\x2C invalidTypeIndex);\n  }\n  // skip type and '/'\n  position = typeEnd + 1;\n  const type = toASCIILower(trimmedType);\n  // read until ';'\n  const subtypeEnd = StringPrototypeIndexOf(str\x2C SEMICOLON\x2C position);\n  const rawSubtype = subtypeEnd === -1 ?\n    StringPrototypeSlice(str\x2C position) :\n    StringPrototypeSlice(str\x2C position\x2C subtypeEnd);\n  position += rawSubtype.length;\n  if (subtypeEnd !== -1) {\n    // skip ';'\n    position += 1;\n  }\n  const trimmedSubtype = StringPrototypeSlice(\n    rawSubtype\x2C\n    0\x2C\n    SafeStringPrototypeSearch(rawSubtype\x2C START_ENDING_WHITESPACE));\n  const invalidSubtypeIndex = SafeStringPrototypeSearch(trimmedSubtype\x2C\n                                                        NOT_HTTP_TOKEN_CODE_POINT);\n  if (trimmedSubtype === '' || invalidSubtypeIndex !== -1) {\n    throw new ERR_INVALID_MIME_SYNTAX('subtype'\x2C str\x2C invalidSubtypeIndex);\n  }\n  const subtype = toASCIILower(trimmedSubtype);\n  return [\n    type\x2C\n    subtype\x2C\n    position\x2C\n  ];\n}\n\nconst EQUALS_SEMICOLON_OR_END = /[;=]|$/;\nconst QUOTED_VALUE_PATTERN = /^(?:([\\\\]$)|[\\\\][\\s\\S]|[^"])*(?:(")|$)/u;\n\nfunction removeBackslashes(str) {\n  let ret = '';\n  // We stop at str.length - 1 because we want to look ahead one character.\n  let i;\n  for (i = 0; i < str.length - 1; i++) {\n    const c = str[i];\n    if (c === '\\\\') {\n      i++;\n      ret += str[i];\n    } else {\n      ret += c;\n    }\n  }\n  // We add the last character if we didn't skip to it.\n  if (i === str.length - 1) {\n    ret += str[i];\n  }\n  return ret;\n}\n\n\nfunction escapeQuoteOrSolidus(str) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    result += (char === '"' || char === '\\\\') ? `\\\\${char}` : char;\n  }\n  return result;\n}\n\nconst encode = (value) => {\n  if (value.length === 0) return '""';\n  const encode = SafeStringPrototypeSearch(value\x2C NOT_HTTP_TOKEN_CODE_POINT) !== -1;\n  if (!encode) return value;\n  const escaped = escapeQuoteOrSolidus(value);\n  return `"${escaped}"`;\n};\n\nclass MIMEParams {\n  #data = new SafeMap();\n  // We set the flag the MIMEParams instance as processed on initialization\n  // to defer the parsing of a potentially large string.\n  #processed = true;\n  #string = null;\n\n  /**\n   * Used to instantiate a MIMEParams object within the MIMEType class and\n   * to allow it to be parsed lazily.\n   */\n  static instantiateMimeParams(str) {\n    const instance = new MIMEParams();\n    instance.#string = str;\n    instance.#processed = false;\n    return instance;\n  }\n\n  delete(name) {\n    this.#parse();\n    this.#data.delete(name);\n  }\n\n  get(name) {\n    this.#parse();\n    const data = this.#data;\n    if (data.has(name)) {\n      return data.get(name);\n    }\n    return null;\n  }\n\n  has(name) {\n    this.#parse();\n    return this.#data.has(name);\n  }\n\n  set(name\x2C value) {\n    this.#parse();\n    const data = this.#data;\n    name = `${name}`;\n    value = `${value}`;\n    const invalidNameIndex = SafeStringPrototypeSearch(name\x2C NOT_HTTP_TOKEN_CODE_POINT);\n    if (name.length === 0 || invalidNameIndex !== -1) {\n      throw new ERR_INVALID_MIME_SYNTAX(\n        'parameter name'\x2C\n        name\x2C\n        invalidNameIndex\x2C\n      );\n    }\n    const invalidValueIndex = SafeStringPrototypeSearch(\n      value\x2C\n      NOT_HTTP_QUOTED_STRING_CODE_POINT);\n    if (invalidValueIndex !== -1) {\n      throw new ERR_INVALID_MIME_SYNTAX(\n        'parameter value'\x2C\n        value\x2C\n        invalidValueIndex\x2C\n      );\n    }\n    data.set(name\x2C value);\n  }\n\n  *entries() {\n    this.#parse();\n    yield* this.#data.entries();\n  }\n\n  *keys() {\n    this.#parse();\n    yield* this.#data.keys();\n  }\n\n  *values() {\n    this.#parse();\n    yield* this.#data.values();\n  }\n\n  toString() {\n    this.#parse();\n    let ret = '';\n    for (const { 0: key\x2C 1: value } of this.#data) {\n      const encoded = encode(value);\n      // Ensure they are separated\n      if (ret.length) ret += ';';\n      ret += `${key}=${encoded}`;\n    }\n    return ret;\n  }\n\n  // Used to act as a friendly class to stringifying stuff\n  // not meant to be exposed to users\x2C could inject invalid values\n  #parse() {\n    if (this.#processed) return;  // already parsed\n    const paramsMap = this.#data;\n    let position = 0;\n    const str = this.#string;\n    const endOfSource = SafeStringPrototypeSearch(\n      StringPrototypeSlice(str\x2C position)\x2C\n      START_ENDING_WHITESPACE\x2C\n    ) + position;\n    while (position < endOfSource) {\n      // Skip any whitespace before parameter\n      position += SafeStringPrototypeSearch(\n        StringPrototypeSlice(str\x2C position)\x2C\n        END_BEGINNING_WHITESPACE\x2C\n      );\n      // Read until ';' or '='\n      const afterParameterName = SafeStringPrototypeSearch(\n        StringPrototypeSlice(str\x2C position)\x2C\n        EQUALS_SEMICOLON_OR_END\x2C\n      ) + position;\n      const parameterString = toASCIILower(\n        StringPrototypeSlice(str\x2C position\x2C afterParameterName)\x2C\n      );\n      position = afterParameterName;\n      // If we found a terminating character\n      if (position < endOfSource) {\n        // Safe to use because we never do special actions for surrogate pairs\n        const char = StringPrototypeCharAt(str\x2C position);\n        // Skip the terminating character\n        position += 1;\n        // Ignore parameters without values\n        if (char === ';') {\n          continue;\n        }\n      }\n      // If we are at end of the string\x2C it cannot have a value\n      if (position >= endOfSource) break;\n      // Safe to use because we never do special actions for surrogate pairs\n      const char = StringPrototypeCharAt(str\x2C position);\n      let parameterValue = null;\n      if (char === '"') {\n        // Handle quoted-string form of values\n        // skip '"'\n        position += 1;\n        // Find matching closing '"' or end of string\n        //   use $1 to see if we terminated on unmatched '\\'\n        //   use $2 to see if we terminated on a matching '"'\n        //   so we can skip the last char in either case\n        const insideMatch = RegExpPrototypeExec(\n          QUOTED_VALUE_PATTERN\x2C\n          StringPrototypeSlice(str\x2C position));\n        position += insideMatch[0].length;\n        // Skip including last character if an unmatched '\\' or '"' during\n        // unescape\n        const inside = insideMatch[1] || insideMatch[2] ?\n          StringPrototypeSlice(insideMatch[0]\x2C 0\x2C -1) :\n          insideMatch[0];\n        // Unescape '\\' quoted characters\n        parameterValue = removeBackslashes(inside);\n        // If we did have an unmatched '\\' add it back to the end\n        if (insideMatch[1]) parameterValue += '\\\\';\n      } else {\n        // Handle the normal parameter value form\n        const valueEnd = StringPrototypeIndexOf(str\x2C SEMICOLON\x2C position);\n        const rawValue = valueEnd === -1 ?\n          StringPrototypeSlice(str\x2C position) :\n          StringPrototypeSlice(str\x2C position\x2C valueEnd);\n        position += rawValue.length;\n        const trimmedValue = StringPrototypeSlice(\n          rawValue\x2C\n          0\x2C\n          SafeStringPrototypeSearch(rawValue\x2C START_ENDING_WHITESPACE)\x2C\n        );\n        // Ignore parameters without values\n        if (trimmedValue === '') continue;\n        parameterValue = trimmedValue;\n      }\n      if (\n        parameterString !== '' &&\n        SafeStringPrototypeSearch(parameterString\x2C\n                                  NOT_HTTP_TOKEN_CODE_POINT) === -1 &&\n        SafeStringPrototypeSearch(parameterValue\x2C\n                                  NOT_HTTP_QUOTED_STRING_CODE_POINT) === -1 &&\n        paramsMap.has(parameterString) === false\n      ) {\n        paramsMap.set(parameterString\x2C parameterValue);\n      }\n      position++;\n    }\n    this.#data = paramsMap;\n    this.#processed = true;\n  }\n}\nconst MIMEParamsStringify = MIMEParams.prototype.toString;\nObjectDefineProperty(MIMEParams.prototype\x2C SymbolIterator\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  value: MIMEParams.prototype.entries\x2C\n  writable: true\x2C\n});\nObjectDefineProperty(MIMEParams.prototype\x2C 'toJSON'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  value: MIMEParamsStringify\x2C\n  writable: true\x2C\n});\n\nconst { instantiateMimeParams } = MIMEParams;\ndelete MIMEParams.instantiateMimeParams;\n\nclass MIMEType {\n  #type;\n  #subtype;\n  #parameters;\n  constructor(string) {\n    string = `${string}`;\n    const data = parseTypeAndSubtype(string);\n    this.#type = data[0];\n    this.#subtype = data[1];\n    this.#parameters = instantiateMimeParams(StringPrototypeSlice(string\x2C data[2]));\n  }\n\n  get type() {\n    return this.#type;\n  }\n\n  set type(v) {\n    v = `${v}`;\n    const invalidTypeIndex = SafeStringPrototypeSearch(v\x2C NOT_HTTP_TOKEN_CODE_POINT);\n    if (v.length === 0 || invalidTypeIndex !== -1) {\n      throw new ERR_INVALID_MIME_SYNTAX('type'\x2C v\x2C invalidTypeIndex);\n    }\n    this.#type = toASCIILower(v);\n  }\n\n  get subtype() {\n    return this.#subtype;\n  }\n\n  set subtype(v) {\n    v = `${v}`;\n    const invalidSubtypeIndex = SafeStringPrototypeSearch(v\x2C NOT_HTTP_TOKEN_CODE_POINT);\n    if (v.length === 0 || invalidSubtypeIndex !== -1) {\n      throw new ERR_INVALID_MIME_SYNTAX('subtype'\x2C v\x2C invalidSubtypeIndex);\n    }\n    this.#subtype = toASCIILower(v);\n  }\n\n  get essence() {\n    return `${this.#type}/${this.#subtype}`;\n  }\n\n  get params() {\n    return this.#parameters;\n  }\n\n  toString() {\n    let ret = `${this.#type}/${this.#subtype}`;\n    const paramStr = FunctionPrototypeCall(MIMEParamsStringify\x2C this.#parameters);\n    if (paramStr.length) ret += `;${paramStr}`;\n    return ret;\n  }\n}\nObjectDefineProperty(MIMEType.prototype\x2C 'toJSON'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  value: MIMEType.prototype.toString\x2C\n  writable: true\x2C\n});\n\nmodule.exports = {\n  MIMEParams\x2C\n  MIMEType\x2C\n};\n
code-source-info,0x12ea98647d10,83,0,11171,C0O0C4O11171,,
code-creation,JS,9,66292,0x12ea98647fc0,609, node:internal/mime:1:1,0xcb65970ffd0,~
code-source-info,0x12ea98647fc0,83,0,11171,C0O0C89O25C95O50C100O74C106O97C112O108C118O137C124O162C130O188C136O212C142O242C147O314C150O314C155O340C160O285C166O383C171O383C173O458C178O458C180O523C185O523C187O571C192O571C194O838C196O838C198O861C200O861C202O2520C207O2520C209O2559C214O2559C216O3250C220O3250C367O9237C372O9247C376O9226C378O9289C383O9300C388O9379C393O9389C404O9257C409O9452C424O9525C428O9420C433O9577C439O9615C553O10998C566O11080C571O11090C579O10968C584O11123C591O11144C597O11158C603O11138C608O11170,,
code-creation,JS,9,66333,0x12ea98648308,29,MIMEType node:internal/mime:326:16,0xcb659710968,~
code-source-info,0x12ea98648308,83,9672,10967,C4O9676C13O9685C22O9697C28O10967,,
code-creation,JS,9,66333,0x12ea986483a0,40,MIMEParams node:internal/mime:124:18,0xcb6597105b8,~
code-source-info,0x12ea986483a0,83,3509,9197,C3O3521C10O3521C23O3684C32O3702C39O9197,,
tick,0x1924a5ecc,66375,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98647c40,0x107f89188,0x107f88e30,0x12ea986478f2,0x107f89188,0x107f88e30,0x12ea98647559,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,JS,9,66458,0x12ea98648548,463,defaultLoad node:internal/modules/esm/load:89:27,0xcb65970caa0,~
code-source-info,0x12ea
code-creation,JS,9,66500,0x12ea98648848,78,throwIfUnsupportedURLScheme node:internal/modules/esm/load:203:37,0xcb65970cb50,~
code-source-info,0x12ea98648848,81,5472,5887,C0O5572C7O5578C15O5592C19O5626C26O5654C33O5682C40O5718C47O5749C52O5793C57O5823C70O5829C75O5823C77O5886,,
code-creation,JS,9,66542,0x12ea986489d8,234,getSource node:internal/modules/esm/load:38:25,0xcb65970c9f0,~
code-source-info,0x12ea986489d8,81,1034,1667,C10O1034C18O1061C23O1071C28O1107C29O1119C31O1129C33O1142C38O1197C44O1197C49O1228C54O1179C59O1257C71O1251C101O1286C103O1299C108O1333C113O1333C118O1360C120O1371C125O1394C137O1400C142O1394C143O1450C148O1477C153O1459C160O1524C165O1546C178O1552C183O1546C184O1617C191O1643C197O1656C211O1665,,
tick,0x19239f66c,67208,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,67208,0x12ea98648b80,5, node:internal/fs/promises:1:1,0xcb659715950,~
script-source,84,node:internal/fs/promises,'use strict';\n\nconst {\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathMax\x2C\n  MathMin\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  SafeArrayIterator\x2C\n  SafePromisePrototypeFinally\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  F_OK\x2C\n  O_SYMLINK\x2C\n  O_WRONLY\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n} = constants;\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst { isBuffer: BufferIsBuffer } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_ACCESS_DENIED\x2C\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_STATE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n  }\x2C\n} = require('internal/errors');\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  copyObject\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n  preprocessSymlinkDestination\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst { opendir } = require('internal/fs/dir');\nconst {\n  parseFileMode\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n  kValidateObjectAllowNullable\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst { isAbsolute } = pathModule;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  emitExperimentalWarning\x2C\n  getLazy\x2C\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n  promisify\x2C\n  isWindows\x2C\n  isMacOS\x2C\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\nconst EventEmitter = require('events');\nconst { StringDecoder } = require('string_decoder');\nconst { kFSWatchStart\x2C watch } = require('internal/fs/watchers');\nconst nonNativeWatcher = require('internal/fs/recursive_watch');\nconst { isIterable } = require('internal/streams/utils');\nconst assert = require('internal/assert');\n\nconst permission = require('internal/process/permission');\n\nconst kHandle = Symbol('kHandle');\nconst kFd = Symbol('kFd');\nconst kRefs = Symbol('kRefs');\nconst kClosePromise = Symbol('kClosePromise');\nconst kCloseResolve = Symbol('kCloseResolve');\nconst kCloseReject = Symbol('kCloseReject');\nconst kRef = Symbol('kRef');\nconst kUnref = Symbol('kUnref');\nconst kLocked = Symbol('kLocked');\n\nconst { kUsePromises } = binding;\nconst { Interface } = require('internal/readline/interface');\nconst {\n  kDeserialize\x2C kTransfer\x2C kTransferList\x2C markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst getDirectoryEntriesPromise = promisify(getDirents);\nconst validateRmOptionsPromise = promisify(validateRmOptions);\n\nlet cpPromises;\nfunction lazyLoadCpPromises() {\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\n}\n\n// Lazy loaded to avoid circular dependency.\nlet fsStreams;\nfunction lazyFsStreams() {\n  return fsStreams ??= require('internal/fs/streams');\n}\n\nconst lazyRimRaf = getLazy(() => require('internal/fs/rimraf').rimrafPromises);\n\n// By the time the C++ land creates an error for a promise rejection (likely from a\n// libuv callback)\x2C there is already no JS frames on the stack. So we need to\n// wait until V8 resumes execution back to JS land before we have enough information\n// to re-capture the stack trace.\nfunction handleErrorFromBinding(error) {\n  ErrorCaptureStackTrace(error\x2C handleErrorFromBinding);\n  return PromiseReject(error);\n}\n\nclass FileHandle extends EventEmitter {\n  /**\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\n   */\n  constructor(filehandle) {\n    super();\n    markTransferMode(this\x2C false\x2C true);\n    this[kHandle] = filehandle;\n    this[kFd] = filehandle ? filehandle.fd : -1;\n\n    this[kRefs] = 1;\n    this[kClosePromise] = null;\n  }\n\n  getAsyncId() {\n    return this[kHandle].getAsyncId();\n  }\n\n  get fd() {\n    return this[kFd];\n  }\n\n  appendFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  chmod(mode) {\n    return fsCall(fchmod\x2C this\x2C mode);\n  }\n\n  chown(uid\x2C gid) {\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\n  }\n\n  datasync() {\n    return fsCall(fdatasync\x2C this);\n  }\n\n  sync() {\n    return fsCall(fsync\x2C this);\n  }\n\n  read(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  readv(buffers\x2C position) {\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\n  }\n\n  readFile(options) {\n    return fsCall(readFile\x2C this\x2C options);\n  }\n\n  readLines(options = undefined) {\n    return new Interface({\n      input: this.createReadStream(options)\x2C\n      crlfDelay: Infinity\x2C\n    });\n  }\n\n  stat(options) {\n    return fsCall(fstat\x2C this\x2C options);\n  }\n\n  truncate(len = 0) {\n    return fsCall(ftruncate\x2C this\x2C len);\n  }\n\n  utimes(atime\x2C mtime) {\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\n  }\n\n  write(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  writev(buffers\x2C position) {\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\n  }\n\n  writeFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  close = () => {\n    if (this[kFd] === -1) {\n      return PromiseResolve();\n    }\n\n    if (this[kClosePromise]) {\n      return this[kClosePromise];\n    }\n\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        this[kHandle].close()\x2C\n        () => { this[kClosePromise] = undefined; }\x2C\n      );\n    } else {\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        new Promise((resolve\x2C reject) => {\n          this[kCloseResolve] = resolve;\n          this[kCloseReject] = reject;\n        })\x2C () => {\n          this[kClosePromise] = undefined;\n          this[kCloseReject] = undefined;\n          this[kCloseResolve] = undefined;\n        }\x2C\n      );\n    }\n\n    this.emit('close');\n    return this[kClosePromise];\n  };\n\n  async [SymbolAsyncDispose]() {\n    return this.close();\n  }\n\n  /**\n   * @typedef {import('../webstreams/readablestream').ReadableStream\n   * } ReadableStream\n   * @param {{\n   *   type?: string;\n   *   }} [options]\n   * @returns {ReadableStream}\n   */\n  readableWebStream(options = kEmptyObject) {\n    if (this[kFd] === -1)\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\n    if (this[kClosePromise])\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\n    if (this[kLocked])\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\n    this[kLocked] = true;\n\n    if (options.type !== undefined) {\n      validateString(options.type\x2C 'options.type');\n    }\n\n    let readable;\n\n    if (options.type !== 'bytes') {\n      const {\n        newReadableStreamFromStreamBase\x2C\n      } = require('internal/webstreams/adapters');\n      readable = newReadableStreamFromStreamBase(\n        this[kHandle]\x2C\n        undefined\x2C\n        { ondone: () => this[kUnref]() });\n    } else {\n      const {\n        ReadableStream\x2C\n      } = require('internal/webstreams/readablestream');\n\n      const readFn = FunctionPrototypeBind(this.read\x2C this);\n      const ondone = FunctionPrototypeBind(this[kUnref]\x2C this);\n\n      readable = new ReadableStream({\n        type: 'bytes'\x2C\n        autoAllocateChunkSize: 16384\x2C\n\n        async pull(controller) {\n          const view = controller.byobRequest.view;\n          const { bytesRead } = await readFn(view\x2C view.byteOffset\x2C view.byteLength);\n\n          if (bytesRead === 0) {\n            ondone();\n            controller.close();\n          }\n\n          controller.byobRequest.respond(bytesRead);\n        }\x2C\n\n        cancel() {\n          ondone();\n        }\x2C\n      });\n    }\n\n    const {\n      readableStreamCancel\x2C\n    } = require('internal/webstreams/readablestream');\n    this[kRef]();\n    this.once('close'\x2C () => {\n      readableStreamCancel(readable);\n    });\n\n    return readable;\n  }\n\n  /**\n   * @typedef {import('./streams').ReadStream\n   * } ReadStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   end?: number;\n   *   highWaterMark?: number;\n   *   }} [options]\n   * @returns {ReadStream}\n   */\n  createReadStream(options = undefined) {\n    const { ReadStream } = lazyFsStreams();\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  /**\n   * @typedef {import('./streams').WriteStream\n   * } WriteStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   highWaterMark?: number;\n   *   flush?: boolean;\n   *   }} [options]\n   * @returns {WriteStream}\n   */\n  createWriteStream(options = undefined) {\n    const { WriteStream } = lazyFsStreams();\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  [kTransfer]() {\n    if (this[kClosePromise] || this[kRefs] > 1) {\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\n                             'DataCloneError');\n    }\n\n    const handle = this[kHandle];\n    this[kFd] = -1;\n    this[kHandle] = null;\n    this[kRefs] = 0;\n\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    return [ this[kHandle] ];\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kFd] = handle.fd;\n  }\n\n  [kRef]() {\n    this[kRefs]++;\n  }\n\n  [kUnref]() {\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      PromisePrototypeThen(\n        this[kHandle].close()\x2C\n        this[kCloseResolve]\x2C\n        this[kCloseReject]\x2C\n      );\n    }\n  }\n}\n\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\n  return PromisePrototypeThen(\n    fileOpPromise\x2C\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\n    (opError) =>\n      PromisePrototypeThen(\n        closeFunc()\x2C\n        () => PromiseReject(opError)\x2C\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\x2C\n      )\x2C\n  );\n}\n\nasync function handleFdSync(fileOpPromise\x2C handle) {\n  return PromisePrototypeThen(\n    fileOpPromise\x2C\n    (result) => PromisePrototypeThen(\n      handle.sync()\x2C\n      () => result\x2C\n      (syncError) => PromiseReject(syncError)\x2C\n    )\x2C\n    (opError) => PromiseReject(opError)\x2C\n  );\n}\n\nasync function fsCall(fn\x2C handle\x2C ...args) {\n  assert(handle[kRefs] !== undefined\x2C\n         'handle must be an instance of FileHandle');\n\n  if (handle.fd === -1) {\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error('file closed');\n    err.code = 'EBADF';\n    err.syscall = fn.name;\n    throw err;\n  }\n\n  try {\n    handle[kRef]();\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\n  } finally {\n    handle[kUnref]();\n  }\n}\n\nfunction checkAborted(signal) {\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal.reason });\n}\n\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\n  checkAborted(signal);\n  if (isCustomIterable(data)) {\n    for await (const buf of data) {\n      checkAborted(signal);\n      const toWrite =\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\n      let remaining = toWrite.byteLength;\n      while (remaining > 0) {\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\n        const { bytesWritten } = await write(\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\n        remaining -= bytesWritten;\n        checkAborted(signal);\n      }\n    }\n    return;\n  }\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n  let remaining = data.byteLength;\n  if (remaining === 0) return;\n  do {\n    checkAborted(signal);\n    const { bytesWritten } =\n      await write(filehandle\x2C data\x2C 0\x2C\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\n    remaining -= bytesWritten;\n    data = new Uint8Array(\n      data.buffer\x2C\n      data.byteOffset + bytesWritten\x2C\n      data.byteLength - bytesWritten\x2C\n    );\n  } while (remaining > 0);\n}\n\nasync function readFileHandle(filehandle\x2C options) {\n  const signal = options?.signal;\n  const encoding = options?.encoding;\n  const decoder = encoding && new StringDecoder(encoding);\n\n  checkAborted(signal);\n\n  const statFields = await PromisePrototypeThen(\n    binding.fstat(filehandle.fd\x2C false\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n\n  checkAborted(signal);\n\n  let size = 0;\n  let length = 0;\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\n    size = statFields[8/* size */];\n    length = encoding ? MathMin(size\x2C kReadFileBufferLength) : size;\n  }\n  if (length === 0) {\n    length = kReadFileUnknownBufferLength;\n  }\n\n  if (size > kIoMaxLength)\n    throw new ERR_FS_FILE_TOO_LARGE(size);\n\n  let totalRead = 0;\n  const noSize = size === 0;\n  let buffer = Buffer.allocUnsafeSlow(length);\n  let result = '';\n  let offset = 0;\n  let buffers;\n  const chunkedRead = length > kReadFileBufferLength;\n\n  while (true) {\n    checkAborted(signal);\n\n    if (chunkedRead) {\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\n    }\n\n    const bytesRead = (await PromisePrototypeThen(\n      binding.read(filehandle.fd\x2C buffer\x2C offset\x2C length\x2C -1\x2C kUsePromises)\x2C\n      undefined\x2C\n      handleErrorFromBinding\x2C\n    )) ?? 0;\n    totalRead += bytesRead;\n\n    if (bytesRead === 0 ||\n        totalRead === size ||\n        (bytesRead !== buffer.length && !chunkedRead && !noSize)) {\n      const singleRead = bytesRead === totalRead;\n\n      const bytesToCheck = chunkedRead ? totalRead : bytesRead;\n\n      if (bytesToCheck !== buffer.length) {\n        buffer = buffer.subarray(0\x2C bytesToCheck);\n      }\n\n      if (!encoding) {\n        if (noSize && !singleRead) {\n          ArrayPrototypePush(buffers\x2C buffer);\n          return Buffer.concat(buffers\x2C totalRead);\n        }\n        return buffer;\n      }\n\n      if (singleRead) {\n        return buffer.toString(encoding);\n      }\n      result += decoder.end(buffer);\n      return result;\n    }\n    const readBuffer = bytesRead !== buffer.length ?\n      buffer.subarray(0\x2C bytesRead) :\n      buffer;\n    if (encoding) {\n      result += decoder.write(readBuffer);\n    } else if (size !== 0) {\n      offset = totalRead;\n    } else {\n      buffers ??= [];\n      // Unknown file size requires chunks.\n      ArrayPrototypePush(buffers\x2C readBuffer);\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n    }\n  }\n}\n\n// All of the functions are defined as async in order to ensure that errors\n// thrown cause promise rejections rather than being thrown synchronously.\nasync function access(path\x2C mode = F_OK) {\n  return await PromisePrototypeThen(\n    binding.access(getValidatedPath(path)\x2C mode\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function cp(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\n}\n\nasync function copyFile(src\x2C dest\x2C mode) {\n  return await PromisePrototypeThen(\n    binding.copyFile(\n      getValidatedPath(src\x2C 'src')\x2C\n      getValidatedPath(dest\x2C 'dest')\x2C\n      mode\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\n// fsPromises.open() uses the fs.FileHandle class.\nasync function open(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  return new FileHandle(await PromisePrototypeThen(\n    binding.openFileHandle(path\x2C flagsNumber\x2C mode\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  ));\n}\n\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\n  let buffer = bufferOrParams;\n  if (!isArrayBufferView(buffer)) {\n    // This is fh.read(params)\n    if (bufferOrParams !== undefined) {\n      validateObject(bufferOrParams\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n    ({\n      buffer = Buffer.alloc(16384)\x2C\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = bufferOrParams ?? kEmptyObject);\n\n    validateBuffer(buffer);\n  }\n\n  if (offset !== null && typeof offset === 'object') {\n    // This is fh.read(buffer\x2C options)\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offset);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length ??= buffer.byteLength - offset;\n\n  if (length === 0)\n    return { __proto__: null\x2C bytesRead: length\x2C buffer };\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  const bytesRead = (await PromisePrototypeThen(\n    binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C position\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  )) || 0;\n\n  return { __proto__: null\x2C bytesRead\x2C buffer };\n}\n\nasync function readv(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesRead = (await PromisePrototypeThen(\n    binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  )) || 0;\n  return { __proto__: null\x2C bytesRead\x2C buffers };\n}\n\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  if (buffer?.byteLength === 0)\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffer };\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    const bytesWritten =\n      (await PromisePrototypeThen(\n        binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\n                            length\x2C position\x2C kUsePromises)\x2C\n        undefined\x2C\n        handleErrorFromBinding\x2C\n      )) || 0;\n    return { __proto__: null\x2C bytesWritten\x2C buffer };\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n  validateEncoding(buffer\x2C length);\n  const bytesWritten = (await PromisePrototypeThen(\n    binding.writeString(handle.fd\x2C buffer\x2C offset\x2C length\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  )) || 0;\n  return { __proto__: null\x2C bytesWritten\x2C buffer };\n}\n\nasync function writev(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  if (buffers.length === 0) {\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffers };\n  }\n\n  const bytesWritten = (await PromisePrototypeThen(\n    binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  )) || 0;\n  return { __proto__: null\x2C bytesWritten\x2C buffers };\n}\n\nasync function rename(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return await PromisePrototypeThen(\n    binding.rename(oldPath\x2C newPath\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function truncate(path\x2C len = 0) {\n  const fd = await open(path\x2C 'r+');\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\n}\n\nasync function ftruncate(handle\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  return await PromisePrototypeThen(\n    binding.ftruncate(handle.fd\x2C len\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function rm(path\x2C options) {\n  path = getValidatedPath(path);\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\n  return lazyRimRaf()(path\x2C options);\n}\n\nasync function rmdir(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmdirOptions(options);\n\n  if (options.recursive) {\n    emitRecursiveRmdirWarning();\n    const stats = await stat(path);\n    if (stats.isDirectory()) {\n      return lazyRimRaf()(path\x2C options);\n    }\n  }\n\n  return await PromisePrototypeThen(\n    binding.rmdir(path\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function fdatasync(handle) {\n  return await PromisePrototypeThen(\n    binding.fdatasync(handle.fd\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function fsync(handle) {\n  return await PromisePrototypeThen(\n    binding.fsync(handle.fd\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function mkdir(path\x2C options) {\n  if (typeof options === 'number' || typeof options === 'string') {\n    options = { mode: options };\n  }\n  const {\n    recursive = false\x2C\n    mode = 0o777\x2C\n  } = options || kEmptyObject;\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  return await PromisePrototypeThen(\n    binding.mkdir(\n      path\x2C\n      parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C\n      recursive\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function readdirRecursive(originalPath\x2C options) {\n  const result = [];\n  const queue = [\n    [\n      originalPath\x2C\n      await PromisePrototypeThen(\n        binding.readdir(\n          originalPath\x2C\n          options.encoding\x2C\n          !!options.withFileTypes\x2C\n          kUsePromises\x2C\n        )\x2C\n        undefined\x2C\n        handleErrorFromBinding\x2C\n      )\x2C\n    ]\x2C\n  ];\n\n\n  if (options.withFileTypes) {\n    while (queue.length > 0) {\n      // If we want to implement BFS make this a `shift` call instead of `pop`\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\n      for (const dirent of getDirents(path\x2C readdir)) {\n        ArrayPrototypePush(result\x2C dirent);\n        if (dirent.isDirectory()) {\n          const direntPath = pathModule.join(path\x2C dirent.name);\n          ArrayPrototypePush(queue\x2C [\n            direntPath\x2C\n            await PromisePrototypeThen(\n              binding.readdir(\n                direntPath\x2C\n                options.encoding\x2C\n                true\x2C\n                kUsePromises\x2C\n              )\x2C\n              undefined\x2C\n              handleErrorFromBinding\x2C\n            )\x2C\n          ]);\n        }\n      }\n    }\n  } else {\n    while (queue.length > 0) {\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\n      for (const ent of readdir) {\n        const direntPath = pathModule.join(path\x2C ent);\n        const stat = binding.internalModuleStat(binding\x2C direntPath);\n        ArrayPrototypePush(\n          result\x2C\n          pathModule.relative(originalPath\x2C direntPath)\x2C\n        );\n        if (stat === 1) {\n          ArrayPrototypePush(queue\x2C [\n            direntPath\x2C\n            await PromisePrototypeThen(\n              binding.readdir(\n                direntPath\x2C\n                options.encoding\x2C\n                false\x2C\n                kUsePromises\x2C\n              )\x2C\n              undefined\x2C\n              handleErrorFromBinding\x2C\n            )\x2C\n          ]);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nasync function readdir(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive) {\n    return readdirRecursive(path\x2C options);\n  }\n  const result = await PromisePrototypeThen(\n    binding.readdir(\n      path\x2C\n      options.encoding\x2C\n      !!options.withFileTypes\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n  return options.withFileTypes ?\n    getDirectoryEntriesPromise(path\x2C result) :\n    result;\n}\n\nasync function readlink(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  return await PromisePrototypeThen(\n    binding.readlink(path\x2C options.encoding\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function symlink(target\x2C path\x2C type_) {\n  let type = (typeof type_ === 'string' ? type_ : null);\n  if (isWindows && type === null) {\n    try {\n      const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n      type = (await stat(absoluteTarget)).isDirectory() ? 'dir' : 'file';\n    } catch {\n      // Default to 'file' if path is invalid or file does not exist\n      type = 'file';\n    }\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        throw new ERR_ACCESS_DENIED('relative symbolic link target');\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  return await PromisePrototypeThen(\n    binding.symlink(\n      preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n      path\x2C\n      stringToSymlinkType(type)\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function fstat(handle\x2C options = { bigint: false }) {\n  const result = await PromisePrototypeThen(\n    binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n  return getStatsFromBinding(result);\n}\n\nasync function lstat(path\x2C options = { bigint: false }) {\n  const result = await PromisePrototypeThen(\n    binding.lstat(getValidatedPath(path)\x2C options.bigint\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n  return getStatsFromBinding(result);\n}\n\nasync function stat(path\x2C options = { bigint: false }) {\n  const result = await PromisePrototypeThen(\n    binding.stat(getValidatedPath(path)\x2C options.bigint\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n  return getStatsFromBinding(result);\n}\n\nasync function statfs(path\x2C options = { bigint: false }) {\n  const result = await PromisePrototypeThen(\n    binding.statfs(path\x2C options.bigint\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n  return getStatFsFromBinding(result);\n}\n\nasync function link(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return await PromisePrototypeThen(\n    binding.link(existingPath\x2C newPath\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function unlink(path) {\n  return await PromisePrototypeThen(\n    binding.unlink(getValidatedPath(path)\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function fchmod(handle\x2C mode) {\n  mode = parseFileMode(mode\x2C 'mode');\n  return await PromisePrototypeThen(\n    binding.fchmod(handle.fd\x2C mode\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function chmod(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  return await PromisePrototypeThen(\n    binding.chmod(path\x2C mode\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function lchmod(path\x2C mode) {\n  if (O_SYMLINK === undefined)\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\n\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\n}\n\nasync function lchown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return await PromisePrototypeThen(\n    binding.lchown(path\x2C uid\x2C gid\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function fchown(handle\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return await PromisePrototypeThen(\n    binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function chown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return await PromisePrototypeThen(\n    binding.chown(path\x2C uid\x2C gid\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function utimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return await PromisePrototypeThen(\n    binding.utimes(\n      path\x2C\n      toUnixTimestamp(atime)\x2C\n      toUnixTimestamp(mtime)\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function futimes(handle\x2C atime\x2C mtime) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  return await PromisePrototypeThen(\n    binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function lutimes(path\x2C atime\x2C mtime) {\n  return await PromisePrototypeThen(\n    binding.lutimes(\n      getValidatedPath(path)\x2C\n      toUnixTimestamp(atime)\x2C\n      toUnixTimestamp(mtime)\x2C\n      kUsePromises\x2C\n    )\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function realpath(path\x2C options) {\n  options = getOptions(options);\n  return await PromisePrototypeThen(\n    binding.realpath(getValidatedPath(path)\x2C options.encoding\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function mkdtemp(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  return await PromisePrototypeThen(\n    binding.mkdtemp(prefix\x2C options.encoding\x2C kUsePromises)\x2C\n    undefined\x2C\n    handleErrorFromBinding\x2C\n  );\n}\n\nasync function writeFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n  const flag = options.flag || 'w';\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  validateAbortSignal(options.signal);\n  if (path instanceof FileHandle)\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C options.mode);\n  let writeOp = writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding);\n\n  if (flush) {\n    writeOp = handleFdSync(writeOp\x2C fd);\n  }\n\n  return handleFdClose(writeOp\x2C fd.close);\n}\n\nfunction isCustomIterable(obj) {\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\n}\n\nasync function appendFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n  options = copyObject(options);\n  options.flag ||= 'a';\n  return writeFile(path\x2C data\x2C options);\n}\n\nasync function readFile(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const flag = options.flag || 'r';\n\n  if (path instanceof FileHandle)\n    return readFileHandle(path\x2C options);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C 0o666);\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\n}\n\nasync function* _watch(filename\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n\n    // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n    // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n    // e.g. Linux due to the limitations of inotify.\n    if (options.recursive && !isMacOS && !isWindows) {\n      const watcher = new nonNativeWatcher.FSWatcher(options);\n      watcher[kFSWatchStart](filename);\n      yield* watcher;\n      return;\n    }\n  }\n\n  yield* watch(filename\x2C options);\n}\n\nconst lazyGlob = getLazy(() => require('internal/fs/glob').Glob);\nasync function* glob(pattern\x2C options) {\n  emitExperimentalWarning('glob');\n  const Glob = lazyGlob();\n  yield* new Glob(pattern\x2C options).glob();\n}\n\nmodule.exports = {\n  exports: {\n    access\x2C\n    copyFile\x2C\n    cp\x2C\n    glob\x2C\n    open\x2C\n    opendir: promisify(opendir)\x2C\n    rename\x2C\n    truncate\x2C\n    rm\x2C\n    rmdir\x2C\n    mkdir\x2C\n    readdir\x2C\n    readlink\x2C\n    symlink\x2C\n    lstat\x2C\n    stat\x2C\n    statfs\x2C\n    link\x2C\n    unlink\x2C\n    chmod\x2C\n    lchmod\x2C\n    lchown\x2C\n    chown\x2C\n    utimes\x2C\n    lutimes\x2C\n    realpath\x2C\n    mkdtemp\x2C\n    writeFile\x2C\n    appendFile\x2C\n    readFile\x2C\n    watch: !isMacOS && !isWindows ? _watch : watch\x2C\n    constants\x2C\n  }\x2C\n\n  FileHandle\x2C\n  kRef\x2C\n  kUnref\x2C\n};\n
code-source-info,0x12ea98648b80,84,0,33356,C0O0C4O33356,,
code-creation,JS,9,68333,0x12ea98649350,2195, node:internal/fs/promises:1:1,0xcb659716e90,~
code-source-info,0x12ea
code-creation,JS,9,68417,0x12ea98649e78,19,FileHandle node:internal/fs/promises:153:39,0xcb659718ac8,~
code-source-info,0x12ea98649e78,84,3990,10090,C0O3990C9O5634C18O10090,,
tick,0x1012e4a78,68458,0,0x0,0,0x107f890bc,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,68667,0x12ea98649f08,5, node:internal/fs/dir:1:1,0xcb65971ae00,~
script-source,85,node:internal/fs/dir,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  FunctionPrototypeBind\x2C\n  ObjectDefineProperty\x2C\n  PromiseReject\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\n\nconst pathModule = require('path');\nconst binding = internalBinding('fs');\nconst dirBinding = internalBinding('fs_dir');\nconst {\n  codes: {\n    ERR_DIR_CLOSED\x2C\n    ERR_DIR_CONCURRENT_OPERATION\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst internalUtil = require('internal/util');\nconst {\n  getDirent\x2C\n  getOptions\x2C\n  getValidatedPath\x2C\n} = require('internal/fs/utils');\nconst {\n  validateFunction\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nclass Dir {\n  #handle;\n  #path;\n  #bufferedEntries = [];\n  #closed = false;\n  #options;\n  #readPromisified;\n  #closePromisified;\n  // Either `null` or an Array of pending operations (= functions to be called\n  // once the current operation is done).\n  #operationQueue = null;\n\n  constructor(handle\x2C path\x2C options) {\n    if (handle == null) throw new ERR_MISSING_ARGS('handle');\n    this.#handle = handle;\n    this.#path = path;\n    this.#options = {\n      bufferSize: 32\x2C\n      ...getOptions(options\x2C {\n        encoding: 'utf8'\x2C\n      })\x2C\n    };\n\n    validateUint32(this.#options.bufferSize\x2C 'options.bufferSize'\x2C true);\n\n    this.#readPromisified = FunctionPrototypeBind(\n      internalUtil.promisify(this.#readImpl)\x2C this\x2C false);\n    this.#closePromisified = FunctionPrototypeBind(\n      internalUtil.promisify(this.close)\x2C this);\n  }\n\n  get path() {\n    return this.#path;\n  }\n\n  read(callback) {\n    return this.#readImpl(true\x2C callback);\n  }\n\n  #readImpl(maybeSync\x2C callback) {\n    if (this.#closed === true) {\n      throw new ERR_DIR_CLOSED();\n    }\n\n    if (callback === undefined) {\n      return this.#readPromisified();\n    }\n\n    validateFunction(callback\x2C 'callback');\n\n    if (this.#operationQueue !== null) {\n      ArrayPrototypePush(this.#operationQueue\x2C () => {\n        this.#readImpl(maybeSync\x2C callback);\n      });\n      return;\n    }\n\n    if (this.#bufferedEntries.length > 0) {\n      try {\n        const dirent = ArrayPrototypeShift(this.#bufferedEntries);\n\n        if (this.#options.recursive && dirent.isDirectory()) {\n          this.readSyncRecursive(dirent);\n        }\n\n        if (maybeSync)\n          process.nextTick(callback\x2C null\x2C dirent);\n        else\n          callback(null\x2C dirent);\n        return;\n      } catch (error) {\n        return callback(error);\n      }\n    }\n\n    const req = new FSReqCallback();\n    req.oncomplete = (err\x2C result) => {\n      process.nextTick(() => {\n        const queue = this.#operationQueue;\n        this.#operationQueue = null;\n        for (const op of queue) op();\n      });\n\n      if (err || result === null) {\n        return callback(err\x2C result);\n      }\n\n      try {\n        this.processReadResult(this.#path\x2C result);\n        const dirent = ArrayPrototypeShift(this.#bufferedEntries);\n        if (this.#options.recursive && dirent.isDirectory()) {\n          this.readSyncRecursive(dirent);\n        }\n        callback(null\x2C dirent);\n      } catch (error) {\n        callback(error);\n      }\n    };\n\n    this.#operationQueue = [];\n    this.#handle.read(\n      this.#options.encoding\x2C\n      this.#options.bufferSize\x2C\n      req\x2C\n    );\n  }\n\n  processReadResult(path\x2C result) {\n    for (let i = 0; i < result.length; i += 2) {\n      ArrayPrototypePush(\n        this.#bufferedEntries\x2C\n        getDirent(\n          path\x2C\n          result[i]\x2C\n          result[i + 1]\x2C\n        )\x2C\n      );\n    }\n  }\n\n  readSyncRecursive(dirent) {\n    const path = pathModule.join(dirent.parentPath\x2C dirent.name);\n    const handle = dirBinding.opendir(\n      path\x2C\n      this.#options.encoding\x2C\n    );\n\n    // Terminate early\x2C since it's already thrown.\n    if (handle === undefined) {\n      return;\n    }\n\n    // Fully read the directory and buffer the entries.\n    // This is a naive solution and for very large sub-directories\n    // it can even block the event loop. Essentially\x2C `bufferSize` is\n    // not respected for recursive mode. This is a known limitation.\n    // Issue to fix: https://github.com/nodejs/node/issues/55764\n    let result;\n    while ((result = handle.read(\n      this.#options.encoding\x2C\n      this.#options.bufferSize\x2C\n    ))) {\n      this.processReadResult(path\x2C result);\n    }\n\n    handle.close();\n  }\n\n  readSync() {\n    if (this.#closed === true) {\n      throw new ERR_DIR_CLOSED();\n    }\n\n    if (this.#operationQueue !== null) {\n      throw new ERR_DIR_CONCURRENT_OPERATION();\n    }\n\n    if (this.#bufferedEntries.length > 0) {\n      const dirent = ArrayPrototypeShift(this.#bufferedEntries);\n      if (this.#options.recursive && dirent.isDirectory()) {\n        this.readSyncRecursive(dirent);\n      }\n      return dirent;\n    }\n\n    const result = this.#handle.read(\n      this.#options.encoding\x2C\n      this.#options.bufferSize\x2C\n    );\n\n    if (result === null) {\n      return result;\n    }\n\n    this.processReadResult(this.#path\x2C result);\n\n    const dirent = ArrayPrototypeShift(this.#bufferedEntries);\n    if (this.#options.recursive && dirent.isDirectory()) {\n      this.readSyncRecursive(dirent);\n    }\n    return dirent;\n  }\n\n  close(callback) {\n    // Promise\n    if (callback === undefined) {\n      if (this.#closed === true) {\n        return PromiseReject(new ERR_DIR_CLOSED());\n      }\n      return this.#closePromisified();\n    }\n\n    // callback\n    validateFunction(callback\x2C 'callback');\n\n    if (this.#closed === true) {\n      process.nextTick(callback\x2C new ERR_DIR_CLOSED());\n      return;\n    }\n\n    if (this.#operationQueue !== null) {\n      ArrayPrototypePush(this.#operationQueue\x2C () => {\n        this.close(callback);\n      });\n      return;\n    }\n\n    this.#closed = true;\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    this.#handle.close(req);\n  }\n\n  closeSync() {\n    if (this.#closed === true) {\n      throw new ERR_DIR_CLOSED();\n    }\n\n    if (this.#operationQueue !== null) {\n      throw new ERR_DIR_CONCURRENT_OPERATION();\n    }\n\n    this.#closed = true;\n    this.#handle.close();\n  }\n\n  async* entries() {\n    try {\n      while (true) {\n        const result = await this.#readPromisified();\n        if (result === null) {\n          break;\n        }\n        yield result;\n      }\n    } finally {\n      await this.#closePromisified();\n    }\n  }\n}\n\nObjectDefineProperty(Dir.prototype\x2C SymbolAsyncIterator\x2C {\n  __proto__: null\x2C\n  value: Dir.prototype.entries\x2C\n  enumerable: false\x2C\n  writable: true\x2C\n  configurable: true\x2C\n});\n\nfunction opendir(path\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : callback;\n  validateFunction(callback\x2C 'callback');\n\n  path = getValidatedPath(path);\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n  });\n\n  function opendirCallback(error\x2C handle) {\n    if (error) {\n      callback(error);\n    } else {\n      callback(null\x2C new Dir(handle\x2C path\x2C options));\n    }\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = opendirCallback;\n\n  dirBinding.opendir(\n    path\x2C\n    options.encoding\x2C\n    req\x2C\n  );\n}\n\nfunction opendirSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = getOptions(options\x2C { encoding: 'utf8' });\n\n  const handle = dirBinding.opendirSync(path);\n\n  return new Dir(handle\x2C path\x2C options);\n}\n\nmodule.exports = {\n  Dir\x2C\n  opendir\x2C\n  opendirSync\x2C\n};\n
code-source-info,0x12ea98649f08,85,0,7361,C0O0C4O7361,,
code-creation,JS,9,68917,0x12ea9864a140,489, node:internal/fs/dir:1:1,0xcb65971b110,~
code-source-info,0x12ea9864a140,85,0,7361,C0O0C70O25C76O47C82O70C88O95C93O119C99O136C104O194C107O194C111O194C113O227C116O227C121O269C124O269C128O269C130O400C133O400C138O313C143O319C149O339C155O373C161O437C167O485C170O485C174O485C176O570C179O570C184O521C190O534C196O548C202O650C205O650C210O610C216O630C419O683C421O6358C424O6383C429O6394C437O6449C442O6459C453O6358C458O7306C465O7327C471O7334C477O7345C483O7321C488O7360,,
code-creation,JS,9,68917,0x12ea9864a3f8,75,Dir node:internal/fs/dir:35:11,0xcb65971b5d8,~
code-source-info,0x12ea9864a3f8,85,693,6356,C4O697C13O708C21O736C31O752C41O761C50O773C59O793C67O953C74O6356,,
code-creation,Eval,9,69333,0x12ea9864a4c8,5, node:string_decoder:1:1,0xcb65971ca68,~
script-source,86,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSubarray\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  kIncompleteCharactersStart\x2C\n  kIncompleteCharactersEnd\x2C\n  kMissingBytes\x2C\n  kBufferedBytes\x2C\n  kEncodingField\x2C\n  kSize\x2C\n  decode\x2C\n  flush\x2C\n} = internalBinding('string_decoder');\nconst {\n  kIsEncodingSymbol\x2C\n  encodingsMap\x2C\n  normalizeEncoding: _normalizeEncoding\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_UNKNOWN_ENCODING\x2C\n} = require('internal/errors').codes;\nconst isEncoding = Buffer[kIsEncodingSymbol];\n\nconst kNativeDecoder = Symbol('kNativeDecoder');\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n/**\n * Normalize encoding notation\n * @param {string} enc\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\n *           | "base64" | "latin1" | "base64url"}\n * @throws {TypeError} Throws an error when encoding is invalid\n */\nfunction normalizeEncoding(enc) {\n  const nenc = _normalizeEncoding(enc);\n  if (nenc === undefined) {\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\n      throw new ERR_UNKNOWN_ENCODING(enc);\n    return enc;\n  }\n  return nenc;\n}\n\n/**\n * StringDecoder provides an interface for efficiently splitting a series of\n * buffers into a series of JS strings without breaking apart multi-byte\n * characters.\n * @param {string} [encoding=utf-8]\n */\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  this[kNativeDecoder] = Buffer.alloc(kSize);\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\n}\n\n/**\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\n * @param {string | Buffer | TypedArray | DataView} buf\n * @returns {string}\n * @throws {TypeError} Throws when buf is not in one of supported types\n */\nStringDecoder.prototype.write = function write(buf) {\n  if (typeof buf === 'string')\n    return buf;\n  if (!ArrayBufferIsView(buf))\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buf);\n  if (!this[kNativeDecoder]) {\n    throw new ERR_INVALID_THIS('StringDecoder');\n  }\n  return decode(this[kNativeDecoder]\x2C buf);\n};\n\n/**\n * Returns any remaining input stored in the internal buffer as a string.\n * After end() is called\x2C the stringDecoder object can be reused for new\n * input.\n * @param {string | Buffer | TypedArray | DataView} [buf]\n * @returns {string}\n */\nStringDecoder.prototype.end = function end(buf) {\n  let ret = '';\n  if (buf !== undefined)\n    ret = this.write(buf);\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\n    ret += flush(this[kNativeDecoder]);\n  return ret;\n};\n\n/* Everything below this line is undocumented legacy stuff. */\n/**\n *\n * @param {string | Buffer | TypedArray | DataView} buf\n * @param {number} offset\n * @returns {string}\n */\nStringDecoder.prototype.text = function text(buf\x2C offset) {\n  this[kNativeDecoder][kMissingBytes] = 0;\n  this[kNativeDecoder][kBufferedBytes] = 0;\n  return this.write(buf.slice(offset));\n};\n\nObjectDefineProperties(StringDecoder.prototype\x2C {\n  lastChar: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\n                                         kIncompleteCharactersStart\x2C\n                                         kIncompleteCharactersEnd);\n    }\x2C\n  }\x2C\n  lastNeed: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n  lastTotal: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kBufferedBytes] +\n             this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n});\n\nexports.StringDecoder = StringDecoder;\n
code-source-info,0x12ea9864a4c8,86,0,5141,C0O0C4O5141,,
code-creation,JS,9,69542,0x12ea9864a6b0,356, node:string_decoder:1:1,0xcb65971cc60,~
code-source-info,0x12ea9864a6b0,86,0,5141,C0O0C70O1159C76O1180C81O1206C86O1216C92O1282C95O1282C100O1271C106O1452C109O1452C114O1311C120O1341C126O1369C132O1386C138O1404C144O1422C150O1431C156O1441C162O1577C165O1577C170O1497C175O1518C181O1553C187O1683C190O1683C195O1709C200O1613C206O1637C212O1657C218O1736C223O1742C226O1736C228O1787C231O1787C235O1787C237O3137C246O3153C250O3801C259O3815C263O4202C272O4217C276O4416C286O4441C291O4514C305O4746C310O4819C324O4902C329O4975C343O4379C348O5102C350O5124C355O5140,,
tick,0x1012a4c24,69708,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea9864985e,0x107f89188,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,70042,0x12ea9864a908,5, node:internal/fs/watchers:1:1,0xcb65971e510,~
script-source,87,node:internal/fs/watchers,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseWithResolvers\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  UVException\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  kFsStatsFieldsNumber\x2C\n  StatWatcher: _StatWatcher\x2C\n} = internalBinding('fs');\n\nconst { FSEvent } = internalBinding('fs_event_wrap');\nconst { UV_ENOSPC } = internalBinding('uv');\nconst { EventEmitter } = require('events');\n\nconst {\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n} = require('internal/fs/utils');\n\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { owner_symbol }\x2C\n} = require('internal/async_hooks');\n\nconst { toNamespacedPath } = require('path');\n\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  Buffer: {\n    isEncoding\x2C\n  }\x2C\n} = require('buffer');\n\nconst assert = require('internal/assert');\n\nconst kOldStatus = Symbol('kOldStatus');\nconst kUseBigint = Symbol('kUseBigint');\n\nconst kFSWatchStart = Symbol('kFSWatchStart');\nconst kFSStatWatcherStart = Symbol('kFSStatWatcherStart');\nconst KFSStatWatcherRefCount = Symbol('KFSStatWatcherRefCount');\nconst KFSStatWatcherMaxRefCount = Symbol('KFSStatWatcherMaxRefCount');\nconst kFSStatWatcherAddOrCleanRef = Symbol('kFSStatWatcherAddOrCleanRef');\n\nfunction emitStop(self) {\n  self.emit('stop');\n}\n\nfunction StatWatcher(bigint) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._handle = null;\n  this[kOldStatus] = -1;\n  this[kUseBigint] = bigint;\n  this[KFSStatWatcherRefCount] = 1;\n  this[KFSStatWatcherMaxRefCount] = 1;\n}\nObjectSetPrototypeOf(StatWatcher.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(StatWatcher\x2C EventEmitter);\n\nfunction onchange(newStatus\x2C stats) {\n  const self = this[owner_symbol];\n  if (self[kOldStatus] === -1 &&\n      newStatus === -1 &&\n      stats[2/* new nlink */] === stats[16/* old nlink */]) {\n    return;\n  }\n\n  self[kOldStatus] = newStatus;\n  self.emit('change'\x2C getStatsFromBinding(stats)\x2C\n            getStatsFromBinding(stats\x2C kFsStatsFieldsNumber));\n}\n\n// At the moment if filename is undefined\x2C we\n// 1. Throw an Error if it's the first\n//    time Symbol('kFSStatWatcherStart') is called\n// 2. Return silently if Symbol('kFSStatWatcherStart') has already been called\n//    on a valid filename and the wrap has been initialized\n// This method is a noop if the watcher has already been started.\nStatWatcher.prototype[kFSStatWatcherStart] = function(filename\x2C\n                                                      persistent\x2C\n                                                      interval) {\n  if (this._handle !== null)\n    return;\n\n  this._handle = new _StatWatcher(this[kUseBigint]);\n  this._handle[owner_symbol] = this;\n  this._handle.onchange = onchange;\n  if (!persistent)\n    this.unref();\n\n  // uv_fs_poll is a little more powerful than ev_stat but we curb it for\n  // the sake of backwards compatibility.\n  this[kOldStatus] = -1;\n\n  filename = getValidatedPath(filename\x2C 'filename');\n  validateUint32(interval\x2C 'interval');\n  const err = this._handle.start(toNamespacedPath(filename)\x2C interval);\n  if (err) {\n    const error = new UVException({\n      errno: err\x2C\n      syscall: 'watch'\x2C\n      path: filename\x2C\n    });\n    error.filename = filename;\n    throw error;\n  }\n};\n\n// To maximize backward-compatibility for the end user\x2C\n// a no-op stub method has been added instead of\n// totally removing StatWatcher.prototype.start.\n// This should not be documented.\nStatWatcher.prototype.start = () => {};\n\n// FIXME(joyeecheung): this method is not documented while there is\n// another documented fs.unwatchFile(). The counterpart in\n// FSWatcher is .close()\n// This method is a noop if the watcher has not been started.\nStatWatcher.prototype.stop = function() {\n  if (this._handle === null)\n    return;\n\n  defaultTriggerAsyncIdScope(this._handle.getAsyncId()\x2C\n                             process.nextTick\x2C\n                             emitStop\x2C\n                             this);\n  this._handle.close();\n  this._handle = null;\n};\n\n// Clean up or add ref counters.\nStatWatcher.prototype[kFSStatWatcherAddOrCleanRef] = function(operate) {\n  if (operate === 'add') {\n    // Add a Ref\n    this[KFSStatWatcherRefCount]++;\n    this[KFSStatWatcherMaxRefCount]++;\n  } else if (operate === 'clean') {\n    // Clean up a single\n    this[KFSStatWatcherMaxRefCount]--;\n    this.unref();\n  } else if (operate === 'cleanAll') {\n    // Clean up all\n    this[KFSStatWatcherMaxRefCount] = 0;\n    this[KFSStatWatcherRefCount] = 0;\n    this._handle?.unref();\n  }\n};\n\nStatWatcher.prototype.ref = function() {\n  // Avoid refCount calling ref multiple times causing unref to have no effect.\n  if (this[KFSStatWatcherRefCount] === this[KFSStatWatcherMaxRefCount])\n    return this;\n  if (this._handle && this[KFSStatWatcherRefCount]++ === 0)\n    this._handle.ref();\n  return this;\n};\n\nStatWatcher.prototype.unref = function() {\n  // Avoid refCount calling unref multiple times causing ref to have no effect.\n  if (this[KFSStatWatcherRefCount] === 0) return this;\n  if (this._handle && --this[KFSStatWatcherRefCount] === 0)\n    this._handle.unref();\n  return this;\n};\n\n\nfunction FSWatcher() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._handle = new FSEvent();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onchange = (status\x2C eventType\x2C filename) => {\n    // TODO(joyeecheung): we may check self._handle.initialized here\n    // and return if that is false. This allows us to avoid firing the event\n    // after the handle is closed\x2C and to fire both UV_RENAME and UV_CHANGE\n    // if they are set by libuv at the same time.\n    if (status < 0) {\n      if (this._handle !== null) {\n        // We don't use this.close() here to avoid firing the close event.\n        this._handle.close();\n        this._handle = null;  // Make the handle garbage collectable.\n      }\n      const error = new UVException({\n        errno: status\x2C\n        syscall: 'watch'\x2C\n        path: filename\x2C\n      });\n      error.filename = filename;\n      this.emit('error'\x2C error);\n    } else {\n      this.emit('change'\x2C eventType\x2C filename);\n    }\n  };\n}\nObjectSetPrototypeOf(FSWatcher.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(FSWatcher\x2C EventEmitter);\n\n// At the moment if filename is undefined\x2C we\n// 1. Throw an Error if it's the first time Symbol('kFSWatchStart') is called\n// 2. Return silently if Symbol('kFSWatchStart') has already been called\n//    on a valid filename and the wrap has been initialized\n// 3. Return silently if the watcher has already been closed\n// This method is a noop if the watcher has already been started.\nFSWatcher.prototype[kFSWatchStart] = function(filename\x2C\n                                              persistent\x2C\n                                              recursive\x2C\n                                              encoding) {\n  if (this._handle === null) {  // closed\n    return;\n  }\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\n  if (this._handle.initialized) {  // already started\n    return;\n  }\n\n  filename = getValidatedPath(filename\x2C 'filename');\n\n  const err = this._handle.start(toNamespacedPath(filename)\x2C\n                                 persistent\x2C\n                                 recursive\x2C\n                                 encoding);\n  if (err) {\n    const error = new UVException({\n      errno: err\x2C\n      syscall: 'watch'\x2C\n      path: filename\x2C\n      message: err === UV_ENOSPC ?\n        'System limit for number of file watchers reached' : ''\x2C\n    });\n    error.filename = filename;\n    throw error;\n  }\n};\n\n// To maximize backward-compatibility for the end user\x2C\n// a no-op stub method has been added instead of\n// totally removing FSWatcher.prototype.start.\n// This should not be documented.\nFSWatcher.prototype.start = () => {};\n\n// This method is a noop if the watcher has not been started or\n// has already been closed.\nFSWatcher.prototype.close = function() {\n  if (this._handle === null) {  // closed\n    return;\n  }\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\n  if (!this._handle.initialized) {  // not started\n    return;\n  }\n  this._handle.close();\n  this._handle = null;  // Make the handle garbage collectable.\n  process.nextTick(emitCloseNT\x2C this);\n};\n\nFSWatcher.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n  return this;\n};\n\nFSWatcher.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n  return this;\n};\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(FSEvent.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nlet kResistStopPropagation;\n\nasync function* watch(filename\x2C options = kEmptyObject) {\n  const path = toNamespacedPath(getValidatedPath(filename));\n  validateObject(options\x2C 'options');\n\n  const {\n    persistent = true\x2C\n    recursive = false\x2C\n    encoding = 'utf8'\x2C\n    signal\x2C\n  } = options;\n\n  validateBoolean(persistent\x2C 'options.persistent');\n  validateBoolean(recursive\x2C 'options.recursive');\n  validateAbortSignal(signal\x2C 'options.signal');\n\n  if (encoding && !isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal.reason });\n\n  const handle = new FSEvent();\n  let { promise\x2C resolve\x2C reject } = PromiseWithResolvers();\n  const oncancel = () => {\n    handle.close();\n    reject(new AbortError(undefined\x2C { cause: signal?.reason }));\n  };\n\n  try {\n    if (signal) {\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n      signal.addEventListener('abort'\x2C oncancel\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\n    }\n    handle.onchange = (status\x2C eventType\x2C filename) => {\n      if (status < 0) {\n        const error = new UVException({\n          errno: status\x2C\n          syscall: 'watch'\x2C\n          path: filename\x2C\n        });\n        error.filename = filename;\n        handle.close();\n        reject(error);\n        return;\n      }\n\n      resolve({ eventType\x2C filename });\n    };\n\n    const err = handle.start(path\x2C persistent\x2C recursive\x2C encoding);\n    if (err) {\n      const error = new UVException({\n        errno: err\x2C\n        syscall: 'watch'\x2C\n        path: filename\x2C\n        message: err === UV_ENOSPC ?\n          'System limit for number of file watchers reached' : ''\x2C\n      });\n      error.filename = filename;\n      handle.close();\n      throw error;\n    }\n\n    while (!signal?.aborted) {\n      yield await promise;\n      ({ promise\x2C resolve\x2C reject } = PromiseWithResolvers());\n    }\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n  } finally {\n    handle.close();\n    signal?.removeEventListener('abort'\x2C oncancel);\n  }\n}\n\nmodule.exports = {\n  FSWatcher\x2C\n  StatWatcher\x2C\n  kFSWatchStart\x2C\n  kFSStatWatcherStart\x2C\n  kFSStatWatcherAddOrCleanRef\x2C\n  watch\x2C\n};\n
code-source-info,0x12ea9864a908,87,0,11258,C0O0C4O11258,,
code-creation,JS,9,70458,0x12ea9864abf8,751, node:internal/fs/watchers:1:1,0xcb65971e7d8,~
code-source-info,0x12ea9864abf
code-creation,Eval,9,70958,0x12ea9864b080,5, node:internal/fs/recursive_watch:1:1,0xcb659723388,~
script-source,88,node:internal/fs/recursive_watch,'use strict';\n\nconst {\n  Promise\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeStartsWith\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\n\nconst { EventEmitter } = require('events');\nconst assert = require('internal/assert');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst { kFSWatchStart\x2C StatWatcher } = require('internal/fs/watchers');\nconst { kEmptyObject } = require('internal/util');\nconst { validateBoolean\x2C validateAbortSignal } = require('internal/validators');\nconst {\n  basename: pathBasename\x2C\n  join: pathJoin\x2C\n  relative: pathRelative\x2C\n  resolve: pathResolve\x2C\n} = require('path');\n\nlet internalSync;\n\nfunction lazyLoadFsSync() {\n  internalSync ??= require('fs');\n  return internalSync;\n}\n\nlet kResistStopPropagation;\n\nclass FSWatcher extends EventEmitter {\n  #options = null;\n  #closed = false;\n  #files = new SafeMap();\n  #watchers = new SafeMap();\n  #symbolicFiles = new SafeSet();\n  #rootPath = pathResolve();\n  #watchingFile = false;\n\n  constructor(options = kEmptyObject) {\n    super();\n\n    assert(typeof options === 'object');\n\n    const { persistent\x2C recursive\x2C signal\x2C encoding } = options;\n\n    // TODO(anonrig): Add non-recursive support to non-native-watcher for IBMi & AIX support.\n    if (recursive != null) {\n      validateBoolean(recursive\x2C 'options.recursive');\n    }\n\n    if (persistent != null) {\n      validateBoolean(persistent\x2C 'options.persistent');\n    }\n\n    if (signal != null) {\n      validateAbortSignal(signal\x2C 'options.signal');\n    }\n\n    if (encoding != null) {\n      // This is required since on macOS and Windows it throws ERR_INVALID_ARG_VALUE\n      if (typeof encoding !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'options.encoding');\n      }\n    }\n\n    this.#options = { persistent\x2C recursive\x2C signal\x2C encoding };\n  }\n\n  close() {\n    if (this.#closed) {\n      return;\n    }\n\n    this.#closed = true;\n\n    for (const file of this.#files.keys()) {\n      this.#watchers.get(file)?.close();\n      this.#watchers.delete(file);\n    }\n\n    this.#files.clear();\n    this.#symbolicFiles.clear();\n    this.emit('close');\n  }\n\n  #unwatchFiles(file) {\n    this.#symbolicFiles.delete(file);\n\n    for (const filename of this.#files.keys()) {\n      if (StringPrototypeStartsWith(filename\x2C file)) {\n        this.#files.delete(filename);\n        this.#watchers.get(filename)?.close();\n        this.#watchers.delete(filename);\n      }\n    }\n  }\n\n  #watchFolder(folder) {\n    const { readdirSync } = lazyLoadFsSync();\n\n    try {\n      const files = readdirSync(folder\x2C {\n        withFileTypes: true\x2C\n      });\n\n      for (const file of files) {\n        if (this.#closed) {\n          break;\n        }\n\n        const f = pathJoin(folder\x2C file.name);\n\n        if (!this.#files.has(f)) {\n          this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C f));\n\n          if (file.isSymbolicLink()) {\n            this.#symbolicFiles.add(f);\n          }\n\n          try {\n            this.#watchFile(f);\n            if (file.isDirectory() && !file.isSymbolicLink()) {\n              this.#watchFolder(f);\n            }\n          } catch (err) {\n            // Ignore ENOENT\n            if (err.code !== 'ENOENT') {\n              throw err;\n            }\n          }\n        }\n      }\n    } catch (error) {\n      this.emit('error'\x2C error);\n    }\n  }\n\n  #watchFile(file) {\n    if (this.#closed) {\n      return;\n    }\n\n    const { watch\x2C statSync } = lazyLoadFsSync();\n\n    if (this.#files.has(file)) {\n      return;\n    }\n\n    {\n      const existingStat = statSync(file);\n      this.#files.set(file\x2C existingStat);\n    }\n\n    const watcher = watch(file\x2C {\n      persistent: this.#options.persistent\x2C\n    }\x2C (eventType\x2C filename) => {\n      const existingStat = this.#files.get(file);\n      let currentStats;\n\n      try {\n        currentStats = statSync(file);\n        this.#files.set(file\x2C currentStats);\n      } catch {\n        // This happens if the file was removed\n      }\n\n      if (currentStats === undefined || (currentStats.birthtimeMs === 0 && existingStat.birthtimeMs !== 0)) {\n        // The file is now deleted\n        this.#files.delete(file);\n        this.#watchers.delete(file);\n        watcher.close();\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\n        this.#unwatchFiles(file);\n      } else if (file === this.#rootPath && this.#watchingFile) {\n        // This case will only be triggered when watching a file with fs.watch\n        this.emit('change'\x2C 'change'\x2C pathBasename(file));\n      } else if (this.#symbolicFiles.has(file)) {\n        // Stats from watchFile does not return correct value for currentStats.isSymbolicLink()\n        // Since it is only valid when using fs.lstat(). Therefore\x2C check the existing symbolic files.\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\n      } else if (currentStats.isDirectory()) {\n        this.#watchFolder(file);\n      } else {\n        // Watching a directory will trigger a change event for child files)\n        this.emit('change'\x2C 'change'\x2C pathRelative(this.#rootPath\x2C file));\n      }\n    });\n    this.#watchers.set(file\x2C watcher);\n  }\n\n  [kFSWatchStart](filename) {\n    filename = pathResolve(getValidatedPath(filename));\n\n    try {\n      const file = lazyLoadFsSync().statSync(filename);\n\n      this.#rootPath = filename;\n      this.#closed = false;\n      this.#watchingFile = file.isFile();\n\n      this.#watchFile(filename);\n      if (file.isDirectory()) {\n        this.#watchFolder(filename);\n      }\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        error.filename = filename;\n        throw error;\n      }\n    }\n\n  }\n\n  ref() {\n    this.#files.forEach((file) => {\n      if (file instanceof StatWatcher) {\n        file.ref();\n      }\n    });\n  }\n\n  unref() {\n    this.#files.forEach((file) => {\n      if (file instanceof StatWatcher) {\n        file.unref();\n      }\n    });\n  }\n\n  [SymbolAsyncIterator]() {\n    const { signal } = this.#options;\n    const promiseExecutor = signal == null ?\n      (resolve) => {\n        this.once('change'\x2C (eventType\x2C filename) => {\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\n        });\n      } : (resolve\x2C reject) => {\n        const onAbort = () => {\n          this.close();\n          reject(new AbortError(undefined\x2C { cause: signal.reason }));\n        };\n        if (signal.aborted) return onAbort();\n        kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n        signal.addEventListener('abort'\x2C onAbort\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\n        this.once('change'\x2C (eventType\x2C filename) => {\n          signal.removeEventListener('abort'\x2C onAbort);\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\n        });\n      };\n    return {\n      next: () => (this.#closed ?\n        { __proto__: null\x2C done: true } :\n        new Promise(promiseExecutor))\x2C\n      return: () => {\n        this.close();\n        return { __proto__: null\x2C done: true };\n      }\x2C\n      [SymbolAsyncIterator]() { return this; }\x2C\n    };\n  }\n}\n\nmodule.exports = {\n  FSWatcher\x2C\n  kFSWatchStart\x2C\n};\n
code-source-info,0x12ea9864b080,88,0,7216,C0O0C4O7216,,
code-creation,JS,9,71250,0x12ea9864b290,493, node:internal/fs/recursive_watch:1:1,0xcb6597236d8,~
code-source-info,0x12ea9864b290,88,0,7216,C0O0C72O25C78O36C84O47C90O58C96O87C102O151C108O151C113O134C118O185C124O185C128O185C130O282C136O282C141O223C147O244C152O250C158O339C164O339C169O318C175O408C181O408C186O377C191O392C197O466C203O466C208O449C214O541C220O541C225O500C231O517C237O679C243O679C248O593C254O615C260O637C266O662C272O701C273O701C275O808C276O808C401O857C413O5213C433O5976C468O7164C475O7185C481O7198C487O7179C492O7215,,
code-creation,JS,9,71250,0x12ea9864b578,105,FSWatcher node:internal/fs/recursive_watch:39:38,0xcb659723ae0,~
code-source-info,0x12ea9864b578,88,870,7162,C3O885C12O903C21O921C28O921C41O950C46O950C59O984C66O984C79O1013C86O1013C97O1046C104O7162,,
tick,0x19252adc4,71250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98649878,0x107f89188,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,72083,0x12ea9864b670,5, node:internal/readline/interface:1:1,0xcb659728768,~
script-source,89,node:internal/readline/interface,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReverse\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  DateNow\x2C\n  FunctionPrototypeCall\x2C\n  MathCeil\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMaxApply\x2C\n  NumberIsFinite\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeExec\x2C\n  SafeStringIterator\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\n\nconst { codes: {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_USE_AFTER_CLOSE\x2C\n} } = require('internal/errors');\n\nconst {\n  validateAbortSignal\x2C\n  validateArray\x2C\n  validateNumber\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst { SymbolDispose\x2C kEmptyObject } = require('internal/util');\nconst {\n  inspect\x2C\n  getStringWidth\x2C\n  stripVTControlCharacters\x2C\n} = require('internal/util/inspect');\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst {\n  charLengthAt\x2C\n  charLengthLeft\x2C\n  commonPrefix\x2C\n  kSubstringSearch\x2C\n} = require('internal/readline/utils');\nlet emitKeypressEvents;\nlet kFirstEventParam;\nconst {\n  clearScreenDown\x2C\n  cursorTo\x2C\n  moveCursor\x2C\n} = require('internal/readline/callbacks');\n\nconst { StringDecoder } = require('string_decoder');\n\nconst kHistorySize = 30;\nconst kMaxUndoRedoStackSize = 2048;\nconst kMincrlfDelay = 100;\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\n\nconst kLineObjectStream = Symbol('line object stream');\nconst kQuestionCancel = Symbol('kQuestionCancel');\nconst kQuestion = Symbol('kQuestion');\n\n// GNU readline library - keyseq-timeout is 500ms (default)\nconst ESCAPE_CODE_TIMEOUT = 500;\n\n// Max length of the kill ring\nconst kMaxLengthOfKillRing = 32;\n\nconst kAddHistory = Symbol('_addHistory');\nconst kBeforeEdit = Symbol('_beforeEdit');\nconst kDecoder = Symbol('_decoder');\nconst kDeleteLeft = Symbol('_deleteLeft');\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\nconst kDeleteLineRight = Symbol('_deleteLineRight');\nconst kDeleteRight = Symbol('_deleteRight');\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\nconst kDeleteWordRight = Symbol('_deleteWordRight');\nconst kGetDisplayPos = Symbol('_getDisplayPos');\nconst kHistoryNext = Symbol('_historyNext');\nconst kHistoryPrev = Symbol('_historyPrev');\nconst kInsertString = Symbol('_insertString');\nconst kLine = Symbol('_line');\nconst kLine_buffer = Symbol('_line_buffer');\nconst kKillRing = Symbol('_killRing');\nconst kKillRingCursor = Symbol('_killRingCursor');\nconst kMoveCursor = Symbol('_moveCursor');\nconst kNormalWrite = Symbol('_normalWrite');\nconst kOldPrompt = Symbol('_oldPrompt');\nconst kOnLine = Symbol('_onLine');\nconst kPreviousKey = Symbol('_previousKey');\nconst kPrompt = Symbol('_prompt');\nconst kPushToKillRing = Symbol('_pushToKillRing');\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\nconst kQuestionCallback = Symbol('_questionCallback');\nconst kRedo = Symbol('_redo');\nconst kRedoStack = Symbol('_redoStack');\nconst kRefreshLine = Symbol('_refreshLine');\nconst kSawKeyPress = Symbol('_sawKeyPress');\nconst kSawReturnAt = Symbol('_sawReturnAt');\nconst kSetRawMode = Symbol('_setRawMode');\nconst kTabComplete = Symbol('_tabComplete');\nconst kTabCompleter = Symbol('_tabCompleter');\nconst kTtyWrite = Symbol('_ttyWrite');\nconst kUndo = Symbol('_undo');\nconst kUndoStack = Symbol('_undoStack');\nconst kWordLeft = Symbol('_wordLeft');\nconst kWordRight = Symbol('_wordRight');\nconst kWriteToOutput = Symbol('_writeToOutput');\nconst kYank = Symbol('_yank');\nconst kYanking = Symbol('_yanking');\nconst kYankPop = Symbol('_yankPop');\n\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\n  this[kSawReturnAt] = 0;\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\n  // might want to expose an alias and document that instead.\n  this.isCompletionEnabled = true;\n  this[kSawKeyPress] = false;\n  this[kPreviousKey] = null;\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\n  this.tabSize = 8;\n\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  let history;\n  let historySize;\n  let removeHistoryDuplicates = false;\n  let crlfDelay;\n  let prompt = '> ';\n  let signal;\n\n  if (input?.input) {\n    // An options object was given\n    output = input.output;\n    completer = input.completer;\n    terminal = input.terminal;\n    history = input.history;\n    historySize = input.historySize;\n    signal = input.signal;\n    if (input.tabSize !== undefined) {\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\n      this.tabSize = input.tabSize;\n    }\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\n    if (input.prompt !== undefined) {\n      prompt = input.prompt;\n    }\n    if (input.escapeCodeTimeout !== undefined) {\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\n      } else {\n        throw new ERR_INVALID_ARG_VALUE(\n          'input.escapeCodeTimeout'\x2C\n          this.escapeCodeTimeout\x2C\n        );\n      }\n    }\n\n    if (signal) {\n      validateAbortSignal(signal\x2C 'options.signal');\n    }\n\n    crlfDelay = input.crlfDelay;\n    input = input.input;\n  }\n\n  if (completer !== undefined && typeof completer !== 'function') {\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\n  }\n\n  if (history === undefined) {\n    history = [];\n  } else {\n    validateArray(history\x2C 'history');\n  }\n\n  if (historySize === undefined) {\n    historySize = kHistorySize;\n  }\n\n  validateNumber(historySize\x2C 'historySize'\x2C 0);\n\n  // Backwards compat; check the isTTY prop of the output stream\n  //  when `terminal` was not specified\n  if (terminal === undefined && !(output === null || output === undefined)) {\n    terminal = !!output.isTTY;\n  }\n\n  const self = this;\n\n  this.line = '';\n  this[kSubstringSearch] = null;\n  this.output = output;\n  this.input = input;\n  this[kUndoStack] = [];\n  this[kRedoStack] = [];\n  this.history = history;\n  this.historySize = historySize;\n\n  // The kill ring is a global list of blocks of text that were previously\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\n  // element will be removed to make room for the latest deletion. With kill\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\n  // killed texts\x2C quite similar to the behavior of Emacs.\n  this[kKillRing] = [];\n  this[kKillRingCursor] = 0;\n\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\n  this.crlfDelay = crlfDelay ?\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\n    kMincrlfDelay;\n  this.completer = completer;\n\n  this.setPrompt(prompt);\n\n  this.terminal = !!terminal;\n\n\n  function onerror(err) {\n    self.emit('error'\x2C err);\n  }\n\n  function ondata(data) {\n    self[kNormalWrite](data);\n  }\n\n  function onend() {\n    if (\n      typeof self[kLine_buffer] === 'string' &&\n        self[kLine_buffer].length > 0\n    ) {\n      self.emit('line'\x2C self[kLine_buffer]);\n    }\n    self.close();\n  }\n\n  function ontermend() {\n    if (typeof self.line === 'string' && self.line.length > 0) {\n      self.emit('line'\x2C self.line);\n    }\n    self.close();\n  }\n\n  function onkeypress(s\x2C key) {\n    self[kTtyWrite](s\x2C key);\n    if (key?.sequence) {\n      // If the key.sequence is half of a surrogate pair\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\n      // the character is displayed appropriately.\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\n    }\n  }\n\n  function onresize() {\n    self[kRefreshLine]();\n  }\n\n  this[kLineObjectStream] = undefined;\n\n  input.on('error'\x2C onerror);\n\n  if (!this.terminal) {\n    function onSelfCloseWithoutTerminal() {\n      input.removeListener('data'\x2C ondata);\n      input.removeListener('error'\x2C onerror);\n      input.removeListener('end'\x2C onend);\n    }\n\n    input.on('data'\x2C ondata);\n    input.on('end'\x2C onend);\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\n    this[kDecoder] = new StringDecoder('utf8');\n  } else {\n    function onSelfCloseWithTerminal() {\n      input.removeListener('keypress'\x2C onkeypress);\n      input.removeListener('error'\x2C onerror);\n      input.removeListener('end'\x2C ontermend);\n      if (output !== null && output !== undefined) {\n        output.removeListener('resize'\x2C onresize);\n      }\n    }\n\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\n    emitKeypressEvents(input\x2C this);\n\n    // `input` usually refers to stdin\n    input.on('keypress'\x2C onkeypress);\n    input.on('end'\x2C ontermend);\n\n    this[kSetRawMode](true);\n    this.terminal = true;\n\n    // Cursor position on the line.\n    this.cursor = 0;\n\n    this.historyIndex = -1;\n\n    if (output !== null && output !== undefined)\n      output.on('resize'\x2C onresize);\n\n    self.once('close'\x2C onSelfCloseWithTerminal);\n  }\n\n  if (signal) {\n    const onAborted = () => self.close();\n    if (signal.aborted) {\n      process.nextTick(onAborted);\n    } else {\n      const disposable = addAbortListener(signal\x2C onAborted);\n      self.once('close'\x2C disposable[SymbolDispose]);\n    }\n  }\n\n  // Current line\n  this.line = '';\n\n  input.resume();\n}\n\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\n\nclass Interface extends InterfaceConstructor {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(input\x2C output\x2C completer\x2C terminal) {\n    super(input\x2C output\x2C completer\x2C terminal);\n  }\n  get columns() {\n    if (this.output?.columns) return this.output.columns;\n    return Infinity;\n  }\n\n  /**\n   * Sets the prompt written to the output.\n   * @param {string} prompt\n   * @returns {void}\n   */\n  setPrompt(prompt) {\n    this[kPrompt] = prompt;\n  }\n\n  /**\n   * Returns the current prompt used by `rl.prompt()`.\n   * @returns {string}\n   */\n  getPrompt() {\n    return this[kPrompt];\n  }\n\n  [kSetRawMode](mode) {\n    const wasInRawMode = this.input.isRaw;\n\n    if (typeof this.input.setRawMode === 'function') {\n      this.input.setRawMode(mode);\n    }\n\n    return wasInRawMode;\n  }\n\n  /**\n   * Writes the configured `prompt` to a new line in `output`.\n   * @param {boolean} [preserveCursor]\n   * @returns {void}\n   */\n  prompt(preserveCursor) {\n    if (this.paused) this.resume();\n    if (this.terminal && process.env.TERM !== 'dumb') {\n      if (!preserveCursor) this.cursor = 0;\n      this[kRefreshLine]();\n    } else {\n      this[kWriteToOutput](this[kPrompt]);\n    }\n  }\n\n  [kQuestion](query\x2C cb) {\n    if (this.closed) {\n      throw new ERR_USE_AFTER_CLOSE('readline');\n    }\n    if (this[kQuestionCallback]) {\n      this.prompt();\n    } else {\n      this[kOldPrompt] = this[kPrompt];\n      this.setPrompt(query);\n      this[kQuestionCallback] = cb;\n      this.prompt();\n    }\n  }\n\n  [kOnLine](line) {\n    if (this[kQuestionCallback]) {\n      const cb = this[kQuestionCallback];\n      this[kQuestionCallback] = null;\n      this.setPrompt(this[kOldPrompt]);\n      cb(line);\n    } else {\n      this.emit('line'\x2C line);\n    }\n  }\n\n  [kBeforeEdit](oldText\x2C oldCursor) {\n    this[kPushToUndoStack](oldText\x2C oldCursor);\n  }\n\n  [kQuestionCancel]() {\n    if (this[kQuestionCallback]) {\n      this[kQuestionCallback] = null;\n      this.setPrompt(this[kOldPrompt]);\n      this.clearLine();\n    }\n  }\n\n  [kWriteToOutput](stringToWrite) {\n    validateString(stringToWrite\x2C 'stringToWrite');\n\n    if (this.output !== null && this.output !== undefined) {\n      this.output.write(stringToWrite);\n    }\n  }\n\n  [kAddHistory]() {\n    if (this.line.length === 0) return '';\n\n    // If the history is disabled then return the line\n    if (this.historySize === 0) return this.line;\n\n    // If the trimmed line is empty then return the line\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\n\n    if (this.history.length === 0 || this.history[0] !== this.line) {\n      if (this.removeHistoryDuplicates) {\n        // Remove older history line if identical to new one\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\n      }\n\n      ArrayPrototypeUnshift(this.history\x2C this.line);\n\n      // Only store so many\n      if (this.history.length > this.historySize)\n        ArrayPrototypePop(this.history);\n    }\n\n    this.historyIndex = -1;\n\n    // The listener could change the history object\x2C possibly\n    // to remove the last added entry if it is sensitive and should\n    // not be persisted in the history\x2C like a password\n    const line = this.history[0];\n\n    // Emit history event to notify listeners of update\n    this.emit('history'\x2C this.history);\n\n    return line;\n  }\n\n  [kRefreshLine]() {\n    // line length\n    const line = this[kPrompt] + this.line;\n    const dispPos = this[kGetDisplayPos](line);\n    const lineCols = dispPos.cols;\n    const lineRows = dispPos.rows;\n\n    // cursor position\n    const cursorPos = this.getCursorPos();\n\n    // First move to the bottom of the current line\x2C based on cursor pos\n    const prevRows = this.prevRows || 0;\n    if (prevRows > 0) {\n      moveCursor(this.output\x2C 0\x2C -prevRows);\n    }\n\n    // Cursor to left edge.\n    cursorTo(this.output\x2C 0);\n    // erase data\n    clearScreenDown(this.output);\n\n    // Write the prompt and the current buffer content.\n    this[kWriteToOutput](line);\n\n    // Force terminal to allocate a new line\n    if (lineCols === 0) {\n      this[kWriteToOutput](' ');\n    }\n\n    // Move cursor to original position.\n    cursorTo(this.output\x2C cursorPos.cols);\n\n    const diff = lineRows - cursorPos.rows;\n    if (diff > 0) {\n      moveCursor(this.output\x2C 0\x2C -diff);\n    }\n\n    this.prevRows = cursorPos.rows;\n  }\n\n  /**\n   * Closes the `readline.Interface` instance.\n   * @returns {void}\n   */\n  close() {\n    if (this.closed) return;\n    this.pause();\n    if (this.terminal) {\n      this[kSetRawMode](false);\n    }\n    this.closed = true;\n    this.emit('close');\n  }\n\n  /**\n   * Pauses the `input` stream.\n   * @returns {void | Interface}\n   */\n  pause() {\n    if (this.paused) return;\n    this.input.pause();\n    this.paused = true;\n    this.emit('pause');\n    return this;\n  }\n\n  /**\n   * Resumes the `input` stream if paused.\n   * @returns {void | Interface}\n   */\n  resume() {\n    if (!this.paused) return;\n    this.input.resume();\n    this.paused = false;\n    this.emit('resume');\n    return this;\n  }\n\n  /**\n   * Writes either `data` or a `key` sequence identified by\n   * `key` to the `output`.\n   * @param {string} d\n   * @param {{\n   *   ctrl?: boolean;\n   *   meta?: boolean;\n   *   shift?: boolean;\n   *   name?: string;\n   *   }} [key]\n   * @returns {void}\n   */\n  write(d\x2C key) {\n    if (this.paused) this.resume();\n    if (this.terminal) {\n      this[kTtyWrite](d\x2C key);\n    } else {\n      this[kNormalWrite](d);\n    }\n  }\n\n  [kNormalWrite](b) {\n    if (b === undefined) {\n      return;\n    }\n    let string = this[kDecoder].write(b);\n    if (\n      this[kSawReturnAt] &&\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\n    ) {\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\n      this[kSawReturnAt] = 0;\n    }\n\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\n    if (newPartContainsEnding !== null) {\n      if (this[kLine_buffer]) {\n        string = this[kLine_buffer] + string;\n        this[kLine_buffer] = null;\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\n      }\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\n        DateNow() :\n        0;\n\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\n      let nextMatch;\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\n      }\n      const lastIndex = indexes.length - 1;\n      // Either '' or (conceivably) the unfinished portion of the next line\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\n      for (let i = 1; i < lastIndex; i += 2) {\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\n      }\n    } else if (string) {\n      // No newlines this time\x2C save what we have for next time\n      if (this[kLine_buffer]) {\n        this[kLine_buffer] += string;\n      } else {\n        this[kLine_buffer] = string;\n      }\n    }\n  }\n\n  [kInsertString](c) {\n    this[kBeforeEdit](this.line\x2C this.cursor);\n    if (this.cursor < this.line.length) {\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n      const end = StringPrototypeSlice(\n        this.line\x2C\n        this.cursor\x2C\n        this.line.length\x2C\n      );\n      this.line = beg + c + end;\n      this.cursor += c.length;\n      this[kRefreshLine]();\n    } else {\n      const oldPos = this.getCursorPos();\n      this.line += c;\n      this.cursor += c.length;\n      const newPos = this.getCursorPos();\n\n      if (oldPos.rows < newPos.rows) {\n        this[kRefreshLine]();\n      } else {\n        this[kWriteToOutput](c);\n      }\n    }\n  }\n\n  async [kTabComplete](lastKeypressWasTab) {\n    this.pause();\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n    let value;\n    try {\n      value = await this.completer(string);\n    } catch (err) {\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\n      return;\n    } finally {\n      this.resume();\n    }\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\n  }\n\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\n    // Result and the text that was completed.\n\n    if (!completions || completions.length === 0) {\n      return;\n    }\n\n    // If there is a common prefix to all matches\x2C then apply that portion.\n    const prefix = commonPrefix(\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x2C\n    );\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\n        prefix.length > completeOn.length) {\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\n      return;\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\n      this.line = StringPrototypeSlice(this.line\x2C\n                                       0\x2C\n                                       this.cursor - completeOn.length) +\n                  prefix +\n                  StringPrototypeSlice(this.line\x2C\n                                       this.cursor\x2C\n                                       this.line.length);\n      this.cursor = this.cursor - completeOn.length + prefix.length;\n      this[kRefreshLine]();\n      return;\n    }\n\n    if (!lastKeypressWasTab) {\n      return;\n    }\n\n    this[kBeforeEdit](this.line\x2C this.cursor);\n\n    // Apply/show completions.\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\n      getStringWidth(e)\x2C\n    );\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\n    let maxColumns = MathFloor(this.columns / width) || 1;\n    if (maxColumns === Infinity) {\n      maxColumns = 1;\n    }\n    let output = '\\r\\n';\n    let lineIndex = 0;\n    let whitespace = 0;\n    for (let i = 0; i < completions.length; i++) {\n      const completion = completions[i];\n      if (completion === '' || lineIndex === maxColumns) {\n        output += '\\r\\n';\n        lineIndex = 0;\n        whitespace = 0;\n      } else {\n        output += StringPrototypeRepeat(' '\x2C whitespace);\n      }\n      if (completion !== '') {\n        output += completion;\n        whitespace = width - completionsWidth[i];\n        lineIndex++;\n      } else {\n        output += '\\r\\n';\n      }\n    }\n    if (lineIndex !== 0) {\n      output += '\\r\\n\\r\\n';\n    }\n    this[kWriteToOutput](output);\n    this[kRefreshLine]();\n  }\n\n  [kWordLeft]() {\n    if (this.cursor > 0) {\n      // Reverse the string and match a word near beginning\n      // to avoid quadratic time complexity\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n      const reversed = ArrayPrototypeJoin(\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\n        ''\x2C\n      );\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\n      this[kMoveCursor](-match[0].length);\n    }\n  }\n\n  [kWordRight]() {\n    if (this.cursor < this.line.length) {\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\n      this[kMoveCursor](match[0].length);\n    }\n  }\n\n  [kDeleteLeft]() {\n    if (this.cursor > 0 && this.line.length > 0) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      // The number of UTF-16 units comprising the character to the left\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\n      this.line =\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\n\n      this.cursor -= charSize;\n      this[kRefreshLine]();\n    }\n  }\n\n  [kDeleteRight]() {\n    if (this.cursor < this.line.length) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      // The number of UTF-16 units comprising the character to the left\n      const charSize = charLengthAt(this.line\x2C this.cursor);\n      this.line =\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\n        StringPrototypeSlice(\n          this.line\x2C\n          this.cursor + charSize\x2C\n          this.line.length\x2C\n        );\n      this[kRefreshLine]();\n    }\n  }\n\n  [kDeleteWordLeft]() {\n    if (this.cursor > 0) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      // Reverse the string and match a word near beginning\n      // to avoid quadratic time complexity\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n      const reversed = ArrayPrototypeJoin(\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\n        ''\x2C\n      );\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\n      leading = StringPrototypeSlice(\n        leading\x2C\n        0\x2C\n        leading.length - match[0].length\x2C\n      );\n      this.line =\n        leading +\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\n      this.cursor = leading.length;\n      this[kRefreshLine]();\n    }\n  }\n\n  [kDeleteWordRight]() {\n    if (this.cursor < this.line.length) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\n      this.line =\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\n        StringPrototypeSlice(trailing\x2C match[0].length);\n      this[kRefreshLine]();\n    }\n  }\n\n  [kDeleteLineLeft]() {\n    this[kBeforeEdit](this.line\x2C this.cursor);\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\n    this.cursor = 0;\n    this[kPushToKillRing](del);\n    this[kRefreshLine]();\n  }\n\n  [kDeleteLineRight]() {\n    this[kBeforeEdit](this.line\x2C this.cursor);\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n    this[kPushToKillRing](del);\n    this[kRefreshLine]();\n  }\n\n  [kPushToKillRing](del) {\n    if (!del || del === this[kKillRing][0]) return;\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\n    this[kKillRingCursor] = 0;\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\n      ArrayPrototypePop(this[kKillRing]);\n  }\n\n  [kYank]() {\n    if (this[kKillRing].length > 0) {\n      this[kYanking] = true;\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\n    }\n  }\n\n  [kYankPop]() {\n    if (!this[kYanking]) {\n      return;\n    }\n    if (this[kKillRing].length > 1) {\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\n      this[kKillRingCursor]++;\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\n        this[kKillRingCursor] = 0;\n      }\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\n      const head =\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\n      const tail =\n            StringPrototypeSlice(this.line\x2C this.cursor);\n      this.line = head + currentYank + tail;\n      this.cursor = head.length + currentYank.length;\n      this[kRefreshLine]();\n    }\n  }\n\n  clearLine() {\n    this[kMoveCursor](+Infinity);\n    this[kWriteToOutput]('\\r\\n');\n    this.line = '';\n    this.cursor = 0;\n    this.prevRows = 0;\n  }\n\n  [kLine]() {\n    const line = this[kAddHistory]();\n    this[kUndoStack] = [];\n    this[kRedoStack] = [];\n    this.clearLine();\n    this[kOnLine](line);\n  }\n\n  [kPushToUndoStack](text\x2C cursor) {\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\n        kMaxUndoRedoStackSize) {\n      ArrayPrototypeShift(this[kUndoStack]);\n    }\n  }\n\n  [kUndo]() {\n    if (this[kUndoStack].length <= 0) return;\n\n    ArrayPrototypePush(\n      this[kRedoStack]\x2C\n      { text: this.line\x2C cursor: this.cursor }\x2C\n    );\n\n    const entry = ArrayPrototypePop(this[kUndoStack]);\n    this.line = entry.text;\n    this.cursor = entry.cursor;\n\n    this[kRefreshLine]();\n  }\n\n  [kRedo]() {\n    if (this[kRedoStack].length <= 0) return;\n\n    ArrayPrototypePush(\n      this[kUndoStack]\x2C\n      { text: this.line\x2C cursor: this.cursor }\x2C\n    );\n\n    const entry = ArrayPrototypePop(this[kRedoStack]);\n    this.line = entry.text;\n    this.cursor = entry.cursor;\n\n    this[kRefreshLine]();\n  }\n\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\n  // case no match is found. This should only be the visual part and not the\n  // actual line content!\n  // TODO(BridgeAR): In case the substring based search is active and the end is\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\n  // one.\n  [kHistoryNext]() {\n    if (this.historyIndex >= 0) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      const search = this[kSubstringSearch] || '';\n      let index = this.historyIndex - 1;\n      while (\n        index >= 0 &&\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\n          this.line === this.history[index])\n      ) {\n        index--;\n      }\n      if (index === -1) {\n        this.line = search;\n      } else {\n        this.line = this.history[index];\n      }\n      this.historyIndex = index;\n      this.cursor = this.line.length; // Set cursor to end of line.\n      this[kRefreshLine]();\n    }\n  }\n\n  [kHistoryPrev]() {\n    if (this.historyIndex < this.history.length && this.history.length) {\n      this[kBeforeEdit](this.line\x2C this.cursor);\n      const search = this[kSubstringSearch] || '';\n      let index = this.historyIndex + 1;\n      while (\n        index < this.history.length &&\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\n          this.line === this.history[index])\n      ) {\n        index++;\n      }\n      if (index === this.history.length) {\n        this.line = search;\n      } else {\n        this.line = this.history[index];\n      }\n      this.historyIndex = index;\n      this.cursor = this.line.length; // Set cursor to end of line.\n      this[kRefreshLine]();\n    }\n  }\n\n  // Returns the last character's display position of the given string\n  [kGetDisplayPos](str) {\n    let offset = 0;\n    const col = this.columns;\n    let rows = 0;\n    str = stripVTControlCharacters(str);\n    for (const char of new SafeStringIterator(str)) {\n      if (char === '\\n') {\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\n        rows += MathCeil(offset / col) || 1;\n        offset = 0;\n        continue;\n      }\n      // Tabs must be aligned by an offset of the tab size.\n      if (char === '\\t') {\n        offset += this.tabSize - (offset % this.tabSize);\n        continue;\n      }\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\n      if (width === 0 || width === 1) {\n        offset += width;\n      } else {\n        // width === 2\n        if ((offset + 1) % col === 0) {\n          offset++;\n        }\n        offset += 2;\n      }\n    }\n    const cols = offset % col;\n    rows += (offset - cols) / col;\n    return { cols\x2C rows };\n  }\n\n  /**\n   * Returns the real position of the cursor in relation\n   * to the input prompt + string.\n   * @returns {{\n   *   rows: number;\n   *   cols: number;\n   *   }}\n   */\n  getCursorPos() {\n    const strBeforeCursor =\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\n    return this[kGetDisplayPos](strBeforeCursor);\n  }\n\n  // This function moves cursor dx places to the right\n  // (-dx for left) and refreshes the line if it is needed.\n  [kMoveCursor](dx) {\n    if (dx === 0) {\n      return;\n    }\n    const oldPos = this.getCursorPos();\n    this.cursor += dx;\n\n    // Bounds check\n    if (this.cursor < 0) {\n      this.cursor = 0;\n    } else if (this.cursor > this.line.length) {\n      this.cursor = this.line.length;\n    }\n\n    const newPos = this.getCursorPos();\n\n    // Check if cursor stayed on the line.\n    if (oldPos.rows === newPos.rows) {\n      const diffWidth = newPos.cols - oldPos.cols;\n      moveCursor(this.output\x2C diffWidth\x2C 0);\n    } else {\n      this[kRefreshLine]();\n    }\n  }\n\n  // Handle a write from the tty\n  [kTtyWrite](s\x2C key) {\n    const previousKey = this[kPreviousKey];\n    key ||= kEmptyObject;\n    this[kPreviousKey] = key;\n\n    if (!key.meta || key.name !== 'y') {\n      // Reset yanking state unless we are doing yank pop.\n      this[kYanking] = false;\n    }\n\n    // Activate or deactivate substring search.\n    if (\n      (key.name === 'up' || key.name === 'down') &&\n      !key.ctrl &&\n      !key.meta &&\n      !key.shift\n    ) {\n      if (this[kSubstringSearch] === null) {\n        this[kSubstringSearch] = StringPrototypeSlice(\n          this.line\x2C\n          0\x2C\n          this.cursor\x2C\n        );\n      }\n    } else if (this[kSubstringSearch] !== null) {\n      this[kSubstringSearch] = null;\n      // Reset the index in case there's no match.\n      if (this.history.length === this.historyIndex) {\n        this.historyIndex = -1;\n      }\n    }\n\n    // Undo & Redo\n    if (typeof key.sequence === 'string') {\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\n        case 0x1f:\n          this[kUndo]();\n          return;\n        case 0x1e:\n          this[kRedo]();\n          return;\n        default:\n          break;\n      }\n    }\n\n    // Ignore escape key\x2C fixes\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\n    if (key.name === 'escape') return;\n\n    if (key.ctrl && key.shift) {\n      /* Control and shift pressed */\n      switch (key.name) {\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\n        // identical to <ctrl>-h. It should have a unique escape sequence.\n        case 'backspace':\n          this[kDeleteLineLeft]();\n          break;\n\n        case 'delete':\n          this[kDeleteLineRight]();\n          break;\n      }\n    } else if (key.ctrl) {\n      /* Control key pressed */\n\n      switch (key.name) {\n        case 'c':\n          if (this.listenerCount('SIGINT') > 0) {\n            this.emit('SIGINT');\n          } else {\n            // This readline instance is finished\n            this.close();\n          }\n          break;\n\n        case 'h': // delete left\n          this[kDeleteLeft]();\n          break;\n\n        case 'd': // delete right or EOF\n          if (this.cursor === 0 && this.line.length === 0) {\n            // This readline instance is finished\n            this.close();\n          } else if (this.cursor < this.line.length) {\n            this[kDeleteRight]();\n          }\n          break;\n\n        case 'u': // Delete from current to start of line\n          this[kDeleteLineLeft]();\n          break;\n\n        case 'k': // Delete from current to end of line\n          this[kDeleteLineRight]();\n          break;\n\n        case 'a': // Go to the start of the line\n          this[kMoveCursor](-Infinity);\n          break;\n\n        case 'e': // Go to the end of the line\n          this[kMoveCursor](+Infinity);\n          break;\n\n        case 'b': // back one character\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\n          break;\n\n        case 'f': // Forward one character\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\n          break;\n\n        case 'l': // Clear the whole screen\n          cursorTo(this.output\x2C 0\x2C 0);\n          clearScreenDown(this.output);\n          this[kRefreshLine]();\n          break;\n\n        case 'n': // next history item\n          this[kHistoryNext]();\n          break;\n\n        case 'p': // Previous history item\n          this[kHistoryPrev]();\n          break;\n\n        case 'y': // Yank killed string\n          this[kYank]();\n          break;\n\n        case 'z':\n          if (process.platform === 'win32') break;\n          if (this.listenerCount('SIGTSTP') > 0) {\n            this.emit('SIGTSTP');\n          } else {\n            process.once('SIGCONT'\x2C () => {\n              // Don't raise events if stream has already been abandoned.\n              if (!this.paused) {\n                // Stream must be paused and resumed after SIGCONT to catch\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\n                this.pause();\n                this.emit('SIGCONT');\n              }\n              // Explicitly re-enable "raw mode" and move the cursor to\n              // the correct position.\n              // See https://github.com/joyent/node/issues/3295.\n              this[kSetRawMode](true);\n              this[kRefreshLine]();\n            });\n            this[kSetRawMode](false);\n            process.kill(process.pid\x2C 'SIGTSTP');\n          }\n          break;\n\n        case 'w': // Delete backwards to a word boundary\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\n        // identical to <ctrl>-h. It should have a unique escape sequence.\n        // Falls through\n        case 'backspace':\n          this[kDeleteWordLeft]();\n          break;\n\n        case 'delete': // Delete forward to a word boundary\n          this[kDeleteWordRight]();\n          break;\n\n        case 'left':\n          this[kWordLeft]();\n          break;\n\n        case 'right':\n          this[kWordRight]();\n          break;\n      }\n    } else if (key.meta) {\n      /* Meta key pressed */\n\n      switch (key.name) {\n        case 'b': // backward word\n          this[kWordLeft]();\n          break;\n\n        case 'f': // forward word\n          this[kWordRight]();\n          break;\n\n        case 'd': // delete forward word\n        case 'delete':\n          this[kDeleteWordRight]();\n          break;\n\n        case 'backspace': // Delete backwards to a word boundary\n          this[kDeleteWordLeft]();\n          break;\n\n        case 'y': // Doing yank pop\n          this[kYankPop]();\n          break;\n      }\n    } else {\n      /* No modifier keys used */\n\n      // \\r bookkeeping is only relevant if a \\n comes right after.\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\n\n      switch (key.name) {\n        case 'return': // Carriage return\x2C i.e. \\r\n          this[kSawReturnAt] = DateNow();\n          this[kLine]();\n          break;\n\n        case 'enter':\n          // When key interval > crlfDelay\n          if (\n            this[kSawReturnAt] === 0 ||\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\n          ) {\n            this[kLine]();\n          }\n          this[kSawReturnAt] = 0;\n          break;\n\n        case 'backspace':\n          this[kDeleteLeft]();\n          break;\n\n        case 'delete':\n          this[kDeleteRight]();\n          break;\n\n        case 'left':\n          // Obtain the code point to the left\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\n          break;\n\n        case 'right':\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\n          break;\n\n        case 'home':\n          this[kMoveCursor](-Infinity);\n          break;\n\n        case 'end':\n          this[kMoveCursor](+Infinity);\n          break;\n\n        case 'up':\n          this[kHistoryPrev]();\n          break;\n\n        case 'down':\n          this[kHistoryNext]();\n          break;\n\n        case 'tab':\n          // If tab completion enabled\x2C do that...\n          if (\n            typeof this.completer === 'function' &&\n            this.isCompletionEnabled\n          ) {\n            const lastKeypressWasTab =\n              previousKey && previousKey.name === 'tab';\n            this[kTabComplete](lastKeypressWasTab);\n            break;\n          }\n        // falls through\n        default:\n          if (typeof s === 'string' && s) {\n            // Erase state of previous searches.\n            lineEnding.lastIndex = 0;\n            let nextMatch;\n            // Keep track of the end of the last match.\n            let lastIndex = 0;\n            while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null) {\n              this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\n              ({ lastIndex } = lineEnding);\n              this[kLine]();\n              // Restore lastIndex as the call to kLine could have mutated it.\n              lineEnding.lastIndex = lastIndex;\n            }\n            // This ensures that the last line is written if it doesn't end in a newline.\n            // Note that the last line may be the first line\x2C in which case this still works.\n            this[kInsertString](StringPrototypeSlice(s\x2C lastIndex));\n          }\n      }\n    }\n  }\n\n  /**\n   * Creates an `AsyncIterator` object that iterates through\n   * each line in the input stream as a string.\n   * @typedef {{\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\n   *   next: () => Promise<string>\n   * }} InterfaceAsyncIterator\n   * @returns {InterfaceAsyncIterator}\n   */\n  [SymbolAsyncIterator]() {\n    if (this[kLineObjectStream] === undefined) {\n      kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\n      this[kLineObjectStream] = EventEmitter.on(\n        this\x2C 'line'\x2C {\n          close: ['close']\x2C\n          highWaterMark: 1024\x2C\n          [kFirstEventParam]: true\x2C\n        });\n    }\n    return this[kLineObjectStream];\n  }\n}\n\nmodule.exports = {\n  Interface\x2C\n  InterfaceConstructor\x2C\n  kAddHistory\x2C\n  kDecoder\x2C\n  kDeleteLeft\x2C\n  kDeleteLineLeft\x2C\n  kDeleteLineRight\x2C\n  kDeleteRight\x2C\n  kDeleteWordLeft\x2C\n  kDeleteWordRight\x2C\n  kGetDisplayPos\x2C\n  kHistoryNext\x2C\n  kHistoryPrev\x2C\n  kInsertString\x2C\n  kLine\x2C\n  kLine_buffer\x2C\n  kMoveCursor\x2C\n  kNormalWrite\x2C\n  kOldPrompt\x2C\n  kOnLine\x2C\n  kPreviousKey\x2C\n  kPrompt\x2C\n  kQuestion\x2C\n  kQuestionCallback\x2C\n  kQuestionCancel\x2C\n  kRefreshLine\x2C\n  kSawKeyPress\x2C\n  kSawReturnAt\x2C\n  kSetRawMode\x2C\n  kTabComplete\x2C\n  kTabCompleter\x2C\n  kTtyWrite\x2C\n  kWordLeft\x2C\n  kWordRight\x2C\n  kWriteToOutput\x2C\n};\n
code-source-info,0x12ea9864b670,89,0,39048,C0O0C4O39048,,
code-creation,JS,9,73417,0x12ea9864bcd0,1935, node:internal/readline/interface:1:1,0xcb659729b90,~
code-source-info,0x12ea9864bcd
tick,0x1009ee460,73500,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9864991a,0x107f89188,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
tick,0x192400830,73500,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9864991a,0x107f89188,0x107f88e30,0x12ea98648a04,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,Eval,9,73875,0x12ea9864c790,5, node:internal/readline/utils:1:1,0xcb65972d830,~
script-source,90,node:internal/readline/utils,'use strict';\n\nconst {\n  ArrayPrototypeToSorted\x2C\n  RegExpPrototypeExec\x2C\n  StringFromCharCode\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\nconst kEscape = '\\x1b';\nconst kSubstringSearch = Symbol('kSubstringSearch');\n\nfunction CSI(strings\x2C ...args) {\n  let ret = `${kEscape}[`;\n  for (let n = 0; n < strings.length; n++) {\n    ret += strings[n];\n    if (n < args.length)\n      ret += args[n];\n  }\n  return ret;\n}\n\nCSI.kEscape = kEscape;\nCSI.kClearToLineBeginning = CSI`1K`;\nCSI.kClearToLineEnd = CSI`0K`;\nCSI.kClearLine = CSI`2K`;\nCSI.kClearScreenDown = CSI`0J`;\n\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\n// Check Canonical_Combining_Class in\n// http://userguide.icu-project.org/strings/properties\nfunction charLengthLeft(str\x2C i) {\n  if (i <= 0)\n    return 0;\n  if ((i > 1 &&\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\n    return 2;\n  }\n  return 1;\n}\n\nfunction charLengthAt(str\x2C i) {\n  if (str.length <= i) {\n    // Pretend to move to the right. This is necessary to autocomplete while\n    // moving to the right.\n    return 1;\n  }\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\n}\n\n/*\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\n\n  ESC letter\n  ESC [ letter\n  ESC [ modifier letter\n  ESC [ 1 ; modifier letter\n  ESC [ num char\n  ESC [ num ; modifier char\n  ESC O letter\n  ESC O modifier letter\n  ESC O 1 ; modifier letter\n  ESC N letter\n  ESC [ [ num ; modifier char\n  ESC [ [ 1 ; modifier letter\n  ESC ESC [ num char\n  ESC ESC O letter\n\n  - char is usually ~ but $ and ^ also happen with rxvt\n  - modifier is 1 +\n                (shift     * 1) +\n                (left_alt  * 2) +\n                (ctrl      * 4) +\n                (right_alt * 8)\n  - two leading ESCs apparently mean the same as one leading ESC\n*/\nfunction* emitKeys(stream) {\n  while (true) {\n    let ch = yield;\n    let s = ch;\n    let escaped = false;\n    const key = {\n      sequence: null\x2C\n      name: undefined\x2C\n      ctrl: false\x2C\n      meta: false\x2C\n      shift: false\x2C\n    };\n\n    if (ch === kEscape) {\n      escaped = true;\n      s += (ch = yield);\n\n      if (ch === kEscape) {\n        s += (ch = yield);\n      }\n    }\n\n    if (escaped && (ch === 'O' || ch === '[')) {\n      // ANSI escape sequence\n      let code = ch;\n      let modifier = 0;\n\n      if (ch === 'O') {\n        // ESC O letter\n        // ESC O modifier letter\n        s += (ch = yield);\n\n        if (ch >= '0' && ch <= '9') {\n          modifier = (ch >> 0) - 1;\n          s += (ch = yield);\n        }\n\n        code += ch;\n      } else if (ch === '[') {\n        // ESC [ letter\n        // ESC [ modifier letter\n        // ESC [ [ modifier letter\n        // ESC [ [ num char\n        s += (ch = yield);\n\n        if (ch === '[') {\n          // \\x1b[[A\n          //      ^--- escape codes might have a second bracket\n          code += ch;\n          s += (ch = yield);\n        }\n\n        /*\n         * Here and later we try to buffer just enough data to get\n         * a complete ascii sequence.\n         *\n         * We have basically two classes of ascii characters to process:\n         *\n         *\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\n         *\n         * This particular example is featuring Ctrl+F12 in xterm.\n         *\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\n         *  - first part can contain one or two digits\n         *  - there is also special case when there can be 3 digits\n         *    but without modifier. They are the case of paste bracket mode\n         *\n         * So the generic regexp is like /^(?:\\d\\d?(;\\d)?[~^$]|\\d{3}~)$/\n         *\n         *\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\n         *\n         * This particular example is featuring Ctrl+Home in xterm.\n         *\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\n         *\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\n         *\n         */\n        const cmdStart = s.length - 1;\n\n        // Skip one or two leading digits\n        if (ch >= '0' && ch <= '9') {\n          s += (ch = yield);\n\n          if (ch >= '0' && ch <= '9') {\n            s += (ch = yield);\n\n            if (ch >= '0' && ch <= '9') {\n              s += (ch = yield);\n            }\n          }\n        }\n\n        // skip modifier\n        if (ch === ';') {\n          s += (ch = yield);\n\n          if (ch >= '0' && ch <= '9') {\n            s += yield;\n          }\n        }\n\n        /*\n         * We buffered enough data\x2C now trying to extract code\n         * and modifier from it\n         */\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\n        let match;\n\n        if ((match = RegExpPrototypeExec(/^(?:(\\d\\d?)(?:;(\\d))?([~^$])|(\\d{3}~))$/\x2C cmd))) {\n          if (match[4]) {\n            code += match[4];\n          } else {\n            code += match[1] + match[3];\n            modifier = (match[2] || 1) - 1;\n          }\n        } else if (\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\n        ) {\n          code += match[4];\n          modifier = (match[3] || 1) - 1;\n        } else {\n          code += cmd;\n        }\n      }\n\n      // Parse the key modifier\n      key.ctrl = !!(modifier & 4);\n      key.meta = !!(modifier & 10);\n      key.shift = !!(modifier & 1);\n      key.code = code;\n\n      // Parse the key itself\n      switch (code) {\n        /* xterm/gnome ESC [ letter (with modifier) */\n        case '[P': key.name = 'f1'; break;\n        case '[Q': key.name = 'f2'; break;\n        case '[R': key.name = 'f3'; break;\n        case '[S': key.name = 'f4'; break;\n\n        /* xterm/gnome ESC O letter (without modifier) */\n        case 'OP': key.name = 'f1'; break;\n        case 'OQ': key.name = 'f2'; break;\n        case 'OR': key.name = 'f3'; break;\n        case 'OS': key.name = 'f4'; break;\n\n        /* xterm/rxvt ESC [ number ~ */\n        case '[11~': key.name = 'f1'; break;\n        case '[12~': key.name = 'f2'; break;\n        case '[13~': key.name = 'f3'; break;\n        case '[14~': key.name = 'f4'; break;\n\n        /* paste bracket mode */\n        case '[200~': key.name = 'paste-start'; break;\n        case '[201~': key.name = 'paste-end'; break;\n\n        /* from Cygwin and used in libuv */\n        case '[[A': key.name = 'f1'; break;\n        case '[[B': key.name = 'f2'; break;\n        case '[[C': key.name = 'f3'; break;\n        case '[[D': key.name = 'f4'; break;\n        case '[[E': key.name = 'f5'; break;\n\n        /* common */\n        case '[15~': key.name = 'f5'; break;\n        case '[17~': key.name = 'f6'; break;\n        case '[18~': key.name = 'f7'; break;\n        case '[19~': key.name = 'f8'; break;\n        case '[20~': key.name = 'f9'; break;\n        case '[21~': key.name = 'f10'; break;\n        case '[23~': key.name = 'f11'; break;\n        case '[24~': key.name = 'f12'; break;\n\n        /* xterm ESC [ letter */\n        case '[A': key.name = 'up'; break;\n        case '[B': key.name = 'down'; break;\n        case '[C': key.name = 'right'; break;\n        case '[D': key.name = 'left'; break;\n        case '[E': key.name = 'clear'; break;\n        case '[F': key.name = 'end'; break;\n        case '[H': key.name = 'home'; break;\n\n        /* xterm/gnome ESC O letter */\n        case 'OA': key.name = 'up'; break;\n        case 'OB': key.name = 'down'; break;\n        case 'OC': key.name = 'right'; break;\n        case 'OD': key.name = 'left'; break;\n        case 'OE': key.name = 'clear'; break;\n        case 'OF': key.name = 'end'; break;\n        case 'OH': key.name = 'home'; break;\n\n        /* xterm/rxvt ESC [ number ~ */\n        case '[1~': key.name = 'home'; break;\n        case '[2~': key.name = 'insert'; break;\n        case '[3~': key.name = 'delete'; break;\n        case '[4~': key.name = 'end'; break;\n        case '[5~': key.name = 'pageup'; break;\n        case '[6~': key.name = 'pagedown'; break;\n\n        /* putty */\n        case '[[5~': key.name = 'pageup'; break;\n        case '[[6~': key.name = 'pagedown'; break;\n\n        /* rxvt */\n        case '[7~': key.name = 'home'; break;\n        case '[8~': key.name = 'end'; break;\n\n        /* rxvt keys with modifiers */\n        case '[a': key.name = 'up'; key.shift = true; break;\n        case '[b': key.name = 'down'; key.shift = true; break;\n        case '[c': key.name = 'right'; key.shift = true; break;\n        case '[d': key.name = 'left'; key.shift = true; break;\n        case '[e': key.name = 'clear'; key.shift = true; break;\n\n        case '[2$': key.name = 'insert'; key.shift = true; break;\n        case '[3$': key.name = 'delete'; key.shift = true; break;\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\n        case '[7$': key.name = 'home'; key.shift = true; break;\n        case '[8$': key.name = 'end'; key.shift = true; break;\n\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\n\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\n\n        /* misc. */\n        case '[Z': key.name = 'tab'; key.shift = true; break;\n        default: key.name = 'undefined'; break;\n      }\n    } else if (ch === '\\r') {\n      // carriage return\n      key.name = 'return';\n      key.meta = escaped;\n    } else if (ch === '\\n') {\n      // Enter\x2C should have been called linefeed\n      key.name = 'enter';\n      key.meta = escaped;\n    } else if (ch === '\\t') {\n      // tab\n      key.name = 'tab';\n      key.meta = escaped;\n    } else if (ch === '\\b' || ch === '\\x7f') {\n      // backspace or ctrl+h\n      key.name = 'backspace';\n      key.meta = escaped;\n    } else if (ch === kEscape) {\n      // escape key\n      key.name = 'escape';\n      key.meta = escaped;\n    } else if (ch === ' ') {\n      key.name = 'space';\n      key.meta = escaped;\n    } else if (!escaped && ch <= '\\x1a') {\n      // ctrl+letter\n      key.name = StringFromCharCode(\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x2C\n      );\n      key.ctrl = true;\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\n      // Letter\x2C number\x2C shift+letter\n      key.name = StringPrototypeToLowerCase(ch);\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\n      key.meta = escaped;\n    } else if (escaped) {\n      // Escape sequence timeout\n      key.name = ch.length ? undefined : 'escape';\n      key.meta = true;\n    }\n\n    key.sequence = s;\n\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\n      /* Named character or sequence */\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\n    } else if (charLengthAt(s\x2C 0) === s.length) {\n      /* Single unnamed character\x2C e.g. "." */\n      stream.emit('keypress'\x2C s\x2C key);\n    }\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\n  }\n}\n\n// This runs in O(n log n).\nfunction commonPrefix(strings) {\n  if (strings.length === 0) {\n    return '';\n  }\n  if (strings.length === 1) {\n    return strings[0];\n  }\n  const sorted = ArrayPrototypeToSorted(strings);\n  const min = sorted[0];\n  const max = sorted[sorted.length - 1];\n  for (let i = 0; i < min.length; i++) {\n    if (min[i] !== max[i]) {\n      return StringPrototypeSlice(min\x2C 0\x2C i);\n    }\n  }\n  return min;\n}\n\nmodule.exports = {\n  charLengthAt\x2C\n  charLengthLeft\x2C\n  commonPrefix\x2C\n  emitKeys\x2C\n  kSubstringSearch\x2C\n  CSI\x2C\n};\n
code-source-info,0x12ea9864c790,90,0,12360,C0O0C4O12360,,
code-creation,JS,9,74292,0x12ea9864c900,228, node:internal/readline/utils:1:1,0xcb65972d998,~
code-source-info,0x12ea9864c900,90,0,12360,C0O0C58O25C64O51C70O74C76O96C82O125C88O155C94O179C100O209C105O268C111O268C113O304C115O304C117O337C120O337C125O562C127O574C131O616C135O616C139O611C143O647C147O647C151O642C155O673C159O673C163O668C167O705C171O705C175O700C179O12249C186O12270C192O12286C198O12304C204O12320C210O12332C216O12352C222O12264C227O12359,,
code-creation,JS,9,74375,0x12ea9864cac0,76,CSI node:internal/readline/utils:18:13,0xcb65972da00,~
code-source-info,0x12ea9864cac0,90,378,560,C0O378C8O411C20O441C22O456C26O446C31O475C33O489C43O511C47O504C52O525C54O536C64O465C69O428C73O547C75O558,,
code-creation,Eval,9,74458,0x12ea9864cba0,5, node:internal/readline/callbacks:1:1,0xcb65972f610,~
script-source,91,node:internal/readline/callbacks,'use strict';\n\nconst {\n  NumberIsNaN\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CURSOR_POS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  CSI\x2C\n} = require('internal/readline/utils');\n\nconst {\n  kClearLine\x2C\n  kClearScreenDown\x2C\n  kClearToLineBeginning\x2C\n  kClearToLineEnd\x2C\n} = CSI;\n\n\n/**\n * moves the cursor to the x and y coordinate on the given stream\n */\n\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  if (typeof y === 'function') {\n    callback = y;\n    y = undefined;\n  }\n\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\n\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\n    return true;\n  }\n\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\n\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\n  return stream.write(data\x2C callback);\n}\n\n/**\n * moves the cursor relative to its current location\n */\n\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  if (stream == null || !(dx || dy)) {\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\n    return true;\n  }\n\n  let data = '';\n\n  if (dx < 0) {\n    data += CSI`${-dx}D`;\n  } else if (dx > 0) {\n    data += CSI`${dx}C`;\n  }\n\n  if (dy < 0) {\n    data += CSI`${-dy}A`;\n  } else if (dy > 0) {\n    data += CSI`${dy}B`;\n  }\n\n  return stream.write(data\x2C callback);\n}\n\n/**\n * clears the current line the cursor is on:\n *   -1 for left of the cursor\n *   +1 for right of the cursor\n *    0 for the entire line\n */\n\nfunction clearLine(stream\x2C dir\x2C callback) {\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  if (stream === null || stream === undefined) {\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\n    return true;\n  }\n\n  const type =\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\n  return stream.write(type\x2C callback);\n}\n\n/**\n * clears the screen from the current position of the cursor down\n */\n\nfunction clearScreenDown(stream\x2C callback) {\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  if (stream === null || stream === undefined) {\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\n    return true;\n  }\n\n  return stream.write(kClearScreenDown\x2C callback);\n}\n\nmodule.exports = {\n  clearLine\x2C\n  clearScreenDown\x2C\n  cursorTo\x2C\n  moveCursor\x2C\n};\n
code-source-info,0x12ea9864cba0,91,0,2754,C0O0C4O2754,,
code-creation,JS,9,74542,0x12ea9864ccd0,179, node:internal/readline/callbacks:1:1,0xcb65972f778,~
code-source-info,0x12ea9864ccd0,91,0,2754,C0O0C56O25C62O139C65O139C70O73C75O79C81O106C87O200C90O200C95O178C101O251C104O251C109O242C115O378C118O298C124O312C130O332C136O357C142O2674C149O2695C155O2708C161O2727C167O2739C173O2689C178O2753,,
tick,0x101175d0c,74708,0,0x0,2,0x12ea98648a13,0x12ea98648615,0x12ea9864756b,0x12ea986473e7,0x12ea98647228,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,JS,9,74792,0x12ea9864ce90,188,readFile node:internal/fs/promises:1229:24,0xcb659717fd0,~
code-source-info,0x12ea9864ce90,84,31633,31954,C10O31633C18O31653C23O31674C28O31663C35O31722C44O31738C46O31758C48O31747C53O31774C56O31781C69O31811C70O31815C73O31836C78O31815C82O31859C96O31865C109O31859C135O31892C141O31913C147O31945C152O31899C165O31952,,
code-creation,JS,9,74792,0x12ea9864d010,46,checkAborted node:internal/fs/promises:471:22,0xcb659717108,~
code-source-info,0x12ea9864d010,84,11233,11331,C0O11246C7O11256C16O11271C23O11292C28O11319C38O11277C43O11271C45O11330,,
code-creation,JS,9,74833,0x12ea9864d130,181,open node:internal/fs/promises:634:20,0xcb659717318,~
code-source-info,0x12ea9864d130,84,15842,16155,C10O15842C18O15866C23O15873C29O15919C34O15919C39O15943C55O15950C62O15988C69O16016C74O16042C77O16050C84O16090C96O16050C107O16016C120O16010C145O15995C158O16153,,
code-creation,Eval,9,75375,0x12ea9864d280,5, node:internal/modules/esm/module_job:1:1,0xcb6597360d0,~
script-source,92,node:internal/modules/esm/module_job,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  FunctionPrototype\x2C\n  ObjectSetPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafePromiseAllReturnArrayLike\x2C\n  SafePromiseAllReturnVoid\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\n\nconst { ModuleWrap\x2C kInstantiated } = internalBinding('module_wrap');\nconst {\n  privateSymbols: {\n    entry_point_module_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst { decorateErrorStack\x2C kEmptyObject } = require('internal/util');\nconst {\n  getSourceMapsEnabled\x2C\n} = require('internal/source_map/source_map_cache');\nconst assert = require('internal/assert');\nconst resolvedPromise = PromiseResolve();\nconst {\n  setHasStartedUserESMExecution\x2C\n} = require('internal/modules/helpers');\nconst { getOptionValue } = require('internal/options');\nconst noop = FunctionPrototype;\nconst {\n  ERR_REQUIRE_ASYNC_MODULE\x2C\n} = require('internal/errors').codes;\nlet hasPausedEntry = false;\n\nconst CJSGlobalLike = [\n  'require'\x2C\n  'module'\x2C\n  'exports'\x2C\n  '__filename'\x2C\n  '__dirname'\x2C\n];\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\n  ArrayPrototypeSome(\n    CJSGlobalLike\x2C\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x2C\n  );\n\nclass ModuleJobBase {\n  constructor(url\x2C importAttributes\x2C isMain\x2C inspectBrk) {\n    this.importAttributes = importAttributes;\n    this.isMain = isMain;\n    this.inspectBrk = inspectBrk;\n\n    this.url = url;\n  }\n}\n\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\n * its dependencies\x2C over time. */\nclass ModuleJob extends ModuleJobBase {\n  #loader = null;\n\n  /**\n   * @param {ModuleLoader} loader The ESM loader.\n   * @param {string} url URL of the module to be wrapped in ModuleJob.\n   * @param {ImportAttributes} importAttributes Import attributes from the import statement.\n   * @param {ModuleWrap|Promise<ModuleWrap>} moduleOrModulePromise Translated ModuleWrap for the module.\n   * @param {boolean} isMain Whether the module is the entry point.\n   * @param {boolean} inspectBrk Whether this module should be evaluated with the\n   *                             first line paused in the debugger (because --inspect-brk is passed).\n   * @param {boolean} isForRequireInImportedCJS Whether this is created for require() in imported CJS.\n   */\n  constructor(loader\x2C url\x2C importAttributes = { __proto__: null }\x2C\n              moduleOrModulePromise\x2C isMain\x2C inspectBrk\x2C isForRequireInImportedCJS = false) {\n    super(url\x2C importAttributes\x2C isMain\x2C inspectBrk);\n    this.#loader = loader;\n\n    // Expose the promise to the ModuleWrap directly for linking below.\n    if (isForRequireInImportedCJS) {\n      this.module = moduleOrModulePromise;\n      assert(this.module instanceof ModuleWrap);\n      this.modulePromise = PromiseResolve(this.module);\n    } else {\n      this.modulePromise = moduleOrModulePromise;\n    }\n\n    // Promise for the list of all dependencyJobs.\n    this.linked = this._link();\n    // This promise is awaited later anyway\x2C so silence\n    // 'unhandled rejection' warnings.\n    PromisePrototypeThen(this.linked\x2C undefined\x2C noop);\n\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\n    // and module wrapper is instantiated.\n    this.instantiated = undefined;\n  }\n\n  /**\n   * Iterates the module requests and links with the loader.\n   * @returns {Promise<ModuleJob[]>} Dependency module jobs.\n   */\n  async _link() {\n    this.module = await this.modulePromise;\n    assert(this.module instanceof ModuleWrap);\n\n    const moduleRequests = this.module.getModuleRequests();\n    // Explicitly keeping track of dependency jobs is needed in order\n    // to flatten out the dependency graph below in `_instantiate()`\x2C\n    // so that circular dependencies can't cause a deadlock by two of\n    // these `link` callbacks depending on each other.\n    // Create an ArrayLike to avoid calling into userspace with `.then`\n    // when returned from the async function.\n    const dependencyJobs = Array(moduleRequests.length);\n    ObjectSetPrototypeOf(dependencyJobs\x2C null);\n\n    // Specifiers should be aligned with the moduleRequests array in order.\n    const specifiers = Array(moduleRequests.length);\n    const modulePromises = Array(moduleRequests.length);\n    // Iterate with index to avoid calling into userspace with `Symbol.iterator`.\n    for (let idx = 0; idx < moduleRequests.length; idx++) {\n      const { specifier\x2C attributes } = moduleRequests[idx];\n\n      const dependencyJobPromise = this.#loader.getModuleJobForImport(\n        specifier\x2C this.url\x2C attributes\x2C\n      );\n      const modulePromise = PromisePrototypeThen(dependencyJobPromise\x2C (job) => {\n        debug(`async link() ${this.url} -> ${specifier}`\x2C job);\n        dependencyJobs[idx] = job;\n        return job.modulePromise;\n      });\n      modulePromises[idx] = modulePromise;\n      specifiers[idx] = specifier;\n    }\n\n    const modules = await SafePromiseAllReturnArrayLike(modulePromises);\n    this.module.link(specifiers\x2C modules);\n\n    return dependencyJobs;\n  }\n\n  instantiate() {\n    if (this.instantiated === undefined) {\n      this.instantiated = this._instantiate();\n    }\n    return this.instantiated;\n  }\n\n  async _instantiate() {\n    const jobsInGraph = new SafeSet();\n    const addJobsToDependencyGraph = async (moduleJob) => {\n      debug(`async addJobsToDependencyGraph() ${this.url}`\x2C moduleJob);\n\n      if (jobsInGraph.has(moduleJob)) {\n        return;\n      }\n      jobsInGraph.add(moduleJob);\n      const dependencyJobs = await moduleJob.linked;\n      return SafePromiseAllReturnVoid(dependencyJobs\x2C addJobsToDependencyGraph);\n    };\n    await addJobsToDependencyGraph(this);\n\n    try {\n      if (!hasPausedEntry && this.inspectBrk) {\n        hasPausedEntry = true;\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\n        initWrapper(this.module.instantiate\x2C this.module);\n      } else {\n        this.module.instantiate();\n      }\n    } catch (e) {\n      decorateErrorStack(e);\n      // TODO(@bcoe): Add source map support to exception that occurs as result\n      // of missing named export. This is currently not possible because\n      // stack trace originates in module_job\x2C not the file itself. A hidden\n      // symbol with filename could be set in node_errors.cc to facilitate this.\n      if (!getSourceMapsEnabled() &&\n          StringPrototypeIncludes(e.message\x2C\n                                  ' does not provide an export named')) {\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\n          /:\\d+$/\x2C\n          splitStack[0]\x2C\n          ''\x2C\n        );\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\n          e.message);\n        const { url: childFileURL } = await this.#loader.resolve(\n          childSpecifier\x2C\n          parentFileUrl\x2C\n          kEmptyObject\x2C\n        );\n        let format;\n        try {\n          // This might throw for non-CommonJS modules because we aren't passing\n          // in the import attributes and some formats require them; but we only\n          // care about CommonJS for the purposes of this error message.\n          ({ format } =\n            await this.#loader.load(childFileURL));\n        } catch {\n          // Continue regardless of error.\n        }\n\n        if (format === 'commonjs') {\n          const importStatement = splitStack[1];\n          // TODO(@ctavan): The original error stack only provides the single\n          // line which causes the error. For multi-line import statements we\n          // cannot generate an equivalent object destructuring assignment by\n          // just parsing the error stack.\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\n          const destructuringAssignment = oneLineNamedImports &&\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\n          e.message = `Named export '${name}' not found. The requested module` +\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\n            'always be imported via the default export\x2C for example using:' +\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\n              destructuringAssignment ?\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\n          newStack[3] = `SyntaxError: ${e.message}`;\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\n        }\n      }\n      throw e;\n    }\n\n    for (const dependencyJob of jobsInGraph) {\n      // Calling `this.module.instantiate()` instantiates not only the\n      // ModuleWrap in this module\x2C but all modules in the graph.\n      dependencyJob.instantiated = resolvedPromise;\n    }\n  }\n\n  runSync() {\n    assert(this.module instanceof ModuleWrap);\n    if (this.instantiated !== undefined) {\n      return { __proto__: null\x2C module: this.module };\n    }\n\n    this.module.instantiate();\n    this.instantiated = PromiseResolve();\n    const timeout = -1;\n    const breakOnSigint = false;\n    setHasStartedUserESMExecution();\n    this.module.evaluate(timeout\x2C breakOnSigint);\n    return { __proto__: null\x2C module: this.module };\n  }\n\n  async run(isEntryPoint = false) {\n    await this.instantiate();\n    if (isEntryPoint) {\n      globalThis[entry_point_module_private_symbol] = this.module;\n    }\n    const timeout = -1;\n    const breakOnSigint = false;\n    setHasStartedUserESMExecution();\n    try {\n      await this.module.evaluate(timeout\x2C breakOnSigint);\n    } catch (e) {\n      if (e?.name === 'ReferenceError' &&\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\n        e.message += ' in ES module scope';\n\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\n          e.message += '\x2C you can use import instead';\n        }\n\n        const packageConfig =\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\n            require('internal/modules/package_json_reader')\n              .getPackageScopeConfig(this.module.url);\n        if (packageConfig.type === 'module') {\n          e.message +=\n            '\\nThis file is being treated as an ES module because it has a ' +\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\n            'to use the \\'.cjs\\' file extension.';\n        }\n      }\n      throw e;\n    }\n    return { __proto__: null\x2C module: this.module };\n  }\n}\n\n/**\n * This is a fully synchronous job and does not spawn additional threads in any way.\n * All the steps are ensured to be synchronous and it throws on instantiating\n * an asynchronous graph. It also disallows CJS <-> ESM cycles.\n *\n * This is used for ES modules loaded via require(esm). Modules loaded by require() in\n * imported CJS are handled by ModuleJob with the isForRequireInImportedCJS set to true instead.\n * The two currently have different caching behaviors.\n * TODO(joyeecheung): consolidate this with the isForRequireInImportedCJS variant of ModuleJob.\n */\nclass ModuleJobSync extends ModuleJobBase {\n  #loader = null;\n\n  /**\n   * @param {ModuleLoader} loader The ESM loader.\n   * @param {string} url URL of the module to be wrapped in ModuleJob.\n   * @param {ImportAttributes} importAttributes Import attributes from the import statement.\n   * @param {ModuleWrap} moduleWrap Translated ModuleWrap for the module.\n   * @param {boolean} isMain Whether the module is the entry point.\n   * @param {boolean} inspectBrk Whether this module should be evaluated with the\n   *                             first line paused in the debugger (because --inspect-brk is passed).\n   */\n  constructor(loader\x2C url\x2C importAttributes\x2C moduleWrap\x2C isMain\x2C inspectBrk) {\n    super(url\x2C importAttributes\x2C isMain\x2C inspectBrk\x2C true);\n\n    this.#loader = loader;\n    this.module = moduleWrap;\n\n    assert(this.module instanceof ModuleWrap);\n    // Store itself into the cache first before linking in case there are circular\n    // references in the linking.\n    loader.loadCache.set(url\x2C importAttributes.type\x2C this);\n\n    try {\n      const moduleRequests = this.module.getModuleRequests();\n      // Specifiers should be aligned with the moduleRequests array in order.\n      const specifiers = Array(moduleRequests.length);\n      const modules = Array(moduleRequests.length);\n      const jobs = Array(moduleRequests.length);\n      for (let i = 0; i < moduleRequests.length; ++i) {\n        const { specifier\x2C attributes } = moduleRequests[i];\n        const job = this.#loader.getModuleJobForRequire(specifier\x2C url\x2C attributes);\n        specifiers[i] = specifier;\n        modules[i] = job.module;\n        jobs[i] = job;\n      }\n      this.module.link(specifiers\x2C modules);\n      this.linked = jobs;\n    } finally {\n      // Restore it - if it succeeds\x2C we'll reset in the caller; Otherwise it's\n      // not cached and if the error is caught\x2C subsequent attempt would still fail.\n      loader.loadCache.delete(url\x2C importAttributes.type);\n    }\n  }\n\n  get modulePromise() {\n    return PromiseResolve(this.module);\n  }\n\n  async run() {\n    // This path is hit by a require'd module that is imported again.\n    const status = this.module.getStatus();\n    if (status > kInstantiated) {\n      if (this.evaluationPromise) {\n        await this.evaluationPromise;\n      }\n      return { __proto__: null\x2C module: this.module };\n    } else if (status === kInstantiated) {\n      // The evaluation may have been canceled because instantiateSync() detected TLA first.\n      // But when it is imported again\x2C it's fine to re-evaluate it asynchronously.\n      const timeout = -1;\n      const breakOnSigint = false;\n      this.evaluationPromise = this.module.evaluate(timeout\x2C breakOnSigint);\n      await this.evaluationPromise;\n      this.evaluationPromise = undefined;\n      return { __proto__: null\x2C module: this.module };\n    }\n\n    assert.fail('Unexpected status of a module that is imported again after being required. ' +\n                `Status = ${status}`);\n  }\n\n  runSync() {\n    // TODO(joyeecheung): add the error decoration logic from the async instantiate.\n    this.module.async = this.module.instantiateSync();\n    // If --experimental-print-required-tla is true\x2C proceeds to evaluation even\n    // if it's async because we want to search for the TLA and help users locate\n    // them.\n    // TODO(joyeecheung): track the asynchroniticy using v8::Module::HasTopLevelAwait()\n    // and we'll be able to throw right after compilation of the modules\x2C using acron\n    // to find and print the TLA.\n    if (this.module.async && !getOptionValue('--experimental-print-required-tla')) {\n      throw new ERR_REQUIRE_ASYNC_MODULE();\n    }\n    setHasStartedUserESMExecution();\n    const namespace = this.module.evaluateSync();\n    return { __proto__: null\x2C module: this.module\x2C namespace };\n  }\n}\n\nObjectSetPrototypeOf(ModuleJobBase.prototype\x2C null);\nmodule.exports = {\n  ModuleJob\x2C ModuleJobSync\x2C ModuleJobBase\x2C\n};\n
code-source-info,0x12ea9864d280,92,0,15439,C0O0C4O15439,,
code-creation,JS,9,75917,0x12ea9864d510,618, node:internal/modules/esm/module_job:1:1,0xcb6597364d8,~
code-source-info,0x12ea9864d510,92,0,15439,C0O0C106O25C112O34C118O56C124O78C129O99C135O123C141O147C147O165C153O188C159O220C165O253C171O281C177O292C183O319C189O343C195O372C201O413C207O413C212O446C225O447C231O413C233O530C239O530C244O500C250O512C256O638C262O638C267O588C272O594C278O708C284O708C289O671C295O691C301O770C307O770C312O744C318O834C324O834C328O834C330O886C333O886C336O886C338O949C344O949C349O914C355O1013C361O1013C366O994C372O1055C374O1055C376O1114C382O1114C387O1140C392O1084C398O1169C399O1169C401O1199C405O1199C407O1317C411O1317C434O1451C451O1801C508O1777C525O11544C572O15321C575O15356C582O15321C587O15374C594O15395C600O15406C606O15421C612O15389C617O15438,,
code-creation,JS,9,75958,0x12ea9864d888,11,ModuleJobSync node:internal/modules/esm/module_job:310:43,0xcb659736a20,~
code-source-info,0x12ea9864d888,92,11558,15319,C3O11572C10O15319,,
code-creation,JS,9,75958,0x12ea9864d8f8,11,ModuleJob node:internal/modules/esm/module_job:72:39,0xcb659736858,~
code-source-info,0x12ea9864d8f8,92,1815,10941,C3O1829C10O10941,,
tick,0x1012bf4d8,76000,0,0x0,0,0x107f890bc,0x107f88e30,0x12ea9864728b,0x12ea98646fc2,0x12ea986440e8,0x1016a9290
code-creation,JS,9,76042,0x12ea9864d9d8,221,ModuleJob node:internal/modules/esm/module_job:85:14,0xcb659736648,~
code-source-info,0x12ea9864d9d8,92,2535,3479,C13O2535C41O2687C74O2687C100O2741C105O2754C109O2841C113O2880C115O2892C119O2923C126O2935C135O2953C137O2942C141O2923C145O2972C149O2993C152O3013C157O2993C161O2991C167O3041C169O3060C173O3166C178O3166C182O3159C186O3274C193O3300C204O3319C207O3274C212O3445C213O3463C220O3478,,
code-creation,JS,9,76083,0x12ea9864db88,26,ModuleJobBase node:internal/modules/esm/module_job:61:14,0xcb6597365f0,~
code-source-info,0x12ea9864db88,92,1486,1662,C0O1536C2O1558C6O1582C8O1594C12O1608C14O1624C18O1643C20O1652C25O1661,,
code-creation,JS,9,76125,0x12ea9864dcf0,494,_link node:internal/modules/esm/module_job:114:14,0xcb6597366a0,~
code-source-info,0x12ea9864dcf0,92,3628,5242,C4O3628C30O3637C33O3662C46O3651C72O3649C76O3681C86O3693C95O3711C97O3700C101O3681C105O3752C108O3757C113O3764C118O3764C123O4195C130O4216C135O4195C139O4195C141O4229C154O4229C159O4373C164O4394C169O4373C174O4430C179O4451C184O4430C189O4561C195O5092C217O4596C221O4596C226O4568C229O4585C233O4568C258O4642C262O4656C267O4616C273O4627C278O4699C288O4704C293O4712C309O4759C318O4712C324O4813C332O4834C338O4813C344O5016C352O5036C356O5059C364O5075C375O4546C396O5115C403O5121C415O5115C441O5172C444O5177C449O5184C454O5184C460O5216C470O5238,,
code-creation,JS,9,76208,0x12ea9864e058,218,set node:internal/modules/esm/module_map:96:6,0x3564d12ad818,~
code-source-info,0x12ea9864e058,76,3076,3686,C11O3089C21O3124C31O3124C36O3156C44O3156C49O3217C57O3217C62O3199C67O3265C69O3273C84O3353C102O3359C107O3353C108O3420C120O3437C135O3461C137O3457C148O3504C159O3420C163O3565C165O3571C176O3571C190O3608C192O3631C196O3642C198O3655C212O3655C217O3682,,
code-creation,JS,9,76208,0x12ea9864e1e8,10, node:internal/modules/esm/module_map:12:63,0x3564d12ad500,~
code-source-info,0x12ea9864e1e8,76,284,309,C0O296C2O302C9O308,,
code-creation,JS,9,76250,0x12ea9864e3b8,503,run node:internal/modules/esm/module_job:262:12,0xcb659736800,~
code-source-info,0x12ea9864e3b
code-creation,JS,9,76292,0x12ea9864e6b8,24,instantiate node:internal/modules/esm/module_job:153:14,0xcb6597366f8,~
code-source-info,0x12ea9864e6b8,92,5257,5391,C0O5275C6O5336C11O5336C15O5329C19O5374C23O5387,,
code-creation,JS,9,76375,0x12ea9864e970,966,_instantiate node:internal/modules/esm/module_job:160:21,0xcb659736750,~
code-source-info,0x12ea9864e
code-creation,JS,9,76417,0x12ea9864ef08,171,addJobsToDependencyGraph node:internal/modules/esm/module_job:162:38,0xcb6597393e8,~
code-source-info,0x12ea9864ef08,92,5494,5827,C10O5494C18O5523C31O5570C40O5523C45O5596C50O5612C55O5612C62O5638C71O5645C72O5660C75O5672C80O5672C85O5733C97O5717C123O5747C132O5795C135O5754C148O5821,,
code-creation,JS,9,76458,0x12ea9864f050,10, node:internal/modules/esm/module_job:21:63,0xcb659736540,~
code-source-info,0x12ea9864f050,92,463,488,C0O475C2O481C9O487,,
code-creation,JS,9,76500,0x12ea9864f108,127,FileHandle node:internal/fs/promises:157:14,0xcb659718130,~
code-source-info,0x12ea9864f108,84,4083,4290,C3O4102C24O4102C50O4115C62O4115C67O4156C69O4161C74O4170C78O4188C80O4193C88O4200C90O4224C98O4198C102O4238C104O4243C109O4250C113O4259C115O4264C119O4279C126O4289,,
code-creation,JS,9,76583,0x12ea9864f320,775,readFileHandle node:internal/fs/promises:511:30,0xcb6597171b8,~
code-source-info,0x12ea9864f
code-creation,JS,9,76625,0x12ea9864f7a8,8,get fd node:internal/fs/promises:171:9,0xcb6597181f8,~
code-source-info,0x12ea9864f7a8,84,4361,4391,C0O4370C2O4382C4O4381C7O4387,,
code-creation,JS,9,76625,0x12ea9864f868,79,handleFdClose node:internal/fs/promises:426:29,0xcb659717000,~
code-source-info,0x12ea9864f868,84,10120,10463,C0O10120C23O10151C30O10184C43O10158C56O10461,,
code-creation,JS,9,77083,0x12ea9864f940,36, node:internal/fs/promises:429:5,0xcb659739d38,~
code-source-info,0x12ea9864f940,84,10203,10262,C0O10203C9O10215C21O10236C30O10215C35O10262,,
code-creation,JS,9,77125,0x12ea9864fa38,236,close node:internal/fs/promises:238:11,0xcb659719830,~
code-source-info,0x12ea9864fa38,84,5634,6426,C0O5646C7O5655C9O5654C15O5660C20O5676C27O5683C30O5700C31O5712C38O5721C40O5720C45O5745C52O5756C55O5772C56O5784C63O5789C71O5795C75O5803C82O5811C87O5819C92O5834C102O5844C106O5856C118O5878C128O5920C130O5919C134O5929C139O5929C149O5878C154O5876C160O6018C172O6040C179O6081C189O6077C200O6040C205O6038C209O6371C212O6376C220O6376C225O6395C232O6406C235O6422,,
code-creation,JS,9,77208,0x12ea9864fbf0,17, node:internal/fs/promises:252:9,0xcb659739f98,~
code-source-info,0x12ea9864fbf0,84,5946,5988,C0O5954C7O5959C11O5974C16O5987,,
code-creation,JS,9,77208,0x12ea9864fc68,3, node:internal/fs/promises:429:51,0xcb659739ea8,~
code-source-info,0x12ea9864fc68,84,10249,10261,C0O10255C2O10261,,
tick,0x1011fc824,77250,0,0x0,2,0x12ea986486a6,0x1016a9290
code-creation,JS,9,77250,0x12ea9864fd20,216,validateAttributes node:internal/modules/esm/assert:55:28,0x3564d12a96b0,~
code-source-info,0x12ea9864fd20,75,1790,3145,C10O1790C19O1889C24O1889C29O1934C31O1946C35O1939C40O1965C42O1973C48O1977C53O1997C60O2044C66O2070C69O2065C75O2003C80O1997C81O1955C86O1921C90O2107C97O2120C101O2133C102O2163C112O2314C119O2659C130O2291C131O2303C132O2479C140O2484C147O2551C148O2563C149O2578C152O2625C157O2585C162O2631C163O2734C164O2746C165O2893C173O2898C180O3008C196O3014C201O3008C202O3086C205O3133C210O3093C215O3139,,
code-creation,JS,9,77292,0x12ea9864fef0,82,#translate node:internal/modules/esm/loader:429:13,0x3564d12a79f8,~
code-source-info,0x12ea9864fef0,74,16322,16612,C0O16363C5O16363C11O16419C16O16419C20O16435C25O16436C31O16454C33O16479C48O16485C53O16479C54O16540C76O16547C81O16608,,
code-creation,JS,9,77333,0x12ea9864ffe0,31,validateLoadResult node:internal/modules/esm/loader:703:21,0x3564d12a8130,~
code-source-info,0x12ea9864ffe0,74,27607,27740,C0O27627C5O27655C13O27655C18O27691C23O27692C30O27739,,
code-creation,JS,9,77333,0x12ea986500b0,80,moduleStrategy node:internal/modules/esm/translators:97:50,0x3564d12b06e0,~
code-source-info,0x12ea986500b0,77,2688,2988,C0O2714C13O2714C18O2758C23O2767C29O2788C39O2824C44O2788C48O2870C54O2870C59O2842C64O2926C73O2926C79O2986,,
code-creation,JS,9,77375,0x12ea98650190,10, node:internal/modules/esm/translators:46:63,0x3564d12b0688,~
code-source-info,0x12ea98650190,77,1098,1123,C0O1110C2O1116C9O1122,,
code-creation,Script,9,77417,0x12ea986502a0,245, file:///Users/hsulzz/Playground/hello-world/src/index.mjs:1:1,0xcb65973bec0,~
script-source,93,file:///Users/hsulzz/Playground/hello-world/src/index.mjs,import { createServer } from "node:http";\n\nconst [hostname\x2Cport] = ["127.0.0.1"\x2C3000];\n\nconst server =createServer((_req\x2Cres)=>{\n    res.statusCode = 200;\n    res.setHeader("Content-Type"\x2C"text/plain");\n    res.end("Hello World\\n");\n});\n\nserver.listen(port\x2Chostname\x2C()=>{\n    console.log(`Server running at http://${hostname}:${port}/`);\n});\n\n
code-source-info,0x12ea986502a0,93,0,343,C10O0C23O0C43O0C47O67C52O67C69O50C107O59C203O102C214O102C219O245C230O257C238O245C244O343,,
code-creation,JS,10,77792,0x107f8d420,392,URLContext node:internal/url:168:18,0x2ddc31ec7418,^
code-source-info,0x107f8d420,36,3563,4335,,,
code-creation,JS,10,77792,0x107f8d5e0,312,get protocol node:internal/url:990:15,0x2ddc31ec9850,^
code-source-info,0x107f8d5e0,36,29236,29328,,,
code-creation,JS,10,77833,0x107f8d740,616,#ensureSearchParamsUpdated node:internal/url:880:29,0x2ddc31ec9320,^
code-source-info,0x107f8d740,36,25426,25839,,,
code-creation,JS,10,77833,0x107f8d9e0,1728,#updateContext node:internal/url:894:17,0x2ddc31ec93e8,^
code-source-info,0x107f8d9e0,36,26101,27732,,,
code-creation,JS,10,78042,0x107f8e0c0,728,markTransferMode node:internal/worker/js_transferable:91:26,0x22b216cf8310,^
script-source,26,node:internal/worker/js_transferable,'use strict';\nconst {\n  Error\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\nconst {\n  codes: {\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst webidl = require('internal/webidl');\nconst {\n  messaging_deserialize_symbol\x2C\n  messaging_transfer_symbol\x2C\n  messaging_clone_symbol\x2C\n  messaging_transfer_list_symbol\x2C\n} = internalBinding('symbols');\nconst {\n  setDeserializerCreateObjectFunction\x2C\n  structuredClone: nativeStructuredClone\x2C\n} = internalBinding('messaging');\nconst {\n  privateSymbols: {\n    transfer_mode_private_symbol\x2C\n  }\x2C\n  constants: {\n    kDisallowCloneAndTransfer\x2C\n    kTransferable\x2C\n    kCloneable\x2C\n  }\x2C\n} = internalBinding('util');\n\nfunction setup() {\n  // Register the handler that will be used when deserializing JS-based objects\n  // from .postMessage() calls. The format of `deserializeInfo` is generally\n  // 'module:Constructor'\x2C e.g. 'internal/fs/promises:FileHandle'.\n  setDeserializerCreateObjectFunction((deserializeInfo) => {\n    const { 0: module\x2C 1: ctor } = StringPrototypeSplit(deserializeInfo\x2C ':');\n    const Ctor = require(module)[ctor];\n    if (typeof Ctor !== 'function' ||\n        typeof Ctor.prototype[messaging_deserialize_symbol] !== 'function') {\n      // Not one of the official errors because one should not be able to get\n      // here without messing with Node.js internals.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Unknown deserialize spec ${deserializeInfo}`);\n    }\n\n    return new Ctor();\n  });\n}\n\n/**\n * Mark an object as being transferable or customized cloneable in\n * `.postMessage()`.\n * This should only applied to host objects like Web API interfaces\x2C Node.js'\n * built-in objects.\n * Objects marked as cloneable and transferable should implement the method\n * `@@kClone` and `@@kTransfer` respectively. Method `@@kDeserialize` is\n * required to deserialize the data to a new instance.\n *\n * Example implementation of a cloneable interface (assuming its located in\n * `internal/my_interface.js`):\n *\n * ```\n * class MyInterface {\n *   constructor(...args) {\n *     markTransferMode(this\x2C true);\n *     this.args = args;\n *   }\n *   [kDeserialize](data) {\n *     this.args = data.args;\n *   }\n *   [kClone]() {\n *     return {\n *        data: { args: this.args }\x2C\n *        deserializeInfo: 'internal/my_interface:MyInterface'\x2C\n *     }\n *   }\n * }\n *\n * module.exports = {\n *   MyInterface\x2C\n * };\n * ```\n * @param {object} obj Host objects that can be either cloned or transferred.\n * @param {boolean} [cloneable] if the object can be cloned and `@@kClone` is\n *                              implemented.\n * @param {boolean} [transferable] if the object can be transferred and\n *                                 `@@kTransfer` is implemented.\n */\nfunction markTransferMode(obj\x2C cloneable = false\x2C transferable = false) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  let mode = kDisallowCloneAndTransfer;\n  if (cloneable) mode |= kCloneable;\n  if (transferable) mode |= kTransferable;\n  obj[transfer_mode_private_symbol] = mode;\n}\n\n\nwebidl.converters.StructuredSerializeOptions = webidl\n  .createDictionaryConverter(\n    [\n      {\n        key: 'transfer'\x2C\n        converter: webidl.converters['sequence<object>']\x2C\n        defaultValue: () => []\x2C\n      }\x2C\n    ]\x2C\n  );\n\nfunction structuredClone(value\x2C options) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('The value argument must be specified');\n  }\n\n  const idlOptions = webidl.converters.StructuredSerializeOptions(\n    options\x2C\n    {\n      __proto__: null\x2C\n      prefix: "Failed to execute 'structuredClone'"\x2C\n      context: 'Options'\x2C\n    }\x2C\n  );\n\n  const serializedData = nativeStructuredClone(value\x2C idlOptions);\n  return serializedData;\n}\n\nmodule.exports = {\n  markTransferMode\x2C\n  setup\x2C\n  structuredClone\x2C\n  kClone: messaging_clone_symbol\x2C\n  kDeserialize: messaging_deserialize_symbol\x2C\n  kTransfer: messaging_transfer_symbol\x2C\n  kTransferList: messaging_transfer_list_symbol\x2C\n};\n
code-source-info,0x107f8e0c0,26,2775,3148,,,
code-creation,JS,10,78208,0x107f8e3c0,176,get href node:internal/url:945:11,0x2ddc31ec95a0,^
code-source-info,0x107f8e3c0,36,27933,28110,,,
code-creation,JS,9,78250,0x12ea98650800,69, node:internal/modules/esm/module_job:138:72,0xcb6597389f0,~
code-source-info,0x12ea98650800,92,4856,5007,C0O4875C15O4902C32O4912C39O4875C44O4939C55O4954C60O4959C64O4985C68O4999,,
code-creation,JS,9,78250,0x12ea98650918,119,builtinStrategy node:internal/modules/esm/translators:349:52,0x3564d12b0898,~
code-source-info,0x12ea98650918,77,12388,12770,C0O12398C10O12433C15O12398C19O12480C27O12480C33O12527C38O12527C44O12557C49O12566C54O12566C60O12586C68O12591C77O12635C79O12649C86O12655C91O12649C92O12698C100O12729C105O12698C109O12753C114O12753C118O12768,,
code-creation,Eval,9,78375,0x12ea98650a30,5, node:http:1:1,0xcb65973df80,~
script-source,94,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\nconst httpAgent = require('_http_agent');\nconst { ClientRequest } = require('_http_client');\nconst { methods\x2C parsers } = require('_http_common');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\x2C\n} = require('_http_outgoing');\nconst {\n  _connectionListener\x2C\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\x2C\n} = require('_http_server');\nlet maxHeaderSize;\nlet undici;\n\n/**\n * Returns a new instance of `http.Server`.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   requireHostHeader?: boolean;\n *   joinDuplicateHeaders?: boolean;\n *   highWaterMark?: number;\n *   rejectNonStandardBodyWrites?: boolean;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n/**\n * @typedef {object} HTTPRequestOptions\n * @property {httpAgent.Agent | boolean} [agent] Controls Agent behavior.\n * @property {string} [auth] Basic authentication ('user:password') to compute an Authorization header.\n * @property {Function} [createConnection] Produces a socket/stream to use when the agent option is not used.\n * @property {number} [defaultPort] Default port for the protocol.\n * @property {number} [family] IP address family to use when resolving host or hostname.\n * @property {object} [headers] An object containing request headers.\n * @property {number} [hints] Optional dns.lookup() hints.\n * @property {string} [host] A domain name or IP address of the server to issue the request to.\n * @property {string} [hostname] Alias for host.\n * @property {boolean} [insecureHTTPParser] Use an insecure HTTP parser that accepts invalid HTTP headers when true.\n * @property {boolean} [joinDuplicateHeaders] Multiple header that joined with `\x2C` field line values.\n * @property {string} [localAddress] Local interface to bind for network connections.\n * @property {number} [localPort] Local port to connect from.\n * @property {Function} [lookup] Custom lookup function. Default: dns.lookup().\n * @property {number} [maxHeaderSize] Overrides the --max-http-header-size value for responses received from the server.\n * @property {string} [method] A string specifying the HTTP request method.\n * @property {string} [path] Request path.\n * @property {number} [port] Port of remote server.\n * @property {string} [protocol] Protocol to use.\n * @property {boolean} [setHost] Specifies whether or not to automatically add the Host header.\n * @property {AbortSignal} [signal] An AbortSignal that may be used to abort an ongoing request.\n * @property {string} [socketPath] Unix domain socket.\n * @property {number} [timeout] A number specifying the socket timeout in milliseconds.\n * @property {Array} [uniqueHeaders] A list of request headers that should be sent only once.\n */\n\n/**\n * Makes an HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction request(url\x2C options\x2C cb) {\n  return new ClientRequest(url\x2C options\x2C cb);\n}\n\n/**\n * Makes a `GET` HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(url\x2C options\x2C cb) {\n  const req = request(url\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\n/**\n * Lazy loads WebSocket\x2C CloseEvent and MessageEvent classes from undici\n * @returns {object} An object containing WebSocket\x2C CloseEvent\x2C and MessageEvent classes.\n */\nfunction lazyUndici() {\n  return undici ??= require('internal/deps/undici/undici');\n}\n\nmodule.exports = {\n  _connectionListener\x2C\n  METHODS: methods.toSorted()\x2C\n  STATUS_CODES\x2C\n  Agent: httpAgent.Agent\x2C\n  ClientRequest\x2C\n  IncomingMessage\x2C\n  OutgoingMessage\x2C\n  Server\x2C\n  ServerResponse\x2C\n  createServer\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  get\x2C\n  request\x2C\n  setMaxIdleHTTPParsers(max) {\n    validateInteger(max\x2C 'max'\x2C 1);\n    parsers.max = max;\n  }\x2C\n};\n\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    if (maxHeaderSize === undefined) {\n      const { getOptionValue } = require('internal/options');\n      maxHeaderSize = getOptionValue('--max-http-header-size');\n    }\n\n    return maxHeaderSize;\n  }\x2C\n});\n\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return httpAgent.globalAgent;\n  }\x2C\n  set(value) {\n    httpAgent.globalAgent = value;\n  }\x2C\n});\n\nObjectDefineProperty(module.exports\x2C 'WebSocket'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return lazyUndici().WebSocket;\n  }\x2C\n});\n\nObjectDefineProperty(module.exports\x2C 'CloseEvent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return lazyUndici().CloseEvent;\n  }\x2C\n});\n\nObjectDefineProperty(module.exports\x2C 'MessageEvent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return lazyUndici().MessageEvent;\n  }\x2C\n});\n
code-source-info,0x12ea98650a30,94,0,6422,C0O0C4O6422,,
code-creation,JS,9,78583,0x12ea98650c40,460, node:http:1:1,0xcb65973e0e8,~
code-source-info,0x12ea98650c
tick,0x192475198,78625,0,0x0,3,0x107f890bc,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,79208,0x12ea98650f28,5, node:_http_agent:1:1,0x3564d12bc320,~
script-source,95,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Symbol\x2C\n} = primordials;\n\nconst net = require('net');\nconst EventEmitter = require('events');\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\nconst { AsyncResource } = require('async_hooks');\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  validateNumber\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kOnKeylog = Symbol('onkeylog');\nconst kRequestOptions = Symbol('requestOptions');\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\n\n// TODO(jazelly): make this configurable\nconst HTTP_AGENT_KEEP_ALIVE_TIMEOUT_BUFFER = 1000;\n// New Agent code.\n\n// The largest departure from the previous implementation is that\n// an Agent instance holds connections for a variable number of host:ports.\n// Surprisingly\x2C this is still API compatible as far as third parties are\n// concerned. The only code that really notices the difference is the\n// request object.\n\n// Another departure is that all code related to HTTP parsing is in\n// ClientRequest.onSocket(). The Agent is now *strictly*\n// concerned with managing a connection pool.\n\nclass ReusedHandle {\n  constructor(type\x2C handle) {\n    this.type = type;\n    this.handle = handle;\n  }\n}\n\nfunction freeSocketErrorListener(err) {\n  const socket = this;\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\n  socket.destroy();\n  socket.emit('agentRemove');\n}\n\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  EventEmitter.call(this);\n\n  this.defaultPort = 80;\n  this.protocol = 'http:';\n\n  this.options = { __proto__: null\x2C ...options };\n\n  if (this.options.noDelay === undefined)\n    this.options.noDelay = true;\n\n  // Don't confuse net and make it think that we're connecting to a pipe\n  this.options.path = null;\n  this.requests = { __proto__: null };\n  this.sockets = { __proto__: null };\n  this.freeSockets = { __proto__: null };\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\n  this.keepAlive = this.options.keepAlive || false;\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\n  this.scheduling = this.options.scheduling || 'lifo';\n  this.maxTotalSockets = this.options.maxTotalSockets;\n  this.totalSocketCount = 0;\n\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\n\n  if (this.maxTotalSockets !== undefined) {\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets'\x2C 1);\n  } else {\n    this.maxTotalSockets = Infinity;\n  }\n\n  this.on('free'\x2C (socket\x2C options) => {\n    const name = this.getName(options);\n    debug('agent.on(free)'\x2C name);\n\n    // TODO(ronag): socket.destroy(err) might have been called\n    // before coming here and have an 'error' scheduled. In the\n    // case of socket.destroy() below this 'error' has no handler\n    // and could cause unhandled exception.\n\n    if (!socket.writable) {\n      socket.destroy();\n      return;\n    }\n\n    const requests = this.requests[name];\n    if (requests?.length) {\n      const req = requests.shift();\n      const reqAsyncRes = req[kRequestAsyncResource];\n      if (reqAsyncRes) {\n        // Run request within the original async context.\n        reqAsyncRes.runInAsyncScope(() => {\n          asyncResetHandle(socket);\n          setRequestSocket(this\x2C req\x2C socket);\n        });\n        req[kRequestAsyncResource] = null;\n      } else {\n        setRequestSocket(this\x2C req\x2C socket);\n      }\n      if (requests.length === 0) {\n        delete this.requests[name];\n      }\n      return;\n    }\n\n    // If there are no pending requests\x2C then put it in\n    // the freeSockets pool\x2C but only if we're allowed to do so.\n    const req = socket._httpMessage;\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\n      socket.destroy();\n      return;\n    }\n\n    const freeSockets = this.freeSockets[name] || [];\n    const freeLen = freeSockets.length;\n    let count = freeLen;\n    if (this.sockets[name])\n      count += this.sockets[name].length;\n\n    if (this.totalSocketCount > this.maxTotalSockets ||\n        count > this.maxSockets ||\n        freeLen >= this.maxFreeSockets ||\n        !this.keepSocketAlive(socket)) {\n      socket.destroy();\n      return;\n    }\n\n    this.freeSockets[name] = freeSockets;\n    socket[async_id_symbol] = -1;\n    socket._httpMessage = null;\n    this.removeSocket(socket\x2C options);\n\n    socket.once('error'\x2C freeSocketErrorListener);\n    freeSockets.push(socket);\n  });\n\n  // Don't emit keylog events unless there is a listener for them.\n  this.on('newListener'\x2C maybeEnableKeylog);\n}\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\n\nfunction maybeEnableKeylog(eventName) {\n  if (eventName === 'keylog') {\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\n    // Future sockets will listen on keylog at creation.\n    const agent = this;\n    this[kOnKeylog] = function onkeylog(keylog) {\n      agent.emit('keylog'\x2C keylog\x2C this);\n    };\n    // Existing sockets will start listening on keylog now.\n    const sockets = ObjectValues(this.sockets);\n    for (let i = 0; i < sockets.length; i++) {\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\n    }\n  }\n}\n\nAgent.defaultMaxSockets = Infinity;\n\nAgent.prototype.createConnection = net.createConnection;\n\n// Get the key for a given set of request options\nAgent.prototype.getName = function getName(options = kEmptyObject) {\n  let name = options.host || 'localhost';\n\n  name += ':';\n  if (options.port)\n    name += options.port;\n\n  name += ':';\n  if (options.localAddress)\n    name += options.localAddress;\n\n  // Pacify parallel/test-http-agent-getname by only appending\n  // the ':' when options.family is set.\n  if (options.family === 4 || options.family === 6)\n    name += `:${options.family}`;\n\n  if (options.socketPath)\n    name += `:${options.socketPath}`;\n\n  return name;\n};\n\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\n                                                 localAddress/* legacy */) {\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\n  if (typeof options === 'string') {\n    options = {\n      __proto__: null\x2C\n      host: options\x2C\n      port\x2C\n      localAddress\x2C\n    };\n  }\n\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  normalizeServerName(options\x2C req);\n\n  const name = this.getName(options);\n  this.sockets[name] ||= [];\n\n  const freeSockets = this.freeSockets[name];\n  let socket;\n  if (freeSockets) {\n    while (freeSockets.length && freeSockets[0].destroyed) {\n      freeSockets.shift();\n    }\n    socket = this.scheduling === 'fifo' ?\n      freeSockets.shift() :\n      freeSockets.pop();\n    if (!freeSockets.length)\n      delete this.freeSockets[name];\n  }\n\n  const freeLen = freeSockets ? freeSockets.length : 0;\n  const sockLen = freeLen + this.sockets[name].length;\n\n  if (socket) {\n    asyncResetHandle(socket);\n    this.reuseSocket(socket\x2C req);\n    setRequestSocket(this\x2C req\x2C socket);\n    this.sockets[name].push(socket);\n  } else if (sockLen < this.maxSockets &&\n             this.totalSocketCount < this.maxTotalSockets) {\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\n    // If we are under maxSockets create a new one.\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        setRequestSocket(this\x2C req\x2C socket);\n    });\n  } else {\n    debug('wait for socket');\n    // We are over limit so we'll add it to the queue.\n    this.requests[name] ||= [];\n\n    // Used to create sockets for pending requests from different origin\n    req[kRequestOptions] = options;\n    // Used to capture the original async context.\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\n\n    this.requests[name].push(req);\n  }\n};\n\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  normalizeServerName(options\x2C req);\n\n  const name = this.getName(options);\n  options._agentKey = name;\n\n  debug('createConnection'\x2C name\x2C options);\n  options.encoding = null;\n\n  const oncreate = once((err\x2C s) => {\n    if (err)\n      return cb(err);\n    this.sockets[name] ||= [];\n    this.sockets[name].push(s);\n    this.totalSocketCount++;\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\n    installListeners(this\x2C s\x2C options);\n    cb(null\x2C s);\n  });\n  // When keepAlive is true\x2C pass the related options to createConnection\n  if (this.keepAlive) {\n    options.keepAlive = this.keepAlive;\n    options.keepAliveInitialDelay = this.keepAliveMsecs;\n  }\n  const newSocket = this.createConnection(options\x2C oncreate);\n  if (newSocket)\n    oncreate(null\x2C newSocket);\n};\n\nfunction normalizeServerName(options\x2C req) {\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n}\n\nfunction calculateServerName(options\x2C req) {\n  let servername = options.host;\n  const hostHeader = req.getHeader('host');\n  if (hostHeader) {\n    validateString(hostHeader\x2C 'options.headers.host');\n\n    // abc => abc\n    // abc:123 => abc\n    // [::1] => ::1\n    // [::1]:123 => ::1\n    if (hostHeader[0] === '[') {\n      const index = hostHeader.indexOf(']');\n      if (index === -1) {\n        // Leading '['\x2C but no ']'. Need to do something...\n        servername = hostHeader;\n      } else {\n        servername = hostHeader.substring(1\x2C index);\n      }\n    } else {\n      servername = hostHeader.split(':'\x2C 1)[0];\n    }\n  }\n  // Don't implicitly set invalid (IP) servernames.\n  if (net.isIP(servername))\n    servername = '';\n  return servername;\n}\n\nfunction installListeners(agent\x2C s\x2C options) {\n  function onFree() {\n    debug('CLIENT socket onFree');\n    agent.emit('free'\x2C s\x2C options);\n  }\n  s.on('free'\x2C onFree);\n\n  function onClose(err) {\n    debug('CLIENT socket onClose');\n    // This is the only place where sockets get removed from the Agent.\n    // If you want to remove a socket from the pool\x2C just close it.\n    // All socket errors end in a close event anyway.\n    agent.totalSocketCount--;\n    agent.removeSocket(s\x2C options);\n  }\n  s.on('close'\x2C onClose);\n\n  function onTimeout() {\n    debug('CLIENT socket onTimeout');\n\n    // Destroy if in free list.\n    // TODO(ronag): Always destroy\x2C even if not in free list.\n    const sockets = agent.freeSockets;\n    if (ObjectKeys(sockets).some((name) => sockets[name].includes(s))) {\n      return s.destroy();\n    }\n  }\n  s.on('timeout'\x2C onTimeout);\n\n  function onRemove() {\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    debug('CLIENT socket onRemove');\n    agent.totalSocketCount--;\n    agent.removeSocket(s\x2C options);\n    s.removeListener('close'\x2C onClose);\n    s.removeListener('free'\x2C onFree);\n    s.removeListener('timeout'\x2C onTimeout);\n    s.removeListener('agentRemove'\x2C onRemove);\n  }\n  s.on('agentRemove'\x2C onRemove);\n\n  if (agent[kOnKeylog]) {\n    s.on('keylog'\x2C agent[kOnKeylog]);\n  }\n}\n\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\n  const name = this.getName(options);\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\n  const sets = [this.sockets];\n\n  // If the socket was destroyed\x2C remove it from the free buffers too.\n  if (!s.writable)\n    sets.push(this.freeSockets);\n\n  for (let sk = 0; sk < sets.length; sk++) {\n    const sockets = sets[sk];\n\n    if (sockets[name]) {\n      const index = sockets[name].indexOf(s);\n      if (index !== -1) {\n        sockets[name].splice(index\x2C 1);\n        // Don't leak\n        if (sockets[name].length === 0)\n          delete sockets[name];\n      }\n    }\n  }\n\n  let req;\n  if (this.requests[name]?.length) {\n    debug('removeSocket\x2C have a request\x2C make a socket');\n    req = this.requests[name][0];\n  } else {\n    // TODO(rickyes): this logic will not be FIFO across origins.\n    // There might be older requests in a different origin\x2C but\n    // if the origin which releases the socket has pending requests\n    // that will be prioritized.\n    const keys = ObjectKeys(this.requests);\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i];\n      // Check whether this specific origin is already at maxSockets\n      if (this.sockets[prop]?.length) break;\n      debug('removeSocket\x2C have a request with different origin\x2C' +\n        ' make a socket');\n      req = this.requests[prop][0];\n      options = req[kRequestOptions];\n      break;\n    }\n  }\n\n  if (req && options) {\n    req[kRequestOptions] = undefined;\n    // If we have pending requests and a socket gets closed make a new one\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        socket.emit('free');\n    });\n  }\n\n};\n\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\n  socket.unref();\n\n  let agentTimeout = this.options.timeout || 0;\n  let canKeepSocketAlive = true;\n\n  if (socket._httpMessage?.res) {\n    const keepAliveHint = socket._httpMessage.res.headers['keep-alive'];\n\n    if (keepAliveHint) {\n      const hint = /^timeout=(\\d+)/.exec(keepAliveHint)?.[1];\n\n      if (hint) {\n        // Let the timer expire before the announced timeout to reduce\n        // the likelihood of ECONNRESET errors\n        let serverHintTimeout = (NumberParseInt(hint) * 1000) - HTTP_AGENT_KEEP_ALIVE_TIMEOUT_BUFFER;\n        serverHintTimeout = serverHintTimeout > 0 ? serverHintTimeout : 0;\n        if (serverHintTimeout === 0) {\n          // Cannot safely reuse the socket because the server timeout is\n          // too short\n          canKeepSocketAlive = false;\n        } else if (serverHintTimeout < agentTimeout) {\n          agentTimeout = serverHintTimeout;\n        }\n      }\n    }\n  }\n\n  if (socket.timeout !== agentTimeout) {\n    socket.setTimeout(agentTimeout);\n  }\n\n  return canKeepSocketAlive;\n};\n\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\n  debug('have free socket');\n  socket.removeListener('error'\x2C freeSocketErrorListener);\n  req.reusedSocket = true;\n  socket.ref();\n};\n\nAgent.prototype.destroy = function destroy() {\n  const sets = [this.freeSockets\x2C this.sockets];\n  for (let s = 0; s < sets.length; s++) {\n    const set = sets[s];\n    const keys = ObjectKeys(set);\n    for (let v = 0; v < keys.length; v++) {\n      const setName = set[keys[v]];\n      for (let n = 0; n < setName.length; n++) {\n        setName[n].destroy();\n      }\n    }\n  }\n};\n\nfunction setRequestSocket(agent\x2C req\x2C socket) {\n  req.onSocket(socket);\n  const agentTimeout = agent.options.timeout || 0;\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\n    return;\n  }\n  socket.setTimeout(req.timeout);\n}\n\nfunction asyncResetHandle(socket) {\n  // Guard against an uninitialized or user supplied Socket.\n  const handle = socket._handle;\n  if (handle && typeof handle.asyncReset === 'function') {\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C handle));\n    socket[async_id_symbol] = handle.getAsyncId();\n  }\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent: new Agent({ keepAlive: true\x2C scheduling: 'lifo'\x2C timeout: 5000 })\x2C\n};\n
code-source-info,0x12ea98650f28,95,0,16766,C0O0C4O16766,,
code-creation,JS,9,79792,0x12ea98651178,527, node:_http_agent:1:1,0x3564d12bc588,~
code-source-info,0x12ea
tick,0x19240bc10,79833,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
new,MemoryChunk,0x15988e440000,262144
code-creation,Eval,9,80792,0x12ea986514c0,5, node:net:1:1,0x15988e447ad0,~
script-source,96,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  kReinitializeHandle\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\x2C\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\x2C\n  UV_ECANCELED\x2C\n  UV_ETIMEDOUT\x2C\n} = internalBinding('uv');\nconst { convertIpv6StringToBuffer } = internalBinding('cares_wrap');\n\nconst { Buffer } = require('buffer');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\x2C\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\x2C\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n} = require('internal/stream_base_commons');\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  NodeAggregateError\x2C\n  UVExceptionWithHostPort\x2C\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  guessHandleType\x2C\n  isWindows\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst { getOptionValue } = require('internal/options');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\nlet autoSelectFamilyAttemptTimeoutDefault = getOptionValue('--network-family-autoselection-attempt-timeout');\n\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\n\nconst dc = require('diagnostics_channel');\nconst netClientSocketChannel = dc.channel('net.client.socket');\nconst netServerSocketChannel = dc.channel('net.server.socket');\nconst netServerListen = dc.tracingChannel('net.server.listen');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\n\nfunction getFlags(options) {\n  let flags = 0;\n  if (options.ipv6Only === true) {\n    flags |= TCPConstants.UV_TCP_IPV6ONLY;\n  }\n  if (options.reusePort === true) {\n    flags |= TCPConstants.UV_TCP_REUSEPORT;\n  }\n  return flags;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket\x2C\n    });\n  }\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\nfunction getDefaultAutoSelectFamily() {\n  return autoSelectFamilyDefault;\n}\n\nfunction setDefaultAutoSelectFamily(value) {\n  validateBoolean(value\x2C 'value');\n  autoSelectFamilyDefault = value;\n}\n\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\n  return autoSelectFamilyAttemptTimeoutDefault;\n}\n\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\n  validateInt32(value\x2C 'value'\x2C 1);\n\n  if (value < 10) {\n    value = 10;\n  }\n\n  autoSelectFamilyAttemptTimeoutDefault = value;\n}\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\n  if (self._handle) {\n    self._handle.close(() => {\n      debug('emit close');\n      self.emit('close'\x2C isException);\n      if (isCleanupPending) {\n        self._handle.onread = noop;\n        self._handle = null;\n        self._sockname = null;\n      }\n    });\n  }\n}\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\x2C\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\x2C\n    );\n  }\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n  this._closeAfterHandlingError = false;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw new ErrnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\x2C\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  if (options.signal) {\n    addClientAbortSignalOption(this\x2C options);\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.connecting) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\x2C\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\x2C\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(new ErrnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug(\n    '_read - n'\x2C n\x2C\n    'isConnecting?'\x2C !!this.connecting\x2C\n    'hasHandle?'\x2C !!this._handle\x2C\n  );\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle?.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(new ErrnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\n    } else if (this._closeAfterHandlingError) {\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\n      // accessible when an `error` event is handled in the `next tick queue`.\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\n    } else {\n      closeSocketHandle(this\x2C isException);\n    }\n\n    if (!this._closeAfterHandlingError) {\n      this._handle.onread = noop;\n      this._handle = null;\n      this._sockname = null;\n    }\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\x2C\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\nprotoGetter('localFamily'\x2C function localFamily() {\n  return this._getsockname().family;\n});\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this.off('close'\x2C onClose);\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    function onClose() {\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\n    }\n    this.once('close'\x2C onClose);\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress ||= DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress ||= DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n    req.addressType = addressType;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nfunction internalConnectMultiple(context\x2C canceled) {\n  clearTimeout(context[kTimeout]);\n  const self = context.socket;\n\n  // We were requested to abort. Stop all operations\n  if (self._aborted) {\n    return;\n  }\n\n  // All connections have been tried without success\x2C destroy with error\n  if (canceled || context.current === context.addresses.length) {\n    if (context.errors.length === 0) {\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\n      return;\n    }\n\n    self.destroy(new NodeAggregateError(context.errors));\n    return;\n  }\n\n  assert(self.connecting);\n\n  const current = context.current++;\n\n  if (current > 0) {\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\n  }\n\n  const { localPort\x2C port\x2C flags } = context;\n  const { address\x2C family: addressType } = context.addresses[current];\n  let localAddress;\n  let err;\n\n  if (localPort) {\n    if (addressType === 4) {\n      localAddress = DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\n      internalConnectMultiple(context);\n      return;\n    }\n  }\n\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  const req = new TCPConnectWrap();\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\n  req.address = address;\n  req.port = port;\n  req.localAddress = localAddress;\n  req.localPort = localPort;\n  req.addressType = addressType;\n\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\n\n  if (addressType === 4) {\n    err = self._handle.connect(req\x2C address\x2C port);\n  } else {\n    err = self._handle.connect6(req\x2C address\x2C port);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\n    internalConnectMultiple(context);\n    return;\n  }\n\n  if (current < context.addresses.length - 1) {\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\n\n    // If the attempt has not returned an error\x2C start the connection timer\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\n  }\n}\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  // If the parent is already connecting\x2C do not attempt to connect again\n  if (this._parent?.connecting) {\n    return this;\n  }\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\n  this._handle?.close();\n\n  this._handle = handle;\n  this._handle[owner_symbol] = this;\n\n  initSocketHandle(this);\n};\n\nfunction socketToDnsFamily(family) {\n  switch (family) {\n    case 'IPv4':\n      return 4;\n    case 'IPv6':\n      return 6;\n  }\n\n  return family;\n}\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n\n  if (autoSelectFamily != null) {\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\n  } else {\n    autoSelectFamily = autoSelectFamilyDefault;\n  }\n\n  if (autoSelectFamilyAttemptTimeout != null) {\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\n\n    if (autoSelectFamilyAttemptTimeout < 10) {\n      autoSelectFamilyAttemptTimeout = 10;\n    }\n  } else {\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\n  }\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n    });\n    return;\n  }\n\n  if (options.lookup != null)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: socketToDnsFamily(options.family)\x2C\n    hints: options.hints || 0\x2C\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\n    debug('connect: autodetecting');\n\n    dnsopts.all = true;\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n      lookupAndConnectMultiple(\n        self\x2C\n        async_id_symbol\x2C\n        lookup\x2C\n        host\x2C\n        options\x2C\n        dnsopts\x2C\n        port\x2C\n        localAddress\x2C\n        localPort\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n      );\n    });\n\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n      }\n    });\n  });\n}\n\nfunction lookupAndConnectMultiple(\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\n) {\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) {\n        return;\n      } else if (err) {\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\n\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n        return;\n      }\n\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\n      // The first valid address determines which group has preference on the\n      // alternate family sorting which happens later.\n      const validAddresses = [[]\x2C []];\n      const validIps = [[]\x2C []];\n      let destinations;\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\n        const address = addresses[i];\n        const { address: ip\x2C family: addressType } = address;\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n        // It's possible we were destroyed while looking this up.\n        if (!self.connecting) {\n          return;\n        }\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\n          destinations ||= addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\n\n          const destination = destinations[addressType];\n\n          // Only try an address once\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\n            ArrayPrototypePush(validIps[destination]\x2C ip);\n          }\n        }\n      }\n\n\n      // When no AAAA or A records are available\x2C fail on the first one\n      if (!validAddresses[0].length && !validAddresses[1].length) {\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\n\n        if (!isIP(firstIp)) {\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\n                                               options.host\x2C\n                                               options.port);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        }\n\n        return;\n      }\n\n      // Sort addresses alternating families\n      const toAttempt = [];\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\n        if (i in validAddresses[0]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\n        }\n        if (i in validAddresses[1]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\n        }\n      }\n\n      if (toAttempt.length === 1) {\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\n        const { address: ip\x2C family: addressType } = toAttempt[0];\n\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C\n          ip\x2C\n          port\x2C\n          addressType\x2C\n          localAddress\x2C\n          localPort\x2C\n        );\n\n        return;\n      }\n\n      self.autoSelectFamilyAttemptedAddresses = [];\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\n\n      const context = {\n        socket: self\x2C\n        addresses: toAttempt\x2C\n        current: 0\x2C\n        port\x2C\n        localPort\x2C\n        timeout\x2C\n        [kTimeout]: null\x2C\n        errors: []\x2C\n      };\n\n      self._unrefTimer();\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\n    });\n  });\n}\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = new ExceptionWithHostPort(status\x2C\n                                         'connect'\x2C\n                                         req.address\x2C\n                                         req.port\x2C\n                                         details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n    self.destroy(ex);\n  }\n}\n\nfunction addClientAbortSignalOption(self\x2C options) {\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  let disposable;\n\n  function onAbort() {\n    disposable?.[SymbolDispose]();\n    self._aborted = true;\n  }\n\n  if (signal.aborted) {\n    process.nextTick(onAbort);\n  } else {\n    process.nextTick(() => {\n      disposable = addAbortListener(signal\x2C onAbort);\n    });\n  }\n}\n\nfunction createConnectionError(req\x2C status) {\n  let details;\n\n  if (req.localAddress && req.localPort) {\n    details = req.localAddress + ':' + req.localPort;\n  }\n\n  const ex = new ExceptionWithHostPort(status\x2C\n                                       'connect'\x2C\n                                       req.address\x2C\n                                       req.port\x2C\n                                       details);\n  if (details) {\n    ex.localAddress = req.localAddress;\n    ex.localPort = req.localPort;\n  }\n\n  return ex;\n}\n\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\n\n  // Make sure another connection is not spawned\n  clearTimeout(context[kTimeout]);\n\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\n  if (status === 0 && current !== context.current - 1) {\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\n    handle.close();\n    return;\n  }\n\n  const self = context.socket;\n\n  // Some error occurred\x2C add to the list of exceptions\n  if (status !== 0) {\n    const ex = createConnectionError(req\x2C status);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n\n    // Try the next address\x2C unless we were aborted\n    if (context.socket.connecting) {\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\n    }\n\n    return;\n  }\n\n  if (hasObserver('net')) {\n    startPerf(\n      self\x2C\n      kPerfHooksNetConnectContext\x2C\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\n    );\n  }\n\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\n}\n\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\n\n  req.oncomplete = undefined;\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\n  handle.close();\n\n  // Try the next address\x2C unless we were aborted\n  if (context.socket.connecting) {\n    internalConnectMultiple(context);\n  }\n}\n\nfunction addServerAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    const disposable = addAbortListener(signal\x2C onAborted);\n    self.once('close'\x2C disposable[SymbolDispose]);\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = kEmptyObject;\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n  if (typeof options.highWaterMark !== 'undefined') {\n    validateNumber(\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\n    );\n\n    if (options.highWaterMark < 0) {\n      options.highWaterMark = getDefaultHighWaterMark();\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n  this._listeningId = 1;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port\x2C undefined\x2C undefined\x2C flags);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port\x2C flags);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n\n      if (netServerListen.hasSubscribers) {\n        netServerListen.error.publish({ server: this\x2C error });\n      }\n\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n\n    if (netServerListen.hasSubscribers) {\n      netServerListen.error.publish({ server: this\x2C error: ex });\n    }\n\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncEnd.publish({ server: this });\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  const listeningId = server._listeningId;\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n  function listenOnPrimaryHandle(err\x2C handle) {\n    if (listeningId !== server._listeningId) {\n      handle.close();\n      return;\n    }\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n    // If there was a handle\x2C just close it to avoid fd leak\n    // but it doesn't look like that's going to happen right now\n    if (server._handle) {\n      server._handle.close();\n    }\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncStart.publish({ server: this\x2C options });\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options);\n  //  Refresh the id to make the previous call invalid\n  this._listeningId++;\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs\x2C undefined\x2C true);\n    return this;\n  }\n  addServerAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    if (options.reusePort === true) {\n      options.exclusive = true;\n    }\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive\x2C flags);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    // We can not call fchmod on abstract unix socket\n    if (options.path[0] === '\\0' &&\n        (options.readableAll || options.writableAll)) {\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\n    }\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction isIpv6LinkLocal(ip) {\n  if (!isIPv6(ip)) { return false; }\n\n  const ipv6Buffer = convertIpv6StringToBuffer(ip);\n  const firstByte = ipv6Buffer[0];  // The first 8 bits\n  const secondByte = ipv6Buffer[1]; // The next 8 bits\n\n  // The link-local prefix is `1111111010`\x2C which in hexadecimal is `fe80`\n  // First 8 bits (firstByte) should be `11111110` (0xfe)\n  // The next 2 bits of the second byte should be `10` (0x80)\n\n  const isFirstByteCorrect = (firstByte === 0xfe); // 0b11111110 == 0xfe\n  const isSecondByteCorrect = (secondByte & 0xc0) === 0x80; // 0b10xxxxxx == 0x80\n\n  return isFirstByteCorrect && isSecondByteCorrect;\n}\n\nfunction filterOnlyValidAddress(addresses) {\n  // Return the first non IPV6 link-local address if present\n  for (const address of addresses) {\n    if (!isIpv6LinkLocal(address.address)) {\n      return address;\n    }\n  }\n\n  // Otherwise return the first address\n  return addresses[0];\n}\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\n                         exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  const listeningId = self._listeningId;\n\n  dns.lookup(address\x2C { all: true }\x2C (err\x2C addresses) => {\n    if (listeningId !== self._listeningId) {\n      return;\n    }\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      const validAddress = filterOnlyValidAddress(addresses);\n      const family = validAddress?.family || 4;\n\n      listenInCluster(self\x2C validAddress.address\x2C port\x2C family\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nServer.prototype.address = function() {\n  if (this._handle?.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw new ErrnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections != null && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = { __proto__: null };\n      if (clientHandle.getsockname) {\n        const localInfo = { __proto__: null };\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n        data.localFamily = localInfo.family;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = { __proto__: null };\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\x2C\n    readableHighWaterMark: self.highWaterMark\x2C\n    writableHighWaterMark: self.highWaterMark\x2C\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n  self.emit('connection'\x2C socket);\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\x2C\n    });\n  }\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  this._listeningId++;\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype[SymbolAsyncDispose] = async function() {\n  if (!this._handle) {\n    return;\n  }\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\x2C\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n  getDefaultAutoSelectFamily\x2C\n  setDefaultAutoSelectFamily\x2C\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\n};\n
code-source-info,0x12ea986514c0,96,0,69601,C0O0C4O69601,,
code-creation,JS,9,83167,0x12ea98651ef8,3741, node:net:1:1,0x15988e449078,~
code-source-info,0x12ea98651ef
tick,0x100d180d8,83250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x192563018,83292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,83500,0x12ea986531d0,5, node:stream:1:1,0x15988e44d858,~
script-source,97,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst {\n  streamReturningOperators\x2C\n  promiseReturningOperators\x2C\n} = require('internal/streams/operators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst compose = require('internal/streams/compose');\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\nconst utils = require('internal/streams/utils');\nconst { isArrayBufferView\x2C isUint8Array } = require('internal/util/types');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\n\nStream.isDestroyed = utils.isDestroyed;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.isWritable = utils.isWritable;\n\nStream.Readable = require('internal/streams/readable');\nconst streamKeys = ObjectKeys(streamReturningOperators);\nfor (let i = 0; i < streamKeys.length; i++) {\n  const key = streamKeys[i];\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nconst promiseKeys = ObjectKeys(promiseReturningOperators);\nfor (let i = 0; i < promiseKeys.length; i++) {\n  const key = promiseKeys[i];\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op\x2C this\x2C args);\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.duplexPair = require('internal/streams/duplexpair');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\x2C\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\x2C\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\x2C\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isArrayBufferView = isArrayBufferView;\nStream._isUint8Array = isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x12ea986531d0,97,0,5095,C0O0C4O5095,,
code-creation,JS,9,83708,0x12ea986534b8,1023, node:stream:1:1,0x15988e44d9e0,~
code-source-info,0x12ea986534b
tick,0x102711ac4,83750,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,84167,0x12ea98653ab8,5, node:internal/streams/operators:1:1,0x15988e44f220,~
script-source,98,node:internal/streams/operators,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateAbortSignal\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\nconst { finished } = require('internal/streams/end-of-stream');\nconst staticCompose = require('internal/streams/compose');\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\n\nconst kEmpty = Symbol('kEmpty');\nconst kEof = Symbol('kEof');\n\nfunction compose(stream\x2C options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\n  }\n\n  const composedStream = staticCompose(this\x2C stream);\n\n  if (options?.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(\n      options.signal\x2C\n      composedStream\x2C\n    );\n  }\n\n  return composedStream;\n}\n\nfunction map(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let concurrency = 1;\n  if (options?.concurrency != null) {\n    concurrency = MathFloor(options.concurrency);\n  }\n\n  let highWaterMark = concurrency - 1;\n  if (options?.highWaterMark != null) {\n    highWaterMark = MathFloor(options.highWaterMark);\n  }\n\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\n\n  highWaterMark += concurrency;\n\n  return async function* map() {\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\n    const stream = this;\n    const queue = [];\n    const signalOpt = { signal };\n\n    let next;\n    let resume;\n    let done = false;\n    let cnt = 0;\n\n    function onCatch() {\n      done = true;\n      afterItemProcessed();\n    }\n\n    function afterItemProcessed() {\n      cnt -= 1;\n      maybeResume();\n    }\n\n    function maybeResume() {\n      if (\n        resume &&\n        !done &&\n        cnt < concurrency &&\n        queue.length < highWaterMark\n      ) {\n        resume();\n        resume = null;\n      }\n    }\n\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          if (done) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          try {\n            val = fn(val\x2C signalOpt);\n\n            if (val === kEmpty) {\n              continue;\n            }\n\n            val = PromiseResolve(val);\n          } catch (err) {\n            val = PromiseReject(err);\n          }\n\n          cnt += 1;\n\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n\n          queue.push(val);\n          if (next) {\n            next();\n            next = null;\n          }\n\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\n            await new Promise((resolve) => {\n              resume = resolve;\n            });\n          }\n        }\n        queue.push(kEof);\n      } catch (err) {\n        const val = PromiseReject(err);\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n        queue.push(val);\n      } finally {\n        done = true;\n        if (next) {\n          next();\n          next = null;\n        }\n      }\n    }\n\n    pump();\n\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0];\n\n          if (val === kEof) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          if (val !== kEmpty) {\n            yield val;\n          }\n\n          queue.shift();\n          maybeResume();\n        }\n\n        await new Promise((resolve) => {\n          next = resolve;\n        });\n      }\n    } finally {\n      done = true;\n      if (resume) {\n        resume();\n        resume = null;\n      }\n    }\n  }.call(this);\n}\n\nasync function some(fn\x2C options = undefined) {\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\n    return true;\n  }\n  return false;\n}\n\nasync function every(fn\x2C options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(this\x2C async (...args) => {\n    return !(await fn(...args));\n  }\x2C options));\n}\n\nasync function find(fn\x2C options) {\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\n    return result;\n  }\n  return undefined;\n}\n\nasync function forEach(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function forEachFn(value\x2C options) {\n    await fn(value\x2C options);\n    return kEmpty;\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\n}\n\nfunction filter(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function filterFn(value\x2C options) {\n    if (await fn(value\x2C options)) {\n      return value;\n    }\n    return kEmpty;\n  }\n  return map.call(this\x2C filterFn\x2C options);\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce');\n    this.message = 'Reduce of an empty stream requires an initial value';\n  }\n}\n\nasync function reduce(reducer\x2C initialValue\x2C options) {\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let hasInitialValue = arguments.length > 1;\n  if (options?.signal?.aborted) {\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\n    this.once('error'\x2C () => {}); // The error is already propagated\n    await finished(this.destroy(err));\n    throw err;\n  }\n  const ac = new AbortController();\n  const signal = ac.signal;\n  if (options?.signal) {\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\n  }\n  let gotAnyItemFromStream = false;\n  try {\n    for await (const value of this) {\n      gotAnyItemFromStream = true;\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (!hasInitialValue) {\n        initialValue = value;\n        hasInitialValue = true;\n      } else {\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs();\n    }\n  } finally {\n    ac.abort();\n  }\n  return initialValue;\n}\n\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  const result = [];\n  for await (const val of this) {\n    if (options?.signal?.aborted) {\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\n    }\n    ArrayPrototypePush(result\x2C val);\n  }\n  return result;\n}\n\nfunction flatMap(fn\x2C options) {\n  const values = map.call(this\x2C fn\x2C options);\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val;\n    }\n  }.call(this);\n}\n\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number);\n  if (NumberIsNaN(number)) {\n    return 0;\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\n  }\n  return number;\n}\n\nfunction drop(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* drop() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- <= 0) {\n        yield val;\n      }\n    }\n  }.call(this);\n}\n\nfunction take(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* take() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- > 0) {\n        yield val;\n      }\n\n      // Don't get another item from iterator in case we reached the end\n      if (number <= 0) {\n        return;\n      }\n    }\n  }.call(this);\n}\n\nmodule.exports.streamReturningOperators = {\n  drop\x2C\n  filter\x2C\n  flatMap\x2C\n  map\x2C\n  take\x2C\n  compose\x2C\n};\n\nmodule.exports.promiseReturningOperators = {\n  every\x2C\n  forEach\x2C\n  reduce\x2C\n  toArray\x2C\n  some\x2C\n  find\x2C\n};\n
code-source-info,0x12ea98653ab8,98,0,10140,C0O0C4O10140,,
code-creation,JS,9,84542,0x12ea98653d58,529, node:internal/streams/operators:1:1,0x15988e44f4e8,~
code-source-info,0x12ea98653d58,98,0,10140,C0O0C158O25C164O47C170O58C176O71C182O81C188O96C194O107C200O131C206O148C212O166C217O233C220O233C225O200C231O217C237O411C240O411C245O282C251O303C256O309C262O335C268O362C273O384C279O511C282O511C287O449C293O472C299O491C305O592C308O592C313O551C319O565C325O647C328O647C333O634C339O712C342O712C346O712C348O789C351O789C356O759C362O872C365O872C370O843C376O855C382O923C385O923C389O923C391O954C394O954C398O954C400O6176C421O6136C423O9939C435O9978C441O9986C447O9996C453O10007C459O10014C465O10022C471O9972C475O10042C487O10082C493O10091C499O10102C505O10112C511O10123C517O10131C523O10076C528O10139,,
tick,0x1012a4c24,84792,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98653e34,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,85000,0x12ea98654080,5, node:internal/abort_controller:1:1,0x15988e451658,~
script-source,99,node:internal/abort_controller,'use strict';\n\n// Modeled very closely on the AbortController implementation\n// in https://github.com/mysticatea/abort-controller (MIT license)\n\nconst {\n  ArrayPrototypePush\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseResolve\x2C\n  PromiseWithResolvers\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakRef\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  defineEventHandler\x2C\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n  kResistStopPropagation\x2C\n  kWeakHandler\x2C\n} = require('internal/event_target');\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  converters\x2C\n  createSequenceConverter\x2C\n} = require('internal/webidl');\n\nconst {\n  validateAbortSignal\x2C\n  validateAbortSignalArray\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  kValidateObjectAllowObjects\x2C\n} = require('internal/validators');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  clearTimeout\x2C\n  setTimeout\x2C\n} = require('timers');\nconst assert = require('internal/assert');\n\nconst {\n  kDeserialize\x2C\n  kTransfer\x2C\n  kTransferList\x2C\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nlet _MessageChannel;\n\nconst kDontThrowSymbol = Symbol('kDontThrowSymbol');\n\n// Loading the MessageChannel and markTransferable have to be done lazily\n// because otherwise we'll end up with a require cycle that ends up with\n// an incomplete initialization of abort_controller.\n\nfunction lazyMessageChannel() {\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\n  return new _MessageChannel();\n}\n\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\nconst dependantSignalsCleanupRegistry = new SafeFinalizationRegistry((signalWeakRef) => {\n  const signal = signalWeakRef.deref();\n  if (signal === undefined) {\n    return;\n  }\n  signal[kDependantSignals].forEach((ref) => {\n    if (ref.deref() === undefined) {\n      signal[kDependantSignals].delete(ref);\n    }\n  });\n});\nconst gcPersistentSignals = new SafeSet();\n\nconst kAborted = Symbol('kAborted');\nconst kReason = Symbol('kReason');\nconst kCloneData = Symbol('kCloneData');\nconst kTimeout = Symbol('kTimeout');\nconst kMakeTransferable = Symbol('kMakeTransferable');\nconst kComposite = Symbol('kComposite');\nconst kSourceSignals = Symbol('kSourceSignals');\nconst kDependantSignals = Symbol('kDependantSignals');\n\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\n  if (depth < 0)\n    return self;\n\n  const opts = ObjectAssign({}\x2C options\x2C {\n    depth: options.depth === null ? null : options.depth - 1\x2C\n  });\n\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\n}\n\nfunction validateThisAbortSignal(obj) {\n  if (obj?.[kAborted] === undefined)\n    throw new ERR_INVALID_THIS('AbortSignal');\n}\n\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\n// presence of the timer alone to keep the AbortSignal from being garbage\n// collected if it otherwise no longer accessible. We also don't want the\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\n// the AbortSignal in a WeakRef and have the setTimeout callback close\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\n// the created timer object. Separately\x2C we add the signal to a\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\n  const timeout = setTimeout(() => {\n    const signal = weakRef.deref();\n    if (signal !== undefined) {\n      gcPersistentSignals.delete(signal);\n      abortSignal(\n        signal\x2C\n        new DOMException(\n          'The operation was aborted due to timeout'\x2C\n          'TimeoutError'));\n    }\n  }\x2C delay);\n  timeout.unref();\n  return timeout;\n}\n\nclass AbortSignal extends EventTarget {\n\n  /**\n   * @param {symbol | undefined} dontThrowSymbol\n   * @param {{\n   *   aborted? : boolean\x2C\n   *   reason? : any\x2C\n   *   transferable? : boolean\x2C\n   *   composite? : boolean\x2C\n   * }} [init]\n   * @private\n   */\n  constructor(dontThrowSymbol = undefined\x2C init = kEmptyObject) {\n    if (dontThrowSymbol !== kDontThrowSymbol) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    super();\n\n    const {\n      aborted = false\x2C\n      reason = undefined\x2C\n      transferable = false\x2C\n      composite = false\x2C\n    } = init;\n    this[kAborted] = aborted;\n    this[kReason] = reason;\n    this[kComposite] = composite;\n    if (transferable) {\n      markTransferMode(this\x2C false\x2C true);\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get aborted() {\n    validateThisAbortSignal(this);\n    return !!this[kAborted];\n  }\n\n  /**\n   * @type {any}\n   */\n  get reason() {\n    validateThisAbortSignal(this);\n    return this[kReason];\n  }\n\n  throwIfAborted() {\n    validateThisAbortSignal(this);\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      aborted: this.aborted\x2C\n    }\x2C depth\x2C options);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {AbortSignal}\n   */\n  static abort(\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    return new AbortSignal(kDontThrowSymbol\x2C { aborted: true\x2C reason });\n  }\n\n  /**\n   * @param {number} delay\n   * @returns {AbortSignal}\n   */\n  static timeout(delay) {\n    validateUint32(delay\x2C 'delay'\x2C false);\n    const signal = new AbortSignal(kDontThrowSymbol);\n    signal[kTimeout] = true;\n    clearTimeoutRegistry.register(\n      signal\x2C\n      setWeakAbortSignalTimeout(new SafeWeakRef(signal)\x2C delay));\n    return signal;\n  }\n\n  /**\n   * @param {AbortSignal[]} signals\n   * @returns {AbortSignal}\n   */\n  static any(signals) {\n    const signalsArray = createSequenceConverter(\n      converters.any\x2C\n    )(signals);\n\n    validateAbortSignalArray(signalsArray\x2C 'signals');\n    const resultSignal = new AbortSignal(kDontThrowSymbol\x2C { composite: true });\n    if (!signalsArray.length) {\n      return resultSignal;\n    }\n    const resultSignalWeakRef = new SafeWeakRef(resultSignal);\n    resultSignal[kSourceSignals] = new SafeSet();\n    for (let i = 0; i < signalsArray.length; i++) {\n      const signal = signalsArray[i];\n      if (signal.aborted) {\n        abortSignal(resultSignal\x2C signal.reason);\n        return resultSignal;\n      }\n      signal[kDependantSignals] ??= new SafeSet();\n      if (!signal[kComposite]) {\n        const signalWeakRef = new SafeWeakRef(signal);\n        resultSignal[kSourceSignals].add(signalWeakRef);\n        signal[kDependantSignals].add(resultSignalWeakRef);\n        dependantSignalsCleanupRegistry.register(resultSignal\x2C signalWeakRef);\n      } else if (!signal[kSourceSignals]) {\n        continue;\n      } else {\n        for (const sourceSignalWeakRef of signal[kSourceSignals]) {\n          const sourceSignal = sourceSignalWeakRef.deref();\n          if (!sourceSignal) {\n            continue;\n          }\n          assert(!sourceSignal.aborted);\n          assert(!sourceSignal[kComposite]);\n\n          if (resultSignal[kSourceSignals].has(sourceSignalWeakRef)) {\n            continue;\n          }\n          resultSignal[kSourceSignals].add(sourceSignalWeakRef);\n          sourceSignal[kDependantSignals].add(resultSignalWeakRef);\n          dependantSignalsCleanupRegistry.register(resultSignal\x2C sourceSignalWeakRef);\n        }\n      }\n    }\n    return resultSignal;\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal &&\n        type === 'abort' &&\n        !this.aborted &&\n        !weak &&\n        size === 1) {\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\n      // listener\x2C then we don't want it to be gc'd while the listener\n      // is attached and the timer still hasn't fired. So\x2C we retain a\n      // strong ref that is held for as long as the listener is registered.\n      gcPersistentSignals.add(this);\n    }\n  }\n\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\n      gcPersistentSignals.delete(this);\n    }\n  }\n\n  [kTransfer]() {\n    validateThisAbortSignal(this);\n    const aborted = this.aborted;\n    if (aborted) {\n      const reason = this.reason;\n      return {\n        data: { aborted\x2C reason }\x2C\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n      };\n    }\n\n    const { port1\x2C port2 } = this[kCloneData];\n    this[kCloneData] = undefined;\n\n    this.addEventListener('abort'\x2C () => {\n      port1.postMessage(this.reason);\n      port1.close();\n    }\x2C { once: true });\n\n    return {\n      data: { port: port2 }\x2C\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    if (!this.aborted) {\n      const { port1\x2C port2 } = lazyMessageChannel();\n      port1.unref();\n      port2.unref();\n      this[kCloneData] = {\n        port1\x2C\n        port2\x2C\n      };\n      return [port2];\n    }\n    return [];\n  }\n\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\n    if (aborted) {\n      this[kAborted] = aborted;\n      this[kReason] = reason;\n      return;\n    }\n\n    port.onmessage = ({ data }) => {\n      abortSignal(this\x2C data);\n      port.close();\n      port.onmessage = undefined;\n    };\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\n    // The unref() has to be called *after* setting the onmessage handler.\n    port.unref();\n  }\n}\n\nfunction ClonedAbortSignal() {\n  return new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n}\nClonedAbortSignal.prototype[kDeserialize] = () => {};\n\nObjectDefineProperties(AbortSignal.prototype\x2C {\n  aborted: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortSignal'\x2C\n});\n\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\n\n// https://dom.spec.whatwg.org/#dom-abortsignal-abort\nfunction abortSignal(signal\x2C reason) {\n  // 1. If signal is aborted\x2C then return.\n  if (signal[kAborted]) return;\n\n  // 2. Set signal's abort reason to reason if it is given;\n  //    otherwise to a new "AbortError" DOMException.\n  signal[kAborted] = true;\n  signal[kReason] = reason;\n  // 3. Let dependentSignalsToAbort be a new list.\n  const dependentSignalsToAbort = ObjectSetPrototypeOf([]\x2C null);\n  // 4. For each dependentSignal of signal's dependent signals:\n  signal[kDependantSignals]?.forEach((s) => {\n    const dependentSignal = s.deref();\n    // 1. If dependentSignal is not aborted\x2C then:\n    if (dependentSignal && !dependentSignal[kAborted]) {\n      // 1. Set dependentSignal's abort reason to signal's abort reason.\n      dependentSignal[kReason] = reason;\n      dependentSignal[kAborted] = true;\n      // 2. Append dependentSignal to dependentSignalsToAbort.\n      ArrayPrototypePush(dependentSignalsToAbort\x2C dependentSignal);\n    }\n  });\n\n  // 5. Run the abort steps for signal\n  runAbort(signal);\n  // 6. For each dependentSignal of dependentSignalsToAbort\x2C\n  //    run the abort steps for dependentSignal.\n  for (let i = 0; i < dependentSignalsToAbort.length; i++) {\n    const dependentSignal = dependentSignalsToAbort[i];\n    runAbort(dependentSignal);\n  }\n}\n\n// To run the abort steps for an AbortSignal signal\nfunction runAbort(signal) {\n  const event = new Event('abort'\x2C {\n    [kTrustEvent]: true\x2C\n  });\n  signal.dispatchEvent(event);\n}\n\nclass AbortController {\n  #signal;\n\n  /**\n   * @type {AbortSignal}\n   */\n  get signal() {\n    this.#signal ??= new AbortSignal(kDontThrowSymbol);\n    return this.#signal;\n  }\n\n  /**\n   * @param {any} [reason]\n   */\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    abortSignal(this.#signal ??= new AbortSignal(kDontThrowSymbol)\x2C reason);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      signal: this.signal\x2C\n    }\x2C depth\x2C options);\n  }\n\n  static [kMakeTransferable]() {\n    const controller = new AbortController();\n    controller.#signal = new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n    return controller;\n  }\n}\n\n/**\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\n * @param {AbortSignal} signal\n * @returns {AbortSignal}\n */\nfunction transferableAbortSignal(signal) {\n  if (signal?.[kAborted] === undefined)\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  markTransferMode(signal\x2C false\x2C true);\n  return signal;\n}\n\n/**\n * Creates an AbortController with a transferable AbortSignal\n */\nfunction transferableAbortController() {\n  return AbortController[kMakeTransferable]();\n}\n\n/**\n * @param {AbortSignal} signal\n * @param {any} resource\n * @returns {Promise<void>}\n */\nasync function aborted(signal\x2C resource) {\n  if (signal === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  }\n  validateAbortSignal(signal\x2C 'signal');\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowObjects);\n  if (signal.aborted)\n    return PromiseResolve();\n  const abortPromise = PromiseWithResolvers();\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\n  return abortPromise.promise;\n}\n\nObjectDefineProperties(AbortController.prototype\x2C {\n  signal: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortController'\x2C\n});\n\nmodule.exports = {\n  AbortController\x2C\n  AbortSignal\x2C\n  ClonedAbortSignal\x2C\n  aborted\x2C\n  transferableAbortSignal\x2C\n  transferableAbortController\x2C\n};\n
code-source-info,0x12ea98654080,99,0,14330,C0O0C4O14330,,
code-creation,JS,9,85500,0x12ea98654480,1147, node:internal/abort_controller:1:1,0x15988e451b60,~
code-source-info,0x12ea
code-creation,JS,9,85542,0x12ea98654ab0,11,AbortController node:internal/abort_controller:427:23,0x15988e4526b8,~
code-source-info,0x12ea98654ab0,99,12033,12711,C4O12037C10O12711,,
code-creation,Eval,9,85792,0x12ea98654b38,5, node:internal/streams/end-of-stream:1:1,0x15988e454a98,~
script-source,100,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  Promise\x2C\n  PromisePrototypeThen\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateBoolean\x2C\n} = require('internal/validators');\n\nconst {\n  isClosed\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n  isReadableErrored\x2C\n  isWritable\x2C\n  isWritableNodeStream\x2C\n  isWritableStream\x2C\n  isWritableFinished\x2C\n  isWritableErrored\x2C\n  isNodeStream\x2C\n  willEmitClose: _willEmitClose\x2C\n  kIsClosedPromise\x2C\n} = require('internal/streams/utils');\nlet addAbortListener;\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nconst nop = () => {};\n\nfunction eos(stream\x2C options\x2C callback) {\n  if (arguments.length === 2) {\n    callback = options;\n    options = kEmptyObject;\n  } else if (options == null) {\n    options = kEmptyObject;\n  } else {\n    validateObject(options\x2C 'options');\n  }\n  validateFunction(callback\x2C 'callback');\n  validateAbortSignal(options.signal\x2C 'options.signal');\n\n  callback = once(callback);\n\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream\x2C options\x2C callback);\n  }\n\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n\n  const readable = options.readable ?? isReadableNodeStream(stream);\n  const writable = options.writable ?? isWritableNodeStream(stream);\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish();\n    }\n  };\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose = (\n    _willEmitClose(stream) &&\n    isReadableNodeStream(stream) === readable &&\n    isWritableNodeStream(stream) === writable\n  );\n\n  let writableFinished = isWritableFinished(stream\x2C false);\n  const onfinish = () => {\n    writableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.readable || readable)) {\n      return;\n    }\n\n    if (!readable || readableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  let readableFinished = isReadableFinished(stream\x2C false);\n  const onend = () => {\n    readableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.writable || writable)) {\n      return;\n    }\n\n    if (!writable || writableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  const onerror = (err) => {\n    callback.call(stream\x2C err);\n  };\n\n  let closed = isClosed(stream);\n\n  const onclose = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\n      if (!isReadableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n\n    callback.call(stream);\n  };\n\n  const onclosed = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    callback.call(stream);\n  };\n\n  const onrequest = () => {\n    stream.req.on('finish'\x2C onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete'\x2C onfinish);\n    if (!willEmitClose) {\n      stream.on('abort'\x2C onclose);\n    }\n    if (stream.req) {\n      onrequest();\n    } else {\n      stream.on('request'\x2C onrequest);\n    }\n  } else if (writable && !wState) { // legacy streams\n    stream.on('end'\x2C onlegacyfinish);\n    stream.on('close'\x2C onlegacyfinish);\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted'\x2C onclose);\n  }\n\n  stream.on('end'\x2C onend);\n  stream.on('finish'\x2C onfinish);\n  if (options.error !== false) {\n    stream.on('error'\x2C onerror);\n  }\n  stream.on('close'\x2C onclose);\n\n  if (closed) {\n    process.nextTick(onclose);\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed);\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false) &&\n    (wState == null || wState.pendingcb === undefined || wState.pendingcb === 0)\n  ) {\n    process.nextTick(onclosed);\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed);\n  } else if ((rState && stream.req && stream.aborted)) {\n    process.nextTick(onclosed);\n  }\n\n  const cleanup = () => {\n    callback = nop;\n    stream.removeListener('aborted'\x2C onclose);\n    stream.removeListener('complete'\x2C onfinish);\n    stream.removeListener('abort'\x2C onclose);\n    stream.removeListener('request'\x2C onrequest);\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onlegacyfinish);\n    stream.removeListener('close'\x2C onlegacyfinish);\n    stream.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onend);\n    stream.removeListener('error'\x2C onerror);\n    stream.removeListener('close'\x2C onclose);\n  };\n\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback;\n      cleanup();\n      endCallback.call(\n        stream\x2C\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n\n  return cleanup;\n}\n\nfunction eosWeb(stream\x2C options\x2C callback) {\n  let isAborted = false;\n  let abort = nop;\n  if (options.signal) {\n    abort = () => {\n      isAborted = true;\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream\x2C args));\n    }\n  };\n  PromisePrototypeThen(\n    stream[kIsClosedPromise].promise\x2C\n    resolverFn\x2C\n    resolverFn\x2C\n  );\n  return nop;\n}\n\nfunction finished(stream\x2C opts) {\n  let autoCleanup = false;\n  if (opts === null) {\n    opts = kEmptyObject;\n  }\n  if (opts?.cleanup) {\n    validateBoolean(opts.cleanup\x2C 'cleanup');\n    autoCleanup = opts.cleanup;\n  }\n  return new Promise((resolve\x2C reject) => {\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\n      if (autoCleanup) {\n        cleanup();\n      }\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nmodule.exports = eos;\nmodule.exports.finished = finished;\n
code-source-info,0x12ea98654b38,100,0,8484,C0O0C4O8484,,
code-creation,JS,9,86083,0x12ea98654ce0,353, node:internal/streams/end-of-stream:1:1,0x15988e454d70,~
code-source-info,0x12ea98654ce0,100,0,8484,C0O0C120O147C126O158C132O298C138O298C143O208C149O229C154O235C160O261C166O379C172O379C177O336C183O352C189O360C195O497C201O497C206O415C212O438C218O458C224O476C230O825C236O825C241O540C247O552C253O566C259O590C265O610C271O632C277O653C283O667C289O691C295O711C301O733C307O754C313O785C319O803C325O864C326O864C328O992C332O992C334O8426C336O8441C340O8455C347O8472C352O8483,,
tick,0x19252adc4,86083,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98653ea0,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,86250,0x12ea98654f20,5, node:internal/streams/compose:1:1,0x15988e455ae8,~
script-source,101,node:internal/streams/compose,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n} = primordials;\n\nconst { pipeline } = require('internal/streams/pipeline');\nconst Duplex = require('internal/streams/duplex');\nconst { destroyer } = require('internal/streams/destroy');\nconst {\n  isNodeStream\x2C\n  isReadable\x2C\n  isWritable\x2C\n  isWebStream\x2C\n  isTransformStream\x2C\n  isWritableStream\x2C\n  isReadableStream\x2C\n} = require('internal/streams/utils');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst eos = require('internal/streams/end-of-stream');\n\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  if (streams.length === 1) {\n    return Duplex.from(streams[0]);\n  }\n\n  const orgStreams = ArrayPrototypeSlice(streams);\n\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0]);\n  }\n\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1;\n    streams[idx] = Duplex.from(streams[idx]);\n  }\n\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue;\n    }\n    if (\n      n < streams.length - 1 &&\n      !(\n        isReadable(streams[n]) ||\n        isReadableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be readable'\x2C\n      );\n    }\n    if (\n      n > 0 &&\n      !(\n        isWritable(streams[n]) ||\n        isWritableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be writable'\x2C\n      );\n    }\n  }\n\n  let ondrain;\n  let onfinish;\n  let onreadable;\n  let onclose;\n  let d;\n\n  function onfinished(err) {\n    const cb = onclose;\n    onclose = null;\n\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      d.destroy(err);\n    } else if (!readable && !writable) {\n      d.destroy();\n    }\n  }\n\n  const head = streams[0];\n  const tail = pipeline(streams\x2C onfinished);\n\n  const writable = !!(\n    isWritable(head) ||\n    isWritableStream(head) ||\n    isTransformStream(head)\n  );\n  const readable = !!(\n    isReadable(tail) ||\n    isReadableStream(tail) ||\n    isTransformStream(tail)\n  );\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See\x2C https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!head?.writableObjectMode\x2C\n    readableObjectMode: !!tail?.readableObjectMode\x2C\n    writable\x2C\n    readable\x2C\n  });\n\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function(chunk\x2C encoding\x2C callback) {\n        if (head.write(chunk\x2C encoding)) {\n          callback();\n        } else {\n          ondrain = callback;\n        }\n      };\n\n      d._final = function(callback) {\n        head.end();\n        onfinish = callback;\n      };\n\n      head.on('drain'\x2C function() {\n        if (ondrain) {\n          const cb = ondrain;\n          ondrain = null;\n          cb();\n        }\n      });\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head;\n      const writer = writable.getWriter();\n\n      d._write = async function(chunk\x2C encoding\x2C callback) {\n        try {\n          await writer.ready;\n          writer.write(chunk).catch(() => {});\n          callback();\n        } catch (err) {\n          callback(err);\n        }\n      };\n\n      d._final = async function(callback) {\n        try {\n          await writer.ready;\n          writer.close().catch(() => {});\n          onfinish = callback;\n        } catch (err) {\n          callback(err);\n        }\n      };\n    }\n\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\n\n    eos(toRead\x2C () => {\n      if (onfinish) {\n        const cb = onfinish;\n        onfinish = null;\n        cb();\n      }\n    });\n  }\n\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable'\x2C function() {\n        if (onreadable) {\n          const cb = onreadable;\n          onreadable = null;\n          cb();\n        }\n      });\n\n      tail.on('end'\x2C function() {\n        d.push(null);\n      });\n\n      d._read = function() {\n        while (true) {\n          const buf = tail.read();\n          if (buf === null) {\n            onreadable = d._read;\n            return;\n          }\n\n          if (!d.push(buf)) {\n            return;\n          }\n        }\n      };\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail;\n      const reader = readable.getReader();\n      d._read = async function() {\n        while (true) {\n          try {\n            const { value\x2C done } = await reader.read();\n\n            if (!d.push(value)) {\n              return;\n            }\n\n            if (done) {\n              d.push(null);\n              return;\n            }\n          } catch {\n            return;\n          }\n        }\n      };\n    }\n  }\n\n  d._destroy = function(err\x2C callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError();\n    }\n\n    onreadable = null;\n    ondrain = null;\n    onfinish = null;\n\n    if (isNodeStream(tail)) {\n      destroyer(tail\x2C err);\n    }\n\n    if (onclose === null) {\n      callback(err);\n    } else {\n      onclose = callback;\n    }\n  };\n\n  return d;\n};\n
code-source-info,0x12ea98654f20,101,0,5511,C0O0C4O5511,,
code-creation,JS,9,86417,0x12ea98655048,193, node:internal/streams/compose:1:1,0x15988e455ca0,~
code-source-info,0x12ea98655048,101,0,5511,C0O0C50O25C56O85C59O85C64O72C70O138C73O138C77O138C79O196C82O196C87O182C93O365C96O365C101O243C107O259C113O273C119O287C125O302C131O323C137O343C143O491C146O491C151O410C157O431C162O437C168O464C174O531C177O531C181O531C183O575C187O590C192O5510,,
code-creation,Eval,9,86833,0x12ea986551c8,5, node:internal/streams/pipeline:1:1,0x15988e457130,~
script-source,102,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Promise\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\n\nconst eos = require('internal/streams/end-of-stream');\nconst { SymbolDispose\x2C once } = require('internal/util');\nconst destroyImpl = require('internal/streams/destroy');\nconst Duplex = require('internal/streams/duplex');\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateAbortSignal\x2C\n} = require('internal/validators');\n\nconst {\n  isIterable\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isNodeStream\x2C\n  isTransformStream\x2C\n  isWebStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n} = require('internal/streams/utils');\nconst { AbortController } = require('internal/abort_controller');\n\nlet PassThrough;\nlet Readable;\nlet addAbortListener;\n\nfunction destroyer(stream\x2C reading\x2C writing) {\n  let finished = false;\n  stream.on('close'\x2C () => {\n    finished = true;\n  });\n\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\n    finished = !err;\n  });\n\n  return {\n    destroy: (err) => {\n      if (finished) return;\n      finished = true;\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\n    }\x2C\n    cleanup\x2C\n  };\n}\n\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\n  return streams.pop();\n}\n\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val;\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val);\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\n}\n\nasync function* fromReadable(val) {\n  Readable ??= require('internal/streams/readable');\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\n}\n\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\n  let error;\n  let onresolve = null;\n\n  const resume = (err) => {\n    if (err) {\n      error = err;\n    }\n\n    if (onresolve) {\n      const callback = onresolve;\n      onresolve = null;\n      callback();\n    }\n  };\n\n  const wait = () => new Promise((resolve\x2C reject) => {\n    if (error) {\n      reject(error);\n    } else {\n      onresolve = () => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      };\n    }\n  });\n\n  writable.on('drain'\x2C resume);\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\n\n  try {\n    if (writable.writableNeedDrain) {\n      await wait();\n    }\n\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait();\n      }\n    }\n\n    if (end) {\n      writable.end();\n      await wait();\n    }\n\n    finish();\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\n  } finally {\n    cleanup();\n    writable.off('drain'\x2C resume);\n  }\n}\n\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable;\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter();\n  try {\n    for await (const chunk of readable) {\n      await writer.ready;\n      writer.write(chunk).catch(() => {});\n    }\n\n    await writer.ready;\n\n    if (end) {\n      await writer.close();\n    }\n\n    finish();\n  } catch (err) {\n    try {\n      await writer.abort(err);\n      finish(err);\n    } catch (err) {\n      finish(err);\n    }\n  }\n}\n\nfunction pipeline(...streams) {\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\n}\n\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0];\n  }\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  const ac = new AbortController();\n  const signal = ac.signal;\n  const outerSignal = opts?.signal;\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = [];\n\n  validateAbortSignal(outerSignal\x2C 'options.signal');\n\n  function abort() {\n    finishImpl(new AbortError(undefined\x2C { cause: outerSignal?.reason }));\n  }\n\n  addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n  let disposable;\n  if (outerSignal) {\n    disposable = addAbortListener(outerSignal\x2C abort);\n  }\n\n  let error;\n  let value;\n  const destroys = [];\n\n  let finishCount = 0;\n\n  function finish(err) {\n    finishImpl(err\x2C --finishCount === 0);\n  }\n\n  function finishOnlyHandleError(err) {\n    finishImpl(err\x2C false);\n  }\n\n  function finishImpl(err\x2C final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err;\n    }\n\n    if (!error && !final) {\n      return;\n    }\n\n    while (destroys.length) {\n      destroys.shift()(error);\n    }\n\n    disposable?.[SymbolDispose]();\n    ac.abort();\n\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn());\n      }\n      process.nextTick(callback\x2C error\x2C value);\n    }\n  }\n\n  let ret;\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i];\n    const reading = i < streams.length - 1;\n    const writing = i > 0;\n    const end = reading || opts?.end !== false;\n    const isLastStream = i === streams.length - 1;\n\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\n        destroys.push(destroy);\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (\n          err &&\n          err.name !== 'AbortError' &&\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\n        ) {\n          finishOnlyHandleError(err);\n        }\n      }\n      stream.on('error'\x2C onError);\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error'\x2C onError);\n        });\n      }\n    }\n\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({ signal });\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream;\n      } else {\n        ret = Duplex.from(stream);\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        ret = makeAsyncIterable(ret?.readable);\n      } else {\n        ret = makeAsyncIterable(ret);\n      }\n      ret = stream(ret\x2C { signal });\n\n      if (reading) {\n        if (!isIterable(ret\x2C true)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\n        }\n      } else {\n        PassThrough ??= require('internal/streams/passthrough');\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\x2C\n        });\n\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\n        // second use.\n        const then = ret?.then;\n        if (typeof then === 'function') {\n          finishCount++;\n          then.call(ret\x2C\n                    (val) => {\n                      value = val;\n                      if (val != null) {\n                        pt.write(val);\n                      }\n                      if (end) {\n                        pt.end();\n                      }\n                      process.nextTick(finish);\n                    }\x2C (err) => {\n                      pt.destroy(err);\n                      process.nextTick(finish\x2C err);\n                    }\x2C\n          );\n        } else if (isIterable(ret\x2C true)) {\n          finishCount++;\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret;\n          finishCount++;\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\n        }\n\n        ret = pt;\n\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\n        destroys.push(destroy);\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2;\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C finishOnlyHandleError\x2C { end });\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret;\n        finishCount++;\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\n      } else if (isIterable(ret)) {\n        finishCount++;\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++;\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++;\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\n      } else if (isTransformStream(ret)) {\n        finishCount++;\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else {\n      ret = Duplex.from(stream);\n    }\n  }\n\n  if (signal?.aborted || outerSignal?.aborted) {\n    process.nextTick(abort);\n  }\n\n  return ret;\n}\n\nfunction pipe(src\x2C dst\x2C finish\x2C finishOnlyHandleError\x2C { end }) {\n  let ended = false;\n  dst.on('close'\x2C () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finishOnlyHandleError(new ERR_STREAM_PREMATURE_CLOSE());\n    }\n  });\n\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but "secretly" don't close the underlying fd.\n\n    function endFn() {\n      ended = true;\n      dst.end();\n    }\n\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\n      process.nextTick(endFn);\n    } else {\n      src.once('end'\x2C endFn);\n    }\n  } else {\n    finish();\n  }\n\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\n    const rState = src._readableState;\n    if (\n      err &&\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n      (rState?.ended && !rState.errored && !rState.errorEmitted)\n    ) {\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\n      // this is on the readable side 'end' should still be emitted if the\n      // stream has been ended and no error emitted. This should be allowed in\n      // favor of backwards compatibility. Since the stream is piped to a\n      // destination this should not result in any observable difference.\n      // We don't need to check if this is a writable premature close since\n      // eos will only fail with premature close on the reading side for\n      // duplex streams.\n      src\n        .once('end'\x2C finish)\n        .once('error'\x2C finish);\n    } else {\n      finish(err);\n    }\n  });\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\n}\n\nmodule.exports = { pipelineImpl\x2C pipeline };\n
code-source-info,0x12ea986551c8,102,0,12467,C0O0C4O12467,,
code-creation,JS,9,87292,0x12ea986553a8,421, node:internal/streams/pipeline:1:1,0x15988e457468,~
code-source-info,0x12ea986553a8,102,0,12467,C0O0C153O138C159O154C165O165C171O216C177O216C181O216C183O291C189O291C194O267C200O282C206O337C212O337C216O337C218O389C224O389C228O389C230O625C236O625C241O435C247O449C253O478C258O484C264O510C270O540C276O562C282O588C288O709C294O709C299O664C305O684C311O900C317O900C322O752C328O766C334O780C340O804C346O820C352O841C358O856C364O876C370O963C376O963C381O943C387O1006C388O1006C390O1023C391O1023C393O1037C394O1037C396O12422C403O12441C409O12455C415O12437C420O12466,,
tick,0x19252adc4,87292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,87417,0x12ea98655638,5, node:internal/streams/destroy:1:1,0x15988e458808,~
script-source,103,node:internal/streams/destroy,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kIsDestroyed\x2C\n  isDestroyed\x2C\n  isFinished\x2C\n  isServerRequest\x2C\n  kState\x2C\n  kErrorEmitted\x2C\n  kEmitClose\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kConstructed\x2C\n  kDestroyed\x2C\n  kAutoDestroy\x2C\n  kErrored\x2C\n} = require('internal/streams/utils');\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if (\n    (w && (w[kState] & kDestroyed) !== 0) ||\n    (r && (r[kState] & kDestroyed) !== 0)\n  ) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w[kState] |= kDestroyed;\n  }\n  if (r) {\n    r[kState] |= kDestroyed;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if ((s[kState] & kConstructed) === 0) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w[kState] |= kClosed;\n    }\n    if (r) {\n      r[kState] |= kClosed;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    self._destroy(err || null\x2C onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w[kState] |= kCloseEmitted;\n  }\n  if (r) {\n    r[kState] |= kCloseEmitted;\n  }\n\n  if (\n    (w && (w[kState] & kEmitClose) !== 0) ||\n    (r && (r[kState] & kEmitClose) !== 0)\n  ) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\n    (r && (r[kState] & kErrorEmitted) !== 0)\n  ) {\n    return;\n  }\n\n  if (w) {\n    w[kState] |= kErrorEmitted;\n  }\n  if (r) {\n    r[kState] |= kErrorEmitted;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\n  ) {\n    return this;\n  }\n\n  if (\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\n    (w && (w[kState] & kAutoDestroy) !== 0)\n  ) {\n    stream.destroy(err);\n  } else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && (w[kState] & kErrored) === 0) {\n      w.errored = err;\n    }\n    if (r && (r[kState] & kErrored) === 0) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r[kState] &= ~kConstructed;\n  }\n  if (w) {\n    w[kState] &= ~kConstructed;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r[kState] |= kConstructed;\n    }\n    if (w) {\n      w[kState] |= kConstructed;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      stream.emit(kConstruct);\n    }\n  }\n\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct\x2C err);\n    });\n  } catch (err) {\n    process.nextTick(onConstruct\x2C err);\n  }\n}\n\nfunction isRequest(stream) {\n  return stream?.setHeader && typeof stream.abort === 'function';\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\n\nfunction emitErrorCloseLegacy(stream\x2C err) {\n  stream.emit('error'\x2C err);\n  process.nextTick(emitCloseLegacy\x2C stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n  } else {\n    process.nextTick(emitCloseLegacy\x2C stream);\n  }\n\n  if (!stream.destroyed) {\n    stream[kIsDestroyed] = true;\n  }\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\x2C\n};\n
code-source-info,0x12ea98655638,103,0,7355,C0O0C4O7355,,
code-creation,JS,9,87708,0x12ea98655808,326, node:internal/streams/destroy:1:1,0x15988e458aa0,~
code-source-info,0x12ea98655808,103,0,7355,C0O0C143O25C148O142C151O142C156O61C162O75C168O104C173O110C179O373C182O373C187O180C193O196C199O211C205O225C211O244C217O254C223O271C229O285C235O296C241O313C247O329C253O343C259O359C265O426C268O426C272O426C274O465C277O465C281O465C283O7265C290O7286C296O7299C302O7312C308O7323C314O7336C320O7280C325O7354,,
code-creation,Eval,9,87833,0x12ea98655a10,5, node:internal/streams/duplex:1:1,0x15988e459d10,~
script-source,104,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Stream = require('internal/streams/legacy').Stream;\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst destroyImpl = require('internal/streams/destroy');\nconst { kOnConstructed } = require('internal/streams/utils');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    Duplex.prototype[method] ||= Writable.prototype[method];\n  }\n}\n\n// Use the `destroy` method of `Writable`.\nDuplex.prototype.destroy = Writable.prototype.destroy;\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false;\n\n    if (options.readable === false) {\n      this._readableState.readable = false;\n      this._readableState.ended = true;\n      this._readableState.endEmitted = true;\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false;\n      this._writableState.ending = true;\n      this._writableState.ended = true;\n      this._writableState.finished = true;\n    }\n\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  } else {\n    this.allowHalfOpen = true;\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\x2C\n  }\x2C\n});\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nDuplex.fromWeb = function(pair\x2C options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n    pair\x2C\n    options);\n};\n\nDuplex.toWeb = function(duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n};\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  duplexify ??= require('internal/streams/duplexify');\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x12ea98655a10,104,0,6529,C0O0C4O6529,,
code-creation,JS,9,88042,0x12ea98655bd8,698, node:internal/streams/duplex:1:1,0x15988e459e88,~
code-source-info,0x12ea98655bd
code-creation,Eval,9,88125,0x12ea98656000,5, node:internal/streams/legacy:1:1,0x15988e45aaa8,~
script-source,105,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nStream.prototype.eventNames = function eventNames() {\n  const names = [];\n  for (const key of ReflectOwnKeys(this._events)) {\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\n      names.push(key);\n    }\n  }\n  return names;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x12ea98656000,105,0,3251,C0O0C4O3251,,
code-creation,JS,9,88250,0x12ea986560f0,128, node:internal/streams/legacy:1:1,0x15988e45abb0,~
code-source-info,0x12ea986560f0,105,0,3251,C0O0C25O25C31O41C36O65C42O110C45O110C49O110C51O207C59O221C64O179C69O233C72O233C77O275C86O290C90O2104C99O2125C103O3205C110O3224C116O3232C122O3220C127O3250,,
tick,0x1012a4c24,88417,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98655c36,0x107f89188,0x107f88e30,0x12ea98655488,0x107f89188,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,89125,0x12ea98656210,5, node:internal/streams/readable:1:1,0x15988e45f898,~
script-source,106,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolSpecies\x2C\n  TypedArrayPrototypeSet\x2C\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\nconst {\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\nconst eos = require('internal/streams/end-of-stream');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst { validateObject } = require('internal/validators');\n\nconst FastBuffer = Buffer[SymbolSpecies];\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kDecoderValue = Symbol('kDecoderValue');\nconst kEncodingValue = Symbol('kEncodingValue');\n\nconst kEnded = 1 << 9;\nconst kEndEmitted = 1 << 10;\nconst kReading = 1 << 11;\nconst kSync = 1 << 12;\nconst kNeedReadable = 1 << 13;\nconst kEmittedReadable = 1 << 14;\nconst kReadableListening = 1 << 15;\nconst kResumeScheduled = 1 << 16;\nconst kMultiAwaitDrain = 1 << 17;\nconst kReadingMore = 1 << 18;\nconst kDataEmitted = 1 << 19;\nconst kDefaultUTF8Encoding = 1 << 20;\nconst kDecoder = 1 << 21;\nconst kEncoding = 1 << 22;\nconst kHasFlowing = 1 << 23;\nconst kFlowing = 1 << 24;\nconst kHasPaused = 1 << 25;\nconst kPaused = 1 << 26;\nconst kDataListening = 1 << 27;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(ReadableState.prototype\x2C {\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n  ended: makeBitMapDescriptor(kEnded)\x2C\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\n  reading: makeBitMapDescriptor(kReading)\x2C\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\n  // If true\x2C a maybeReadMore has been scheduled.\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  decoder: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kDecoderValue] = value;\n        this[kState] |= kDecoder;\n      } else {\n        this[kState] &= ~kDecoder;\n      }\n    }\x2C\n  }\x2C\n\n  encoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kEncodingValue] = value;\n        this[kState] |= kEncoding;\n      } else {\n        this[kState] &= ~kEncoding;\n      }\n    }\x2C\n  }\x2C\n\n  flowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\n    }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasFlowing | kFlowing);\n      } else if (value) {\n        this[kState] |= (kHasFlowing | kFlowing);\n      } else {\n        this[kState] |= kHasFlowing;\n        this[kState] &= ~kFlowing;\n      }\n    }\x2C\n  }\x2C\n});\n\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store ReadableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.readableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  this.buffer = [];\n  this.bufferIndex = 0;\n  this.length = 0;\n  this.pipes = [];\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options?.defaultEncoding;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this.defaultEncoding = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n\n  if (options?.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kNeedReadable) !== 0) {\n    maybeReadMore(stream\x2C this);\n  }\n};\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new ReadableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n    });\n  }\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nReadable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.readableEnded ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  debug('push'\x2C chunk);\n\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  debug('unshift'\x2C chunk);\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\n};\n\n\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      if (state.encoding) {\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\n        // the string in the BufferList with the state encoding.\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n      } else {\n        chunk = Buffer.from(chunk\x2C encoding);\n      }\n    }\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n\n  if (!(chunk && chunk.length > 0)) {\n    return canPushMore(state);\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\n  if ((state[kState] & kEndEmitted) !== 0)\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\n    return false;\n  else\n    addChunk(stream\x2C state\x2C chunk\x2C true);\n\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      chunk = Buffer.from(chunk\x2C encoding);\n      encoding = '';\n    }\n  } else if (chunk instanceof Buffer) {\n    encoding = '';\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n    encoding = '';\n  } else if (chunk !== undefined) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n  if (!chunk || chunk.length <= 0) {\n    state[kState] &= ~kReading;\n    maybeReadMore(stream\x2C state);\n\n    return canPushMore(state);\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n    if (chunk.length === 0) {\n      maybeReadMore(stream\x2C state);\n      return canPushMore(state);\n    }\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction canPushMore(state) {\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return (state[kState] & kEnded) === 0 &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n\n    state[kState] |= kDataEmitted;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    if (addToFront) {\n      if (state.bufferIndex > 0) {\n        state.buffer[--state.bufferIndex] = chunk;\n      } else {\n        state.buffer.unshift(chunk); // Slow path\n      }\n    } else {\n      state.buffer.push(chunk);\n    }\n\n    if ((state[kState] & kNeedReadable) !== 0)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const state = this._readableState;\n\n  const decoder = new StringDecoder(enc);\n  state.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  state.encoding = state.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of state.buffer.slice(state.bufferIndex)) {\n    content += decoder.write(data);\n  }\n  state.buffer.length = 0;\n  state.bufferIndex = 0;\n\n  if (content !== '')\n    state.buffer.push(content);\n  state.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\n    return 0;\n  if ((state[kState] & kObjectMode) !== 0)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if ((state[kState] & kFlowing) !== 0 && state.length)\n      return state.buffer[state.bufferIndex].length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state[kState] &= ~kEmittedReadable;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      (state[kState] & kNeedReadable) !== 0 &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       (state[kState] & kEnded) !== 0)) {\n    debug('read: emitReadable');\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = (state[kState] & kNeedReadable) !== 0;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state[kState] |= kReading | kSync;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state[kState] |= kNeedReadable;\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark);\n    } catch (err) {\n      errorOrDestroy(this\x2C err);\n    }\n    state[kState] &= ~kSync;\n\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if ((state[kState] & kReading) === 0)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\n    n = 0;\n  } else {\n    state.length -= n;\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if ((state[kState] & kEnded) === 0)\n      state[kState] |= kNeedReadable;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n  }\n\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\n    state[kState] |= kDataEmitted;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if ((state[kState] & kEnded) !== 0) return;\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\n  if (decoder) {\n    const chunk = decoder.end();\n    if (chunk?.length) {\n      state.buffer.push(chunk);\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    }\n  }\n  state[kState] |= kEnded;\n\n  if ((state[kState] & kSync) !== 0) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state[kState] &= ~kNeedReadable;\n    state[kState] |= kEmittedReadable;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable');\n  state[kState] &= ~kNeedReadable;\n  if ((state[kState] & kEmittedReadable) === 0) {\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\n    state[kState] |= kEmittedReadable;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_');\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\n    stream.emit('readable');\n    state[kState] &= ~kEmittedReadable;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state[kState] |=\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\n    state[kState] |= kReadingMore;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\n         (state.length < state.highWaterMark ||\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state[kState] &= ~kReadingMore;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\n      state[kState] |= kMultiAwaitDrain;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if ((state[kState] & kEndEmitted) !== 0)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state[kState] &= ~kMultiAwaitDrain;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    pause();\n  } else if ((state[kState] & kFlowing) === 0) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      (state[kState] & kDataListening) !== 0) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    state[kState] |= kDataListening;\n\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n      this.resume();\n    }\n  } else if (ev === 'readable') {\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\n      state[kState] &= ~(kFlowing | kEmittedReadable);\n      debug('on readable');\n      if (state.length) {\n        emitReadable(this);\n      } else if ((state[kState] & kReading) === 0) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const state = this._readableState;\n\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\n    state[kState] &= ~kDataListening;\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n\n  if (self.listenerCount('readable') > 0) {\n    state[kState] |= kReadableListening;\n  } else {\n    state[kState] &= ~kReadableListening;\n  }\n\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state[kState] |= kHasFlowing | kFlowing;\n\n    // Crude way to check if we should resume.\n  } else if ((state[kState] & kDataListening) !== 0) {\n    self.resume();\n  } else if ((state[kState] & kReadableListening) === 0) {\n    state[kState] &= ~(kHasFlowing | kFlowing);\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if ((state[kState] & kFlowing) === 0) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state[kState] |= kHasFlowing;\n    if ((state[kState] & kReadableListening) === 0) {\n      state[kState] |= kFlowing;\n    } else {\n      state[kState] &= ~kFlowing;\n    }\n    resume(this\x2C state);\n  }\n  state[kState] |= kHasPaused;\n  state[kState] &= ~kPaused;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if ((state[kState] & kResumeScheduled) === 0) {\n    state[kState] |= kResumeScheduled;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\n  if ((state[kState] & kReading) === 0) {\n    stream.read(0);\n  }\n\n  state[kState] &= ~kResumeScheduled;\n  stream.emit('resume');\n  flow(stream);\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  const state = this._readableState;\n  debug('call pause');\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n    debug('pause');\n    state[kState] |= kHasFlowing;\n    state[kState] &= ~kFlowing;\n    this.emit('pause');\n  }\n  state[kState] |= kHasPaused | kPaused;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow');\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  stream.on('readable'\x2C next);\n\n  let error;\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\n    callback();\n    callback = nop;\n  });\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (error) {\n        throw error;\n      } else if (error === null) {\n        return;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error\x2C err);\n    throw error;\n  } finally {\n    if (\n      (error || options?.destroyOnReturn !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream\x2C null);\n    } else {\n      stream.off('readable'\x2C next);\n      cleanup();\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\x2C\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\x2C\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\x2C\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState?.buffer;\n    }\x2C\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\x2C\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\x2C\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\x2C\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.errored : null;\n    }\x2C\n  }\x2C\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._readableState ? this._readableState.closed : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\x2C\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\x2C\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\x2C\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return (this[kState] & kPaused) !== 0;\n    }\x2C\n    set(value) {\n      this[kState] |= kHasPaused;\n      if (value) {\n        this[kState] |= kPaused;\n      } else {\n        this[kState] &= ~kPaused;\n      }\n    }\x2C\n  }\x2C\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let idx = state.bufferIndex;\n  let ret;\n\n  const buf = state.buffer;\n  const len = buf.length;\n\n  if ((state[kState] & kObjectMode) !== 0) {\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if ((state[kState] & kDecoder) !== 0) {\n      ret = '';\n      while (idx < len) {\n        ret += buf[idx];\n        buf[idx++] = null;\n      }\n    } else if (len - idx === 0) {\n      ret = Buffer.alloc(0);\n    } else if (len - idx === 1) {\n      ret = buf[idx];\n      buf[idx++] = null;\n    } else {\n      ret = Buffer.allocUnsafe(state.length);\n\n      let i = 0;\n      while (idx < len) {\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\n        i += buf[idx].length;\n        buf[idx++] = null;\n      }\n    }\n  } else if (n < buf[idx].length) {\n    // `slice` is the same for buffers and strings.\n    ret = buf[idx].slice(0\x2C n);\n    buf[idx] = buf[idx].slice(n);\n  } else if (n === buf[idx].length) {\n    // First chunk is a perfect match.\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if ((state[kState] & kDecoder) !== 0) {\n    ret = '';\n    while (idx < len) {\n      const str = buf[idx];\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n        buf[idx++] = null;\n      } else {\n        if (n === buf.length) {\n          ret += str;\n          buf[idx++] = null;\n        } else {\n          ret += str.slice(0\x2C n);\n          buf[idx] = str.slice(n);\n        }\n        break;\n      }\n    }\n  } else {\n    ret = Buffer.allocUnsafe(n);\n\n    const retLen = n;\n    while (idx < len) {\n      const data = buf[idx];\n      if (n > data.length) {\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n        n -= data.length;\n        buf[idx++] = null;\n      } else {\n        if (n === data.length) {\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n          buf[idx++] = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\n        }\n        break;\n      }\n    }\n  }\n\n  if (idx === len) {\n    state.buffer.length = 0;\n    state.bufferIndex = 0;\n  } else if (idx > 1024) {\n    state.buffer.splice(0\x2C idx);\n    state.bufferIndex = 0;\n  } else {\n    state.bufferIndex = idx;\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable');\n  if ((state[kState] & kEndEmitted) === 0) {\n    state[kState] |= kEnded;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT');\n\n  // Check that we didn't get one last unshift.\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\n    state[kState] |= kEndEmitted;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nReadable.fromWeb = function(readableStream\x2C options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(\n    readableStream\x2C\n    options);\n};\n\nReadable.toWeb = function(streamReadable\x2C options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\n    streamReadable\x2C\n    options);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\x2C\n  }).wrap(src);\n};\n
code-source-info,0x12ea98656210,106,0,51284,C0O0C4O51284,,
code-creation,JS,9,90833,0x12ea986569f8,2585, node:internal/streams/readable:1:1,0x15988e460c98,~
code-source-info,0x12ea986569f
tick,0x100d180d8,90917,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98655c36,0x107f89188,0x107f88e30,0x12ea98655488,0x107f89188,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1012bf134,90958,0,0x0,0,0x107f890bc,0x107f88e30,0x12ea98655c36,0x107f89188,0x107f88e30,0x12ea98655488,0x107f89188,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,91083,0x12ea98657798,5, node:internal/streams/add-abort-signal:1:1,0x15988e464818,~
script-source,107,node:internal/streams/add-abort-signal,'use strict';\n\nconst {\n  SymbolDispose\x2C\n} = require('internal/util');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  isNodeStream\x2C\n  isWebStream\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst eos = require('internal/streams/end-of-stream');\nlet addAbortListener;\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal\x2C name) => {\n  if (typeof signal !== 'object' ||\n       !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n};\n\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\n  validateAbortSignal(signal\x2C 'signal');\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\n};\n\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream;\n  }\n  const onAbort = isNodeStream(stream) ?\n    () => {\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\n    } :\n    () => {\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\n    };\n  if (signal.aborted) {\n    onAbort();\n  } else {\n    addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n    const disposable = addAbortListener(signal\x2C onAbort);\n    eos(stream\x2C disposable[SymbolDispose]);\n  }\n  return stream;\n};\n
code-source-info,0x12ea98657798,107,0,1734,C0O0C4O1734,,
code-creation,JS,9,91125,0x12ea98657898,169, node:internal/streams/add-abort-signal:1:1,0x15988e464990,~
code-source-info,0x12ea98657898,107,0,1734,C0O0C40O44C46O44C51O25C57O139C63O139C68O81C74O102C79O108C85O239C91O239C96O178C102O194C108O209C114O287C120O287C124O287C126O334C127O334C129O563C133O563C135O725C138O732C147O755C151O1071C154O1078C163O1111C168O1733,,
code-creation,Eval,9,91208,0x12ea986579f8,5, node:internal/streams/state:1:1,0x15988e465600,~
script-source,108,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\nconst { validateInteger } = require('internal/validators');\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\n// TODO (fix): For some reason Windows CI fails with bigger hwm.\nlet defaultHighWaterMarkBytes = process.platform === 'win32' ? 16 * 1024 : 64 * 1024;\nlet defaultHighWaterMarkObjectMode = 16;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\n}\n\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\n  validateInteger(value\x2C 'value'\x2C 0);\n  if (objectMode) {\n    defaultHighWaterMarkObjectMode = value;\n  } else {\n    defaultHighWaterMarkBytes = value;\n  }\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n  setDefaultHighWaterMark\x2C\n};\n
code-source-info,0x12ea986579f8,108,0,1440,C0O0C4O1440,,
code-creation,JS,9,91250,0x12ea98657b00,151, node:internal/streams/state:1:1,0x15988e465748,~
code-source-info,0x12ea98657b00,108,0,1440,C0O0C45O25C51O38C57O100C60O100C65O80C71O167C74O167C79O193C84O141C90O307C97O316C114O299C116O390C118O390C120O1344C127O1365C133O1385C139O1412C145O1359C150O1439,,
code-creation,Eval,9,91542,0x12ea98657c38,5, node:internal/streams/from:1:1,0x15988e466398,~
script-source,109,node:internal/streams/from,'use strict';\n\nconst {\n  PromisePrototypeThen\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n} = primordials;\nconst { Buffer } = require('buffer');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n} = require('internal/errors').codes;\n\nfunction from(Readable\x2C iterable\x2C opts) {\n  let iterator;\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true\x2C\n      ...opts\x2C\n      read() {\n        this.push(iterable);\n        this.push(null);\n      }\x2C\n    });\n  }\n\n  let isAsync;\n  if (iterable?.[SymbolAsyncIterator]) {\n    isAsync = true;\n    iterator = iterable[SymbolAsyncIterator]();\n  } else if (iterable?.[SymbolIterator]) {\n    isAsync = false;\n    iterator = iterable[SymbolIterator]();\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\n  }\n\n\n  const readable = new Readable({\n    objectMode: true\x2C\n    highWaterMark: 1\x2C\n    // TODO(ronag): What options should be allowed?\n    ...opts\x2C\n  });\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false;\n  let isAsyncValues = false;\n\n  readable._read = function() {\n    if (!reading) {\n      reading = true;\n\n      if (isAsync) {\n        nextAsync();\n      } else if (isAsyncValues) {\n        nextSyncWithAsyncValues();\n      } else {\n        nextSyncWithSyncValues();\n      }\n    }\n  };\n\n  readable._destroy = function(error\x2C cb) {\n    PromisePrototypeThen(\n      close(error)\x2C\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\n      (e) => process.nextTick(cb\x2C e || error)\x2C\n    );\n  };\n\n  async function close(error) {\n    const hadError = (error !== undefined) && (error !== null);\n    const hasThrow = typeof iterator.throw === 'function';\n    if (hadError && hasThrow) {\n      const { value\x2C done } = await iterator.throw(error);\n      await value;\n      if (done) {\n        return;\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return();\n      await value;\n    }\n  }\n\n  // There are a lot of duplication here\x2C it's done on purpose for performance\n  // reasons - avoid await when not needed.\n\n  function nextSyncWithSyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value &&\n          typeof value.then === 'function') {\n          return changeToAsyncValues(value);\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function changeToAsyncValues(value) {\n    isAsyncValues = true;\n\n    try {\n      const res = await value;\n\n      if (res === null) {\n        reading = false;\n        throw new ERR_STREAM_NULL_VALUES();\n      }\n\n      if (readable.push(res)) {\n        nextSyncWithAsyncValues();\n        return;\n      }\n\n      reading = false;\n    } catch (err) {\n      readable.destroy(err);\n    }\n  }\n\n  async function nextSyncWithAsyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        const res = (value &&\n          typeof value.then === 'function') ?\n          await value :\n          value;\n\n        if (res === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(res)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function nextAsync() {\n    for (;;) {\n      try {\n        const { value\x2C done } = await iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n  return readable;\n}\n\nmodule.exports = from;\n
code-source-info,0x12ea98657c38,109,0,4321,C0O0C4O4321,,
code-creation,JS,9,91667,0x12ea98657d08,97, node:internal/streams/from:1:1,0x15988e4664d0,~
code-source-info,0x12ea98657d08,109,0,4321,C0O0C32O25C38O49C44O72C50O124C53O124C58O113C64O206C67O206C72O232C77O154C83O178C89O4298C91O4313C96O4320,,
code-creation,JS,9,91792,0x12ea98657e28,33,makeBitMapDescriptor node:internal/streams/readable:129:30,0x15988e460d00,~
code-source-info,0x12ea98657e28,106,3800,3993,C0O3800C9O3810C14O3846C22O3896C32O3991,,
tick,0x101197fbc,92208,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98655c42,0x107f89188,0x107f88e30,0x12ea98655488,0x107f89188,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,92583,0x12ea98657ec8,5, node:internal/streams/writable:1:1,0x15988e46e8e0,~
script-source,110,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst {\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_MULTIPLE_CALLBACK\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kWriteCbValue = Symbol('kWriteCbValue');\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\nconst kBufferedValue = Symbol('kBufferedValue');\n\nconst kSync = 1 << 9;\nconst kFinalCalled = 1 << 10;\nconst kNeedDrain = 1 << 11;\nconst kEnding = 1 << 12;\nconst kFinished = 1 << 13;\nconst kDecodeStrings = 1 << 14;\nconst kWriting = 1 << 15;\nconst kBufferProcessing = 1 << 16;\nconst kPrefinished = 1 << 17;\nconst kAllBuffers = 1 << 18;\nconst kAllNoop = 1 << 19;\nconst kOnFinished = 1 << 20;\nconst kHasWritable = 1 << 21;\nconst kWritable = 1 << 22;\nconst kCorked = 1 << 23;\nconst kDefaultUTF8Encoding = 1 << 24;\nconst kWriteCb = 1 << 25;\nconst kExpectWriteCb = 1 << 26;\nconst kAfterWriteTickInfo = 1 << 27;\nconst kAfterWritePending = 1 << 28;\nconst kBuffered = 1 << 29;\nconst kEnded = 1 << 30;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(WritableState.prototype\x2C {\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n\n  // if _final has been called.\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\n\n  // drain event flag.\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\n\n  // At the start of calling end()\n  ending: makeBitMapDescriptor(kEnding)\x2C\n\n  // When end() has been called\x2C and returned.\n  ended: makeBitMapDescriptor(kEnded)\x2C\n\n  // When 'finish' is emitted.\n  finished: makeBitMapDescriptor(kFinished)\x2C\n\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\n\n  // A flag to see when we're in the middle of a write.\n  writing: makeBitMapDescriptor(kWriting)\x2C\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\n\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n\n  // Should close be emitted on destroy. Defaults to true.\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  // This is/should be a cold path.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasWritable | kWritable);\n      } else if (value) {\n        this[kState] |= (kHasWritable | kWritable);\n      } else {\n        this[kState] |= kHasWritable;\n        this[kState] &= ~kWritable;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  writecb: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\n    set(value) {\n      this[kWriteCbValue] = value;\n      if (value) {\n        this[kState] |= kWriteCb;\n      } else {\n        this[kState] &= ~kWriteCb;\n      }\n    }\x2C\n  }\x2C\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  afterWriteTickInfo: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\n    set(value) {\n      this[kAfterWriteTickInfoValue] = value;\n      if (value) {\n        this[kState] |= kAfterWriteTickInfo;\n      } else {\n        this[kState] &= ~kAfterWriteTickInfo;\n      }\n    }\x2C\n  }\x2C\n\n  buffered: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\n    set(value) {\n      this[kBufferedValue] = value;\n      if (value) {\n        this[kState] |= kBuffered;\n      } else {\n        this[kState] &= ~kBuffered;\n      }\n    }\x2C\n  }\x2C\n\n});\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store WritableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\n\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.writableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options ? options.defaultEncoding : null;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this[kState] &= ~kDefaultUTF8Encoding;\n    this[kDefaultEncodingValue] = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n}\n\nfunction resetBuffer(state) {\n  state[kBufferedValue] = null;\n  state.bufferedIndex = 0;\n  state[kState] |= kAllBuffers | kAllNoop;\n  state[kState] &= ~kBuffered;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\n  }\x2C\n});\n\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kWriting) === 0) {\n    clearBuffer(stream\x2C this);\n  }\n\n  if ((this[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C this);\n  }\n};\n\nfunction Writable(options) {\n  if (!(this instanceof Writable))\n    return new Writable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    // Skip uncommon events...\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._writableState = new WritableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (cb == null || typeof cb !== 'function') {\n    cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  }\n\n  if ((state[kState] & kObjectMode) === 0) {\n    if (!encoding) {\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (typeof chunk === 'string') {\n      if ((state[kState] & kDecodeStrings) !== 0) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isArrayBufferView(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk);\n    }\n  }\n\n  let err;\n  if ((state[kState] & kEnding) !== 0) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  if (encoding != null && typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  const state = this._writableState;\n\n  state[kState] |= kCorked;\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.corked) {\n      state[kState] &= ~kCorked;\n    }\n\n    if ((state[kState] & kWriting) === 0)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n\n  state.length += len;\n\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\n    if ((state[kState] & kBuffered) === 0) {\n      state[kState] |= kBuffered;\n      state[kBufferedValue] = [];\n    }\n\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\n      state[kState] &= ~kAllBuffers;\n    }\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\n      state[kState] &= ~kAllNoop;\n    }\n  } else {\n    state.writelen = len;\n    if (callback !== nop) {\n      state.writecb = callback;\n    }\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state[kState] &= ~kSync;\n  }\n\n  const ret = state.length < state.highWaterMark || state.length === 0;\n\n  if (!ret) {\n    state[kState] |= kNeedDrain;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  if (cb !== nop) {\n    state.writecb = cb;\n  }\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\n  if ((state[kState] & kDestroyed) !== 0)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state[kState] &= ~kSync;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n\n  if ((state[kState] & kExpectWriteCb) === 0) {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  const sync = (state[kState] & kSync) !== 0;\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\n\n  state.writecb = null;\n  state[kState] &= ~(kWriting | kExpectWriteCb);\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if ((state[kState] & kErrored) === 0) {\n      state[kErroredValue] = er;\n      state[kState] |= kErrored;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if ((state[kState] & kBuffered) !== 0) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\n\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (cb === nop) {\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\n          state[kState] |= kAfterWritePending;\n        } else {\n          state.pendingcb--;\n          if ((state[kState] & kEnding) !== 0) {\n            finishMaybe(stream\x2C state\x2C true);\n          }\n        }\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\n                 state[kAfterWriteTickInfoValue].cb === cb) {\n        state[kAfterWriteTickInfoValue].count++;\n      } else if (needTick) {\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\n      } else {\n        state.pendingcb--;\n        if ((state[kState] & kEnding) !== 0) {\n          finishMaybe(stream\x2C state\x2C true);\n        }\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state[kState] &= ~kAfterWriteTickInfo;\n  state[kAfterWriteTickInfoValue] = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  state[kState] &= ~kAfterWritePending;\n\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\n  if (needDrain) {\n    state[kState] &= ~kNeedDrain;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb(null);\n  }\n\n  if ((state[kState] & kDestroyed) !== 0) {\n    errorBuffer(state);\n  }\n\n  if ((state[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C state\x2C true);\n  }\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if ((state[kState] & kWriting) !== 0) {\n    return;\n  }\n\n  if ((state[kState] & kBuffered) !== 0) {\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n      const { chunk\x2C callback } = state[kBufferedValue][n];\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n      state.length -= len;\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\n    }\n  }\n\n\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\n      (kBuffered | kConstructed)) {\n    return;\n  }\n\n  const objectMode = (state[kState] & kObjectMode) !== 0;\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state[kState] |= kBufferProcessing;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state[kState] &= ~kBufferProcessing;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk != null) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if ((state[kState] & kCorked) !== 0) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state[kState] |= kEnding;\n    finishMaybe(this\x2C state\x2C true);\n    state[kState] |= kEnded;\n  } else if ((state[kState] & kFinished) !== 0) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err) {\n      process.nextTick(cb\x2C err);\n    } else if ((state[kState] & kErrored) !== 0) {\n      process.nextTick(cb\x2C state[kErroredValue]);\n    } else if ((state[kState] & kFinished) !== 0) {\n      process.nextTick(cb\x2C null);\n    } else {\n      state[kState] |= kOnFinished;\n      state[kOnFinishedValue] ??= [];\n      state[kOnFinishedValue].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\n    (state[kState] & (\n      kEnding |\n          kDestroyed |\n          kConstructed |\n          kFinished |\n          kWriting |\n          kErrorEmitted |\n          kCloseEmitted |\n          kErrored |\n          kBuffered\n    )) === (kEnding | kConstructed) && state.length === 0);\n}\n\nfunction onFinish(stream\x2C state\x2C err) {\n  if ((state[kState] & kPrefinished) !== 0) {\n    errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n  state.pendingcb--;\n  if (err) {\n    callFinishedCallbacks(state\x2C err);\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\n  } else if (needFinish(state)) {\n    state[kState] |= kPrefinished;\n    stream.emit('prefinish');\n    // Backwards compat. Don't check state.sync here.\n    // Some streams assume 'finish' will be emitted\n    // asynchronously relative to _final callback.\n    state.pendingcb++;\n    process.nextTick(finish\x2C stream\x2C state);\n  }\n}\n\nfunction prefinish(stream\x2C state) {\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\n    return;\n  }\n\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\n    state[kState] |= kFinalCalled | kSync;\n    state.pendingcb++;\n\n    try {\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\n    } catch (err) {\n      onFinish(stream\x2C state\x2C err);\n    }\n\n    state[kState] &= ~kSync;\n  } else {\n    state[kState] |= kFinalCalled | kPrefinished;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++;\n        process.nextTick((stream\x2C state) => {\n          if (needFinish(state)) {\n            finish(stream\x2C state);\n          } else {\n            state.pendingcb--;\n          }\n        }\x2C stream\x2C state);\n      } else if (needFinish(state)) {\n        state.pendingcb++;\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state[kState] |= kFinished;\n\n  callFinishedCallbacks(state\x2C null);\n\n  stream.emit('finish');\n\n  if ((state[kState] & kAutoDestroy) !== 0) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nfunction callFinishedCallbacks(state\x2C err) {\n  if ((state[kState] & kOnFinished) === 0) {\n    return;\n  }\n\n  const onfinishCallbacks = state[kOnFinishedValue];\n  state[kOnFinishedValue] = null;\n  state[kState] &= ~kOnFinished;\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](err);\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (!this._writableState) return;\n\n      if (value) this._writableState[kState] |= kDestroyed;\n      else this._writableState[kState] &= ~kDestroyed;\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false &&\n        (w[kState] & (kEnding | kEnded | kDestroyed | kErrored)) === 0;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kFinished) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.getBuffer();\n    }\x2C\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kEnding) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\n    }\x2C\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.highWaterMark;\n    }\x2C\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.corked : 0;\n    }\x2C\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.length;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.errored : null;\n    }\x2C\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    get: function() {\n      const state = this._writableState;\n      return (\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\n        (state[kState] & kFinished) === 0\n      );\n    }\x2C\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nWritable.fromWeb = function(writableStream\x2C options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(\n    writableStream\x2C\n    options);\n};\n\nWritable.toWeb = function(streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\n};\n\nWritable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.writableFinished ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) =>\n    eos(this\x2C (err) => (err && err.name !== 'AbortError' ? reject(err) : resolve(null)))\x2C\n  );\n};\n
code-source-info,0x12ea98657ec8,110,0,33592,C0O0C4O33592,,
code-creation,JS,9,93792,0x12ea98658588,2202, node:internal/streams/writable:1:1,0x15988e46fc88,~
code-source-info,0x12ea
tick,0x192562efc,93875,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98655c42,0x107f89188,0x107f88e30,0x12ea98655488,0x107f89188,0x107f88e30,0x12ea98655083,0x107f89188,0x107f88e30,0x12ea98653eae,0x107f89188,0x107f88e30,0x12ea986534f5,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,94000,0x12ea98659160,33,makeBitMapDescriptor node:internal/streams/writable:128:30,0x15988e46fd48,~
code-source-info,0x12ea98659160,110,3881,4074,C0O3881C9O3891C14O3927C22O3977C32O4072,,
code-creation,Eval,9,94167,0x12ea98659200,5, node:stream/promises:1:1,0x15988e4774e8,~
script-source,111,node:stream/promises,'use strict';\n\nconst {\n  ArrayPrototypePop\x2C\n  Promise\x2C\n} = primordials;\n\nconst {\n  isIterable\x2C\n  isNodeStream\x2C\n  isWebStream\x2C\n} = require('internal/streams/utils');\n\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\nconst { finished } = require('internal/streams/end-of-stream');\n\nrequire('stream');\n\nfunction pipeline(...streams) {\n  return new Promise((resolve\x2C reject) => {\n    let signal;\n    let end;\n    const lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' &&\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\n      const options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n\n    pl(streams\x2C (err\x2C value) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }\x2C { signal\x2C end });\n  });\n}\n\nmodule.exports = {\n  finished\x2C\n  pipeline\x2C\n};\n
code-source-info,0x12ea98659200,111,0,917,C0O0C4O917,,
code-creation,JS,9,94208,0x12ea986592f0,125, node:stream/promises:1:1,0x15988e477610,~
code-source-info,0x12ea986592f0,111,0,917,C0O0C28O25C34O46C40O130C43O130C48O83C54O97C60O113C66O195C69O195C74O188C80O254C83O254C88O241C93O298C96O298C100O871C107O892C113O904C119O886C124O916,,
code-creation,Eval,9,94375,0x12ea98659410,5, node:internal/streams/transform:1:1,0x15988e4783d0,~
script-source,112,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a "filter"\x2C\n// but that's not a great name for it\x2C since that implies a thing where\n// some bits pass through\x2C and others are simply ignored.  (That would\n// be a valid example of a transform\x2C of course.)\n//\n// While the output is causally related to the input\x2C it's not a\n// necessarily symmetric or synchronous transformation.  For example\x2C\n// a zlib stream might take multiple plain-text writes()\x2C and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\n// internally\x2C and returns false if there's a lot of pending writes\n// buffered up.  When you call read()\x2C that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream\x2C the written data is placed in a buffer.  When\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks\x2C then the first\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\n//\n// This way\x2C back-pressure is actually determined by the reading side\x2C\n// since _read has to be called to start processing a new chunk.  However\x2C\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example\x2C imagine a stream where every byte of input is\n// interpreted as an integer from 0-255\x2C and then results in that many\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\n// 1kb of data being output.  In this case\x2C you could write a very small\n// amount of input\x2C and end up with a very large amount of output.  In\n// such a pathological inflating mechanism\x2C there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However\x2C even in such a pathological case\x2C only a single written chunk\n// would be consumed\x2C and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nmodule.exports = Transform;\nconst {\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst Duplex = require('internal/streams/duplex');\nconst { getHighWaterMark } = require('internal/streams/state');\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\nObjectSetPrototypeOf(Transform\x2C Duplex);\n\nconst kCallback = Symbol('kCallback');\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options\x2C\n      highWaterMark: null\x2C\n      readableHighWaterMark\x2C\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\n    };\n  }\n\n  Duplex.call(this\x2C options);\n\n  // We have implemented the _read method\x2C and done the other things\n  // that Readable wants before the first _read call\x2C so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this[kCallback] = null;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  // When the writable side finishes\x2C then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish'\x2C prefinish);\n}\n\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er\x2C data) => {\n      if (er) {\n        if (cb) {\n          cb(er);\n        } else {\n          this.destroy(er);\n        }\n        return;\n      }\n\n      if (data != null) {\n        this.push(data);\n      }\n      this.push(null);\n      if (cb) {\n        cb();\n      }\n    });\n  } else {\n    this.push(null);\n    if (cb) {\n      cb();\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this);\n  }\n}\n\nTransform.prototype._final = final;\n\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\n};\n\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\n  const rState = this._readableState;\n  const wState = this._writableState;\n  const length = rState.length;\n\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (val != null) {\n      this.push(val);\n    }\n\n    if (rState.ended) {\n      // If user has called this.push(null) we have to\n      // delay the callback to properly propagate the new\n      // state.\n      process.nextTick(callback);\n    } else if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback();\n    } else {\n      this[kCallback] = callback;\n    }\n  });\n};\n\nTransform.prototype._read = function() {\n  if (this[kCallback]) {\n    const callback = this[kCallback];\n    this[kCallback] = null;\n    callback();\n  }\n};\n
code-source-info,0x12ea98659410,112,0,7123,C0O0C4O7123,,
code-creation,JS,9,94625,0x12ea98659530,202, node:internal/streams/transform:1:1,0x15988e478518,~
code-source-info,0x12ea98659530,112,0,7123,C0O0C39O3508C44O3532C49O3558C51O3573C55O3628C58O3628C63O3654C68O3596C74O3677C77O3677C81O3677C83O3742C86O3742C91O3721C97O3777C100O3808C108O3826C113O3777C118O3838C124O3838C129O3898C132O3898C136O3898C138O6031C141O6041C148O6058C152O6068C155O6078C164O6099C168O6199C171O6209C180O6226C184O6968C187O6978C196O6994C201O7122,,
code-creation,Eval,9,94667,0x12ea986596c8,5, node:internal/streams/passthrough:1:1,0x15988e478ff0,~
script-source,113,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = PassThrough;\n\nconst Transform = require('internal/streams/transform');\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(PassThrough\x2C Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this\x2C options);\n}\n\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  cb(null\x2C chunk);\n};\n
code-source-info,0x12ea986596c8,113,0,1762,C0O0C4O1762,,
code-creation,JS,9,94750,0x12ea98659778,84, node:internal/streams/passthrough:1:1,0x15988e4790d8,~
code-source-info,0x12ea98659778,113,0,1762,C0O0C14O1288C19O1328C21O1343C25O1377C28O1377C32O1377C34O1416C37O1449C45O1470C50O1416C55O1482C61O1482C66O1673C69O1685C78O1706C83O1761,,
tick,0x192562d44,94792,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea986537d2,0x107f89188,0x107f88e30,0x12ea986521bd,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,94833,0x12ea98659868,5, node:internal/streams/duplexpair:1:1,0x15988e479850,~
script-source,114,node:internal/streams/duplexpair,'use strict';\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { Duplex } = require('stream');\nconst assert = require('internal/assert');\n\nconst kCallback = Symbol('Callback');\nconst kInitOtherSide = Symbol('InitOtherSide');\n\nclass DuplexSide extends Duplex {\n  #otherSide = null;\n\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this.#otherSide = null;\n  }\n\n  [kInitOtherSide](otherSide) {\n    // Ensure this can only be set once\x2C to enforce encapsulation.\n    if (this.#otherSide === null) {\n      this.#otherSide = otherSide;\n    } else {\n      assert(this.#otherSide === null);\n    }\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    assert(this.#otherSide !== null);\n    assert(this.#otherSide[kCallback] === null);\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this.#otherSide.push(chunk);\n      this.#otherSide[kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this.#otherSide.on('end'\x2C callback);\n    this.#otherSide.push(null);\n  }\n}\n\nfunction duplexPair(options) {\n  const side0 = new DuplexSide(options);\n  const side1 = new DuplexSide(options);\n  side0[kInitOtherSide](side1);\n  side1[kInitOtherSide](side0);\n  return [ side0\x2C side1 ];\n}\nmodule.exports = duplexPair;\n
code-source-info,0x12ea98659868,114,0,1373,C0O0C4O1373,,
code-creation,JS,9,94875,0x12ea98659970,155, node:internal/streams/duplexpair:1:1,0x15988e479a00,~
code-source-info,0x12ea98659970,114,0,1373,C0O0C26O24C31O69C34O69C39O58C44O103C47O103C51O103C53O150C56O150C60O150C62O193C65O193C69O193C88O244C96O384C145O219C147O1344C149O1359C154O1372,,
code-creation,JS,9,94917,0x12ea98659a98,11,DuplexSide node:internal/streams/duplexpair:12:33,0x15988e479c78,~
code-source-info,0x12ea98659a98,114,251,1136,C3O268C10O1136,,
code-creation,Eval,9,95125,0x12ea98659b18,5, node:internal/stream_base_commons:1:1,0x3564d12bddb0,~
script-source,115,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  ErrnoException\x2C\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateFunction } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kBoundSession = Symbol('kBoundSession');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (status < 0) {\n    const error = new ErrnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function') {\n      return this.callback(error);\n    }\n\n    return stream.destroy(error);\n  }\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(new ErrnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n    if (this[kBoundSession]) this[kBoundSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n};\n
code-source-info,0x12ea98659b18,115,0,7070,C0O0C4O7070,,
code-creation,JS,9,95375,0x12ea98659d58,526, node:internal/stream_base_commons:1:1,0x3564d12be078,~
code-source-info,0x12ea98659d58,115,0,7070,C0O0C133O25C139O34C144O79C147O79C152O68C158O121C161O121C166O106C172O275C175O275C180O159C186O172C192O193C198O215C204O232C210O254C216O326C219O326C224O315C230O379C233O379C238O359C244O432C247O432C252O463C257O415C263O536C266O536C271O483C277O495C283O514C289O589C292O589C297O572C303O646C306O646C311O629C317O694C320O694C325O673C331O749C334O749C338O749C340O795C343O795C347O795C349O844C352O844C356O844C358O888C361O888C365O888C367O929C370O929C374O929C376O971C379O971C383O971C385O1004C388O1004C393O1037C406O1038C412O1004C414O1101C417O1101C421O1101C423O1139C426O1139C430O1139C432O1179C435O1179C439O1179C441O6865C448O6886C454O6903C460O6919C466O6935C472O6955C478O6972C484O6988C490O6999C496O7011C502O7031C508O7042C514O7055C520O6880C525O7069,,
code-creation,JS,10,95750,0x107f8e4a0,304,Channel node:diagnostics_channel:176:14,0x2ddc31eff5b0,^
script-source,65,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeAt\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = require('internal/util');\n\n// Can't delete when weakref count reaches 0 as it could increment again.\n// Only GC can be used as a valid time to clean up the channels map.\nclass WeakRefMap extends SafeMap {\n  #finalizers = new SafeFinalizationRegistry((key) => {\n    this.delete(key);\n  });\n\n  set(key\x2C value) {\n    this.#finalizers.register(value\x2C key);\n    return super.set(key\x2C new WeakReference(value));\n  }\n\n  get(key) {\n    return super.get(key)?.get();\n  }\n\n  incRef(key) {\n    return super.get(key)?.incRef();\n  }\n\n  decRef(key) {\n    return super.get(key)?.decRef();\n  }\n}\n\nfunction markActive(channel) {\n  // eslint-disable-next-line no-use-before-define\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\n  channel._subscribers = [];\n  channel._stores = new SafeMap();\n}\n\nfunction maybeMarkInactive(channel) {\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\n  if (!channel._subscribers.length && !channel._stores.size) {\n    // eslint-disable-next-line no-use-before-define\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\n    channel._subscribers = undefined;\n    channel._stores = undefined;\n  }\n}\n\nfunction defaultTransform(data) {\n  return data;\n}\n\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\n  return () => {\n    let context;\n    try {\n      context = transform(data);\n    } catch (err) {\n      process.nextTick(() => {\n        triggerUncaughtException(err\x2C false);\n      });\n      return next();\n    }\n\n    return store.run(context\x2C next);\n  };\n}\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    this._subscribers = ArrayPrototypeSlice(this._subscribers);\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n    channels.incRef(this.name);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    const before = ArrayPrototypeSlice(this._subscribers\x2C 0\x2C index);\n    const after = ArrayPrototypeSlice(this._subscribers\x2C index + 1);\n    this._subscribers = before;\n    ArrayPrototypePushApply(this._subscribers\x2C after);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  bindStore(store\x2C transform) {\n    const replacing = this._stores.has(store);\n    if (!replacing) channels.incRef(this.name);\n    this._stores.set(store\x2C transform);\n  }\n\n  unbindStore(store) {\n    if (!this._stores.has(store)) {\n      return false;\n    }\n\n    this._stores.delete(store);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    const subscribers = this._subscribers;\n    for (let i = 0; i < (subscribers?.length || 0); i++) {\n      try {\n        const onMessage = subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    let run = () => {\n      this.publish(data);\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    };\n\n    for (const entry of this._stores.entries()) {\n      const store = entry[0];\n      const transform = entry[1];\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\n    }\n\n    return run();\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this._stores = undefined;\n    this.name = name;\n\n    channels.set(name\x2C this);\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    markActive(this);\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  bindStore(store\x2C transform) {\n    markActive(this);\n    this.bindStore(store\x2C transform);\n  }\n\n  unbindStore() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    return ReflectApply(fn\x2C thisArg\x2C args);\n  }\n}\n\nconst channels = new WeakRefMap();\n\nfunction channel(name) {\n  const channel = channels.get(name);\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  return new Channel(name);\n}\n\nfunction subscribe(name\x2C subscription) {\n  return channel(name).subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  return channel(name).unsubscribe(subscription);\n}\n\nfunction hasSubscribers(name) {\n  const channel = channels.get(name);\n  if (!channel) return false;\n\n  return channel.hasSubscribers;\n}\n\nconst traceEvents = [\n  'start'\x2C\n  'end'\x2C\n  'asyncStart'\x2C\n  'asyncEnd'\x2C\n  'error'\x2C\n];\n\nfunction assertChannel(value\x2C name) {\n  if (!(value instanceof Channel)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\n  }\n}\n\nfunction tracingChannelFrom(nameOrChannels\x2C name) {\n  if (typeof nameOrChannels === 'string') {\n    return channel(`tracing:${nameOrChannels}:${name}`);\n  }\n\n  if (typeof nameOrChannels === 'object' && nameOrChannels !== null) {\n    const channel = nameOrChannels[name];\n    assertChannel(channel\x2C `nameOrChannels.${name}`);\n    return channel;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\n                                 ['string'\x2C 'object'\x2C 'TracingChannel']\x2C\n                                 nameOrChannels);\n}\n\nclass TracingChannel {\n  constructor(nameOrChannels) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const eventName = traceEvents[i];\n      ObjectDefineProperty(this\x2C eventName\x2C {\n        __proto__: null\x2C\n        value: tracingChannelFrom(nameOrChannels\x2C eventName)\x2C\n      });\n    }\n  }\n\n  get hasSubscribers() {\n    return this.start?.hasSubscribers ||\n      this.end?.hasSubscribers ||\n      this.asyncStart?.hasSubscribers ||\n      this.asyncEnd?.hasSubscribers ||\n      this.error?.hasSubscribers;\n  }\n\n  subscribe(handlers) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      this[name]?.subscribe(handlers[name]);\n    }\n  }\n\n  unsubscribe(handlers) {\n    let done = true;\n\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      if (!this[name]?.unsubscribe(handlers[name])) {\n        done = false;\n      }\n    }\n\n    return done;\n  }\n\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C error } = this;\n\n    return start.runStores(context\x2C () => {\n      try {\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\n        context.result = result;\n        return result;\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function reject(err) {\n      context.error = err;\n      error.publish(context);\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return PromiseReject(err);\n    }\n\n    function resolve(result) {\n      context.result = result;\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return result;\n    }\n\n    return start.runStores(context\x2C () => {\n      try {\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\n        // Convert thenables to native promises\n        if (!(promise instanceof Promise)) {\n          promise = PromiseResolve(promise);\n        }\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function wrappedCallback(err\x2C res) {\n      if (err) {\n        context.error = err;\n        error.publish(context);\n      } else {\n        context.result = res;\n      }\n\n      // Using runStores here enables manual context failure recovery\n      asyncStart.runStores(context\x2C () => {\n        try {\n          return ReflectApply(callback\x2C this\x2C arguments);\n        } finally {\n          asyncEnd.publish(context);\n        }\n      });\n    }\n\n    const callback = ArrayPrototypeAt(args\x2C position);\n    validateFunction(callback\x2C 'callback');\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\n\n    return start.runStores(context\x2C () => {\n      try {\n        return ReflectApply(fn\x2C thisArg\x2C args);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n}\n\nfunction tracingChannel(nameOrChannels) {\n  return new TracingChannel(nameOrChannels);\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  tracingChannel\x2C\n  unsubscribe\x2C\n  Channel\x2C\n};\n
code-source-info,0x107f8e4a0,65,4085,4215,,,
tick,0x19259ea3c,96125,0,0x0,0,0x7769ed84b13,0x7769ed85008,0x7769ed85368,0x7769ed85496,0x7769ed866d7,0x12ea986524f6,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,10,96167,0x107f8e600,144,URLContext node:internal/url:168:1,0x2ddc31ec7358,^
code-source-info,0x107f8e600,36,3546,3546,,,
code-creation,JS,10,96167,0x107f8e6c0,296,URL node:internal/url:784:11,0x2ddc31ecaaf0,^
code-source-info,0x107f8e6c0,36,22444,33908,,,
code-creation,JS,10,96208,0x107f8e820,1816,URL node:internal/url:802:14,0x2ddc31ec8ee8,^
code-source-info,0x107f8e820,36,23072,23966,,,
code-creation,JS,10,96208,0x107f8ef60,328,makeBitMapDescriptor node:internal/streams/readable:129:30,0x15988e460d00,^
code-source-info,0x107f8ef60,106,3800,3993,,,
code-creation,JS,10,96208,0x107f8f0e0,328,makeBitMapDescriptor node:internal/streams/writable:128:30,0x15988e46fd48,^
code-source-info,0x107f8f0e0,110,3881,4074,,,
code-creation,JS,10,96208,0x107f8f260,256,get node:diagnostics_channel:48:6,0x2ddc31efe520,^
code-source-info,0x107f8f260,65,1054,1099,,,
code-creation,JS,10,96250,0x107f8f380,184,WeakReference node:internal/util:835:21,0x22b216cd9ba8,^
code-source-info,0x107f8f380,13,23500,24086,,,
code-creation,JS,10,96250,0x107f8f460,376,SafeWeakRef node:internal/per_context/primordials:443:16,0x2aa13b33fca8,^
code-source-info,0x107f8f460,3,12628,12655,,,
code-creation,JS,10,96250,0x107f8f600,304,WeakReference node:internal/util:840:14,0x22b216cd9838,^
code-source-info,0x107f8f600,13,23628,23684,,,
code-creation,JS,10,96292,0x107f8f760,384,set node:diagnostics_channel:43:6,0x2ddc31efe460,^
code-source-info,0x107f8f760,65,933,1047,,,
new,MemoryChunk,0x285859880000,262144
code-creation,Eval,9,96958,0x12ea9865a640,5, node:internal/perf/observe:1:1,0x285859882fa8,~
script-source,116,node:internal/perf/observe,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  ObjectDefineProperties\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\n  }\x2C\n  installGarbageCollectionTracking\x2C\n  observerCounts\x2C\n  removeGarbageCollectionTracking\x2C\n  setupObservers\x2C\n} = internalBinding('performance');\n\nconst {\n  isPerformanceEntry\x2C\n  createPerformanceNodeEntry\x2C\n} = require('internal/perf/performance_entry');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n  validateInternalField\x2C\n} = require('internal/validators');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  deprecate\x2C\n  lazyDOMException\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  setImmediate\x2C\n} = require('timers');\n\nconst { inspect } = require('util');\n\nconst { now } = require('internal/perf/utils');\n\nconst kBuffer = Symbol('kBuffer');\nconst kDispatch = Symbol('kDispatch');\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\n\nconst kDeprecationMessage =\n  'Custom PerformanceEntry accessors are deprecated. ' +\n  'Please use the detail property.';\n\nconst kTypeSingle = 0;\nconst kTypeMultiple = 1;\n\nlet gcTrackingInstalled = false;\n\nconst kSupportedEntryTypes = ObjectFreeze([\n  'dns'\x2C\n  'function'\x2C\n  'gc'\x2C\n  'http'\x2C\n  'http2'\x2C\n  'mark'\x2C\n  'measure'\x2C\n  'net'\x2C\n  'resource'\x2C\n]);\n\n// Performance timeline entry Buffers\nlet markEntryBuffer = [];\nlet measureEntryBuffer = [];\nlet resourceTimingBuffer = [];\nlet resourceTimingSecondaryBuffer = [];\nconst kPerformanceEntryBufferWarnSize = 1e6;\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\n// Default buffer limit for resource timing entries.\nlet resourceTimingBufferSizeLimit = 250;\nlet dispatchBufferFull;\nlet resourceTimingBufferFullPending = false;\n\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\n  'mark': 'performance.clearMarks'\x2C\n  'measure': 'performance.clearMeasures'\x2C\n});\nconst kWarnedEntryTypes = new SafeMap();\n\nconst kObservers = new SafeSet();\nconst kPending = new SafeSet();\nlet isPending = false;\n\nfunction queuePending() {\n  if (isPending) return;\n  isPending = true;\n  setImmediate(() => {\n    isPending = false;\n    const pendings = ArrayFrom(kPending.values());\n    kPending.clear();\n    for (const pending of pendings)\n      pending[kDispatch]();\n  });\n}\n\nfunction getObserverType(type) {\n  switch (type) {\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\n  }\n}\n\nfunction maybeDecrementObserverCounts(entryTypes) {\n  for (const type of entryTypes) {\n    const observerType = getObserverType(type);\n\n    if (observerType !== undefined) {\n      observerCounts[observerType]--;\n\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\n          observerCounts[observerType] === 0) {\n        removeGarbageCollectionTracking();\n        gcTrackingInstalled = false;\n      }\n    }\n  }\n}\n\nfunction maybeIncrementObserverCount(type) {\n  const observerType = getObserverType(type);\n\n  if (observerType !== undefined) {\n    observerCounts[observerType]++;\n    if (!gcTrackingInstalled &&\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\n      installGarbageCollectionTracking();\n      gcTrackingInstalled = true;\n    }\n  }\n}\n\nconst kSkipThrow = Symbol('kSkipThrow');\nconst performanceObserverSorter = (first\x2C second) => {\n  return first.startTime - second.startTime;\n};\n\nclass PerformanceObserverEntryList {\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\n  }\n\n  getEntries() {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    return ArrayPrototypeSlice(this[kBuffer]);\n  }\n\n  getEntriesByType(type) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('type');\n    }\n    type = `${type}`;\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.entryType === type);\n  }\n\n  getEntriesByName(name\x2C type = undefined) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (type != null /** not nullish */) {\n      return ArrayPrototypeFilter(\n        this[kBuffer]\x2C\n        (entry) => entry.name === name && entry.entryType === type);\n    }\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.name === name);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\n  getEntries: kEnumerableProperty\x2C\n  getEntriesByType: kEnumerableProperty\x2C\n  getEntriesByName: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserverEntryList'\x2C\n  }\x2C\n});\n\nclass PerformanceObserver {\n  #buffer = [];\n  #entryTypes = new SafeSet();\n  #type;\n  #callback;\n\n  constructor(callback) {\n    validateFunction(callback\x2C 'callback');\n    this.#callback = callback;\n  }\n\n  observe(options = kEmptyObject) {\n    validateObject(options\x2C 'options');\n    const {\n      entryTypes\x2C\n      type\x2C\n      buffered\x2C\n    } = { ...options };\n    if (entryTypes === undefined && type === undefined)\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\n    if (entryTypes != null && type != null)\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\n                                      entryTypes\x2C\n                                      'options.entryTypes can not set with ' +\n                                      'options.type together');\n\n    switch (this.#type) {\n      case undefined:\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\n        if (type !== undefined) this.#type = kTypeSingle;\n        break;\n      case kTypeSingle:\n        if (entryTypes !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to multiple observations'\x2C\n            'InvalidModificationError');\n        break;\n      case kTypeMultiple:\n        if (type !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to single observation'\x2C\n            'InvalidModificationError');\n        break;\n    }\n\n    if (this.#type === kTypeMultiple) {\n      if (!ArrayIsArray(entryTypes)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.entryTypes'\x2C\n          'string[]'\x2C\n          entryTypes);\n      }\n      maybeDecrementObserverCounts(this.#entryTypes);\n      this.#entryTypes.clear();\n      for (let n = 0; n < entryTypes.length; n++) {\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\n          this.#entryTypes.add(entryTypes[n]);\n          maybeIncrementObserverCount(entryTypes[n]);\n        }\n      }\n    } else {\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\n        return;\n      this.#entryTypes.add(type);\n      maybeIncrementObserverCount(type);\n      if (buffered) {\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\n        kPending.add(this);\n        if (kPending.size)\n          queuePending();\n      }\n    }\n\n    if (this.#entryTypes.size)\n      kObservers.add(this);\n    else\n      this.disconnect();\n  }\n\n  disconnect() {\n    maybeDecrementObserverCounts(this.#entryTypes);\n    kObservers.delete(this);\n    kPending.delete(this);\n    this.#buffer = [];\n    this.#entryTypes.clear();\n    this.#type = undefined;\n  }\n\n  takeRecords() {\n    const list = this.#buffer;\n    this.#buffer = [];\n    return list;\n  }\n\n  static get supportedEntryTypes() {\n    return kSupportedEntryTypes;\n  }\n\n  [kMaybeBuffer](entry) {\n    if (!this.#entryTypes.has(entry.entryType))\n      return;\n    ArrayPrototypePush(this.#buffer\x2C entry);\n    kPending.add(this);\n    if (kPending.size)\n      queuePending();\n  }\n\n  [kDispatch]() {\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\n\n    this.#callback(entryList\x2C this);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserver ${inspect({\n      connected: kObservers.has(this)\x2C\n      pending: kPending.has(this)\x2C\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\n      buffer: this.#buffer\x2C\n    }\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\n  observe: kEnumerableProperty\x2C\n  disconnect: kEnumerableProperty\x2C\n  takeRecords: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserver'\x2C\n  }\x2C\n});\n\n/**\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\n *\n * Add the performance entry to the interested performance observer's queue.\n */\nfunction enqueue(entry) {\n  if (!isPerformanceEntry(entry))\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\n\n  for (const obs of kObservers) {\n    obs[kMaybeBuffer](entry);\n  }\n}\n\n/**\n * Add the user timing entry to the global buffer.\n */\nfunction bufferUserTiming(entry) {\n  const entryType = entry.entryType;\n  let buffer;\n  if (entryType === 'mark') {\n    buffer = markEntryBuffer;\n  } else if (entryType === 'measure') {\n    buffer = measureEntryBuffer;\n  } else {\n    return;\n  }\n\n  ArrayPrototypePush(buffer\x2C entry);\n  const count = buffer.length;\n\n  if (count > kPerformanceEntryBufferWarnSize &&\n    !kWarnedEntryTypes.has(entryType)) {\n    kWarnedEntryTypes.set(entryType\x2C true);\n    // No error code for this since it is a Warning\n    // eslint-disable-next-line no-restricted-syntax\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\n                        `${count} ${entryType} entries added to the global ` +\n                        'performance entry buffer. Use ' +\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\n                        'clear the buffer.');\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\n    w.entryType = entryType;\n    w.count = count;\n    process.emitWarning(w);\n  }\n}\n\n/**\n * Add the resource timing entry to the global buffer if the buffer size is not\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\n * performance object.\n *\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\n */\nfunction bufferResourceTiming(entry) {\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\n    return;\n  }\n\n  if (!resourceTimingBufferFullPending) {\n    resourceTimingBufferFullPending = true;\n    setImmediate(() => {\n      while (resourceTimingSecondaryBuffer.length > 0) {\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\n        dispatchBufferFull('resourcetimingbufferfull');\n\n        // Calculate the number of items to be pushed to the global buffer.\n        const numbersToPreserve = MathMax(\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\n          0\x2C\n        );\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\n        }\n\n        if (excessNumberBefore <= excessNumberAfter) {\n          resourceTimingSecondaryBuffer = [];\n        }\n      }\n      resourceTimingBufferFullPending = false;\n    });\n  }\n\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\n}\n\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\nfunction setResourceTimingBufferSize(maxSize) {\n  // If the maxSize parameter is less than resource timing buffer current\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\n  // performance entry buffer.\n  resourceTimingBufferSizeLimit = maxSize;\n}\n\nfunction setDispatchBufferFull(fn) {\n  dispatchBufferFull = fn;\n}\n\nfunction clearEntriesFromBuffer(type\x2C name) {\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\n    return;\n  }\n\n  if (type === 'mark') {\n    markEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\n  } else if (type === 'measure') {\n    measureEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\n  } else {\n    resourceTimingBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\n  }\n}\n\nfunction filterBufferMapByNameAndType(name\x2C type) {\n  let bufferList;\n  if (type === 'mark') {\n    bufferList = markEntryBuffer;\n  } else if (type === 'measure') {\n    bufferList = measureEntryBuffer;\n  } else if (type === 'resource') {\n    bufferList = resourceTimingBuffer;\n  } else if (type !== undefined) {\n    // Unrecognized type;\n    return [];\n  } else {\n    bufferList = [];\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\n  }\n  if (name !== undefined) {\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\n  } else if (type !== undefined) {\n    bufferList = ArrayPrototypeSlice(bufferList);\n  }\n\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\n}\n\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\n  const entry =\n    createPerformanceNodeEntry(\n      name\x2C\n      type\x2C\n      startTime\x2C\n      duration\x2C\n      details);\n\n  if (details !== undefined) {\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\n    // properties directly off the entry. Those have been\n    // moved into the details property. The existing accessors\n    // are still included but are deprecated.\n    entry[kDeprecatedFields] = new SafeMap();\n\n    const detailKeys = ObjectKeys(details);\n    const props = {};\n    for (let n = 0; n < detailKeys.length; n++) {\n      const key = detailKeys[n];\n      entry[kDeprecatedFields].set(key\x2C details[key]);\n      props[key] = {\n        configurable: true\x2C\n        enumerable: true\x2C\n        get: deprecate(() => {\n          return entry[kDeprecatedFields].get(key);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n        set: deprecate((value) => {\n          entry[kDeprecatedFields].set(key\x2C value);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n      };\n    }\n    ObjectDefineProperties(entry\x2C props);\n  }\n\n  enqueue(entry);\n}\n\nsetupObservers(observerCallback);\n\nfunction hasObserver(type) {\n  const observerType = getObserverType(type);\n  return observerCounts[observerType] > 0;\n}\n\n\nfunction startPerf(target\x2C key\x2C context = {}) {\n  target[key] = {\n    ...context\x2C\n    startTime: now()\x2C\n  };\n}\n\nfunction stopPerf(target\x2C key\x2C context = {}) {\n  const ctx = target[key];\n  if (!ctx) {\n    return;\n  }\n  const startTime = ctx.startTime;\n  const entry = createPerformanceNodeEntry(\n    ctx.name\x2C\n    ctx.type\x2C\n    startTime\x2C\n    now() - startTime\x2C\n    { ...ctx.detail\x2C ...context.detail }\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n  enqueue\x2C\n  hasObserver\x2C\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  startPerf\x2C\n  stopPerf\x2C\n\n  bufferUserTiming\x2C\n  bufferResourceTiming\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n};\n
code-source-info,0x12ea9865a640,116,0,16722,C0O0C4O16722,,
code-creation,JS,9,97583,0x12ea9865aaa8,1215, node:internal/perf/observe:1:1,0x285859883598,~
code-source-info,0x12ea9865aaa
code-creation,JS,9,97625,0x12ea9865b150,50,PerformanceObserver node:internal/perf/observe:243:27,0x285859884020,~
code-source-info,0x12ea9865b150,116,5962,9533,C3O5976C13O5996C20O5996C34O6013C43O6022C49O9533,,
tick,0x192400c08,97625,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98652505,0x107f89188,0x107f88e30,0x12ea98651202,0x107f89188,0x107f88e30,0x12ea98650c90,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,98000,0x12ea9865b208,5, node:internal/perf/performance_entry:1:1,0x2858598854c8,~
script-source,117,node:internal/perf/performance_entry,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { validateInternalField } = require('internal/validators');\n\nconst { inspect } = require('util');\n\nconst kName = Symbol('PerformanceEntry.Name');\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\nconst kDuration = Symbol('PerformanceEntry.Duration');\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nfunction isPerformanceEntry(obj) {\n  return obj?.[kName] !== undefined;\n}\n\nclass PerformanceEntry {\n  constructor(\n    skipThrowSymbol = undefined\x2C\n    name = undefined\x2C\n    type = undefined\x2C\n    start = undefined\x2C\n    duration = undefined\x2C\n  ) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kName] = name;\n    this[kEntryType] = type;\n    this[kStartTime] = start;\n    this[kDuration] = duration;\n  }\n\n  get name() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return this[kName];\n  }\n\n  get entryType() {\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\n    return this[kEntryType];\n  }\n\n  get startTime() {\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\n    return this[kStartTime];\n  }\n\n  get duration() {\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\n    return this[kDuration];\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n    };\n  }\n}\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  entryType: kEnumerableProperty\x2C\n  startTime: kEnumerableProperty\x2C\n  duration: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n}\n\n/**\n * Node.js specific extension to PerformanceEntry.\n */\nclass PerformanceNodeEntry extends PerformanceEntry {\n  get detail() {\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\n\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n\n  entry[kDetail] = detail;\n\n  return entry;\n}\n\nmodule.exports = {\n  createPerformanceEntry\x2C\n  PerformanceEntry\x2C\n  isPerformanceEntry\x2C\n  PerformanceNodeEntry\x2C\n  createPerformanceNodeEntry\x2C\n  kSkipThrow\x2C\n};\n
code-source-info,0x12ea9865b208,117,0,3272,C0O0C4O3272,,
code-creation,JS,9,98125,0x12ea9865b3f8,371, node:internal/perf/performance_entry:1:1,0x285859885640,~
code-source-info,0x12ea9865b3f8,117,0,3272,C0O0C53O25C58O51C63O134C66O134C71O94C76O100C82O231C85O231C90O194C95O206C100O291C103O291C108O265C114O344C117O344C122O332C128O376C131O376C135O376C137O428C140O428C144O428C146O485C149O485C153O485C155O541C158O541C162O541C164O594C167O594C171O594C173O652C176O652C180O652C211O1595C239O750C241O2067C244O2107C256O2128C262O2162C268O2196C274O2229C280O2260C284O2067C292O2518C320O2483C322O3114C329O3135C335O3161C341O3181C347O3203C353O3227C359O3257C365O3129C370O3271,,
code-creation,JS,9,98292,0x12ea9865b680,34,protoGetter node:net:878:21,0x15988e449710,~
code-source-info,0x12ea9865b680,96,23048,23210,C0O23069C8O23097C13O23108C20O23193C27O23069C33O23209,,
code-creation,JS,9,98417,0x12ea9865b810,424,Agent node:_http_agent:81:15,0x3564d12bc648,~
code-source-info,0x12ea9865b810,95,2737,5896,C0O2737C9O2751C16O2762C21O2785C28O2792C33O2811C34O2815C41O2828C49O2828C54O2843C59O2860C63O2868C68O2882C72O2896C86O2933C92O2909C96O2947C99O2956C104O2964C110O2991C113O2996C119O3012C123O3096C126O3101C132O3114C136O3124C143O3138C147O3163C154O3176C158O3201C165O3218C169O3243C172O3270C177O3278C187O3263C191O3304C194O3326C199O3334C206O3319C210O3356C213O3379C218O3387C229O3407C233O3372C237O3428C240O3455C245O3463C255O3448C259O3488C262O3511C267O3519C275O3504C279O3543C282O3571C287O3579C291O3564C295O3598C299O3620C303O3628C313O3647C326O3628C331O3695C334O3704C340O3741C350O3761C361O3741C368O3816C371O3839C374O3837C378O3856C381O3861C394O3861C400O5852C403O5857C416O5857C423O5895,,
tick,0x19259eaec,98500,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98650c9c,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,98833,0x12ea9865bad0,5, node:_http_client:1:1,0x285859892298,~
script-source,118,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  Error\x2C\n  NumberIsFinite\x2C\n  ObjectAssign\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  String\x2C\n  Symbol\x2C\n} = primordials;\n\nconst net = require('net');\nconst assert = require('internal/assert');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  freeParser\x2C\n  parsers\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst {\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  OutgoingMessage\x2C\n} = require('_http_outgoing');\nconst Agent = require('_http_agent');\nconst { Buffer } = require('buffer');\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\nconst { URL\x2C urlToHttpOptions\x2C isURL } = require('internal/url');\nconst {\n  kOutHeaders\x2C\n  kNeedDrain\x2C\n  isTraceHTTPEnabled\x2C\n  traceBegin\x2C\n  traceEnd\x2C\n  getNextTraceEventId\x2C\n} = require('internal/http');\nconst {\n  ConnResetException\x2C\n  codes: {\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_INVALID_PROTOCOL\x2C\n    ERR_UNESCAPED_CHARACTERS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateInteger\x2C\n  validateBoolean\x2C\n} = require('internal/validators');\nconst { getTimerDuration } = require('internal/timers');\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst kClientRequestStatistics = Symbol('ClientRequestStatistics');\n\nconst dc = require('diagnostics_channel');\nconst onClientRequestCreatedChannel = dc.channel('http.client.request.created');\nconst onClientRequestStartChannel = dc.channel('http.client.request.start');\nconst onClientRequestErrorChannel = dc.channel('http.client.request.error');\nconst onClientResponseFinishChannel = dc.channel('http.client.response.finish');\n\nfunction emitErrorEvent(request\x2C error) {\n  if (onClientRequestErrorChannel.hasSubscribers) {\n    onClientRequestErrorChannel.publish({\n      request\x2C\n      error\x2C\n    });\n  }\n  request.emit('error'\x2C error);\n}\n\nconst { addAbortSignal\x2C finished } = require('stream');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst kError = Symbol('kError');\n\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nconst HTTP_CLIENT_TRACE_EVENT_NAME = 'http.client.request';\n\nfunction validateHost(host\x2C name) {\n  if (host !== null && host !== undefined && typeof host !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\n                                   host);\n  }\n  return host;\n}\n\nclass HTTPClientAsyncResource {\n  constructor(type\x2C req) {\n    this.type = type;\n    this.req = req;\n  }\n}\n\nfunction ClientRequest(input\x2C options\x2C cb) {\n  OutgoingMessage.call(this);\n\n  if (typeof input === 'string') {\n    const urlStr = input;\n    input = urlToHttpOptions(new URL(urlStr));\n  } else if (isURL(input)) {\n    // url.URL instance\n    input = urlToHttpOptions(input);\n  } else {\n    cb = options;\n    options = input;\n    input = null;\n  }\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = input || kEmptyObject;\n  } else {\n    options = ObjectAssign(input || {}\x2C options);\n  }\n\n  let agent = options.agent;\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\n  if (agent === false) {\n    agent = new defaultAgent.constructor();\n  } else if (agent === null || agent === undefined) {\n    if (typeof options.createConnection !== 'function') {\n      agent = defaultAgent;\n    }\n    // Explicitly pass through this statement as agent will not be used\n    // when createConnection is provided.\n  } else if (typeof agent.addRequest !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\n                                   agent);\n  }\n  this.agent = agent;\n\n  const protocol = options.protocol || defaultAgent.protocol;\n  let expectedProtocol = defaultAgent.protocol;\n  if (this.agent?.protocol)\n    expectedProtocol = this.agent.protocol;\n\n  if (options.path) {\n    const path = String(options.path);\n    if (INVALID_PATH_REGEX.test(path)) {\n      debug('Path contains unescaped characters: "%s"'\x2C path);\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\n    }\n  }\n\n  if (protocol !== expectedProtocol) {\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\n  }\n\n  const defaultPort = options.defaultPort ||\n                    (this.agent?.defaultPort);\n\n  const optsWithoutSignal = { __proto__: null\x2C ...options };\n\n  const port = optsWithoutSignal.port = options.port || defaultPort || 80;\n  const host = optsWithoutSignal.host = validateHost(options.hostname\x2C 'hostname') ||\n                                        validateHost(options.host\x2C 'host') || 'localhost';\n\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\n\n  this.socketPath = options.socketPath;\n\n  if (options.timeout !== undefined)\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\n\n  const signal = options.signal;\n  if (signal) {\n    addAbortSignal(signal\x2C this);\n    delete optsWithoutSignal.signal;\n  }\n  let method = options.method;\n  const methodIsString = (typeof method === 'string');\n  if (method !== null && method !== undefined && !methodIsString) {\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\n  }\n\n  if (methodIsString && method) {\n    if (!checkIsHttpToken(method)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\n    }\n    method = this.method = method.toUpperCase();\n  } else {\n    method = this.method = 'GET';\n  }\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined) {\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\n  }\n\n  this.insecureHTTPParser = insecureHTTPParser;\n\n  if (options.joinDuplicateHeaders !== undefined) {\n    validateBoolean(options.joinDuplicateHeaders\x2C 'options.joinDuplicateHeaders');\n  }\n\n  this.joinDuplicateHeaders = options.joinDuplicateHeaders;\n\n  this.path = options.path || '/';\n  if (cb) {\n    this.once('response'\x2C cb);\n  }\n\n  if (method === 'GET' ||\n      method === 'HEAD' ||\n      method === 'DELETE' ||\n      method === 'OPTIONS' ||\n      method === 'TRACE' ||\n      method === 'CONNECT') {\n    this.useChunkedEncodingByDefault = false;\n  } else {\n    this.useChunkedEncodingByDefault = true;\n  }\n\n  this._ended = false;\n  this.res = null;\n  this.aborted = false;\n  this.timeoutCb = null;\n  this.upgradeOrConnect = false;\n  this.parser = null;\n  this.maxHeadersCount = null;\n  this.reusedSocket = false;\n  this.host = host;\n  this.protocol = protocol;\n\n  if (this.agent) {\n    // If there is an agent we should default to Connection:keep-alive\x2C\n    // but only if the Agent will actually reuse the connection!\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\n    // there's never a case where this socket will actually be reused\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\n      this._last = true;\n      this.shouldKeepAlive = false;\n    } else {\n      this._last = false;\n      this.shouldKeepAlive = true;\n    }\n  }\n\n  const headersArray = ArrayIsArray(options.headers);\n  if (!headersArray) {\n    if (options.headers) {\n      const keys = ObjectKeys(options.headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        this.setHeader(key\x2C options.headers[key]);\n      }\n    }\n\n    if (host && !this.getHeader('host') && setHost) {\n      let hostHeader = host;\n\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\n      // in square brackets\x2C as defined by URI formatting\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\n      const posColon = hostHeader.indexOf(':');\n      if (posColon !== -1 &&\n          hostHeader.includes(':'\x2C posColon + 1) &&\n          hostHeader.charCodeAt(0) !== 91/* '[' */) {\n        hostHeader = `[${hostHeader}]`;\n      }\n\n      if (port && +port !== defaultPort) {\n        hostHeader += ':' + port;\n      }\n      this.setHeader('Host'\x2C hostHeader);\n    }\n\n    if (options.auth && !this.getHeader('Authorization')) {\n      this.setHeader('Authorization'\x2C 'Basic ' +\n                     Buffer.from(options.auth).toString('base64'));\n    }\n\n    if (this.getHeader('expect')) {\n      if (this._header) {\n        throw new ERR_HTTP_HEADERS_SENT('render');\n      }\n\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                        this[kOutHeaders]);\n    }\n  } else {\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                      options.headers);\n  }\n\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\n\n  // initiate connection\n  if (this.agent) {\n    this.agent.addRequest(this\x2C optsWithoutSignal);\n  } else {\n    // No agent\x2C default to Connection:close.\n    this._last = true;\n    this.shouldKeepAlive = false;\n    let opts = optsWithoutSignal;\n    if (opts.path || opts.socketPath) {\n      opts = { ...optsWithoutSignal };\n      if (opts.socketPath) {\n        opts.path = opts.socketPath;\n      } else {\n        opts.path &&= undefined;\n      }\n    }\n    if (typeof opts.createConnection === 'function') {\n      const oncreate = once((err\x2C socket) => {\n        if (err) {\n          process.nextTick(() => emitErrorEvent(this\x2C err));\n        } else {\n          this.onSocket(socket);\n        }\n      });\n\n      try {\n        const newSocket = opts.createConnection(opts\x2C oncreate);\n        if (newSocket) {\n          oncreate(null\x2C newSocket);\n        }\n      } catch (err) {\n        oncreate(err);\n      }\n    } else {\n      debug('CLIENT use net.createConnection'\x2C opts);\n      this.onSocket(net.createConnection(opts));\n    }\n  }\n  if (onClientRequestCreatedChannel.hasSubscribers) {\n    onClientRequestCreatedChannel.publish({\n      request: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\n\nClientRequest.prototype._finish = function _finish() {\n  OutgoingMessage.prototype._finish.call(this);\n  if (hasObserver('http')) {\n    startPerf(this\x2C kClientRequestStatistics\x2C {\n      type: 'http'\x2C\n      name: 'HttpClient'\x2C\n      detail: {\n        req: {\n          method: this.method\x2C\n          url: `${this.protocol}//${this.host}${this.path}`\x2C\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  if (onClientRequestStartChannel.hasSubscribers) {\n    onClientRequestStartChannel.publish({\n      request: this\x2C\n    });\n  }\n  if (isTraceHTTPEnabled()) {\n    this._traceEventId = getNextTraceEventId();\n    traceBegin(HTTP_CLIENT_TRACE_EVENT_NAME\x2C this._traceEventId);\n  }\n};\n\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                    this[kOutHeaders]);\n};\n\nClientRequest.prototype.abort = function abort() {\n  if (this.aborted) {\n    return;\n  }\n  this.aborted = true;\n  process.nextTick(emitAbortNT\x2C this);\n  this.destroy();\n};\n\nClientRequest.prototype.destroy = function destroy(err) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  // If we're aborting\x2C we don't care about any more response data.\n  if (this.res) {\n    this.res._dump();\n  }\n\n  this[kError] = err;\n  this.socket?.destroy(err);\n\n  return this;\n};\n\nfunction emitAbortNT(req) {\n  req.emit('abort');\n}\n\nfunction ondrain() {\n  const msg = this._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketCloseListener() {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('HTTP socket close');\n\n  // NOTE: It's important to get parser here\x2C because it could be freed by\n  // the `socketOnData`.\n  const parser = socket.parser;\n  const res = req.res;\n\n  req.destroyed = true;\n  if (res) {\n    // Socket closed before we emitted 'end' below.\n    if (!res.complete) {\n      res.destroy(new ConnResetException('aborted'));\n    }\n    req._closed = true;\n    req.emit('close');\n    if (!res.aborted && res.readable) {\n      res.push(null);\n    }\n  } else {\n    if (!req.socket._hadError) {\n      // This socket error fired before we started to\n      // receive a response. The error needs to\n      // fire on the request.\n      req.socket._hadError = true;\n      emitErrorEvent(req\x2C new ConnResetException('socket hang up'));\n    }\n    req._closed = true;\n    req.emit('close');\n  }\n\n  // Too bad.  That output wasn't getting written.\n  // This is pretty terrible that it doesn't raise an error.\n  // Fixed better in v0.10\n  if (req.outputData)\n    req.outputData.length = 0;\n\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction socketErrorListener(err) {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\n\n  if (req) {\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req.socket._hadError = true;\n    emitErrorEvent(req\x2C err);\n  }\n\n  const parser = socket.parser;\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n\n  // Ensure that no further data will come out of the socket\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n  socket.destroy();\n}\n\nfunction socketOnEnd() {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  if (!req.res && !req.socket._hadError) {\n    // If we don't have a response then we know that the socket\n    // ended prematurely and we need to emit an error on the request.\n    req.socket._hadError = true;\n    emitErrorEvent(req\x2C new ConnResetException('socket hang up'));\n  }\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n  socket.destroy();\n}\n\nfunction socketOnData(d) {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  assert(parser && parser.socket === socket);\n\n  const ret = parser.execute(d);\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    freeParser(parser\x2C req\x2C socket);\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.destroy();\n    req.socket._hadError = true;\n    emitErrorEvent(req\x2C ret);\n  } else if (parser.incoming?.upgrade) {\n    // Upgrade (if status code 101) or CONNECT\n    const bytesParsed = ret;\n    const res = parser.incoming;\n    req.res = res;\n\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n\n    const bodyHead = d.slice(bytesParsed\x2C d.length);\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (req.listenerCount(eventName) > 0) {\n      req.upgradeOrConnect = true;\n\n      // detach the socket\n      socket.emit('agentRemove');\n      socket.removeListener('close'\x2C socketCloseListener);\n      socket.removeListener('error'\x2C socketErrorListener);\n\n      socket._httpMessage = null;\n      socket.readableFlowing = null;\n\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\n      req.destroyed = true;\n      req._closed = true;\n      req.emit('close');\n    } else {\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming?.complete &&\n             // When the status code is informational (100\x2C 102-199)\x2C\n             // the server will send a final response after this client\n             // sends a request body\x2C so we must not free the parser.\n             // 101 (Switching Protocols) and all other status codes\n             // should be processed normally.\n             !statusIsInformational(parser.incoming.statusCode)) {\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction statusIsInformational(status) {\n  // 100 (Continue)    RFC7231 Section 6.2.1\n  // 102 (Processing)  RFC2518\n  // 103 (Early Hints) RFC8297\n  // 104-199 (Unassigned)\n  return (status < 200 && status >= 100 && status !== 101);\n}\n\n// client\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\n  const socket = this.socket;\n  const req = socket._httpMessage;\n\n  debug('AGENT incoming response!');\n\n  if (req.res) {\n    // We already have a response object\x2C this means the server\n    // sent a double response.\n    socket.destroy();\n    return 0;  // No special treatment.\n  }\n  req.res = res;\n\n  // Skip body and treat as Upgrade.\n  if (res.upgrade)\n    return 2;\n\n  // Responses to CONNECT request is handled as Upgrade.\n  const method = req.method;\n  if (method === 'CONNECT') {\n    res.upgrade = true;\n    return 2;  // Skip body and treat as Upgrade.\n  }\n\n  if (statusIsInformational(res.statusCode)) {\n    // Restart the parser\x2C as this is a 1xx informational message.\n    req.res = null; // Clear res so that we don't hit double-responses.\n    // Maintain compatibility by sending 100-specific events\n    if (res.statusCode === 100) {\n      req.emit('continue');\n    }\n    // Send information events to all 1xx responses except 101 Upgrade.\n    req.emit('information'\x2C {\n      statusCode: res.statusCode\x2C\n      statusMessage: res.statusMessage\x2C\n      httpVersion: res.httpVersion\x2C\n      httpVersionMajor: res.httpVersionMajor\x2C\n      httpVersionMinor: res.httpVersionMinor\x2C\n      headers: res.headers\x2C\n      rawHeaders: res.rawHeaders\x2C\n    });\n\n    return 1;  // Skip body but don't treat as Upgrade.\n  }\n\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\n    // Server MUST respond with Connection:keep-alive for us to enable it.\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\n    // keep the connection open.\n    req.shouldKeepAlive = false;\n  }\n\n  if (req[kClientRequestStatistics] && hasObserver('http')) {\n    stopPerf(req\x2C kClientRequestStatistics\x2C {\n      detail: {\n        res: {\n          statusCode: res.statusCode\x2C\n          statusMessage: res.statusMessage\x2C\n          headers: res.headers\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  if (onClientResponseFinishChannel.hasSubscribers) {\n    onClientResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n    });\n  }\n  if (isTraceHTTPEnabled() && typeof req._traceEventId === 'number') {\n    traceEnd(HTTP_CLIENT_TRACE_EVENT_NAME\x2C req._traceEventId\x2C {\n      path: req.path\x2C\n      statusCode: res.statusCode\x2C\n    });\n  }\n  req.res = res;\n  res.req = req;\n\n  // Add our listener first\x2C so that we guarantee socket cleanup\n  res.on('end'\x2C responseOnEnd);\n  req.on('finish'\x2C requestOnFinish);\n  socket.on('timeout'\x2C responseOnTimeout);\n\n  // If the user did not listen for the 'response' event\x2C then they\n  // can't possibly read the data\x2C so we ._dump() it into the void\n  // so that the socket doesn't hang there in a paused state.\n  if (req.aborted || !req.emit('response'\x2C res))\n    res._dump();\n\n  if (method === 'HEAD')\n    return 1;  // Skip body but don't treat as Upgrade.\n\n  if (res.statusCode === 304) {\n    res.complete = true;\n    return 1; // Skip body as there won't be any\n  }\n\n  return 0;  // No special treatment.\n}\n\n// client\nfunction responseKeepAlive(req) {\n  const socket = req.socket;\n\n  debug('AGENT socket keep-alive');\n  if (req.timeoutCb) {\n    socket.setTimeout(0\x2C req.timeoutCb);\n    req.timeoutCb = null;\n  }\n  socket.removeListener('close'\x2C socketCloseListener);\n  socket.removeListener('error'\x2C socketErrorListener);\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n\n  // TODO(ronag): Between here and emitFreeNT the socket\n  // has no 'error' handler.\n\n  // There are cases where _handle === null. Avoid those. Passing undefined to\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\n  // Mark this socket as available\x2C AFTER user-added end\n  // handlers have a chance to run.\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\n\n  req.destroyed = true;\n  if (req.res) {\n    // Detach socket from IncomingMessage to avoid destroying the freed\n    // socket in IncomingMessage.destroy().\n    req.res.socket = null;\n  }\n}\n\nfunction responseOnEnd() {\n  const req = this.req;\n  const socket = req.socket;\n\n  if (socket) {\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n  }\n\n  req._ended = true;\n\n  if (!req.shouldKeepAlive) {\n    if (socket.writable) {\n      debug('AGENT socket.destroySoon()');\n      if (typeof socket.destroySoon === 'function')\n        socket.destroySoon();\n      else\n        socket.end();\n    }\n    assert(!socket.writable);\n  } else if (req.writableFinished && !this.aborted) {\n    assert(req.finished);\n    // We can assume `req.finished` means all data has been written since:\n    // - `'responseOnEnd'` means we have been assigned a socket.\n    // - when we have a socket we write directly to it without buffering.\n    // - `req.finished` means `end()` has been called and no further data.\n    //   can be written\n    // In addition\x2C `req.writableFinished` means all data written has been\n    // accepted by the kernel. (i.e. the `req.socket` is drained).Without\n    // this constraint\x2C we may assign a non drained socket to a request.\n    responseKeepAlive(req);\n  }\n}\n\nfunction responseOnTimeout() {\n  const req = this._httpMessage;\n  if (!req) return;\n  const res = req.res;\n  if (!res) return;\n  res.emit('timeout');\n}\n\n// This function is necessary in the case where we receive the entire response\n// from the server before we finish sending out the request.\nfunction requestOnFinish() {\n  const req = this;\n\n  if (req.shouldKeepAlive && req._ended)\n    responseKeepAlive(req);\n}\n\nfunction emitFreeNT(req) {\n  req._closed = true;\n  req.emit('close');\n  if (req.socket) {\n    req.socket.emit('free');\n  }\n}\n\nfunction tickOnSocket(req\x2C socket) {\n  const parser = parsers.alloc();\n  req.socket = socket;\n  const lenient = req.insecureHTTPParser === undefined ?\n    isLenient() : req.insecureHTTPParser;\n  parser.initialize(HTTPParser.RESPONSE\x2C\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\n                    req.maxHeaderSize || 0\x2C\n                    lenient ? kLenientAll : kLenientNone);\n  parser.socket = socket;\n  parser.outgoing = req;\n  req.parser = parser;\n\n  socket.parser = parser;\n  socket._httpMessage = req;\n\n  // Propagate headers limit from request object to parser\n  if (typeof req.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\n  }\n\n  parser.joinDuplicateHeaders = req.joinDuplicateHeaders;\n\n  parser.onIncoming = parserOnIncomingClient;\n  socket.on('error'\x2C socketErrorListener);\n  socket.on('data'\x2C socketOnData);\n  socket.on('end'\x2C socketOnEnd);\n  socket.on('close'\x2C socketCloseListener);\n  socket.on('drain'\x2C ondrain);\n\n  if (\n    req.timeout !== undefined ||\n    (req.agent?.options?.timeout)\n  ) {\n    listenSocketTimeout(req);\n  }\n  req.emit('socket'\x2C socket);\n}\n\nfunction emitRequestTimeout() {\n  const req = this._httpMessage;\n  if (req) {\n    req.emit('timeout');\n  }\n}\n\nfunction listenSocketTimeout(req) {\n  if (req.timeoutCb) {\n    return;\n  }\n  // Set timeoutCb so it will get cleaned up on request end.\n  req.timeoutCb = emitRequestTimeout;\n  // Delegate socket timeout event.\n  if (req.socket) {\n    req.socket.once('timeout'\x2C emitRequestTimeout);\n  } else {\n    req.on('socket'\x2C (socket) => {\n      socket.once('timeout'\x2C emitRequestTimeout);\n    });\n  }\n}\n\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\n  // TODO(ronag): Between here and onSocketNT the socket\n  // has no 'error' handler.\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\n};\n\nfunction onSocketNT(req\x2C socket\x2C err) {\n  if (req.destroyed || err) {\n    req.destroyed = true;\n\n    function _destroy(req\x2C err) {\n      if (!req.aborted && !err) {\n        err = new ConnResetException('socket hang up');\n      }\n      if (err) {\n        emitErrorEvent(req\x2C err);\n      }\n      req._closed = true;\n      req.emit('close');\n    }\n\n    if (socket) {\n      if (!err && req.agent && !socket.destroyed) {\n        socket.emit('free');\n      } else {\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\n          if (er?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\n            er = null;\n          }\n          _destroy(req\x2C er || err);\n        });\n        return;\n      }\n    }\n\n    _destroy(req\x2C err || req[kError]);\n  } else {\n    tickOnSocket(req\x2C socket);\n    req._flush();\n  }\n}\n\nClientRequest.prototype._deferToConnect = _deferToConnect;\nfunction _deferToConnect(method\x2C arguments_) {\n  // This function is for calls that need to happen once the socket is\n  // assigned to this request and writable. It's an important promisy\n  // thing for all the socket calls that happen either now\n  // (when a socket is assigned) or in the future (when a socket gets\n  // assigned out of the pool and is eventually writable).\n\n  const callSocketMethod = () => {\n    if (method)\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\n  };\n\n  const onSocket = () => {\n    if (this.socket.writable) {\n      callSocketMethod();\n    } else {\n      this.socket.once('connect'\x2C callSocketMethod);\n    }\n  };\n\n  if (!this.socket) {\n    this.once('socket'\x2C onSocket);\n  } else {\n    onSocket();\n  }\n}\n\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (this._ended) {\n    return this;\n  }\n\n  listenSocketTimeout(this);\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n  if (callback) this.once('timeout'\x2C callback);\n\n  if (this.socket) {\n    setSocketTimeout(this.socket\x2C msecs);\n  } else {\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\n  }\n\n  return this;\n};\n\nfunction setSocketTimeout(sock\x2C msecs) {\n  if (sock.connecting) {\n    sock.once('connect'\x2C function() {\n      sock.setTimeout(msecs);\n    });\n  } else {\n    sock.setTimeout(msecs);\n  }\n}\n\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\n};\n\nClientRequest.prototype.setSocketKeepAlive =\n    function setSocketKeepAlive(enable\x2C initialDelay) {\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\n    };\n\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\n  this.setTimeout(0\x2C cb);\n};\n\nmodule.exports = {\n  ClientRequest\x2C\n};\n
code-source-info,0x12ea9865bad0,118,0,28461,C0O0C4O28461,,
code-creation,JS,9,99833,0x12ea9865bf30,1063, node:_http_client:1:1,0x285859892e10,~
code-source-info,0x12ea9865bf
tick,0x192562fd0,99875,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98650c9c,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,100208,0x12ea9865c520,5, node:_http_common:1:1,0x285859894e50,~
script-source,119,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathMin\x2C\n  Symbol\x2C\n} = primordials;\nconst { setImmediate } = require('timers');\n\nconst { methods\x2C allMethods\x2C HTTPParser } = internalBinding('http_parser');\nconst { getOptionValue } = require('internal/options');\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\n\nconst FreeList = require('internal/freelist');\nconst incoming = require('_http_incoming');\nconst {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\x2C\n} = incoming;\n\nconst kIncomingMessage = Symbol('IncomingMessage');\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\nconst kOnBody = HTTPParser.kOnBody | 0;\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\n\nconst MAX_HEADER_PAIRS = 2000;\n\n// Only called in the slow case where slow means\n// that the request headers were either fragmented\n// across multiple TCP packets or too large to be\n// processed in a single run. This method is also\n// called to process trailing HTTP headers.\nfunction parserOnHeaders(headers\x2C url) {\n  // Once we exceeded headers limit - stop collecting them\n  if (this.maxHeaderPairs <= 0 ||\n      this._headers.length < this.maxHeaderPairs) {\n    this._headers.push(...headers);\n  }\n  this._url += url;\n}\n\n// `headers` and `url` are set only if .onHeaders() has not been called for\n// this request.\n// `url` is not set for response parsers but that's not applicable here since\n// all our parsers are request parsers.\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\n                                 shouldKeepAlive) {\n  const parser = this;\n  const { socket } = parser;\n\n  if (headers === undefined) {\n    headers = parser._headers;\n    parser._headers = [];\n  }\n\n  if (url === undefined) {\n    url = parser._url;\n    parser._url = '';\n  }\n\n  // Parser is also used by http client\n  const ParserIncomingMessage = (socket?.server?.[kIncomingMessage]) ||\n                                 IncomingMessage;\n\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\n  incoming.httpVersionMajor = versionMajor;\n  incoming.httpVersionMinor = versionMinor;\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\n  incoming.joinDuplicateHeaders = socket?.server?.joinDuplicateHeaders ||\n                                  parser.joinDuplicateHeaders;\n  incoming.url = url;\n  incoming.upgrade = upgrade;\n\n  let n = headers.length;\n\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\n  if (parser.maxHeaderPairs > 0)\n    n = MathMin(n\x2C parser.maxHeaderPairs);\n\n  incoming._addHeaderLines(headers\x2C n);\n\n  if (typeof method === 'number') {\n    // server only\n    incoming.method = allMethods[method];\n  } else {\n    // client only\n    incoming.statusCode = statusCode;\n    incoming.statusMessage = statusMessage;\n  }\n\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\n}\n\nfunction parserOnBody(b) {\n  const stream = this.incoming;\n\n  // If the stream has already been removed\x2C then drop it.\n  if (stream === null)\n    return;\n\n  // Pretend this was the result of a stream._read call.\n  if (!stream._dumped) {\n    const ret = stream.push(b);\n    if (!ret)\n      readStop(this.socket);\n  }\n}\n\nfunction parserOnMessageComplete() {\n  const parser = this;\n  const stream = parser.incoming;\n\n  if (stream !== null) {\n    stream.complete = true;\n    // Emit any trailing headers.\n    const headers = parser._headers;\n    if (headers.length) {\n      stream._addHeaderLines(headers\x2C headers.length);\n      parser._headers = [];\n      parser._url = '';\n    }\n\n    // For emit end event\n    stream.push(null);\n  }\n\n  // Force to read the next incoming message\n  readStart(parser.socket);\n}\n\n\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\n  const parser = new HTTPParser();\n\n  cleanParser(parser);\n\n  parser[kOnHeaders] = parserOnHeaders;\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\n  parser[kOnBody] = parserOnBody;\n  parser[kOnMessageComplete] = parserOnMessageComplete;\n\n  return parser;\n});\n\nfunction closeParserInstance(parser) { parser.close(); }\n\n// Free the parser and also break any links that it\n// might have to any other things.\n// TODO: All parser data should be attached to a\n// single object\x2C so that it can be easily cleaned\n// up by doing `parser.data = {}`\x2C which should\n// be done in FreeList.free.  `parsers.free(parser)`\n// should be all that is needed.\nfunction freeParser(parser\x2C req\x2C socket) {\n  if (parser) {\n    if (parser._consumed)\n      parser.unconsume();\n    cleanParser(parser);\n    parser.remove();\n    if (parsers.free(parser) === false) {\n      // Make sure the parser's stack has unwound before deleting the\n      // corresponding C++ object through .close().\n      setImmediate(closeParserInstance\x2C parser);\n    } else {\n      // Since the Parser destructor isn't going to run the destroy() callbacks\n      // it needs to be triggered manually.\n      parser.free();\n    }\n  }\n  if (req) {\n    req.parser = null;\n  }\n  if (socket) {\n    socket.parser = null;\n  }\n}\n\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nfunction checkIsHttpToken(val) {\n  return tokenRegExp.test(val);\n}\n\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n/**\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nfunction checkInvalidHeaderChar(val) {\n  return headerCharRegex.test(val);\n}\n\nfunction cleanParser(parser) {\n  parser._headers = [];\n  parser._url = '';\n  parser.socket = null;\n  parser.incoming = null;\n  parser.outgoing = null;\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\n  parser[kOnMessageBegin] = null;\n  parser[kOnExecute] = null;\n  parser[kOnTimeout] = null;\n  parser._consumed = false;\n  parser.onIncoming = null;\n  parser.joinDuplicateHeaders = null;\n}\n\nfunction prepareError(err\x2C parser\x2C rawPacket) {\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\n  if (typeof err.reason === 'string')\n    err.message = `Parse Error: ${err.reason}`;\n}\n\nlet warnedLenient = false;\n\nfunction isLenient() {\n  if (insecureHTTPParser && !warnedLenient) {\n    warnedLenient = true;\n    process.emitWarning('Using insecure HTTP parsing');\n  }\n  return insecureHTTPParser;\n}\n\nmodule.exports = {\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\n  CRLF: '\\r\\n'\x2C // TODO: Deprecate this.\n  freeParser\x2C\n  methods\x2C\n  parsers\x2C\n  kIncomingMessage\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n};\n
code-source-info,0x12ea9865c520,119,0,8146,C0O0C4O8146,,
code-creation,JS,9,100500,0x12ea9865c728,462, node:_http_common:1:1,0x2858598950d8,~
code-source-info,0x12ea9865c
code-creation,Eval,9,100875,0x12ea9865ca28,5, node:internal/freelist:1:1,0x285859896c90,~
script-source,120,node:internal/freelist,'use strict';\n\nconst {\n  ReflectApply\x2C\n} = primordials;\n\nclass FreeList {\n  constructor(name\x2C max\x2C ctor) {\n    this.name = name;\n    this.ctor = ctor;\n    this.max = max;\n    this.list = [];\n  }\n\n  alloc() {\n    return this.list.length > 0 ?\n      this.list.pop() :\n      ReflectApply(this.ctor\x2C this\x2C arguments);\n  }\n\n  free(obj) {\n    if (this.list.length < this.max) {\n      this.list.push(obj);\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = FreeList;\n
code-source-info,0x12ea9865ca28,120,0,476,C0O0C4O476,,
code-creation,JS,9,100875,0x12ea9865cad0,53, node:internal/freelist:1:1,0x285859896d68,~
code-source-info,0x12ea9865cad0,120,0,476,C0O0C8O25C45O449C47O464C52O475,,
tick,0x1011e7358,101083,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea9865c800,0x107f89188,0x107f88e30,0x12ea9865c0cf,0x107f89188,0x107f88e30,0x12ea98650c9c,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,101083,0x12ea9865cb80,5, node:_http_incoming:1:1,0x285859898398,~
script-source,121,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Readable\x2C finished } = require('stream');\n\nconst kHeaders = Symbol('kHeaders');\nconst kHeadersDistinct = Symbol('kHeadersDistinct');\nconst kHeadersCount = Symbol('kHeadersCount');\nconst kTrailers = Symbol('kTrailers');\nconst kTrailersDistinct = Symbol('kTrailersDistinct');\nconst kTrailersCount = Symbol('kTrailersCount');\n\nfunction readStart(socket) {\n  if (socket && !socket._paused && socket.readable)\n    socket.resume();\n}\n\nfunction readStop(socket) {\n  if (socket)\n    socket.pause();\n}\n\n/* Abstract base class for ServerRequest and ClientResponse. */\nfunction IncomingMessage(socket) {\n  let streamOptions;\n\n  if (socket) {\n    streamOptions = {\n      highWaterMark: socket.readableHighWaterMark\x2C\n    };\n  }\n\n  Readable.call(this\x2C streamOptions);\n\n  this._readableState.readingMore = true;\n\n  this.socket = socket;\n\n  this.httpVersionMajor = null;\n  this.httpVersionMinor = null;\n  this.httpVersion = null;\n  this.complete = false;\n  this[kHeaders] = null;\n  this[kHeadersCount] = 0;\n  this.rawHeaders = [];\n  this[kTrailers] = null;\n  this[kTrailersCount] = 0;\n  this.rawTrailers = [];\n  this.joinDuplicateHeaders = false;\n  this.aborted = false;\n\n  this.upgrade = null;\n\n  // request (server) only\n  this.url = '';\n  this.method = null;\n\n  // response (client) only\n  this.statusCode = null;\n  this.statusMessage = null;\n  this.client = socket;\n\n  this._consuming = false;\n  // Flag for when we decide that this message cannot possibly be\n  // read by the user\x2C so there's no point continuing to handle it.\n  this._dumped = false;\n}\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\x2C\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kHeaders]) {\n      this[kHeaders] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeaders];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeaders];\n  }\x2C\n  set: function(val) {\n    this[kHeaders] = val;\n  }\x2C\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headersDistinct'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kHeadersDistinct]) {\n      this[kHeadersDistinct] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeadersDistinct];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeadersDistinct];\n  }\x2C\n  set: function(val) {\n    this[kHeadersDistinct] = val;\n  }\x2C\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kTrailers]) {\n      this[kTrailers] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailers];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailers];\n  }\x2C\n  set: function(val) {\n    this[kTrailers] = val;\n  }\x2C\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailersDistinct'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (!this[kTrailersDistinct]) {\n      this[kTrailersDistinct] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailersDistinct];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailersDistinct];\n  }\x2C\n  set: function(val) {\n    this[kTrailersDistinct] = val;\n  }\x2C\n});\n\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (callback)\n    this.on('timeout'\x2C callback);\n  this.socket.setTimeout(msecs);\n  return this;\n};\n\n// Argument n cannot be factored out due to the overhead of\n// argument adaptor frame creation inside V8 in case that number of actual\n// arguments is different from expected arguments.\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\n// Refactoring `n` out might be possible when V8 is upgraded to that\n// version.\n// Ref: https://v8.dev/blog/v8-release-89\nIncomingMessage.prototype._read = function _read(n) {\n  if (!this._consuming) {\n    this._readableState.readingMore = false;\n    this._consuming = true;\n  }\n\n  // We actually do almost nothing here\x2C because the parserOnBody\n  // function fills up our internal buffer directly.  However\x2C we\n  // do need to unpause the underlying socket so that it flows.\n  if (this.socket.readable)\n    readStart(this.socket);\n};\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\n  if (!this.readableEnded || !this.complete) {\n    this.aborted = true;\n    this.emit('aborted');\n  }\n\n  // If aborted and the underlying socket is not already destroyed\x2C\n  // destroy it.\n  // We have to check if the socket is already destroyed because finished\n  // does not call the callback when this method is invoked from `_http_client`\n  // in `test/parallel/test-http-client-spurious-aborted.js`\n  if (this.socket && !this.socket.destroyed && this.aborted) {\n    this.socket.destroy(err);\n    const cleanup = finished(this.socket\x2C (e) => {\n      if (e?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\n        e = null;\n      }\n      cleanup();\n      process.nextTick(onError\x2C this\x2C e || err\x2C cb);\n    });\n  } else {\n    process.nextTick(onError\x2C this\x2C err\x2C cb);\n  }\n};\n\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\nfunction _addHeaderLines(headers\x2C n) {\n  if (headers?.length) {\n    let dest;\n    if (this.complete) {\n      this.rawTrailers = headers;\n      this[kTrailersCount] = n;\n      dest = this[kTrailers];\n    } else {\n      this.rawHeaders = headers;\n      this[kHeadersCount] = n;\n      dest = this[kHeaders];\n    }\n\n    if (dest) {\n      for (let i = 0; i < n; i += 2) {\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\n      }\n    }\n  }\n}\n\n\n// This function is used to help avoid the lowercasing of a field name if it\n// matches a 'traditional cased' version of a field name. It then returns the\n// lowercased name to both avoid calling toLowerCase() a second time and to\n// indicate whether the field was a 'no duplicates' field. If a field is not a\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\n// of known header names to avoid us having to call toLowerCase() for those\n// headers.\nfunction matchKnownFields(field\x2C lowercased) {\n  switch (field.length) {\n    case 3:\n      if (field === 'Age' || field === 'age') return 'age';\n      break;\n    case 4:\n      if (field === 'Host' || field === 'host') return 'host';\n      if (field === 'From' || field === 'from') return 'from';\n      if (field === 'ETag' || field === 'etag') return 'etag';\n      if (field === 'Date' || field === 'date') return '\\u0000date';\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\n      break;\n    case 6:\n      if (field === 'Server' || field === 'server') return 'server';\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\n      break;\n    case 7:\n      if (field === 'Referer' || field === 'referer') return 'referer';\n      if (field === 'Expires' || field === 'expires') return 'expires';\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\n      break;\n    case 8:\n      if (field === 'Location' || field === 'location')\n        return 'location';\n      if (field === 'If-Match' || field === 'if-match')\n        return '\\u0000if-match';\n      break;\n    case 10:\n      if (field === 'User-Agent' || field === 'user-agent')\n        return 'user-agent';\n      if (field === 'Set-Cookie' || field === 'set-cookie')\n        return '\\u0001';\n      if (field === 'Connection' || field === 'connection')\n        return '\\u0000connection';\n      break;\n    case 11:\n      if (field === 'Retry-After' || field === 'retry-after')\n        return 'retry-after';\n      break;\n    case 12:\n      if (field === 'Content-Type' || field === 'content-type')\n        return 'content-type';\n      if (field === 'Max-Forwards' || field === 'max-forwards')\n        return 'max-forwards';\n      break;\n    case 13:\n      if (field === 'Authorization' || field === 'authorization')\n        return 'authorization';\n      if (field === 'Last-Modified' || field === 'last-modified')\n        return 'last-modified';\n      if (field === 'Cache-Control' || field === 'cache-control')\n        return '\\u0000cache-control';\n      if (field === 'If-None-Match' || field === 'if-none-match')\n        return '\\u0000if-none-match';\n      break;\n    case 14:\n      if (field === 'Content-Length' || field === 'content-length')\n        return 'content-length';\n      break;\n    case 15:\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\n        return '\\u0000accept-encoding';\n      if (field === 'Accept-Language' || field === 'accept-language')\n        return '\\u0000accept-language';\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\n        return '\\u0000x-forwarded-for';\n      break;\n    case 16:\n      if (field === 'Content-Encoding' || field === 'content-encoding')\n        return '\\u0000content-encoding';\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\n        return '\\u0000x-forwarded-host';\n      break;\n    case 17:\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\n        return 'if-modified-since';\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\n        return '\\u0000transfer-encoding';\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\n        return '\\u0000x-forwarded-proto';\n      break;\n    case 19:\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\n        return 'proxy-authorization';\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\n        return 'if-unmodified-since';\n      break;\n  }\n  if (lowercased) {\n    return '\\u0000' + field;\n  }\n  return matchKnownFields(field.toLowerCase()\x2C true);\n}\n// Add the given (field\x2C value) pair to the message\n//\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\n// same header with a '\x2C ' if the header in question supports specification of\n// multiple values this way. The one exception to this is the Cookie header\x2C\n// which has multiple values joined with a '; ' instead. If a header's values\n// cannot be joined in either of these ways\x2C we declare the first instance the\n// winner and drop the second. Extended header fields (those beginning with\n// 'x-') are always joined.\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\nfunction _addHeaderLine(field\x2C value\x2C dest) {\n  field = matchKnownFields(field);\n  const flag = field.charCodeAt(0);\n  if (flag === 0 || flag === 2) {\n    field = field.slice(1);\n    // Make a delimited list\n    if (typeof dest[field] === 'string') {\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\n    } else {\n      dest[field] = value;\n    }\n  } else if (flag === 1) {\n    // Array header -- only Set-Cookie at the moment\n    if (dest['set-cookie'] !== undefined) {\n      dest['set-cookie'].push(value);\n    } else {\n      dest['set-cookie'] = [value];\n    }\n  } else if (this.joinDuplicateHeaders) {\n    // RFC 9110 https://www.rfc-editor.org/rfc/rfc9110#section-5.2\n    // https://github.com/nodejs/node/issues/45699\n    // allow authorization multiple fields\n    // Make a delimited list\n    if (dest[field] === undefined) {\n      dest[field] = value;\n    } else {\n      dest[field] += '\x2C ' + value;\n    }\n  } else if (dest[field] === undefined) {\n    // Drop duplicates\n    dest[field] = value;\n  }\n}\n\nIncomingMessage.prototype._addHeaderLineDistinct = _addHeaderLineDistinct;\nfunction _addHeaderLineDistinct(field\x2C value\x2C dest) {\n  field = field.toLowerCase();\n  if (!dest[field]) {\n    dest[field] = [value];\n  } else {\n    dest[field].push(value);\n  }\n}\n\n\n// Call this instead of resume() if we want to just\n// dump all the data to /dev/null\nIncomingMessage.prototype._dump = function _dump() {\n  if (!this._dumped) {\n    this._dumped = true;\n    // If there is buffered data\x2C it may trigger 'data' events.\n    // Remove 'data' event listeners explicitly.\n    this.removeAllListeners('data');\n    this.resume();\n  }\n};\n\nfunction onError(self\x2C error\x2C cb) {\n  // This is to keep backward compatible behavior.\n  // An error is emitted only if there are listeners attached to the event.\n  if (self.listenerCount('error') === 0) {\n    cb();\n  } else {\n    cb(error);\n  }\n}\n\nmodule.exports = {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\x2C\n};\n
code-source-info,0x12ea9865cb80,121,0,14750,C0O0C4O14750,,
code-creation,JS,9,101583,0x12ea9865cdd0,477, node:_http_incoming:1:1,0x285859898520,~
code-source-info,0x12ea9865cdd
code-creation,JS,9,101750,0x12ea9865d0f0,26,FreeList node:internal/freelist:8:14,0x285859896dd0,~
code-source-info,0x12ea9865d0f0,120,87,194,C0O111C2O121C6O133C8O143C12O155C14O164C18O175C20O185C25O193,,
code-creation,Eval,9,102250,0x12ea9865d190,5, node:_http_outgoing:1:1,0x28585989d068,~
script-source,122,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  MathFloor\x2C\n  ObjectDefineProperty\x2C\n  ObjectHasOwn\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  SafeSet\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\nconst assert = require('internal/assert');\nconst EE = require('events');\nconst Stream = require('stream');\nconst internalUtil = require('internal/util');\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\nconst { Buffer } = require('buffer');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  chunkExpression: RE_TE_CHUNKED\x2C\n} = require('_http_common');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol }\x2C\n} = require('internal/async_hooks');\nconst {\n  codes: {\n    ERR_HTTP_BODY_NOT_ALLOWED\x2C\n    ERR_HTTP_CONTENT_LENGTH_MISMATCH\x2C\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\n    ERR_HTTP_TRAILER_INVALID\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst { isUint8Array } = require('internal/util/types');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst kCorked = Symbol('corked');\nconst kSocket = Symbol('kSocket');\nconst kChunkedBuffer = Symbol('kChunkedBuffer');\nconst kChunkedLength = Symbol('kChunkedLength');\nconst kUniqueHeaders = Symbol('kUniqueHeaders');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kErrored = Symbol('errored');\nconst kHighWaterMark = Symbol('kHighWaterMark');\nconst kRejectNonStandardBodyWrites = Symbol('kRejectNonStandardBodyWrites');\n\nconst nop = () => {};\n\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\n\n// isCookieField performs a case-insensitive comparison of a provided string\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\n// using a case-insensitive RegExp.\nfunction isCookieField(s) {\n  return s.length === 6 && s.toLowerCase() === 'cookie';\n}\n\nfunction isContentDispositionField(s) {\n  return s.length === 19 && s.toLowerCase() === 'content-disposition';\n}\n\nfunction OutgoingMessage(options) {\n  Stream.call(this);\n\n  // Queue that holds all currently pending data\x2C until the response will be\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\n  this.outputData = [];\n\n  // `outputSize` is an approximate measure of how much data is queued on this\n  // response. `_onPendingData` will be invoked to update similar global\n  // per-connection counter. That counter will be used to pause/unpause the\n  // TCP socket and HTTP Parser and thus handle the backpressure.\n  this.outputSize = 0;\n\n  this.writable = true;\n  this.destroyed = false;\n\n  this._last = false;\n  this.chunkedEncoding = false;\n  this.shouldKeepAlive = true;\n  this.maxRequestsOnConnectionReached = false;\n  this._defaultKeepAlive = true;\n  this.useChunkedEncodingByDefault = true;\n  this.sendDate = false;\n  this._removedConnection = false;\n  this._removedContLen = false;\n  this._removedTE = false;\n\n  this.strictContentLength = false;\n  this[kBytesWritten] = 0;\n  this._contentLength = null;\n  this._hasBody = true;\n  this._trailer = '';\n  this[kNeedDrain] = false;\n\n  this.finished = false;\n  this._headerSent = false;\n  this[kCorked] = 0;\n  this[kChunkedBuffer] = [];\n  this[kChunkedLength] = 0;\n  this._closed = false;\n\n  this[kSocket] = null;\n  this._header = null;\n  this[kOutHeaders] = null;\n\n  this._keepAliveTimeout = 0;\n\n  this._onPendingData = nop;\n\n  this[kErrored] = null;\n  this[kHighWaterMark] = options?.highWaterMark ?? getDefaultHighWaterMark();\n  this[kRejectNonStandardBodyWrites] = options?.rejectNonStandardBodyWrites ?? false;\n}\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'errored'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this[kErrored];\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'closed'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this._closed;\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (\n      this.finished &&\n      this.outputSize === 0 &&\n      (!this[kSocket] || this[kSocket].writableLength === 0)\n    );\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\n  __proto__: null\x2C\n  get() {\n    return false;\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this.outputSize + this[kChunkedLength] + (this[kSocket] ? this[kSocket].writableLength : 0);\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this[kSocket] ? this[kSocket].writableHighWaterMark : this[kHighWaterMark];\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\n  __proto__: null\x2C\n  get() {\n    return this[kCorked];\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\n  __proto__: null\x2C\n  get: internalUtil.deprecate(function() {\n    return this.getHeaders();\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (val == null) {\n      this[kOutHeaders] = null;\n    } else if (typeof val === 'object') {\n      const headers = this[kOutHeaders] = { __proto__: null };\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const name = keys[i];\n        headers[name.toLowerCase()] = [name\x2C val[name]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this[kSocket];\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'socket'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this[kSocket];\n  }\x2C\n  set: function(val) {\n    for (let n = 0; n < this[kCorked]; n++) {\n      val?.cork();\n      this[kSocket]?.uncork();\n    }\n    this[kSocket] = val;\n  }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\n  __proto__: null\x2C\n  get: internalUtil.deprecate(function() {\n    const headers = this[kOutHeaders];\n    if (headers !== null) {\n      const out = { __proto__: null };\n      const keys = ObjectKeys(headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const val = headers[key][0];\n        out[key] = val;\n      }\n      return out;\n    }\n    return null;\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (typeof val === 'object' && val !== null) {\n      const headers = this[kOutHeaders];\n      if (!headers)\n        return;\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const header = headers[keys[i]];\n        if (header)\n          header[0] = val[keys[i]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\n});\n\n\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n\n  const headersMap = this[kOutHeaders];\n  const headers = {};\n\n  if (headersMap !== null) {\n    const keys = ObjectKeys(headersMap);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\n      const key = keys[i];\n      headers[headersMap[key][0]] = headersMap[key][1];\n    }\n  }\n  return headers;\n};\n\nOutgoingMessage.prototype.cork = function() {\n  this[kCorked]++;\n  if (this[kSocket]) {\n    this[kSocket].cork();\n  }\n};\n\nOutgoingMessage.prototype.uncork = function() {\n  this[kCorked]--;\n  if (this[kSocket]) {\n    this[kSocket].uncork();\n  }\n\n  if (this[kCorked] || this[kChunkedBuffer].length === 0) {\n    return;\n  }\n\n  const len = this[kChunkedLength];\n  const buf = this[kChunkedBuffer];\n\n  assert(this.chunkedEncoding);\n\n  let callbacks;\n  this._send(len.toString(16)\x2C 'latin1'\x2C null);\n  this._send(crlf_buf\x2C null\x2C null);\n  for (let n = 0; n < buf.length; n += 3) {\n    this._send(buf[n + 0]\x2C buf[n + 1]\x2C null);\n    if (buf[n + 2]) {\n      callbacks ??= [];\n      callbacks.push(buf[n + 2]);\n    }\n  }\n  this._send(crlf_buf\x2C null\x2C callbacks.length ? (err) => {\n    for (const callback of callbacks) {\n      callback(err);\n    }\n  } : null);\n\n  this[kChunkedBuffer].length = 0;\n  this[kChunkedLength] = 0;\n};\n\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n\n  if (callback) {\n    this.on('timeout'\x2C callback);\n  }\n\n  if (!this[kSocket]) {\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\n      socket.setTimeout(msecs);\n    });\n  } else {\n    this[kSocket].setTimeout(msecs);\n  }\n  return this;\n};\n\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nOutgoingMessage.prototype.destroy = function destroy(error) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  this[kErrored] = error;\n\n  if (this[kSocket]) {\n    this[kSocket].destroy(error);\n  } else {\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\n      socket.destroy(error);\n    });\n  }\n\n  return this;\n};\n\n\n// This abstract either writing directly to the socket or buffering it.\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback\x2C byteLength) {\n  // This is a shameful hack to get the headers and first body chunk onto\n  // the same packet. Future versions of Node are going to take care of\n  // this at a lower level and in a more general way.\n  if (!this._headerSent && this._header !== null) {\n    // `this._header` can be null if OutgoingMessage is used without a proper Socket\n    // See: /test/parallel/test-http-outgoing-message-inheritance.js\n    if (typeof data === 'string' &&\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\n      data = this._header + data;\n    } else {\n      const header = this._header;\n      this.outputData.unshift({\n        data: header\x2C\n        encoding: 'latin1'\x2C\n        callback: null\x2C\n      });\n      this.outputSize += header.length;\n      this._onPendingData(header.length);\n    }\n    this._headerSent = true;\n  }\n  return this._writeRaw(data\x2C encoding\x2C callback\x2C byteLength);\n};\n\nOutgoingMessage.prototype._writeRaw = _writeRaw;\nfunction _writeRaw(data\x2C encoding\x2C callback\x2C size) {\n  const conn = this[kSocket];\n  if (conn?.destroyed) {\n    // The socket was destroyed. If we're still trying to write to it\x2C\n    // then we haven't gotten the 'close' event yet.\n    return false;\n  }\n\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (conn && conn._httpMessage === this && conn.writable) {\n    // There might be pending data in the this.output buffer.\n    if (this.outputData.length) {\n      this._flushOutput(conn);\n    }\n    // Directly write to socket.\n    return conn.write(data\x2C encoding\x2C callback);\n  }\n  // Buffer\x2C as long as we're not destroyed.\n  this.outputData.push({ data\x2C encoding\x2C callback });\n  this.outputSize += data.length;\n  this._onPendingData(data.length);\n  return this.outputSize < this[kHighWaterMark];\n}\n\n\nOutgoingMessage.prototype._storeHeader = _storeHeader;\nfunction _storeHeader(firstLine\x2C headers) {\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\n  const state = {\n    connection: false\x2C\n    contLen: false\x2C\n    te: false\x2C\n    date: false\x2C\n    expect: false\x2C\n    trailer: false\x2C\n    header: firstLine\x2C\n  };\n\n  if (headers) {\n    if (headers === this[kOutHeaders]) {\n      for (const key in headers) {\n        const entry = headers[key];\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\n      }\n    } else if (ArrayIsArray(headers)) {\n      if (headers.length && ArrayIsArray(headers[0])) {\n        for (let i = 0; i < headers.length; i++) {\n          const entry = headers[i];\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\n        }\n      } else {\n        if (headers.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\n        }\n\n        for (let n = 0; n < headers.length; n += 2) {\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\n        }\n      }\n    } else {\n      for (const key in headers) {\n        if (ObjectHasOwn(headers\x2C key)) {\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\n        }\n      }\n    }\n  }\n\n  let { header } = state;\n\n  // Date header\n  if (this.sendDate && !state.date) {\n    header += 'Date: ' + utcDate() + '\\r\\n';\n  }\n\n  // Force the connection to close when the response is a 204 No Content or\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\n  // header.\n  //\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\n  // node.js used to send out a zero chunk anyway to accommodate clients\n  // that don't have special handling for those responses.\n  //\n  // It was pointed out that this might confuse reverse proxies to the point\n  // of creating security liabilities\x2C so suppress the zero chunk and force\n  // the connection to close.\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\n                               this.statusCode === 304)) {\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\n          ' closing connection.');\n    this.chunkedEncoding = false;\n    this.shouldKeepAlive = false;\n  }\n\n  // keep-alive logic\n  if (this._removedConnection) {\n    // shouldKeepAlive is generally true for HTTP/1.1. In that common case\x2C\n    // even if the connection header isn't sent\x2C we still persist by default.\n    this._last = !this.shouldKeepAlive;\n  } else if (!state.connection) {\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\n      header += 'Connection: close\\r\\n';\n    } else if (shouldSendKeepAlive) {\n      header += 'Connection: keep-alive\\r\\n';\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\n        let max = '';\n        if (~~this._maxRequestsPerSocket > 0) {\n          max = `\x2C max=${this._maxRequestsPerSocket}`;\n        }\n        header += `Keep-Alive: timeout=${timeoutSeconds}${max}\\r\\n`;\n      }\n    } else {\n      this._last = true;\n      header += 'Connection: close\\r\\n';\n    }\n  }\n\n  if (!state.contLen && !state.te) {\n    if (!this._hasBody) {\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\n      this.chunkedEncoding = false;\n    } else if (!this.useChunkedEncodingByDefault) {\n      this._last = true;\n    } else if (!state.trailer &&\n               !this._removedContLen &&\n               typeof this._contentLength === 'number') {\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\n    } else if (!this._removedTE) {\n      header += 'Transfer-Encoding: chunked\\r\\n';\n      this.chunkedEncoding = true;\n    } else {\n      // We should only be able to get here if both Content-Length and\n      // Transfer-Encoding are removed by the user.\n      // See: test/parallel/test-http-remove-header-stays-removed.js\n      debug('Both Content-Length and Transfer-Encoding are removed');\n\n      // We can't keep alive in this case\x2C because with no header info the body\n      // is defined as all data until the connection is closed.\n      this._last = true;\n    }\n  }\n\n  // Test non-chunked message does not have trailer header set\x2C\n  // message will be terminated by the first empty line after the\n  // header fields\x2C regardless of the header fields present in the\n  // message\x2C and thus cannot contain a message body or 'trailers'.\n  if (this.chunkedEncoding !== true && state.trailer) {\n    throw new ERR_HTTP_TRAILER_INVALID();\n  }\n\n  this._header = header + '\\r\\n';\n  this._headerSent = false;\n\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\n  // UNLESS we're sending Expect: 100-continue.\n  if (state.expect) this._send('');\n}\n\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderName(key);\n\n  // If key is content-disposition and there is content-length\n  // encode the value in latin1\n  // https://www.rfc-editor.org/rfc/rfc6266#section-4.3\n  // Refs: https://github.com/nodejs/node/pull/46528\n  if (isContentDispositionField(key) && self._contentLength) {\n    // The value could be an array here\n    if (ArrayIsArray(value)) {\n      for (let i = 0; i < value.length; i++) {\n        value[i] = Buffer.from(value[i]\x2C 'latin1');\n      }\n    } else {\n      value = Buffer.from(value\x2C 'latin1');\n    }\n  }\n\n  if (ArrayIsArray(value)) {\n    if (\n      (value.length < 2 || !isCookieField(key)) &&\n      (!self[kUniqueHeaders] || !self[kUniqueHeaders].has(key.toLowerCase()))\n    ) {\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < value.length; i++)\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\n      return;\n    }\n    value = value.join('; ');\n  }\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\n}\n\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderValue(key\x2C value);\n  state.header += key + ': ' + value + '\\r\\n';\n  matchHeader(self\x2C state\x2C key\x2C value);\n}\n\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\n  if (field.length < 4 || field.length > 17)\n    return;\n  field = field.toLowerCase();\n  switch (field) {\n    case 'connection':\n      state.connection = true;\n      self._removedConnection = false;\n      if (RE_CONN_CLOSE.test(value))\n        self._last = true;\n      else\n        self.shouldKeepAlive = true;\n      break;\n    case 'transfer-encoding':\n      state.te = true;\n      self._removedTE = false;\n      if (RE_TE_CHUNKED.test(value))\n        self.chunkedEncoding = true;\n      break;\n    case 'content-length':\n      state.contLen = true;\n      self._contentLength = value;\n      self._removedContLen = false;\n      break;\n    case 'date':\n    case 'expect':\n    case 'trailer':\n      state[field] = true;\n      break;\n    case 'keep-alive':\n      self._defaultKeepAlive = false;\n      break;\n  }\n}\n\nconst validateHeaderName = hideStackFrames((name\x2C label) => {\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\n    throw new ERR_INVALID_HTTP_TOKEN.HideStackFramesError(label || 'Header name'\x2C name);\n  }\n});\n\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\n  if (value === undefined) {\n    throw new ERR_HTTP_INVALID_HEADER_VALUE.HideStackFramesError(value\x2C name);\n  }\n  if (checkInvalidHeaderChar(value)) {\n    debug('Header "%s" contains invalid characters'\x2C name);\n    throw new ERR_INVALID_CHAR.HideStackFramesError('header content'\x2C name);\n  }\n});\n\nfunction parseUniqueHeadersOption(headers) {\n  if (!ArrayIsArray(headers)) {\n    return null;\n  }\n\n  const unique = new SafeSet();\n  const l = headers.length;\n  for (let i = 0; i < l; i++) {\n    unique.add(headers[i].toLowerCase());\n  }\n\n  return unique;\n}\n\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('set');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  let headers = this[kOutHeaders];\n  if (headers === null)\n    this[kOutHeaders] = headers = { __proto__: null };\n\n  headers[name.toLowerCase()] = [name\x2C value];\n  return this;\n};\n\nOutgoingMessage.prototype.setHeaders = function setHeaders(headers) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('set');\n  }\n\n\n  if (\n    !headers ||\n    ArrayIsArray(headers) ||\n    typeof headers.keys !== 'function' ||\n    typeof headers.get !== 'function'\n  ) {\n    throw new ERR_INVALID_ARG_TYPE('headers'\x2C ['Headers'\x2C 'Map']\x2C headers);\n  }\n\n  // Headers object joins multiple cookies with a comma when using\n  // the getter to retrieve the value\x2C\n  // unless iterating over the headers directly.\n  // We also cannot safely split by comma.\n  // To avoid setHeader overwriting the previous value we push\n  // set-cookie values in array and set them all at once.\n  const cookies = [];\n\n  for (const { 0: key\x2C 1: value } of headers) {\n    if (key === 'set-cookie') {\n      if (ArrayIsArray(value)) {\n        cookies.push(...value);\n      } else {\n        cookies.push(value);\n      }\n      continue;\n    }\n    this.setHeader(key\x2C value);\n  }\n  if (cookies.length) {\n    this.setHeader('set-cookie'\x2C cookies);\n  }\n\n  return this;\n};\n\nOutgoingMessage.prototype.appendHeader = function appendHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('append');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  const field = name.toLowerCase();\n  const headers = this[kOutHeaders];\n  if (headers === null || !headers[field]) {\n    return this.setHeader(name\x2C value);\n  }\n\n  // Prepare the field for appending\x2C if required\n  if (!ArrayIsArray(headers[field][1])) {\n    headers[field][1] = [headers[field][1]];\n  }\n\n  const existingValues = headers[field][1];\n  if (ArrayIsArray(value)) {\n    for (let i = 0\x2C length = value.length; i < length; i++) {\n      existingValues.push(value[i]);\n    }\n  } else {\n    existingValues.push(value);\n  }\n\n  return this;\n};\n\n\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\n  validateString(name\x2C 'name');\n\n  const headers = this[kOutHeaders];\n  if (headers === null)\n    return;\n\n  const entry = headers[name.toLowerCase()];\n  return entry?.[1];\n};\n\n\n// Returns an array of the names of the current outgoing headers.\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\n};\n\n\n// Returns an array of the names of the current outgoing raw headers.\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\n  const headersMap = this[kOutHeaders];\n  if (headersMap === null) return [];\n\n  const values = ObjectValues(headersMap);\n  const headers = Array(values.length);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = values.length; i < l; i++) {\n    headers[i] = values[i][0];\n  }\n\n  return headers;\n};\n\n\n// Returns a shallow copy of the current outgoing headers.\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\n  const headers = this[kOutHeaders];\n  const ret = { __proto__: null };\n  if (headers) {\n    const keys = ObjectKeys(headers);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const val = headers[key][1];\n      ret[key] = val;\n    }\n  }\n  return ret;\n};\n\n\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\n  validateString(name\x2C 'name');\n  return this[kOutHeaders] !== null &&\n    !!this[kOutHeaders][name.toLowerCase()];\n};\n\n\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\n  validateString(name\x2C 'name');\n\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('remove');\n  }\n\n  const key = name.toLowerCase();\n\n  switch (key) {\n    case 'connection':\n      this._removedConnection = true;\n      break;\n    case 'content-length':\n      this._removedContLen = true;\n      break;\n    case 'transfer-encoding':\n      this._removedTE = true;\n      break;\n    case 'date':\n      this.sendDate = false;\n      break;\n  }\n\n  if (this[kOutHeaders] !== null) {\n    delete this[kOutHeaders][key];\n  }\n};\n\n\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\n};\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: function() { return !!this._header; }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\n  __proto__: null\x2C\n  get: function() { return this.finished; }\x2C\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !this.destroyed && !this.finished && this[kNeedDrain];\n  }\x2C\n});\n\nconst crlf_buf = Buffer.from('\\r\\n');\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\n  if (!ret)\n    this[kNeedDrain] = true;\n  return ret;\n};\n\nfunction onError(msg\x2C err\x2C callback) {\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\n                             process.nextTick\x2C\n                             emitErrorNt\x2C\n                             msg\x2C\n                             err\x2C\n                             callback);\n}\n\nfunction emitErrorNt(msg\x2C err\x2C callback) {\n  callback(err);\n  if (typeof msg.emit === 'function' && !msg._closed) {\n    msg.emit('error'\x2C err);\n  }\n}\n\nfunction strictContentLength(msg) {\n  return (\n    msg.strictContentLength &&\n    msg._contentLength != null &&\n    msg._hasBody &&\n    !msg._removedContLen &&\n    !msg.chunkedEncoding &&\n    !msg.hasHeader('transfer-encoding')\n  );\n}\n\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\n  if (typeof callback !== 'function')\n    callback = nop;\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !isUint8Array(chunk)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n  }\n\n  let err;\n  if (msg.finished) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (msg.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    if (!msg.destroyed) {\n      onError(msg\x2C err\x2C callback);\n    } else {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  let len;\n\n  if (msg.strictContentLength) {\n    len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\n\n    if (\n      strictContentLength(msg) &&\n      (fromEnd ? msg[kBytesWritten] + len !== msg._contentLength : msg[kBytesWritten] + len > msg._contentLength)\n    ) {\n      throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(len + msg[kBytesWritten]\x2C msg._contentLength);\n    }\n\n    msg[kBytesWritten] += len;\n  }\n\n  if (!msg._header) {\n    if (fromEnd) {\n      len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\n      msg._contentLength = len;\n    }\n    msg._implicitHeader();\n  }\n\n  if (!msg._hasBody) {\n    if (msg[kRejectNonStandardBodyWrites]) {\n      throw new ERR_HTTP_BODY_NOT_ALLOWED();\n    } else {\n      debug('This type of response MUST NOT have a body. ' +\n        'Ignoring write() calls.');\n      process.nextTick(callback);\n      return true;\n    }\n  }\n\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\n    msg.socket.cork();\n    process.nextTick(connectionCorkNT\x2C msg.socket);\n  }\n\n  let ret;\n  if (msg.chunkedEncoding && chunk.length !== 0) {\n    len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\n    if (msg[kCorked] && msg._headerSent) {\n      msg[kChunkedBuffer].push(chunk\x2C encoding\x2C callback);\n      msg[kChunkedLength] += len;\n      ret = msg[kChunkedLength] < msg[kHighWaterMark];\n    } else {\n      msg._send(len.toString(16)\x2C 'latin1'\x2C null);\n      msg._send(crlf_buf\x2C null\x2C null);\n      msg._send(chunk\x2C encoding\x2C null\x2C len);\n      ret = msg._send(crlf_buf\x2C null\x2C callback);\n    }\n  } else {\n    ret = msg._send(chunk\x2C encoding\x2C callback\x2C len);\n  }\n\n  debug('write ret = ' + ret);\n  return ret;\n}\n\n\nfunction connectionCorkNT(conn) {\n  conn.uncork();\n}\n\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\n  this._trailer = '';\n  const keys = ObjectKeys(headers);\n  const isArray = ArrayIsArray(headers);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\n    let field\x2C value;\n    const key = keys[i];\n    if (isArray) {\n      field = headers[key][0];\n      value = headers[key][1];\n    } else {\n      field = key;\n      value = headers[key];\n    }\n    validateHeaderName(field\x2C 'Trailer name');\n\n    // Check if the field must be sent several times\n    const isArrayValue = ArrayIsArray(value);\n    if (\n      isArrayValue && value.length > 1 &&\n      (!this[kUniqueHeaders] || !this[kUniqueHeaders].has(field.toLowerCase()))\n    ) {\n      for (let j = 0\x2C l = value.length; j < l; j++) {\n        if (checkInvalidHeaderChar(value[j])) {\n          debug('Trailer "%s"[%d] contains invalid characters'\x2C field\x2C j);\n          throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n        }\n        this._trailer += field + ': ' + value[j] + '\\r\\n';\n      }\n    } else {\n      if (isArrayValue) {\n        value = value.join('; ');\n      }\n\n      if (checkInvalidHeaderChar(value)) {\n        debug('Trailer "%s" contains invalid characters'\x2C field);\n        throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n      }\n      this._trailer += field + ': ' + value + '\\r\\n';\n    }\n  }\n};\n\nfunction onFinish(outmsg) {\n  if (outmsg?.socket?._hadError) return;\n  outmsg.emit('finish');\n}\n\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\n  if (typeof chunk === 'function') {\n    callback = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (chunk) {\n    if (this.finished) {\n      onError(this\x2C\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\n              typeof callback !== 'function' ? nop : callback);\n      return this;\n    }\n\n    if (this[kSocket]) {\n      this[kSocket].cork();\n    }\n\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\n  } else if (this.finished) {\n    if (typeof callback === 'function') {\n      if (!this.writableFinished) {\n        this.on('finish'\x2C callback);\n      } else {\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\n      }\n    }\n    return this;\n  } else if (!this._header) {\n    if (this[kSocket]) {\n      this[kSocket].cork();\n    }\n\n    this._contentLength = 0;\n    this._implicitHeader();\n  }\n\n  if (typeof callback === 'function')\n    this.once('finish'\x2C callback);\n\n  if (strictContentLength(this) && this[kBytesWritten] !== this._contentLength) {\n    throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(this[kBytesWritten]\x2C this._contentLength);\n  }\n\n  const finish = onFinish.bind(undefined\x2C this);\n\n  if (this._hasBody && this.chunkedEncoding) {\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\n  } else if (!this._headerSent || this.writableLength || chunk) {\n    this._send(''\x2C 'latin1'\x2C finish);\n  } else {\n    process.nextTick(finish);\n  }\n\n  if (this[kSocket]) {\n    // Fully uncork connection on end().\n    this[kSocket]._writableState.corked = 1;\n    this[kSocket].uncork();\n  }\n  this[kCorked] = 1;\n  this.uncork();\n\n  this.finished = true;\n\n  // There is the first message on the outgoing queue\x2C and we've sent\n  // everything to the socket.\n  debug('outgoing message end.');\n  if (this.outputData.length === 0 &&\n      this[kSocket] &&\n      this[kSocket]._httpMessage === this) {\n    this._finish();\n  }\n\n  return this;\n};\n\n\n// This function is called once all user data are flushed to the socket.\n// Note that it has a chance that the socket is not drained.\nOutgoingMessage.prototype._finish = function _finish() {\n  assert(this[kSocket]);\n  this.emit('prefinish');\n};\n\n\n// This logic is probably a bit confusing. Let me explain a bit:\n//\n// In both HTTP servers and clients it is possible to queue up several\n// outgoing messages. This is easiest to imagine in the case of a client.\n// Take the following situation:\n//\n//    req1 = client.request('GET'\x2C '/');\n//    req2 = client.request('POST'\x2C '/');\n//\n// When the user does\n//\n//   req2.write('hello world\\n');\n//\n// it's possible that the first request has not been completely flushed to\n// the socket yet. Thus the outgoing messages need to be prepared to queue\n// up data internally before sending it on further to the socket's queue.\n//\n// This function\x2C _flush()\x2C is called by both the Server and Client\n// to attempt to flush any pending messages out to the socket.\nOutgoingMessage.prototype._flush = function _flush() {\n  const socket = this[kSocket];\n\n  if (socket?.writable) {\n    // There might be remaining data in this.output; write it out\n    const ret = this._flushOutput(socket);\n\n    if (this.finished) {\n      // This is a queue to the server or client to bring in the next this.\n      this._finish();\n    } else if (ret && this[kNeedDrain]) {\n      this[kNeedDrain] = false;\n      this.emit('drain');\n    }\n  }\n};\n\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\n  const outputLength = this.outputData.length;\n  if (outputLength <= 0)\n    return undefined;\n\n  const outputData = this.outputData;\n  socket.cork();\n  let ret;\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0; i < outputLength; i++) {\n    const { data\x2C encoding\x2C callback } = outputData[i];\n    ret = socket.write(data\x2C encoding\x2C callback);\n  }\n  socket.uncork();\n\n  this.outputData = [];\n  this._onPendingData(-this.outputSize);\n  this.outputSize = 0;\n\n  return ret;\n};\n\n\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\n  if (!this._header) {\n    this._implicitHeader();\n  }\n\n  // Force-flush the headers.\n  this._send('');\n};\n\nOutgoingMessage.prototype.pipe = function pipe() {\n  // OutgoingMessage should be write-only. Piping from it is disabled.\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\nfunction(err\x2C event) {\n  this.destroy(err);\n};\n\nmodule.exports = {\n  kHighWaterMark\x2C\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\x2C\n};\n
code-source-info,0x12ea9865d190,122,0,36121,C0O0C4O36121,,
code-creation,JS,9,103458,0x12ea9865d828,1759, node:_http_outgoing:1:1,0x28585989d520,~
code-source-info,0x12ea9865d
tick,0x19241c638,103542,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865c0fb,0x107f89188,0x107f88e30,0x12ea98650c9c,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1924a6704,103583,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865c0fb,0x107f89188,0x107f88e30,0x12ea98650c9c,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,103708,0x12ea9865e1c0,5, node:internal/http:1:1,0x28585989fbd8,~
script-source,123,node:internal/http,'use strict';\n\nconst {\n  Date\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { setUnrefTimeout } = require('internal/timers');\nconst { getCategoryEnabledBuffer\x2C trace } = internalBinding('trace_events');\nconst {\n  CHAR_LOWERCASE_B\x2C\n  CHAR_LOWERCASE_E\x2C\n} = require('internal/constants');\n\nlet utcCache;\n\nfunction utcDate() {\n  if (!utcCache) cache();\n  return utcCache;\n}\n\nfunction cache() {\n  const d = new Date();\n  utcCache = d.toUTCString();\n  setUnrefTimeout(resetCache\x2C 1000 - d.getMilliseconds());\n}\n\nfunction resetCache() {\n  utcCache = undefined;\n}\n\nlet traceEventId = 0;\n\nfunction getNextTraceEventId() {\n  return ++traceEventId;\n}\n\nconst httpEnabled = getCategoryEnabledBuffer('node.http');\n\nfunction isTraceHTTPEnabled() {\n  return httpEnabled[0] > 0;\n}\n\nconst traceEventCategory = 'node\x2Cnode.http';\n\nfunction traceBegin(...args) {\n  trace(CHAR_LOWERCASE_B\x2C traceEventCategory\x2C ...args);\n}\n\nfunction traceEnd(...args) {\n  trace(CHAR_LOWERCASE_E\x2C traceEventCategory\x2C ...args);\n}\n\nmodule.exports = {\n  kOutHeaders: Symbol('kOutHeaders')\x2C\n  kNeedDrain: Symbol('kNeedDrain')\x2C\n  utcDate\x2C\n  traceBegin\x2C\n  traceEnd\x2C\n  getNextTraceEventId\x2C\n  isTraceHTTPEnabled\x2C\n};\n
code-source-info,0x12ea9865e1c0,123,0,1156,C0O0C4O1156,,
code-creation,JS,9,103750,0x12ea9865e318,217, node:internal/http:1:1,0x28585989fd50,~
code-source-info,0x12ea9865e318,123,0,1156,C0O0C69O25C75O33C80O87C83O87C88O67C94O159C97O159C102O123C107O149C113O244C116O244C121O202C127O222C133O280C134O280C136O565C137O565C139O650C142O650C146O650C148O781C150O781C152O978C160O1012C171O1049C181O1073C187O1084C193O1098C199O1110C205O1133C211O993C216O1155,,
code-creation,Eval,9,104500,0x12ea9865e4b8,5, node:_http_server:1:1,0x2858598a5fc8,~
script-source,124,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  MathMin\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst net = require('net');\nconst EE = require('events');\nconst assert = require('internal/assert');\nconst {\n  parsers\x2C\n  freeParser\x2C\n  continueExpression\x2C\n  chunkExpression\x2C\n  kIncomingMessage\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst { ConnectionsList } = internalBinding('http_parser');\nconst {\n  kUniqueHeaders\x2C\n  parseUniqueHeadersOption\x2C\n  OutgoingMessage\x2C\n} = require('_http_outgoing');\nconst {\n  kOutHeaders\x2C\n  kNeedDrain\x2C\n  isTraceHTTPEnabled\x2C\n  traceBegin\x2C\n  traceEnd\x2C\n  getNextTraceEventId\x2C\n} = require('internal/http');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  getOrSetAsyncId\x2C\n} = require('internal/async_hooks');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  ConnResetException\x2C\n  codes: {\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_HTTP_INVALID_STATUS_CODE\x2C\n    ERR_HTTP_REQUEST_TIMEOUT\x2C\n    ERR_HTTP_SOCKET_ASSIGNED\x2C\n    ERR_HTTP_SOCKET_ENCODING\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  promisify\x2C\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\nconst {\n  validateInteger\x2C\n  validateBoolean\x2C\n  validateLinkHeaderValue\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst Buffer = require('buffer').Buffer;\nconst { setInterval\x2C clearInterval } = require('timers');\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst onRequestStartChannel = dc.channel('http.server.request.start');\nconst onResponseCreatedChannel = dc.channel('http.server.response.created');\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\n\nconst kServerResponse = Symbol('ServerResponse');\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst STATUS_CODES = {\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\n  103: 'Early Hints'\x2C                // RFC 8297 2\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\n  423: 'Locked'\x2C                     // RFC 4918 11.3\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\n  428: 'Precondition Required'\x2C      // RFC 6585 3\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\n  509: 'Bandwidth Limit Exceeded'\x2C\n  510: 'Not Extended'\x2C               // RFC 2774 7\n  511: 'Network Authentication Required'\x2C // RFC 6585 6\n};\n\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\nconst kConnections = Symbol('http.server.connections');\nconst kConnectionsCheckingInterval = Symbol('http.server.connectionsCheckingInterval');\n\nconst HTTP_SERVER_TRACE_EVENT_NAME = 'http.server.request';\n// TODO(jazelly): make this configurable\nconst HTTP_SERVER_KEEP_ALIVE_TIMEOUT_BUFFER = 1000;\n\nclass HTTPServerAsyncResource {\n  constructor(type\x2C socket) {\n    this.type = type;\n    this.socket = socket;\n  }\n}\n\nfunction ServerResponse(req\x2C options) {\n  OutgoingMessage.call(this\x2C options);\n\n  if (req.method === 'HEAD') this._hasBody = false;\n\n  this.req = req;\n  this.sendDate = true;\n  this._sent100 = false;\n  this._expect_continue = false;\n\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\n    this.useChunkedEncodingByDefault = chunkExpression.test(req.headers.te);\n    this.shouldKeepAlive = false;\n  }\n\n  if (hasObserver('http')) {\n    startPerf(this\x2C kServerResponseStatistics\x2C {\n      type: 'http'\x2C\n      name: 'HttpRequest'\x2C\n      detail: {\n        req: {\n          method: req.method\x2C\n          url: req.url\x2C\n          headers: req.headers\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  if (isTraceHTTPEnabled()) {\n    this._traceEventId = getNextTraceEventId();\n    traceBegin(HTTP_SERVER_TRACE_EVENT_NAME\x2C this._traceEventId);\n  }\n  if (onResponseCreatedChannel.hasSubscribers) {\n    onResponseCreatedChannel.publish({\n      request: req\x2C\n      response: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\n\nServerResponse.prototype._finish = function _finish() {\n  if (this[kServerResponseStatistics] && hasObserver('http')) {\n    stopPerf(this\x2C kServerResponseStatistics\x2C {\n      detail: {\n        res: {\n          statusCode: this.statusCode\x2C\n          statusMessage: this.statusMessage\x2C\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\n        }\x2C\n      }\x2C\n    });\n  }\n  OutgoingMessage.prototype._finish.call(this);\n  if (isTraceHTTPEnabled() && typeof this._traceEventId === 'number') {\n    const data = {\n      url: this.req?.url\x2C\n      statusCode: this.statusCode\x2C\n    };\n    traceEnd(HTTP_SERVER_TRACE_EVENT_NAME\x2C this._traceEventId\x2C data);\n  }\n};\n\n\nServerResponse.prototype.statusCode = 200;\nServerResponse.prototype.statusMessage = undefined;\n\nfunction onServerResponseClose() {\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\n  // array. That is\x2C in the example below\x2C b still gets called even though\n  // it's been removed by a:\n  //\n  //   const EventEmitter = require('events');\n  //   const obj = new EventEmitter();\n  //   obj.on('event'\x2C a);\n  //   obj.on('event'\x2C b);\n  //   function a() { obj.removeListener('event'\x2C b) }\n  //   function b() { throw "BAM!" }\n  //   obj.emit('event');  // throws\n  //\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\n  // where the ServerResponse object has already been deconstructed.\n  // Fortunately\x2C that requires only a single if check. :-)\n  if (this._httpMessage) {\n    emitCloseNT(this._httpMessage);\n  }\n}\n\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\n  if (socket._httpMessage) {\n    throw new ERR_HTTP_SOCKET_ASSIGNED();\n  }\n  socket._httpMessage = this;\n  socket.on('close'\x2C onServerResponseClose);\n  this.socket = socket;\n  this.emit('socket'\x2C socket);\n  this._flush();\n};\n\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\n  assert(socket._httpMessage === this);\n  socket.removeListener('close'\x2C onServerResponseClose);\n  socket._httpMessage = null;\n  this.socket = null;\n};\n\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n  this._sent100 = true;\n};\n\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n};\n\nServerResponse.prototype.writeEarlyHints = function writeEarlyHints(hints\x2C cb) {\n  let head = 'HTTP/1.1 103 Early Hints\\r\\n';\n\n  validateObject(hints\x2C 'hints');\n\n  if (hints.link === null || hints.link === undefined) {\n    return;\n  }\n\n  const link = validateLinkHeaderValue(hints.link);\n\n  if (link.length === 0) {\n    return;\n  }\n\n  head += 'Link: ' + link + '\\r\\n';\n\n  for (const key of ObjectKeys(hints)) {\n    if (key !== 'link') {\n      head += key + ': ' + hints[key] + '\\r\\n';\n    }\n  }\n\n  head += '\\r\\n';\n\n  this._writeRaw(head\x2C 'ascii'\x2C cb);\n};\n\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\n  this.writeHead(this.statusCode);\n};\n\nServerResponse.prototype.writeHead = writeHead;\nfunction writeHead(statusCode\x2C reason\x2C obj) {\n\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('write');\n  }\n\n  const originalStatusCode = statusCode;\n\n  statusCode |= 0;\n  if (statusCode < 100 || statusCode > 999) {\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\n  }\n\n\n  if (typeof reason === 'string') {\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\n    this.statusMessage = reason;\n  } else {\n    // writeHead(statusCode[\x2C headers])\n    this.statusMessage ||= STATUS_CODES[statusCode] || 'unknown';\n    obj ??= reason;\n  }\n  this.statusCode = statusCode;\n\n  let headers;\n  if (this[kOutHeaders]) {\n    // Slow-case: when progressive API and header fields are passed.\n    let k;\n    if (ArrayIsArray(obj)) {\n      if (obj.length % 2 !== 0) {\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\n      }\n\n      // Headers in obj should override previous headers but still\n      // allow explicit duplicates. To do so\x2C we first remove any\n      // existing conflicts\x2C then use appendHeader.\n\n      for (let n = 0; n < obj.length; n += 2) {\n        k = obj[n + 0];\n        this.removeHeader(k);\n      }\n\n      for (let n = 0; n < obj.length; n += 2) {\n        k = obj[n + 0];\n        if (k) this.appendHeader(k\x2C obj[n + 1]);\n      }\n    } else if (obj) {\n      const keys = ObjectKeys(obj);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        k = keys[i];\n        if (k) this.setHeader(k\x2C obj[k]);\n      }\n    }\n    // Only progressive api is used\n    headers = this[kOutHeaders];\n  } else {\n    // Only writeHead() called\n    headers = obj;\n  }\n\n  if (checkInvalidHeaderChar(this.statusMessage))\n    throw new ERR_INVALID_CHAR('statusMessage');\n\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\n\n  if (statusCode === 204 || statusCode === 304 ||\n      (statusCode >= 100 && statusCode <= 199)) {\n    // RFC 2616\x2C 10.2.5:\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.3.5:\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.1 Informational 1xx:\n    // This class of status code indicates a provisional response\x2C\n    // consisting only of the Status-Line and optional headers\x2C and is\n    // terminated by an empty line.\n    this._hasBody = false;\n  }\n\n  // Don't keep alive connections where the client expects 100 Continue\n  // but we sent a final status; they may put extra bytes on the wire.\n  if (this._expect_continue && !this._sent100) {\n    this.shouldKeepAlive = false;\n  }\n\n  this._storeHeader(statusLine\x2C headers);\n\n  return this;\n}\n\n// Docs-only deprecated: DEP0063\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\n\nfunction storeHTTPOptions(options) {\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined)\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\n  this.insecureHTTPParser = insecureHTTPParser;\n\n  const requestTimeout = options.requestTimeout;\n  if (requestTimeout !== undefined) {\n    validateInteger(requestTimeout\x2C 'requestTimeout'\x2C 0);\n    this.requestTimeout = requestTimeout;\n  } else {\n    this.requestTimeout = 300_000; // 5 minutes\n  }\n\n  const headersTimeout = options.headersTimeout;\n  if (headersTimeout !== undefined) {\n    validateInteger(headersTimeout\x2C 'headersTimeout'\x2C 0);\n    this.headersTimeout = headersTimeout;\n  } else {\n    this.headersTimeout = MathMin(60_000\x2C this.requestTimeout); // Minimum between 60 seconds or requestTimeout\n  }\n\n  if (this.requestTimeout > 0 && this.headersTimeout > 0 && this.headersTimeout > this.requestTimeout) {\n    throw new ERR_OUT_OF_RANGE('headersTimeout'\x2C '<= requestTimeout'\x2C headersTimeout);\n  }\n\n  const keepAliveTimeout = options.keepAliveTimeout;\n  if (keepAliveTimeout !== undefined) {\n    validateInteger(keepAliveTimeout\x2C 'keepAliveTimeout'\x2C 0);\n    this.keepAliveTimeout = keepAliveTimeout;\n  } else {\n    this.keepAliveTimeout = 5_000; // 5 seconds;\n  }\n\n  const connectionsCheckingInterval = options.connectionsCheckingInterval;\n  if (connectionsCheckingInterval !== undefined) {\n    validateInteger(connectionsCheckingInterval\x2C 'connectionsCheckingInterval'\x2C 0);\n    this.connectionsCheckingInterval = connectionsCheckingInterval;\n  } else {\n    this.connectionsCheckingInterval = 30_000; // 30 seconds\n  }\n\n  const requireHostHeader = options.requireHostHeader;\n  if (requireHostHeader !== undefined) {\n    validateBoolean(requireHostHeader\x2C 'options.requireHostHeader');\n    this.requireHostHeader = requireHostHeader;\n  } else {\n    this.requireHostHeader = true;\n  }\n\n  const joinDuplicateHeaders = options.joinDuplicateHeaders;\n  if (joinDuplicateHeaders !== undefined) {\n    validateBoolean(joinDuplicateHeaders\x2C 'options.joinDuplicateHeaders');\n  }\n  this.joinDuplicateHeaders = joinDuplicateHeaders;\n\n  const rejectNonStandardBodyWrites = options.rejectNonStandardBodyWrites;\n  if (rejectNonStandardBodyWrites !== undefined) {\n    validateBoolean(rejectNonStandardBodyWrites\x2C 'options.rejectNonStandardBodyWrites');\n    this.rejectNonStandardBodyWrites = rejectNonStandardBodyWrites;\n  } else {\n    this.rejectNonStandardBodyWrites = false;\n  }\n}\n\nfunction setupConnectionsTracking() {\n  // Start connection handling\n  this[kConnections] ||= new ConnectionsList();\n\n  if (this[kConnectionsCheckingInterval]) {\n    clearInterval(this[kConnectionsCheckingInterval]);\n  }\n  // This checker is started without checking whether any headersTimeout or requestTimeout is non zero\n  // otherwise it would not be started if such timeouts are modified after createServer.\n  this[kConnectionsCheckingInterval] =\n    setInterval(checkConnections.bind(this)\x2C this.connectionsCheckingInterval).unref();\n}\n\nfunction httpServerPreClose(server) {\n  server.closeIdleConnections();\n  clearInterval(server[kConnectionsCheckingInterval]);\n}\n\nfunction Server(options\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\n\n  if (typeof options === 'function') {\n    requestListener = options;\n    options = kEmptyObject;\n  } else if (options == null) {\n    options = kEmptyObject;\n  } else {\n    validateObject(options\x2C 'options');\n  }\n\n  storeHTTPOptions.call(this\x2C options);\n  net.Server.call(\n    this\x2C\n    { allowHalfOpen: true\x2C noDelay: options.noDelay ?? true\x2C\n      keepAlive: options.keepAlive\x2C\n      keepAliveInitialDelay: options.keepAliveInitialDelay\x2C\n      highWaterMark: options.highWaterMark });\n\n  if (requestListener) {\n    this.on('request'\x2C requestListener);\n  }\n\n  // Similar option to this. Too lazy to write my own docs.\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\n  this.httpAllowHalfOpen = false;\n\n  this.on('connection'\x2C connectionListener);\n  this.on('listening'\x2C setupConnectionsTracking);\n\n  this.timeout = 0;\n  this.maxHeadersCount = null;\n  this.maxRequestsPerSocket = 0;\n\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\n}\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\n\nServer.prototype.close = function() {\n  httpServerPreClose(this);\n  ReflectApply(net.Server.prototype.close\x2C this\x2C arguments);\n  return this;\n};\n\nServer.prototype[SymbolAsyncDispose] = async function() {\n  return promisify(this.close).call(this);\n};\n\nServer.prototype.closeAllConnections = function() {\n  if (!this[kConnections]) {\n    return;\n  }\n\n  const connections = this[kConnections].all();\n\n  for (let i = 0\x2C l = connections.length; i < l; i++) {\n    connections[i].socket.destroy();\n  }\n};\n\nServer.prototype.closeIdleConnections = function() {\n  if (!this[kConnections]) {\n    return;\n  }\n\n  const connections = this[kConnections].idle();\n\n  for (let i = 0\x2C l = connections.length; i < l; i++) {\n    if (connections[i].socket._httpMessage && !connections[i].socket._httpMessage.finished) {\n      continue;\n    }\n\n    connections[i].socket.destroy();\n  }\n};\n\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  this.timeout = msecs;\n  if (callback)\n    this.on('timeout'\x2C callback);\n  return this;\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\n  switch (event) {\n    case 'request': {\n      const { 1: res } = args;\n      if (!res.headersSent && !res.writableEnded) {\n        // Don't leak headers.\n        const names = res.getHeaderNames();\n        for (let i = 0; i < names.length; i++) {\n          res.removeHeader(names[i]);\n        }\n        res.statusCode = 500;\n        res.end(STATUS_CODES[500]);\n      } else {\n        res.destroy();\n      }\n      break;\n    }\n    default:\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\n        .apply(this\x2C arguments);\n  }\n};\n\nfunction checkConnections() {\n  if (this.headersTimeout === 0 && this.requestTimeout === 0) {\n    return;\n  }\n\n  const expired = this[kConnections].expired(this.headersTimeout\x2C this.requestTimeout);\n\n  for (let i = 0; i < expired.length; i++) {\n    const socket = expired[i].socket;\n\n    if (socket) {\n      onRequestTimeout(socket);\n    }\n  }\n}\n\nfunction connectionListener(socket) {\n  defaultTriggerAsyncIdScope(\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\x2C\n  );\n}\n\nfunction connectionListenerInternal(server\x2C socket) {\n  debug('SERVER new http connection');\n\n  // Ensure that the server property of the socket is correctly set.\n  // See https://github.com/nodejs/node/issues/13435\n  socket.server = server;\n\n  // If the user has added a listener to the server\x2C\n  // request\x2C or response\x2C then it's their responsibility.\n  // otherwise\x2C destroy on timeout by default\n  if (server.timeout && typeof socket.setTimeout === 'function')\n    socket.setTimeout(server.timeout);\n  socket.on('timeout'\x2C socketOnTimeout);\n\n  const parser = parsers.alloc();\n\n  const lenient = server.insecureHTTPParser === undefined ?\n    isLenient() : server.insecureHTTPParser;\n\n  // TODO(addaleax): This doesn't play well with the\n  // `async_hooks.currentResource()` proposal\x2C see\n  // https://github.com/nodejs/node/pull/21313\n  parser.initialize(\n    HTTPParser.REQUEST\x2C\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\n    server.maxHeaderSize || 0\x2C\n    lenient ? kLenientAll : kLenientNone\x2C\n    server[kConnections]\x2C\n  );\n  parser.socket = socket;\n  socket.parser = parser;\n\n  // Propagate headers limit from server instance to parser\n  if (typeof server.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\n  }\n\n  const state = {\n    onData: null\x2C\n    onEnd: null\x2C\n    onClose: null\x2C\n    onDrain: null\x2C\n    outgoing: []\x2C\n    incoming: []\x2C\n    // `outgoingData` is an approximate amount of bytes queued through all\n    // inactive responses. If more data than the high watermark is queued - we\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\n    // sent to the client.\n    outgoingData: 0\x2C\n    requestsCount: 0\x2C\n    keepAliveTimeoutSet: false\x2C\n  };\n  state.onData = socketOnData.bind(undefined\x2C\n                                   server\x2C socket\x2C parser\x2C state);\n  state.onEnd = socketOnEnd.bind(undefined\x2C\n                                 server\x2C socket\x2C parser\x2C state);\n  state.onClose = socketOnClose.bind(undefined\x2C\n                                     socket\x2C state);\n  state.onDrain = socketOnDrain.bind(undefined\x2C\n                                     socket\x2C state);\n  socket.on('data'\x2C state.onData);\n  socket.on('error'\x2C socketOnError);\n  socket.on('end'\x2C state.onEnd);\n  socket.on('close'\x2C state.onClose);\n  socket.on('drain'\x2C state.onDrain);\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\n                                            server\x2C socket\x2C state);\n\n  // We are consuming socket\x2C so it won't get any actual data\n  socket.on('resume'\x2C onSocketResume);\n  socket.on('pause'\x2C onSocketPause);\n\n  // Overrides to unconsume on `data`\x2C `readable` listeners\n  socket.on = generateSocketListenerWrapper('on');\n  socket.addListener = generateSocketListenerWrapper('addListener');\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\n  socket.setEncoding = socketSetEncoding;\n\n  // We only consume the socket if it has never been consumed before.\n  if (socket._handle?.isStreamBase &&\n      !socket._handle._consumed) {\n    parser._consumed = true;\n    socket._handle._consumed = true;\n    parser.consume(socket._handle);\n  }\n  parser[kOnExecute] =\n    onParserExecute.bind(undefined\x2C\n                         server\x2C socket\x2C parser\x2C state);\n\n  parser[kOnTimeout] =\n    onParserTimeout.bind(undefined\x2C\n                         server\x2C socket);\n\n  socket._paused = false;\n}\n\nfunction socketSetEncoding() {\n  throw new ERR_HTTP_SOCKET_ENCODING();\n}\n\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\n  state.outgoingData += delta;\n  socketOnDrain(socket\x2C state);\n}\n\nfunction socketOnDrain(socket\x2C state) {\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\n\n  // If we previously paused\x2C then start reading again.\n  if (socket._paused && !needPause) {\n    socket._paused = false;\n    if (socket.parser)\n      socket.parser.resume();\n    socket.resume();\n  }\n\n  const msg = socket._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketOnTimeout() {\n  const req = this.parser?.incoming;\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\n  const res = this._httpMessage;\n  const resTimeout = res && res.emit('timeout'\x2C this);\n  const serverTimeout = this.server.emit('timeout'\x2C this);\n\n  if (!reqTimeout && !resTimeout && !serverTimeout)\n    this.destroy();\n}\n\nfunction socketOnClose(socket\x2C state) {\n  debug('server socket close');\n  freeParser(socket.parser\x2C null\x2C socket);\n  abortIncoming(state.incoming);\n}\n\nfunction abortIncoming(incoming) {\n  while (incoming.length) {\n    const req = incoming.shift();\n    req.destroy(new ConnResetException('aborted'));\n  }\n  // Abort socket._httpMessage ?\n}\n\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\n  const ret = parser.finish();\n\n  if (ret instanceof Error) {\n    debug('parse error');\n    // socketOnError has additional logic and will call socket.destroy(err).\n    socketOnError.call(socket\x2C ret);\n  } else if (!server.httpAllowHalfOpen) {\n    socket.end();\n  } else if (state.outgoing.length) {\n    state.outgoing[state.outgoing.length - 1]._last = true;\n  } else if (socket._httpMessage) {\n    socket._httpMessage._last = true;\n  } else {\n    socket.end();\n  }\n}\n\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\n  assert(!socket._paused);\n  debug('SERVER socketOnData %d'\x2C d.length);\n\n  const ret = parser.execute(d);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\n}\n\nfunction onRequestTimeout(socket) {\n  // socketOnError has additional logic and will call socket.destroy(err).\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\n}\n\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\n  // When underlying `net.Socket` instance is consumed - no\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\n  // callback even if the data is constantly flowing into the socket.\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\n  socket._unrefTimer();\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\n}\n\nfunction onParserTimeout(server\x2C socket) {\n  const serverTimeout = server.emit('timeout'\x2C socket);\n\n  if (!serverTimeout)\n    socket.destroy();\n}\n\nconst noop = () => {};\nconst badRequestResponse = Buffer.from(\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\n);\nconst requestTimeoutResponse = Buffer.from(\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\n);\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\n);\n\nconst requestChunkExtensionsTooLargeResponse = Buffer.from(\n  `HTTP/1.1 413 ${STATUS_CODES[413]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\n);\n\nfunction socketOnError(e) {\n  // Ignore further errors\n  this.removeListener('error'\x2C socketOnError);\n\n  if (this.listenerCount('error'\x2C noop) === 0) {\n    this.on('error'\x2C noop);\n  }\n\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\n    // Caution must be taken to avoid corrupting the remote peer.\n    // Reply an error segment if there is no in-flight `ServerResponse`\x2C\n    // or no data of the in-flight one has been written yet to this socket.\n    if (this.writable &&\n        (!this._httpMessage || !this._httpMessage._headerSent)) {\n      let response;\n\n      switch (e.code) {\n        case 'HPE_HEADER_OVERFLOW':\n          response = requestHeaderFieldsTooLargeResponse;\n          break;\n        case 'HPE_CHUNK_EXTENSIONS_OVERFLOW':\n          response = requestChunkExtensionsTooLargeResponse;\n          break;\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\n          response = requestTimeoutResponse;\n          break;\n        default:\n          response = badRequestResponse;\n          break;\n      }\n\n      this.write(response);\n    }\n    this.destroy(e);\n  }\n}\n\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    socketOnError.call(socket\x2C ret);\n  } else if (parser.incoming?.upgrade) {\n    // Upgrade or CONNECT\n    const req = parser.incoming;\n    debug('SERVER upgrade or connect'\x2C req.method);\n\n    d ||= parser.getCurrentBuffer();\n\n    socket.removeListener('data'\x2C state.onData);\n    socket.removeListener('end'\x2C state.onEnd);\n    socket.removeListener('close'\x2C state.onClose);\n    socket.removeListener('drain'\x2C state.onDrain);\n    socket.removeListener('error'\x2C socketOnError);\n    socket.removeListener('timeout'\x2C socketOnTimeout);\n    unconsume(parser\x2C socket);\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n    parser = null;\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\n      debug('SERVER have listener for %s'\x2C eventName);\n      const bodyHead = d.slice(ret\x2C d.length);\n\n      socket.readableFlowing = null;\n\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\n    } else {\n      // Got CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\n    debug('SERVER got PRI request');\n    socket.destroy();\n  }\n\n  if (socket._paused && socket.parser) {\n    // onIncoming paused the socket\x2C we should pause the parser as well\n    debug('pause parser');\n    socket.parser.pause();\n  }\n}\n\nfunction clearIncoming(req) {\n  req ||= this;\n  const parser = req.socket?.parser;\n  // Reset the .incoming property so that the request object can be gc'ed.\n  if (parser && parser.incoming === req) {\n    if (req.readableEnded) {\n      parser.incoming = null;\n    } else {\n      req.on('end'\x2C clearIncoming);\n    }\n  }\n}\n\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\n  if (onResponseFinishChannel.hasSubscribers) {\n    onResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\x2C\n    });\n  }\n\n  // Usually the first incoming element should be our request.  it may\n  // be that in the case abortIncoming() was called that the incoming\n  // array will be empty.\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\n\n  state.incoming.shift();\n\n  // If the user never called req.read()\x2C and didn't pipe() or\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\n  // bytes will be pulled off the wire.\n  if (!req._consuming && !req._readableState.resumeScheduled)\n    req._dump();\n\n  res.detachSocket(socket);\n  clearIncoming(req);\n  process.nextTick(emitCloseNT\x2C res);\n\n  if (res._last) {\n    if (typeof socket.destroySoon === 'function') {\n      socket.destroySoon();\n    } else {\n      socket.end();\n    }\n  } else if (state.outgoing.length === 0) {\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\n      // Increase the internal timeout wrt the advertised value to reduce\n      // the likelihood of ECONNRESET errors.\n      socket.setTimeout(server.keepAliveTimeout + HTTP_SERVER_KEEP_ALIVE_TIMEOUT_BUFFER);\n      state.keepAliveTimeoutSet = true;\n    }\n  } else {\n    // Start sending the next message\n    const m = state.outgoing.shift();\n    if (m) {\n      m.assignSocket(socket);\n    }\n  }\n}\n\nfunction emitCloseNT(self) {\n  if (!self._closed) {\n    self.destroyed = true;\n    self._closed = true;\n    self.emit('close');\n  }\n}\n\n// The following callback is issued after the headers have been read on a\n// new message. In this callback we setup the response object and pass it\n// to the user.\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (req.upgrade) {\n    req.upgrade = req.method === 'CONNECT' ||\n                  server.listenerCount('upgrade') > 0;\n    if (req.upgrade)\n      return 2;\n  }\n\n  state.incoming.push(req);\n\n  // If the writable end isn't consuming\x2C then stop reading\n  // so that we don't become overwhelmed by a flood of\n  // pipelined requests that may never be resolved.\n  if (!socket._paused) {\n    const ws = socket._writableState;\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\n      socket._paused = true;\n      // We also need to pause the parser\x2C but don't do that until after\n      // the call to execute\x2C because we may still be processing the last\n      // chunk.\n      socket.pause();\n    }\n  }\n\n  const res = new server[kServerResponse](req\x2C\n                                          {\n                                            highWaterMark: socket.writableHighWaterMark\x2C\n                                            rejectNonStandardBodyWrites: server.rejectNonStandardBodyWrites\x2C\n                                          });\n  res._keepAliveTimeout = server.keepAliveTimeout;\n  res._maxRequestsPerSocket = server.maxRequestsPerSocket;\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\n                                               socket\x2C state);\n\n  res.shouldKeepAlive = keepAlive;\n  res[kUniqueHeaders] = server[kUniqueHeaders];\n\n  if (onRequestStartChannel.hasSubscribers) {\n    onRequestStartChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\x2C\n    });\n  }\n\n  if (socket._httpMessage) {\n    // There are already pending outgoing res\x2C append.\n    state.outgoing.push(res);\n  } else {\n    res.assignSocket(socket);\n  }\n\n  // When we're finished writing the response\x2C check if this is the last\n  // response\x2C if so destroy the socket.\n  res.on('finish'\x2C\n         resOnFinish.bind(undefined\x2C\n                          req\x2C res\x2C socket\x2C state\x2C server));\n\n  let handled = false;\n\n\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\n\n    // From RFC 7230 5.4 https://datatracker.ietf.org/doc/html/rfc7230#section-5.4\n    // A server MUST respond with a 400 (Bad Request) status code to any\n    // HTTP/1.1 request message that lacks a Host header field\n    if (server.requireHostHeader && req.headers.host === undefined) {\n      res.writeHead(400\x2C ['Connection'\x2C 'close']);\n      res.end();\n      return 0;\n    }\n\n    const isRequestsLimitSet = (\n      typeof server.maxRequestsPerSocket === 'number' &&\n      server.maxRequestsPerSocket > 0\n    );\n\n    if (isRequestsLimitSet) {\n      state.requestsCount++;\n      res.maxRequestsOnConnectionReached = (\n        server.maxRequestsPerSocket <= state.requestsCount);\n    }\n\n    if (isRequestsLimitSet &&\n      (server.maxRequestsPerSocket < state.requestsCount)) {\n      handled = true;\n      server.emit('dropRequest'\x2C req\x2C socket);\n      res.writeHead(503);\n      res.end();\n    } else if (req.headers.expect !== undefined) {\n      handled = true;\n\n      if (continueExpression.test(req.headers.expect)) {\n        res._expect_continue = true;\n        if (server.listenerCount('checkContinue') > 0) {\n          server.emit('checkContinue'\x2C req\x2C res);\n        } else {\n          res.writeContinue();\n          server.emit('request'\x2C req\x2C res);\n        }\n      } else if (server.listenerCount('checkExpectation') > 0) {\n        server.emit('checkExpectation'\x2C req\x2C res);\n      } else {\n        res.writeHead(417);\n        res.end();\n      }\n    }\n  }\n\n  if (!handled) {\n    server.emit('request'\x2C req\x2C res);\n  }\n\n  return 0;  // No special treatment.\n}\n\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\n  if (!state.keepAliveTimeoutSet)\n    return;\n\n  socket.setTimeout(server.timeout || 0);\n  state.keepAliveTimeoutSet = false;\n}\n\nfunction onSocketResume() {\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\n  // state.\n  //\n  // We don't care about stream semantics for the consumed socket anyway.\n  if (this._paused) {\n    this.pause();\n    return;\n  }\n\n  if (this._handle && !this._handle.reading) {\n    this._handle.reading = true;\n    this._handle.readStart();\n  }\n}\n\nfunction onSocketPause() {\n  if (this._handle?.reading) {\n    this._handle.reading = false;\n    this._handle.readStop();\n  }\n}\n\nfunction unconsume(parser\x2C socket) {\n  if (socket._handle) {\n    if (parser._consumed)\n      parser.unconsume();\n    parser._consumed = false;\n    socket.removeListener('pause'\x2C onSocketPause);\n    socket.removeListener('resume'\x2C onSocketResume);\n  }\n}\n\nfunction generateSocketListenerWrapper(originalFnName) {\n  return function socketListenerWrap(ev\x2C fn) {\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\n                                                          ev\x2C fn);\n    if (!this.parser) {\n      this.on = net.Socket.prototype.on;\n      this.addListener = net.Socket.prototype.addListener;\n      this.prependListener = net.Socket.prototype.prependListener;\n      return res;\n    }\n\n    if (ev === 'data' || ev === 'readable')\n      unconsume(this.parser\x2C this);\n\n    return res;\n  };\n}\n\nmodule.exports = {\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\x2C\n  setupConnectionsTracking\x2C\n  storeHTTPOptions\x2C\n  _connectionListener: connectionListener\x2C\n  kServerResponse\x2C\n  httpServerPreClose\x2C\n  kConnectionsCheckingInterval\x2C\n};\n
code-source-info,0x12ea9865e4b8,124,0,38875,C0O0C4O38875,,
tick,0x1924a5ecc,105917,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98650ced,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,105917,0x12ea9865ea80,1703, node:_http_server:1:1,0x2858598a73f8,~
code-source-info,0x12ea9865ea80,124,0,38875,C0O0C413O1159C419O1175C425O1184C431O1195C437O1209C442O1233C448O1249C453O1259C459O1300C462O1300C466O1300C468O1327C471O1327C476O1361C479O1361C483O1361C485O1581C488O1581C493O1399C499O1410C505O1424C511O1446C517O1465C523O1485C529O1499C535O1537C541O1563C547O1634C550O1634C555O1614C561O1743C564O1743C569O1676C575O1694C581O1722C587O1882C590O1882C595O1780C601O1795C607O1809C613O1831C619O1845C625O1857C631O1969C634O1969C639O1918C645O1948C651O2030C654O2030C659O2010C665O2329C668O2329C673O2067C679O2096C684O2102C690O2129C696O2163C702O2193C708O2223C714O2253C720O2280C726O2302C732O2420C735O2420C740O2367C746O2383C752O2396C757O2541C760O2541C765O2456C771O2475C777O2494C783O2521C789O2588C792O2588C797O2605C802O2653C805O2653C810O2622C816O2635C822O2684C825O2684C830O2717C843O2718C849O2684C851O2775C854O2775C859O2840C867O2840C872O2837C874O2914C882O2914C887O2911C889O2990C897O2990C902O2987C904O3055C907O3055C911O3055C913O3115C916O3115C920O3115C922O3204C925O3204C930O3162C936O3177C942O3190C948O3260C952O3260C954O6735C957O6746C961O6757C964O6735C966O6781C969O6792C973O6803C976O6781C978O6828C981O6839C985O6851C988O6828C990O6877C993O6888C997O6901C1000O6877C1002O6927C1005O6927C1009O6927C1011O6999C1014O6999C1018O6999C1020O7088C1022O7088C1024O7198C1028O7198C1050O7205C1052O8300C1055O8336C1063O8363C1068O8300C1073O8375C1079O8375C1084O8431C1087O8446C1096O8464C1100O9115C1103O9130C1112O9151C1116O9158C1119O9173C1125O9197C1129O10203C1132O10218C1141O10241C1145O10501C1148O10516C1157O10539C1161O10726C1164O10741C1173O10765C1177O10888C1180O10903C1189O10929C1193O11032C1196O11047C1205O11073C1209O11588C1212O11603C1221O11629C1225O11699C1228O11714C1235O11734C1239O14626C1242O14641C1250O14680C1255O14690C1259O14663C1263O19372C1266O19400C1274O19415C1279O19422C1284O19372C1289O19434C1295O19467C1300O19434C1305O19477C1308O19484C1317O19500C1321O19623C1324O19630C1329O19640C1333O19660C1337O19728C1340O19735C1349O19765C1353O19976C1356O19983C1365O20014C1369O20343C1372O20350C1381O20371C1385O20505C1388O20512C1393O20525C1402O20549C1406O27964C1410O27964C1412O28008C1427O28044C1443O28056C1450O28008C1456O28001C1458O28139C1473O28175C1489O28187C1496O28139C1502O28132C1504O28283C1519O28319C1535O28331C1542O28283C1548O28276C1550O28431C1565O28467C1581O28479C1588O28431C1594O28424C1596O38645C1603O38666C1613O38682C1623O38692C1633O38710C1643O38738C1653O38779C1663O38801C1673O38820C1683O38842C1693O38660C1702O38874,,
tick,0x1012e3efc,106042,0,0x0,0,0x107f890bc,0x107f88e30,0x12ea98650ced,0x107f89188,0x1a7c5b205abc,0x3a8f56112500,0x12ea9865093e,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,10,106333,0x107f8f900,832,syncExports node:internal/bootstrap/realm:372:14,0x22b216cc4ee8,^
code-source-info,0x107f8f900,6,12172,12505,,,
code-creation,JS,10,106333,0x107f8fc60,680,channel node:diagnostics_channel:221:17,0x2ddc31effc80,^
code-source-info,0x107f8fc60,65,4890,5140,,,
code-creation,JS,10,106375,0x107f8ff40,752,TracingChannel node:diagnostics_channel:278:14,0x6ba9c7812f0,^
code-source-info,0x107f8ff40,65,6261,6523,,,
code-creation,JS,10,106375,0x107f90260,312,protoGetter node:net:878:21,0x15988e449710,^
code-source-info,0x107f90260,96,23048,23210,,,
code-creation,JS,10,106417,0x107f903c0,1008,deprecate node:internal/util:149:19,0x22b216cd6540,^
code-source-info,0x107f903c0,13,3938,4974,,,
code-creation,JS,10,106417,0x107f907e0,1016,getDeprecationWarningEmitter node:internal/util:102:38,0x22b216cd6030,^
code-source-info,0x107f907e0,13,2456,3171,,,
code-creation,JS,10,106417,0x107f90c00,312,hideStackFrames node:internal/errors:534:25,0x22b216cc9548,^
code-source-info,0x107f90c00,7,14702,14975,,,
code-creation,JS,10,106667,0x107f90d60,1048,debuglog node:internal/util/debuglog:87:18,0x22b216ce4308,^
script-source,19,node:internal/util/debuglog,'use strict';\n\nconst {\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n} = require('internal/constants');\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\nconst { getCategoryEnabledBuffer\x2C trace } = internalBinding('trace_events');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = { __proto__: null };\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nfunction debuglogImpl(enabled\x2C set\x2C args) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n  return logger;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nconst kNone = 1 << 0;\nconst kSkipLog = 1 << 1;\nconst kSkipTrace = 1 << 2;\nconst kShouldSkipAll = kSkipLog | kSkipTrace;\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\x2C\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nfunction safeTraceLabel(label) {\n  return label.replace(/\\\\/g\x2C '\\\\\\\\').replaceAll('"'\x2C '\\\\"');\n}\n\n/**\n * @typedef {(label: string\x2C timeFormatted: string\x2C args?: any[]) => void} LogImpl\n */\n\n/**\n * Returns true if label was found\n * @param {string} timesStore\n * @param {string} implementation\n * @param {LogImpl} logImp\n * @param {string} label\n * @param {any} args\n * @returns {void}\n */\nfunction timeLogImpl(timesStore\x2C implementation\x2C logImp\x2C label\x2C args) {\n  const time = timesStore.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for ${implementation}`);\n    return;\n  }\n\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (args === undefined) {\n    logImp(label\x2C formatted);\n  } else {\n    logImp(label\x2C formatted\x2C args);\n  }\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {string} logLabel\n * @param {string} traceLabel\n * @returns {void}\n */\nfunction time(timesStore\x2C traceCategory\x2C implementation\x2C timerFlags\x2C logLabel = 'default'\x2C traceLabel = undefined) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if (timesStore.has(logLabel)) {\n    process.emitWarning(`Label '${logLabel}' already exists for ${implementation}`);\n    return;\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceBegin\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n\n  timesStore.set(logLabel\x2C process.hrtime());\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {LogImpl} logImpl\n * @param {string} logLabel\n * @param {string} traceLabel\n * @returns {void}\n */\nfunction timeEnd(\n  timesStore\x2C\n  traceCategory\x2C\n  implementation\x2C\n  timerFlags\x2C\n  logImpl\x2C\n  logLabel = 'default'\x2C\n  traceLabel = undefined\x2C\n) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if ((timerFlags & kSkipLog) === 0) {\n    timeLogImpl(timesStore\x2C implementation\x2C logImpl\x2C logLabel);\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceEnd\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n\n  timesStore.delete(logLabel);\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {LogImpl} logImpl\n * @param {string} logLabel\n * @param {string} traceLabel\n * @param {any[]} args\n * @returns {void}\n */\nfunction timeLog(\n  timesStore\x2C\n  traceCategory\x2C\n  implementation\x2C\n  timerFlags\x2C\n  logImpl\x2C\n  logLabel = 'default'\x2C\n  traceLabel = undefined\x2C\n  args\x2C\n) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if ((timerFlags & kSkipLog) === 0) {\n    timeLogImpl(timesStore\x2C implementation\x2C logImpl\x2C logLabel\x2C args);\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceInstant\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n}\n\n/**\n * @type {Record<string\x2C SafeMap>}\n */\nlet tracesStores;\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string) => void} TimerStart\n */\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string) => void} TimerEnd\n */\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string\x2C args?: any[]) => void} TimerLog\n */\n\n/**\n * Debuglog with time fns and support for trace\n * @param {string} set\n * @param {(startTimer: TimerStart\x2C endTimer: TimerEnd\x2C logTimer: TimerLog) => void} cb\n * @returns {{startTimer: TimerStart\x2C endTimer: TimerEnd\x2C logTimer: TimerLog}}\n */\nfunction debugWithTimer(set\x2C cb) {\n  set = StringPrototypeToUpperCase(set);\n\n  if (tracesStores === undefined) {\n    tracesStores = { __proto__: null };\n  }\n\n  /**\n   * @type {LogImpl}\n   */\n  function logImpl(label\x2C timeFormatted\x2C args) {\n    const pid = process.pid;\n    const colors = { colors: lazyUtilColors().shouldColorize(process.stderr) };\n    const coloredPID = inspect(pid\x2C colors);\n\n    if (args === undefined)\n      process.stderr.write(format('%s %s %s: %s\\n'\x2C set\x2C coloredPID\x2C label\x2C timeFormatted));\n    else\n      process.stderr.write(\n        format(\n          '%s %s %s: %s\\n'\x2C\n          set\x2C\n          coloredPID\x2C\n          label\x2C\n          timeFormatted\x2C\n          ...new SafeArrayIterator(args)\x2C\n        )\x2C\n      );\n  }\n\n  const traceCategory = `node\x2Cnode.${StringPrototypeToLowerCase(set)}`;\n  let traceCategoryBuffer;\n  let debugLogCategoryEnabled = false;\n  let timerFlags = kNone;\n\n  function ensureTimerFlagsAreUpdated() {\n    timerFlags &= ~kSkipTrace;\n\n    if (traceCategoryBuffer[0] === 0) {\n      timerFlags |= kSkipTrace;\n    }\n  }\n\n  /**\n   * @type {TimerStart}\n   */\n  function internalStartTimer(logLabel\x2C traceLabel) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    time(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.time'\x2C\n      timerFlags\x2C\n      logLabel\x2C\n      traceLabel\x2C\n    );\n  }\n\n  /**\n   * @type {TimerEnd}\n   */\n  function internalEndTimer(logLabel\x2C traceLabel) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    timeEnd(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.timeEnd'\x2C\n      timerFlags\x2C\n      logImpl\x2C\n      logLabel\x2C\n      traceLabel\x2C\n    );\n  }\n\n  /**\n   * @type {TimerLog}\n   */\n  function internalLogTimer(logLabel\x2C traceLabel\x2C args) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    timeLog(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.timeLog'\x2C\n      timerFlags\x2C\n      logImpl\x2C\n      logLabel\x2C\n      traceLabel\x2C\n      args\x2C\n    );\n  }\n\n  function init() {\n    if (tracesStores[set] === undefined) {\n      tracesStores[set] = new SafeMap();\n    }\n    emitWarningIfNeeded(set);\n    debugLogCategoryEnabled = testEnabled(set);\n    traceCategoryBuffer = getCategoryEnabledBuffer(traceCategory);\n\n    timerFlags = kNone;\n\n    if (!debugLogCategoryEnabled) {\n      timerFlags |= kSkipLog;\n    }\n\n    if (traceCategoryBuffer[0] === 0) {\n      timerFlags |= kSkipTrace;\n    }\n\n    cb(internalStartTimer\x2C internalEndTimer\x2C internalLogTimer);\n  }\n\n  /**\n   * @type {TimerStart}\n   */\n  const startTimer = (logLabel\x2C traceLabel) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalStartTimer(logLabel\x2C traceLabel);\n  };\n\n  /**\n   * @type {TimerEnd}\n   */\n  const endTimer = (logLabel\x2C traceLabel) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalEndTimer(logLabel\x2C traceLabel);\n  };\n\n  /**\n   * @type {TimerLog}\n   */\n  const logTimer = (logLabel\x2C traceLabel\x2C args) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalLogTimer(logLabel\x2C traceLabel\x2C args);\n  };\n\n  return {\n    startTimer\x2C\n    endTimer\x2C\n    logTimer\x2C\n  };\n}\n\nmodule.exports = {\n  kNone\x2C\n  kSkipLog\x2C\n  kSkipTrace\x2C\n  formatTime\x2C\n  time\x2C\n  timeEnd\x2C\n  timeLog\x2C\n  debuglog\x2C\n  debugWithTimer\x2C\n  initializeDebugEnv\x2C\n};\n
code-source-info,0x107f90d60,19,2663,3672,,,
code-creation,JS,10,107125,0x107f911a0,336,getOwn node:internal/bootstrap/realm:205:16,0x22b216cc41a0,^
code-source-info,0x107f911a0,6,6531,6685,,,
code-creation,JS,9,107167,0x12ea9865f8c0,34,get node:http:151:6,0xcb65973e308,~
code-source-info,0x12ea9865f8c0,94,5474,5680,C0O5483C6O5551C12O5551C17O5532C22O5586C25O5602C29O5600C31O5655C33O5676,,
code-creation,JS,9,107167,0x12ea9865f978,10,get node:http:165:6,0xcb65973e360,~
code-source-info,0x12ea9865f978,94,5807,5849,C0O5816C5O5833C9O5845,,
code-creation,JS,9,107167,0x12ea9865fa00,12,get node:http:177:6,0xcb65973e410,~
code-source-info,0x12ea9865fa00,94,6029,6072,C0O6038C3O6045C7O6057C11O6068,,
code-creation,JS,9,107208,0x12ea9865fa90,21,lazyUndici node:http:122:20,0xcb65973e258,~
code-source-info,0x12ea9865fa90,94,4908,4974,C0O4915C14O4933C18O4929C20O4972,,
tick,0x101197fbc,107292,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x101197fbc,108583,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
new,MemoryChunk,0x38a74a540000,262144
tick,0x101201868,109833,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x100cfdd98,111083,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1011fbc20,112333,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,112792,0x12ea9865fb20,5, node:internal/deps/undici/undici:1:1,0x38a74a566680,~
script-source,125,node:internal/deps/undici/undici,"use strict";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __name = (target\x2C value) => __defProp(target\x2C "name"\x2C { value\x2C configurable: true });\nvar __commonJS = (cb\x2C mod) => function __require() {\n  return mod || (0\x2C cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports\x2C mod)\x2C mod.exports;\n};\n\n// lib/core/errors.js\nvar require_errors = __commonJS({\n  "lib/core/errors.js"(exports2\x2C module2) {\n    "use strict";\n    var UndiciError = class extends Error {\n      static {\n        __name(this\x2C "UndiciError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "UndiciError";\n        this.code = "UND_ERR";\n      }\n    };\n    var ConnectTimeoutError = class extends UndiciError {\n      static {\n        __name(this\x2C "ConnectTimeoutError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "ConnectTimeoutError";\n        this.message = message || "Connect Timeout Error";\n        this.code = "UND_ERR_CONNECT_TIMEOUT";\n      }\n    };\n    var HeadersTimeoutError = class extends UndiciError {\n      static {\n        __name(this\x2C "HeadersTimeoutError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "HeadersTimeoutError";\n        this.message = message || "Headers Timeout Error";\n        this.code = "UND_ERR_HEADERS_TIMEOUT";\n      }\n    };\n    var HeadersOverflowError = class extends UndiciError {\n      static {\n        __name(this\x2C "HeadersOverflowError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "HeadersOverflowError";\n        this.message = message || "Headers Overflow Error";\n        this.code = "UND_ERR_HEADERS_OVERFLOW";\n      }\n    };\n    var BodyTimeoutError = class extends UndiciError {\n      static {\n        __name(this\x2C "BodyTimeoutError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "BodyTimeoutError";\n        this.message = message || "Body Timeout Error";\n        this.code = "UND_ERR_BODY_TIMEOUT";\n      }\n    };\n    var ResponseStatusCodeError = class extends UndiciError {\n      static {\n        __name(this\x2C "ResponseStatusCodeError");\n      }\n      constructor(message\x2C statusCode\x2C headers\x2C body) {\n        super(message);\n        this.name = "ResponseStatusCodeError";\n        this.message = message || "Response Status Code Error";\n        this.code = "UND_ERR_RESPONSE_STATUS_CODE";\n        this.body = body;\n        this.status = statusCode;\n        this.statusCode = statusCode;\n        this.headers = headers;\n      }\n    };\n    var InvalidArgumentError = class extends UndiciError {\n      static {\n        __name(this\x2C "InvalidArgumentError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "InvalidArgumentError";\n        this.message = message || "Invalid Argument Error";\n        this.code = "UND_ERR_INVALID_ARG";\n      }\n    };\n    var InvalidReturnValueError = class extends UndiciError {\n      static {\n        __name(this\x2C "InvalidReturnValueError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "InvalidReturnValueError";\n        this.message = message || "Invalid Return Value Error";\n        this.code = "UND_ERR_INVALID_RETURN_VALUE";\n      }\n    };\n    var AbortError = class extends UndiciError {\n      static {\n        __name(this\x2C "AbortError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "AbortError";\n        this.message = message || "The operation was aborted";\n      }\n    };\n    var RequestAbortedError = class extends AbortError {\n      static {\n        __name(this\x2C "RequestAbortedError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "AbortError";\n        this.message = message || "Request aborted";\n        this.code = "UND_ERR_ABORTED";\n      }\n    };\n    var InformationalError = class extends UndiciError {\n      static {\n        __name(this\x2C "InformationalError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "InformationalError";\n        this.message = message || "Request information";\n        this.code = "UND_ERR_INFO";\n      }\n    };\n    var RequestContentLengthMismatchError = class extends UndiciError {\n      static {\n        __name(this\x2C "RequestContentLengthMismatchError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "RequestContentLengthMismatchError";\n        this.message = message || "Request body length does not match content-length header";\n        this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    var ResponseContentLengthMismatchError = class extends UndiciError {\n      static {\n        __name(this\x2C "ResponseContentLengthMismatchError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "ResponseContentLengthMismatchError";\n        this.message = message || "Response body length does not match content-length header";\n        this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";\n      }\n    };\n    var ClientDestroyedError = class extends UndiciError {\n      static {\n        __name(this\x2C "ClientDestroyedError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "ClientDestroyedError";\n        this.message = message || "The client is destroyed";\n        this.code = "UND_ERR_DESTROYED";\n      }\n    };\n    var ClientClosedError = class extends UndiciError {\n      static {\n        __name(this\x2C "ClientClosedError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "ClientClosedError";\n        this.message = message || "The client is closed";\n        this.code = "UND_ERR_CLOSED";\n      }\n    };\n    var SocketError = class extends UndiciError {\n      static {\n        __name(this\x2C "SocketError");\n      }\n      constructor(message\x2C socket) {\n        super(message);\n        this.name = "SocketError";\n        this.message = message || "Socket error";\n        this.code = "UND_ERR_SOCKET";\n        this.socket = socket;\n      }\n    };\n    var NotSupportedError = class extends UndiciError {\n      static {\n        __name(this\x2C "NotSupportedError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "NotSupportedError";\n        this.message = message || "Not supported error";\n        this.code = "UND_ERR_NOT_SUPPORTED";\n      }\n    };\n    var BalancedPoolMissingUpstreamError = class extends UndiciError {\n      static {\n        __name(this\x2C "BalancedPoolMissingUpstreamError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "MissingUpstreamError";\n        this.message = message || "No upstream has been added to the BalancedPool";\n        this.code = "UND_ERR_BPL_MISSING_UPSTREAM";\n      }\n    };\n    var HTTPParserError = class extends Error {\n      static {\n        __name(this\x2C "HTTPParserError");\n      }\n      constructor(message\x2C code\x2C data) {\n        super(message);\n        this.name = "HTTPParserError";\n        this.code = code ? `HPE_${code}` : void 0;\n        this.data = data ? data.toString() : void 0;\n      }\n    };\n    var ResponseExceededMaxSizeError = class extends UndiciError {\n      static {\n        __name(this\x2C "ResponseExceededMaxSizeError");\n      }\n      constructor(message) {\n        super(message);\n        this.name = "ResponseExceededMaxSizeError";\n        this.message = message || "Response content exceeded max size";\n        this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";\n      }\n    };\n    var RequestRetryError = class extends UndiciError {\n      static {\n        __name(this\x2C "RequestRetryError");\n      }\n      constructor(message\x2C code\x2C { headers\x2C data }) {\n        super(message);\n        this.name = "RequestRetryError";\n        this.message = message || "Request retry error";\n        this.code = "UND_ERR_REQ_RETRY";\n        this.statusCode = code;\n        this.data = data;\n        this.headers = headers;\n      }\n    };\n    var ResponseError = class extends UndiciError {\n      static {\n        __name(this\x2C "ResponseError");\n      }\n      constructor(message\x2C code\x2C { headers\x2C data }) {\n        super(message);\n        this.name = "ResponseError";\n        this.message = message || "Response error";\n        this.code = "UND_ERR_RESPONSE";\n        this.statusCode = code;\n        this.data = data;\n        this.headers = headers;\n      }\n    };\n    var SecureProxyConnectionError = class extends UndiciError {\n      static {\n        __name(this\x2C "SecureProxyConnectionError");\n      }\n      constructor(cause\x2C message\x2C options) {\n        super(message\x2C { cause\x2C ...options ?? {} });\n        this.name = "SecureProxyConnectionError";\n        this.message = message || "Secure Proxy Connection failed";\n        this.code = "UND_ERR_PRX_TLS";\n        this.cause = cause;\n      }\n    };\n    module2.exports = {\n      AbortError\x2C\n      HTTPParserError\x2C\n      UndiciError\x2C\n      HeadersTimeoutError\x2C\n      HeadersOverflowError\x2C\n      BodyTimeoutError\x2C\n      RequestContentLengthMismatchError\x2C\n      ConnectTimeoutError\x2C\n      ResponseStatusCodeError\x2C\n      InvalidArgumentError\x2C\n      InvalidReturnValueError\x2C\n      RequestAbortedError\x2C\n      ClientDestroyedError\x2C\n      ClientClosedError\x2C\n      InformationalError\x2C\n      SocketError\x2C\n      NotSupportedError\x2C\n      ResponseContentLengthMismatchError\x2C\n      BalancedPoolMissingUpstreamError\x2C\n      ResponseExceededMaxSizeError\x2C\n      RequestRetryError\x2C\n      ResponseError\x2C\n      SecureProxyConnectionError\n    };\n  }\n});\n\n// lib/core/symbols.js\nvar require_symbols = __commonJS({\n  "lib/core/symbols.js"(exports2\x2C module2) {\n    module2.exports = {\n      kClose: Symbol("close")\x2C\n      kDestroy: Symbol("destroy")\x2C\n      kDispatch: Symbol("dispatch")\x2C\n      kUrl: Symbol("url")\x2C\n      kWriting: Symbol("writing")\x2C\n      kResuming: Symbol("resuming")\x2C\n      kQueue: Symbol("queue")\x2C\n      kConnect: Symbol("connect")\x2C\n      kConnecting: Symbol("connecting")\x2C\n      kKeepAliveDefaultTimeout: Symbol("default keep alive timeout")\x2C\n      kKeepAliveMaxTimeout: Symbol("max keep alive timeout")\x2C\n      kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold")\x2C\n      kKeepAliveTimeoutValue: Symbol("keep alive timeout")\x2C\n      kKeepAlive: Symbol("keep alive")\x2C\n      kHeadersTimeout: Symbol("headers timeout")\x2C\n      kBodyTimeout: Symbol("body timeout")\x2C\n      kServerName: Symbol("server name")\x2C\n      kLocalAddress: Symbol("local address")\x2C\n      kHost: Symbol("host")\x2C\n      kNoRef: Symbol("no ref")\x2C\n      kBodyUsed: Symbol("used")\x2C\n      kBody: Symbol("abstracted request body")\x2C\n      kRunning: Symbol("running")\x2C\n      kBlocking: Symbol("blocking")\x2C\n      kPending: Symbol("pending")\x2C\n      kSize: Symbol("size")\x2C\n      kBusy: Symbol("busy")\x2C\n      kQueued: Symbol("queued")\x2C\n      kFree: Symbol("free")\x2C\n      kConnected: Symbol("connected")\x2C\n      kClosed: Symbol("closed")\x2C\n      kNeedDrain: Symbol("need drain")\x2C\n      kReset: Symbol("reset")\x2C\n      kDestroyed: Symbol.for("nodejs.stream.destroyed")\x2C\n      kResume: Symbol("resume")\x2C\n      kOnError: Symbol("on error")\x2C\n      kMaxHeadersSize: Symbol("max headers size")\x2C\n      kRunningIdx: Symbol("running index")\x2C\n      kPendingIdx: Symbol("pending index")\x2C\n      kError: Symbol("error")\x2C\n      kClients: Symbol("clients")\x2C\n      kClient: Symbol("client")\x2C\n      kParser: Symbol("parser")\x2C\n      kOnDestroyed: Symbol("destroy callbacks")\x2C\n      kPipelining: Symbol("pipelining")\x2C\n      kSocket: Symbol("socket")\x2C\n      kHostHeader: Symbol("host header")\x2C\n      kConnector: Symbol("connector")\x2C\n      kStrictContentLength: Symbol("strict content length")\x2C\n      kMaxRedirections: Symbol("maxRedirections")\x2C\n      kMaxRequests: Symbol("maxRequestsPerClient")\x2C\n      kProxy: Symbol("proxy agent options")\x2C\n      kCounter: Symbol("socket request counter")\x2C\n      kInterceptors: Symbol("dispatch interceptors")\x2C\n      kMaxResponseSize: Symbol("max response size")\x2C\n      kHTTP2Session: Symbol("http2Session")\x2C\n      kHTTP2SessionState: Symbol("http2Session state")\x2C\n      kRetryHandlerDefaultRetry: Symbol("retry agent default retry")\x2C\n      kConstruct: Symbol("constructable")\x2C\n      kListeners: Symbol("listeners")\x2C\n      kHTTPContext: Symbol("http context")\x2C\n      kMaxConcurrentStreams: Symbol("max concurrent streams")\x2C\n      kNoProxyAgent: Symbol("no proxy agent")\x2C\n      kHttpProxyAgent: Symbol("http proxy agent")\x2C\n      kHttpsProxyAgent: Symbol("https proxy agent")\n    };\n  }\n});\n\n// lib/dispatcher/dispatcher.js\nvar require_dispatcher = __commonJS({\n  "lib/dispatcher/dispatcher.js"(exports2\x2C module2) {\n    "use strict";\n    var EventEmitter = require("node:events");\n    var Dispatcher = class extends EventEmitter {\n      static {\n        __name(this\x2C "Dispatcher");\n      }\n      dispatch() {\n        throw new Error("not implemented");\n      }\n      close() {\n        throw new Error("not implemented");\n      }\n      destroy() {\n        throw new Error("not implemented");\n      }\n      compose(...args) {\n        const interceptors = Array.isArray(args[0]) ? args[0] : args;\n        let dispatch = this.dispatch.bind(this);\n        for (const interceptor of interceptors) {\n          if (interceptor == null) {\n            continue;\n          }\n          if (typeof interceptor !== "function") {\n            throw new TypeError(`invalid interceptor\x2C expected function received ${typeof interceptor}`);\n          }\n          dispatch = interceptor(dispatch);\n          if (dispatch == null || typeof dispatch !== "function" || dispatch.length !== 2) {\n            throw new TypeError("invalid interceptor");\n          }\n        }\n        return new ComposedDispatcher(this\x2C dispatch);\n      }\n    };\n    var ComposedDispatcher = class extends Dispatcher {\n      static {\n        __name(this\x2C "ComposedDispatcher");\n      }\n      #dispatcher = null;\n      #dispatch = null;\n      constructor(dispatcher\x2C dispatch) {\n        super();\n        this.#dispatcher = dispatcher;\n        this.#dispatch = dispatch;\n      }\n      dispatch(...args) {\n        this.#dispatch(...args);\n      }\n      close(...args) {\n        return this.#dispatcher.close(...args);\n      }\n      destroy(...args) {\n        return this.#dispatcher.destroy(...args);\n      }\n    };\n    module2.exports = Dispatcher;\n  }\n});\n\n// lib/dispatcher/dispatcher-base.js\nvar require_dispatcher_base = __commonJS({\n  "lib/dispatcher/dispatcher-base.js"(exports2\x2C module2) {\n    "use strict";\n    var Dispatcher = require_dispatcher();\n    var {\n      ClientDestroyedError\x2C\n      ClientClosedError\x2C\n      InvalidArgumentError\n    } = require_errors();\n    var { kDestroy\x2C kClose\x2C kClosed\x2C kDestroyed\x2C kDispatch\x2C kInterceptors } = require_symbols();\n    var kOnDestroyed = Symbol("onDestroyed");\n    var kOnClosed = Symbol("onClosed");\n    var kInterceptedDispatch = Symbol("Intercepted Dispatch");\n    var DispatcherBase = class extends Dispatcher {\n      static {\n        __name(this\x2C "DispatcherBase");\n      }\n      constructor() {\n        super();\n        this[kDestroyed] = false;\n        this[kOnDestroyed] = null;\n        this[kClosed] = false;\n        this[kOnClosed] = [];\n      }\n      get destroyed() {\n        return this[kDestroyed];\n      }\n      get closed() {\n        return this[kClosed];\n      }\n      get interceptors() {\n        return this[kInterceptors];\n      }\n      set interceptors(newInterceptors) {\n        if (newInterceptors) {\n          for (let i = newInterceptors.length - 1; i >= 0; i--) {\n            const interceptor = this[kInterceptors][i];\n            if (typeof interceptor !== "function") {\n              throw new InvalidArgumentError("interceptor must be an function");\n            }\n          }\n        }\n        this[kInterceptors] = newInterceptors;\n      }\n      close(callback) {\n        if (callback === void 0) {\n          return new Promise((resolve\x2C reject) => {\n            this.close((err\x2C data) => {\n              return err ? reject(err) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          queueMicrotask(() => callback(new ClientDestroyedError()\x2C null));\n          return;\n        }\n        if (this[kClosed]) {\n          if (this[kOnClosed]) {\n            this[kOnClosed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null\x2C null));\n          }\n          return;\n        }\n        this[kClosed] = true;\n        this[kOnClosed].push(callback);\n        const onClosed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnClosed];\n          this[kOnClosed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null\x2C null);\n          }\n        }\x2C "onClosed");\n        this[kClose]().then(() => this.destroy()).then(() => {\n          queueMicrotask(onClosed);\n        });\n      }\n      destroy(err\x2C callback) {\n        if (typeof err === "function") {\n          callback = err;\n          err = null;\n        }\n        if (callback === void 0) {\n          return new Promise((resolve\x2C reject) => {\n            this.destroy(err\x2C (err2\x2C data) => {\n              return err2 ? (\n                /* istanbul ignore next: should never error */\n                reject(err2)\n              ) : resolve(data);\n            });\n          });\n        }\n        if (typeof callback !== "function") {\n          throw new InvalidArgumentError("invalid callback");\n        }\n        if (this[kDestroyed]) {\n          if (this[kOnDestroyed]) {\n            this[kOnDestroyed].push(callback);\n          } else {\n            queueMicrotask(() => callback(null\x2C null));\n          }\n          return;\n        }\n        if (!err) {\n          err = new ClientDestroyedError();\n        }\n        this[kDestroyed] = true;\n        this[kOnDestroyed] = this[kOnDestroyed] || [];\n        this[kOnDestroyed].push(callback);\n        const onDestroyed = /* @__PURE__ */ __name(() => {\n          const callbacks = this[kOnDestroyed];\n          this[kOnDestroyed] = null;\n          for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](null\x2C null);\n          }\n        }\x2C "onDestroyed");\n        this[kDestroy](err).then(() => {\n          queueMicrotask(onDestroyed);\n        });\n      }\n      [kInterceptedDispatch](opts\x2C handler) {\n        if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n          this[kInterceptedDispatch] = this[kDispatch];\n          return this[kDispatch](opts\x2C handler);\n        }\n        let dispatch = this[kDispatch].bind(this);\n        for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n          dispatch = this[kInterceptors][i](dispatch);\n        }\n        this[kInterceptedDispatch] = dispatch;\n        return dispatch(opts\x2C handler);\n      }\n      dispatch(opts\x2C handler) {\n        if (!handler || typeof handler !== "object") {\n          throw new InvalidArgumentError("handler must be an object");\n        }\n        try {\n          if (!opts || typeof opts !== "object") {\n            throw new InvalidArgumentError("opts must be an object.");\n          }\n          if (this[kDestroyed] || this[kOnDestroyed]) {\n            throw new ClientDestroyedError();\n          }\n          if (this[kClosed]) {\n            throw new ClientClosedError();\n          }\n          return this[kInterceptedDispatch](opts\x2C handler);\n        } catch (err) {\n          if (typeof handler.onError !== "function") {\n            throw new InvalidArgumentError("invalid onError method");\n          }\n          handler.onError(err);\n          return false;\n        }\n      }\n    };\n    module2.exports = DispatcherBase;\n  }\n});\n\n// lib/dispatcher/fixed-queue.js\nvar require_fixed_queue = __commonJS({\n  "lib/dispatcher/fixed-queue.js"(exports2\x2C module2) {\n    "use strict";\n    var kSize = 2048;\n    var kMask = kSize - 1;\n    var FixedCircularBuffer = class {\n      static {\n        __name(this\x2C "FixedCircularBuffer");\n      }\n      constructor() {\n        this.bottom = 0;\n        this.top = 0;\n        this.list = new Array(kSize);\n        this.next = null;\n      }\n      isEmpty() {\n        return this.top === this.bottom;\n      }\n      isFull() {\n        return (this.top + 1 & kMask) === this.bottom;\n      }\n      push(data) {\n        this.list[this.top] = data;\n        this.top = this.top + 1 & kMask;\n      }\n      shift() {\n        const nextItem = this.list[this.bottom];\n        if (nextItem === void 0)\n          return null;\n        this.list[this.bottom] = void 0;\n        this.bottom = this.bottom + 1 & kMask;\n        return nextItem;\n      }\n    };\n    module2.exports = class FixedQueue {\n      static {\n        __name(this\x2C "FixedQueue");\n      }\n      constructor() {\n        this.head = this.tail = new FixedCircularBuffer();\n      }\n      isEmpty() {\n        return this.head.isEmpty();\n      }\n      push(data) {\n        if (this.head.isFull()) {\n          this.head = this.head.next = new FixedCircularBuffer();\n        }\n        this.head.push(data);\n      }\n      shift() {\n        const tail = this.tail;\n        const next = tail.shift();\n        if (tail.isEmpty() && tail.next !== null) {\n          this.tail = tail.next;\n        }\n        return next;\n      }\n    };\n  }\n});\n\n// lib/dispatcher/pool-stats.js\nvar require_pool_stats = __commonJS({\n  "lib/dispatcher/pool-stats.js"(exports2\x2C module2) {\n    var { kFree\x2C kConnected\x2C kPending\x2C kQueued\x2C kRunning\x2C kSize } = require_symbols();\n    var kPool = Symbol("pool");\n    var PoolStats = class {\n      static {\n        __name(this\x2C "PoolStats");\n      }\n      constructor(pool) {\n        this[kPool] = pool;\n      }\n      get connected() {\n        return this[kPool][kConnected];\n      }\n      get free() {\n        return this[kPool][kFree];\n      }\n      get pending() {\n        return this[kPool][kPending];\n      }\n      get queued() {\n        return this[kPool][kQueued];\n      }\n      get running() {\n        return this[kPool][kRunning];\n      }\n      get size() {\n        return this[kPool][kSize];\n      }\n    };\n    module2.exports = PoolStats;\n  }\n});\n\n// lib/dispatcher/pool-base.js\nvar require_pool_base = __commonJS({\n  "lib/dispatcher/pool-base.js"(exports2\x2C module2) {\n    "use strict";\n    var DispatcherBase = require_dispatcher_base();\n    var FixedQueue = require_fixed_queue();\n    var { kConnected\x2C kSize\x2C kRunning\x2C kPending\x2C kQueued\x2C kBusy\x2C kFree\x2C kUrl\x2C kClose\x2C kDestroy\x2C kDispatch } = require_symbols();\n    var PoolStats = require_pool_stats();\n    var kClients = Symbol("clients");\n    var kNeedDrain = Symbol("needDrain");\n    var kQueue = Symbol("queue");\n    var kClosedResolve = Symbol("closed resolve");\n    var kOnDrain = Symbol("onDrain");\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kGetDispatcher = Symbol("get dispatcher");\n    var kAddClient = Symbol("add client");\n    var kRemoveClient = Symbol("remove client");\n    var kStats = Symbol("stats");\n    var PoolBase = class extends DispatcherBase {\n      static {\n        __name(this\x2C "PoolBase");\n      }\n      constructor() {\n        super();\n        this[kQueue] = new FixedQueue();\n        this[kClients] = [];\n        this[kQueued] = 0;\n        const pool = this;\n        this[kOnDrain] = /* @__PURE__ */ __name(function onDrain(origin\x2C targets) {\n          const queue = pool[kQueue];\n          let needDrain = false;\n          while (!needDrain) {\n            const item = queue.shift();\n            if (!item) {\n              break;\n            }\n            pool[kQueued]--;\n            needDrain = !this.dispatch(item.opts\x2C item.handler);\n          }\n          this[kNeedDrain] = needDrain;\n          if (!this[kNeedDrain] && pool[kNeedDrain]) {\n            pool[kNeedDrain] = false;\n            pool.emit("drain"\x2C origin\x2C [pool\x2C ...targets]);\n          }\n          if (pool[kClosedResolve] && queue.isEmpty()) {\n            Promise.all(pool[kClients].map((c) => c.close())).then(pool[kClosedResolve]);\n          }\n        }\x2C "onDrain");\n        this[kOnConnect] = (origin\x2C targets) => {\n          pool.emit("connect"\x2C origin\x2C [pool\x2C ...targets]);\n        };\n        this[kOnDisconnect] = (origin\x2C targets\x2C err) => {\n          pool.emit("disconnect"\x2C origin\x2C [pool\x2C ...targets]\x2C err);\n        };\n        this[kOnConnectionError] = (origin\x2C targets\x2C err) => {\n          pool.emit("connectionError"\x2C origin\x2C [pool\x2C ...targets]\x2C err);\n        };\n        this[kStats] = new PoolStats(this);\n      }\n      get [kBusy]() {\n        return this[kNeedDrain];\n      }\n      get [kConnected]() {\n        return this[kClients].filter((client) => client[kConnected]).length;\n      }\n      get [kFree]() {\n        return this[kClients].filter((client) => client[kConnected] && !client[kNeedDrain]).length;\n      }\n      get [kPending]() {\n        let ret = this[kQueued];\n        for (const { [kPending]: pending } of this[kClients]) {\n          ret += pending;\n        }\n        return ret;\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const { [kRunning]: running } of this[kClients]) {\n          ret += running;\n        }\n        return ret;\n      }\n      get [kSize]() {\n        let ret = this[kQueued];\n        for (const { [kSize]: size } of this[kClients]) {\n          ret += size;\n        }\n        return ret;\n      }\n      get stats() {\n        return this[kStats];\n      }\n      async [kClose]() {\n        if (this[kQueue].isEmpty()) {\n          await Promise.all(this[kClients].map((c) => c.close()));\n        } else {\n          await new Promise((resolve) => {\n            this[kClosedResolve] = resolve;\n          });\n        }\n      }\n      async [kDestroy](err) {\n        while (true) {\n          const item = this[kQueue].shift();\n          if (!item) {\n            break;\n          }\n          item.handler.onError(err);\n        }\n        await Promise.all(this[kClients].map((c) => c.destroy(err)));\n      }\n      [kDispatch](opts\x2C handler) {\n        const dispatcher = this[kGetDispatcher]();\n        if (!dispatcher) {\n          this[kNeedDrain] = true;\n          this[kQueue].push({ opts\x2C handler });\n          this[kQueued]++;\n        } else if (!dispatcher.dispatch(opts\x2C handler)) {\n          dispatcher[kNeedDrain] = true;\n          this[kNeedDrain] = !this[kGetDispatcher]();\n        }\n        return !this[kNeedDrain];\n      }\n      [kAddClient](client) {\n        client.on("drain"\x2C this[kOnDrain]).on("connect"\x2C this[kOnConnect]).on("disconnect"\x2C this[kOnDisconnect]).on("connectionError"\x2C this[kOnConnectionError]);\n        this[kClients].push(client);\n        if (this[kNeedDrain]) {\n          queueMicrotask(() => {\n            if (this[kNeedDrain]) {\n              this[kOnDrain](client[kUrl]\x2C [this\x2C client]);\n            }\n          });\n        }\n        return this;\n      }\n      [kRemoveClient](client) {\n        client.close(() => {\n          const idx = this[kClients].indexOf(client);\n          if (idx !== -1) {\n            this[kClients].splice(idx\x2C 1);\n          }\n        });\n        this[kNeedDrain] = this[kClients].some((dispatcher) => !dispatcher[kNeedDrain] && dispatcher.closed !== true && dispatcher.destroyed !== true);\n      }\n    };\n    module2.exports = {\n      PoolBase\x2C\n      kClients\x2C\n      kNeedDrain\x2C\n      kAddClient\x2C\n      kRemoveClient\x2C\n      kGetDispatcher\n    };\n  }\n});\n\n// lib/core/constants.js\nvar require_constants = __commonJS({\n  "lib/core/constants.js"(exports2\x2C module2) {\n    "use strict";\n    var headerNameLowerCasedRecord = {};\n    var wellknownHeaderNames = [\n      "Accept"\x2C\n      "Accept-Encoding"\x2C\n      "Accept-Language"\x2C\n      "Accept-Ranges"\x2C\n      "Access-Control-Allow-Credentials"\x2C\n      "Access-Control-Allow-Headers"\x2C\n      "Access-Control-Allow-Methods"\x2C\n      "Access-Control-Allow-Origin"\x2C\n      "Access-Control-Expose-Headers"\x2C\n      "Access-Control-Max-Age"\x2C\n      "Access-Control-Request-Headers"\x2C\n      "Access-Control-Request-Method"\x2C\n      "Age"\x2C\n      "Allow"\x2C\n      "Alt-Svc"\x2C\n      "Alt-Used"\x2C\n      "Authorization"\x2C\n      "Cache-Control"\x2C\n      "Clear-Site-Data"\x2C\n      "Connection"\x2C\n      "Content-Disposition"\x2C\n      "Content-Encoding"\x2C\n      "Content-Language"\x2C\n      "Content-Length"\x2C\n      "Content-Location"\x2C\n      "Content-Range"\x2C\n      "Content-Security-Policy"\x2C\n      "Content-Security-Policy-Report-Only"\x2C\n      "Content-Type"\x2C\n      "Cookie"\x2C\n      "Cross-Origin-Embedder-Policy"\x2C\n      "Cross-Origin-Opener-Policy"\x2C\n      "Cross-Origin-Resource-Policy"\x2C\n      "Date"\x2C\n      "Device-Memory"\x2C\n      "Downlink"\x2C\n      "ECT"\x2C\n      "ETag"\x2C\n      "Expect"\x2C\n      "Expect-CT"\x2C\n      "Expires"\x2C\n      "Forwarded"\x2C\n      "From"\x2C\n      "Host"\x2C\n      "If-Match"\x2C\n      "If-Modified-Since"\x2C\n      "If-None-Match"\x2C\n      "If-Range"\x2C\n      "If-Unmodified-Since"\x2C\n      "Keep-Alive"\x2C\n      "Last-Modified"\x2C\n      "Link"\x2C\n      "Location"\x2C\n      "Max-Forwards"\x2C\n      "Origin"\x2C\n      "Permissions-Policy"\x2C\n      "Pragma"\x2C\n      "Proxy-Authenticate"\x2C\n      "Proxy-Authorization"\x2C\n      "RTT"\x2C\n      "Range"\x2C\n      "Referer"\x2C\n      "Referrer-Policy"\x2C\n      "Refresh"\x2C\n      "Retry-After"\x2C\n      "Sec-WebSocket-Accept"\x2C\n      "Sec-WebSocket-Extensions"\x2C\n      "Sec-WebSocket-Key"\x2C\n      "Sec-WebSocket-Protocol"\x2C\n      "Sec-WebSocket-Version"\x2C\n      "Server"\x2C\n      "Server-Timing"\x2C\n      "Service-Worker-Allowed"\x2C\n      "Service-Worker-Navigation-Preload"\x2C\n      "Set-Cookie"\x2C\n      "SourceMap"\x2C\n      "Strict-Transport-Security"\x2C\n      "Supports-Loading-Mode"\x2C\n      "TE"\x2C\n      "Timing-Allow-Origin"\x2C\n      "Trailer"\x2C\n      "Transfer-Encoding"\x2C\n      "Upgrade"\x2C\n      "Upgrade-Insecure-Requests"\x2C\n      "User-Agent"\x2C\n      "Vary"\x2C\n      "Via"\x2C\n      "WWW-Authenticate"\x2C\n      "X-Content-Type-Options"\x2C\n      "X-DNS-Prefetch-Control"\x2C\n      "X-Frame-Options"\x2C\n      "X-Permitted-Cross-Domain-Policies"\x2C\n      "X-Powered-By"\x2C\n      "X-Requested-With"\x2C\n      "X-XSS-Protection"\n    ];\n    for (let i = 0; i < wellknownHeaderNames.length; ++i) {\n      const key = wellknownHeaderNames[i];\n      const lowerCasedKey = key.toLowerCase();\n      headerNameLowerCasedRecord[key] = headerNameLowerCasedRecord[lowerCasedKey] = lowerCasedKey;\n    }\n    Object.setPrototypeOf(headerNameLowerCasedRecord\x2C null);\n    module2.exports = {\n      wellknownHeaderNames\x2C\n      headerNameLowerCasedRecord\n    };\n  }\n});\n\n// lib/core/tree.js\nvar require_tree = __commonJS({\n  "lib/core/tree.js"(exports2\x2C module2) {\n    "use strict";\n    var {\n      wellknownHeaderNames\x2C\n      headerNameLowerCasedRecord\n    } = require_constants();\n    var TstNode = class _TstNode {\n      static {\n        __name(this\x2C "TstNode");\n      }\n      /** @type {any} */\n      value = null;\n      /** @type {null | TstNode} */\n      left = null;\n      /** @type {null | TstNode} */\n      middle = null;\n      /** @type {null | TstNode} */\n      right = null;\n      /** @type {number} */\n      code;\n      /**\n       * @param {string} key\n       * @param {any} value\n       * @param {number} index\n       */\n      constructor(key\x2C value\x2C index) {\n        if (index === void 0 || index >= key.length) {\n          throw new TypeError("Unreachable");\n        }\n        const code = this.code = key.charCodeAt(index);\n        if (code > 127) {\n          throw new TypeError("key must be ascii string");\n        }\n        if (key.length !== ++index) {\n          this.middle = new _TstNode(key\x2C value\x2C index);\n        } else {\n          this.value = value;\n        }\n      }\n      /**\n       * @param {string} key\n       * @param {any} value\n       */\n      add(key\x2C value) {\n        const length = key.length;\n        if (length === 0) {\n          throw new TypeError("Unreachable");\n        }\n        let index = 0;\n        let node = this;\n        while (true) {\n          const code = key.charCodeAt(index);\n          if (code > 127) {\n            throw new TypeError("key must be ascii string");\n          }\n          if (node.code === code) {\n            if (length === ++index) {\n              node.value = value;\n              break;\n            } else if (node.middle !== null) {\n              node = node.middle;\n            } else {\n              node.middle = new _TstNode(key\x2C value\x2C index);\n              break;\n            }\n          } else if (node.code < code) {\n            if (node.left !== null) {\n              node = node.left;\n            } else {\n              node.left = new _TstNode(key\x2C value\x2C index);\n              break;\n            }\n          } else if (node.right !== null) {\n            node = node.right;\n          } else {\n            node.right = new _TstNode(key\x2C value\x2C index);\n            break;\n          }\n        }\n      }\n      /**\n       * @param {Uint8Array} key\n       * @return {TstNode | null}\n       */\n      search(key) {\n        const keylength = key.length;\n        let index = 0;\n        let node = this;\n        while (node !== null && index < keylength) {\n          let code = key[index];\n          if (code <= 90 && code >= 65) {\n            code |= 32;\n          }\n          while (node !== null) {\n            if (code === node.code) {\n              if (keylength === ++index) {\n                return node;\n              }\n              node = node.middle;\n              break;\n            }\n            node = node.code < code ? node.left : node.right;\n          }\n        }\n        return null;\n      }\n    };\n    var TernarySearchTree = class {\n      static {\n        __name(this\x2C "TernarySearchTree");\n      }\n      /** @type {TstNode | null} */\n      node = null;\n      /**\n       * @param {string} key\n       * @param {any} value\n       * */\n      insert(key\x2C value) {\n        if (this.node === null) {\n          this.node = new TstNode(key\x2C value\x2C 0);\n        } else {\n          this.node.add(key\x2C value);\n        }\n      }\n      /**\n       * @param {Uint8Array} key\n       * @return {any}\n       */\n      lookup(key) {\n        return this.node?.search(key)?.value ?? null;\n      }\n    };\n    var tree = new TernarySearchTree();\n    for (let i = 0; i < wellknownHeaderNames.length; ++i) {\n      const key = headerNameLowerCasedRecord[wellknownHeaderNames[i]];\n      tree.insert(key\x2C key);\n    }\n    module2.exports = {\n      TernarySearchTree\x2C\n      tree\n    };\n  }\n});\n\n// lib/core/util.js\nvar require_util = __commonJS({\n  "lib/core/util.js"(exports2\x2C module2) {\n    "use strict";\n    var assert = require("node:assert");\n    var { kDestroyed\x2C kBodyUsed\x2C kListeners\x2C kBody } = require_symbols();\n    var { IncomingMessage } = require("node:http");\n    var stream = require("node:stream");\n    var net = require("node:net");\n    var { Blob: Blob2 } = require("node:buffer");\n    var nodeUtil = require("node:util");\n    var { stringify } = require("node:querystring");\n    var { EventEmitter: EE } = require("node:events");\n    var { InvalidArgumentError } = require_errors();\n    var { headerNameLowerCasedRecord } = require_constants();\n    var { tree } = require_tree();\n    var [nodeMajor\x2C nodeMinor] = process.versions.node.split(".").map((v) => Number(v));\n    var BodyAsyncIterable = class {\n      static {\n        __name(this\x2C "BodyAsyncIterable");\n      }\n      constructor(body) {\n        this[kBody] = body;\n        this[kBodyUsed] = false;\n      }\n      async *[Symbol.asyncIterator]() {\n        assert(!this[kBodyUsed]\x2C "disturbed");\n        this[kBodyUsed] = true;\n        yield* this[kBody];\n      }\n    };\n    function wrapRequestBody(body) {\n      if (isStream(body)) {\n        if (bodyLength(body) === 0) {\n          body.on("data"\x2C function() {\n            assert(false);\n          });\n        }\n        if (typeof body.readableDidRead !== "boolean") {\n          body[kBodyUsed] = false;\n          EE.prototype.on.call(body\x2C "data"\x2C function() {\n            this[kBodyUsed] = true;\n          });\n        }\n        return body;\n      } else if (body && typeof body.pipeTo === "function") {\n        return new BodyAsyncIterable(body);\n      } else if (body && typeof body !== "string" && !ArrayBuffer.isView(body) && isIterable(body)) {\n        return new BodyAsyncIterable(body);\n      } else {\n        return body;\n      }\n    }\n    __name(wrapRequestBody\x2C "wrapRequestBody");\n    function nop() {\n    }\n    __name(nop\x2C "nop");\n    function isStream(obj) {\n      return obj && typeof obj === "object" && typeof obj.pipe === "function" && typeof obj.on === "function";\n    }\n    __name(isStream\x2C "isStream");\n    function isBlobLike(object) {\n      if (object === null) {\n        return false;\n      } else if (object instanceof Blob2) {\n        return true;\n      } else if (typeof object !== "object") {\n        return false;\n      } else {\n        const sTag = object[Symbol.toStringTag];\n        return (sTag === "Blob" || sTag === "File") && ("stream" in object && typeof object.stream === "function" || "arrayBuffer" in object && typeof object.arrayBuffer === "function");\n      }\n    }\n    __name(isBlobLike\x2C "isBlobLike");\n    function buildURL(url\x2C queryParams) {\n      if (url.includes("?") || url.includes("#")) {\n        throw new Error('Query params cannot be passed when url already contains "?" or "#".');\n      }\n      const stringified = stringify(queryParams);\n      if (stringified) {\n        url += "?" + stringified;\n      }\n      return url;\n    }\n    __name(buildURL\x2C "buildURL");\n    function isValidPort(port) {\n      const value = parseInt(port\x2C 10);\n      return value === Number(port) && value >= 0 && value <= 65535;\n    }\n    __name(isValidPort\x2C "isValidPort");\n    function isHttpOrHttpsPrefixed(value) {\n      return value != null && value[0] === "h" && value[1] === "t" && value[2] === "t" && value[3] === "p" && (value[4] === ":" || value[4] === "s" && value[5] === ":");\n    }\n    __name(isHttpOrHttpsPrefixed\x2C "isHttpOrHttpsPrefixed");\n    function parseURL(url) {\n      if (typeof url === "string") {\n        url = new URL(url);\n        if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n          throw new InvalidArgumentError("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n        }\n        return url;\n      }\n      if (!url || typeof url !== "object") {\n        throw new InvalidArgumentError("Invalid URL: The URL argument must be a non-null object.");\n      }\n      if (!(url instanceof URL)) {\n        if (url.port != null && url.port !== "" && isValidPort(url.port) === false) {\n          throw new InvalidArgumentError("Invalid URL: port must be a valid integer or a string representation of an integer.");\n        }\n        if (url.path != null && typeof url.path !== "string") {\n          throw new InvalidArgumentError("Invalid URL path: the path must be a string or null/undefined.");\n        }\n        if (url.pathname != null && typeof url.pathname !== "string") {\n          throw new InvalidArgumentError("Invalid URL pathname: the pathname must be a string or null/undefined.");\n        }\n        if (url.hostname != null && typeof url.hostname !== "string") {\n          throw new InvalidArgumentError("Invalid URL hostname: the hostname must be a string or null/undefined.");\n        }\n        if (url.origin != null && typeof url.origin !== "string") {\n          throw new InvalidArgumentError("Invalid URL origin: the origin must be a string or null/undefined.");\n        }\n        if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n          throw new InvalidArgumentError("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n        }\n        const port = url.port != null ? url.port : url.protocol === "https:" ? 443 : 80;\n        let origin = url.origin != null ? url.origin : `${url.protocol || ""}//${url.hostname || ""}:${port}`;\n        let path = url.path != null ? url.path : `${url.pathname || ""}${url.search || ""}`;\n        if (origin[origin.length - 1] === "/") {\n          origin = origin.slice(0\x2C origin.length - 1);\n        }\n        if (path && path[0] !== "/") {\n          path = `/${path}`;\n        }\n        return new URL(`${origin}${path}`);\n      }\n      if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n        throw new InvalidArgumentError("Invalid URL protocol: the URL must start with `http:` or `https:`.");\n      }\n      return url;\n    }\n    __name(parseURL\x2C "parseURL");\n    function parseOrigin(url) {\n      url = parseURL(url);\n      if (url.pathname !== "/" || url.search || url.hash) {\n        throw new InvalidArgumentError("invalid url");\n      }\n      return url;\n    }\n    __name(parseOrigin\x2C "parseOrigin");\n    function getHostname(host) {\n      if (host[0] === "[") {\n        const idx2 = host.indexOf("]");\n        assert(idx2 !== -1);\n        return host.substring(1\x2C idx2);\n      }\n      const idx = host.indexOf(":");\n      if (idx === -1)\n        return host;\n      return host.substring(0\x2C idx);\n    }\n    __name(getHostname\x2C "getHostname");\n    function getServerName(host) {\n      if (!host) {\n        return null;\n      }\n      assert(typeof host === "string");\n      const servername = getHostname(host);\n      if (net.isIP(servername)) {\n        return "";\n      }\n      return servername;\n    }\n    __name(getServerName\x2C "getServerName");\n    function deepClone(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    __name(deepClone\x2C "deepClone");\n    function isAsyncIterable(obj) {\n      return !!(obj != null && typeof obj[Symbol.asyncIterator] === "function");\n    }\n    __name(isAsyncIterable\x2C "isAsyncIterable");\n    function isIterable(obj) {\n      return !!(obj != null && (typeof obj[Symbol.iterator] === "function" || typeof obj[Symbol.asyncIterator] === "function"));\n    }\n    __name(isIterable\x2C "isIterable");\n    function bodyLength(body) {\n      if (body == null) {\n        return 0;\n      } else if (isStream(body)) {\n        const state = body._readableState;\n        return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length) ? state.length : null;\n      } else if (isBlobLike(body)) {\n        return body.size != null ? body.size : null;\n      } else if (isBuffer(body)) {\n        return body.byteLength;\n      }\n      return null;\n    }\n    __name(bodyLength\x2C "bodyLength");\n    function isDestroyed(body) {\n      return body && !!(body.destroyed || body[kDestroyed] || stream.isDestroyed?.(body));\n    }\n    __name(isDestroyed\x2C "isDestroyed");\n    function destroy(stream2\x2C err) {\n      if (stream2 == null || !isStream(stream2) || isDestroyed(stream2)) {\n        return;\n      }\n      if (typeof stream2.destroy === "function") {\n        if (Object.getPrototypeOf(stream2).constructor === IncomingMessage) {\n          stream2.socket = null;\n        }\n        stream2.destroy(err);\n      } else if (err) {\n        queueMicrotask(() => {\n          stream2.emit("error"\x2C err);\n        });\n      }\n      if (stream2.destroyed !== true) {\n        stream2[kDestroyed] = true;\n      }\n    }\n    __name(destroy\x2C "destroy");\n    var KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/;\n    function parseKeepAliveTimeout(val) {\n      const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);\n      return m ? parseInt(m[1]\x2C 10) * 1e3 : null;\n    }\n    __name(parseKeepAliveTimeout\x2C "parseKeepAliveTimeout");\n    function headerNameToString(value) {\n      return typeof value === "string" ? headerNameLowerCasedRecord[value] ?? value.toLowerCase() : tree.lookup(value) ?? value.toString("latin1").toLowerCase();\n    }\n    __name(headerNameToString\x2C "headerNameToString");\n    function bufferToLowerCasedHeaderName(value) {\n      return tree.lookup(value) ?? value.toString("latin1").toLowerCase();\n    }\n    __name(bufferToLowerCasedHeaderName\x2C "bufferToLowerCasedHeaderName");\n    function parseHeaders(headers\x2C obj) {\n      if (obj === void 0)\n        obj = {};\n      for (let i = 0; i < headers.length; i += 2) {\n        const key = headerNameToString(headers[i]);\n        let val = obj[key];\n        if (val) {\n          if (typeof val === "string") {\n            val = [val];\n            obj[key] = val;\n          }\n          val.push(headers[i + 1].toString("utf8"));\n        } else {\n          const headersValue = headers[i + 1];\n          if (typeof headersValue === "string") {\n            obj[key] = headersValue;\n          } else {\n            obj[key] = Array.isArray(headersValue) ? headersValue.map((x) => x.toString("utf8")) : headersValue.toString("utf8");\n          }\n        }\n      }\n      if ("content-length" in obj && "content-disposition" in obj) {\n        obj["content-disposition"] = Buffer.from(obj["content-disposition"]).toString("latin1");\n      }\n      return obj;\n    }\n    __name(parseHeaders\x2C "parseHeaders");\n    function parseRawHeaders(headers) {\n      const len = headers.length;\n      const ret = new Array(len);\n      let hasContentLength = false;\n      let contentDispositionIdx = -1;\n      let key;\n      let val;\n      let kLen = 0;\n      for (let n = 0; n < headers.length; n += 2) {\n        key = headers[n];\n        val = headers[n + 1];\n        typeof key !== "string" && (key = key.toString());\n        typeof val !== "string" && (val = val.toString("utf8"));\n        kLen = key.length;\n        if (kLen === 14 && key[7] === "-" && (key === "content-length" || key.toLowerCase() === "content-length")) {\n          hasContentLength = true;\n        } else if (kLen === 19 && key[7] === "-" && (key === "content-disposition" || key.toLowerCase() === "content-disposition")) {\n          contentDispositionIdx = n + 1;\n        }\n        ret[n] = key;\n        ret[n + 1] = val;\n      }\n      if (hasContentLength && contentDispositionIdx !== -1) {\n        ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString("latin1");\n      }\n      return ret;\n    }\n    __name(parseRawHeaders\x2C "parseRawHeaders");\n    function isBuffer(buffer) {\n      return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);\n    }\n    __name(isBuffer\x2C "isBuffer");\n    function validateHandler(handler\x2C method\x2C upgrade) {\n      if (!handler || typeof handler !== "object") {\n        throw new InvalidArgumentError("handler must be an object");\n      }\n      if (typeof handler.onConnect !== "function") {\n        throw new InvalidArgumentError("invalid onConnect method");\n      }\n      if (typeof handler.onError !== "function") {\n        throw new InvalidArgumentError("invalid onError method");\n      }\n      if (typeof handler.onBodySent !== "function" && handler.onBodySent !== void 0) {\n        throw new InvalidArgumentError("invalid onBodySent method");\n      }\n      if (upgrade || method === "CONNECT") {\n        if (typeof handler.onUpgrade !== "function") {\n          throw new InvalidArgumentError("invalid onUpgrade method");\n        }\n      } else {\n        if (typeof handler.onHeaders !== "function") {\n          throw new InvalidArgumentError("invalid onHeaders method");\n        }\n        if (typeof handler.onData !== "function") {\n          throw new InvalidArgumentError("invalid onData method");\n        }\n        if (typeof handler.onComplete !== "function") {\n          throw new InvalidArgumentError("invalid onComplete method");\n        }\n      }\n    }\n    __name(validateHandler\x2C "validateHandler");\n    function isDisturbed(body) {\n      return !!(body && (stream.isDisturbed(body) || body[kBodyUsed]));\n    }\n    __name(isDisturbed\x2C "isDisturbed");\n    function isErrored(body) {\n      return !!(body && stream.isErrored(body));\n    }\n    __name(isErrored\x2C "isErrored");\n    function isReadable(body) {\n      return !!(body && stream.isReadable(body));\n    }\n    __name(isReadable\x2C "isReadable");\n    function getSocketInfo(socket) {\n      return {\n        localAddress: socket.localAddress\x2C\n        localPort: socket.localPort\x2C\n        remoteAddress: socket.remoteAddress\x2C\n        remotePort: socket.remotePort\x2C\n        remoteFamily: socket.remoteFamily\x2C\n        timeout: socket.timeout\x2C\n        bytesWritten: socket.bytesWritten\x2C\n        bytesRead: socket.bytesRead\n      };\n    }\n    __name(getSocketInfo\x2C "getSocketInfo");\n    function ReadableStreamFrom(iterable) {\n      let iterator;\n      return new ReadableStream(\n        {\n          async start() {\n            iterator = iterable[Symbol.asyncIterator]();\n          }\x2C\n          async pull(controller) {\n            const { done\x2C value } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n                controller.byobRequest?.respond(0);\n              });\n            } else {\n              const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);\n              if (buf.byteLength) {\n                controller.enqueue(new Uint8Array(buf));\n              }\n            }\n            return controller.desiredSize > 0;\n          }\x2C\n          async cancel(reason) {\n            await iterator.return();\n          }\x2C\n          type: "bytes"\n        }\n      );\n    }\n    __name(ReadableStreamFrom\x2C "ReadableStreamFrom");\n    function isFormDataLike(object) {\n      return object && typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && object[Symbol.toStringTag] === "FormData";\n    }\n    __name(isFormDataLike\x2C "isFormDataLike");\n    function addAbortListener(signal\x2C listener) {\n      if ("addEventListener" in signal) {\n        signal.addEventListener("abort"\x2C listener\x2C { once: true });\n        return () => signal.removeEventListener("abort"\x2C listener);\n      }\n      signal.addListener("abort"\x2C listener);\n      return () => signal.removeListener("abort"\x2C listener);\n    }\n    __name(addAbortListener\x2C "addAbortListener");\n    var hasToWellFormed = typeof String.prototype.toWellFormed === "function";\n    var hasIsWellFormed = typeof String.prototype.isWellFormed === "function";\n    function toUSVString(val) {\n      return hasToWellFormed ? `${val}`.toWellFormed() : nodeUtil.toUSVString(val);\n    }\n    __name(toUSVString\x2C "toUSVString");\n    function isUSVString(val) {\n      return hasIsWellFormed ? `${val}`.isWellFormed() : toUSVString(val) === `${val}`;\n    }\n    __name(isUSVString\x2C "isUSVString");\n    function isTokenCharCode(c) {\n      switch (c) {\n        case 34:\n        case 40:\n        case 41:\n        case 44:\n        case 47:\n        case 58:\n        case 59:\n        case 60:\n        case 61:\n        case 62:\n        case 63:\n        case 64:\n        case 91:\n        case 92:\n        case 93:\n        case 123:\n        case 125:\n          return false;\n        default:\n          return c >= 33 && c <= 126;\n      }\n    }\n    __name(isTokenCharCode\x2C "isTokenCharCode");\n    function isValidHTTPToken(characters) {\n      if (characters.length === 0) {\n        return false;\n      }\n      for (let i = 0; i < characters.length; ++i) {\n        if (!isTokenCharCode(characters.charCodeAt(i))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidHTTPToken\x2C "isValidHTTPToken");\n    var headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n    function isValidHeaderValue(characters) {\n      return !headerCharRegex.test(characters);\n    }\n    __name(isValidHeaderValue\x2C "isValidHeaderValue");\n    function parseRangeHeader(range) {\n      if (range == null || range === "")\n        return { start: 0\x2C end: null\x2C size: null };\n      const m = range ? range.match(/^bytes (\\d+)-(\\d+)\\/(\\d+)?$/) : null;\n      return m ? {\n        start: parseInt(m[1])\x2C\n        end: m[2] ? parseInt(m[2]) : null\x2C\n        size: m[3] ? parseInt(m[3]) : null\n      } : null;\n    }\n    __name(parseRangeHeader\x2C "parseRangeHeader");\n    function addListener(obj\x2C name\x2C listener) {\n      const listeners = obj[kListeners] ??= [];\n      listeners.push([name\x2C listener]);\n      obj.on(name\x2C listener);\n      return obj;\n    }\n    __name(addListener\x2C "addListener");\n    function removeAllListeners(obj) {\n      for (const [name\x2C listener] of obj[kListeners] ?? []) {\n        obj.removeListener(name\x2C listener);\n      }\n      obj[kListeners] = null;\n    }\n    __name(removeAllListeners\x2C "removeAllListeners");\n    function errorRequest(client\x2C request\x2C err) {\n      try {\n        request.onError(err);\n        assert(request.aborted);\n      } catch (err2) {\n        client.emit("error"\x2C err2);\n      }\n    }\n    __name(errorRequest\x2C "errorRequest");\n    var kEnumerableProperty = /* @__PURE__ */ Object.create(null);\n    kEnumerableProperty.enumerable = true;\n    var normalizedMethodRecordsBase = {\n      delete: "DELETE"\x2C\n      DELETE: "DELETE"\x2C\n      get: "GET"\x2C\n      GET: "GET"\x2C\n      head: "HEAD"\x2C\n      HEAD: "HEAD"\x2C\n      options: "OPTIONS"\x2C\n      OPTIONS: "OPTIONS"\x2C\n      post: "POST"\x2C\n      POST: "POST"\x2C\n      put: "PUT"\x2C\n      PUT: "PUT"\n    };\n    var normalizedMethodRecords = {\n      ...normalizedMethodRecordsBase\x2C\n      patch: "patch"\x2C\n      PATCH: "PATCH"\n    };\n    Object.setPrototypeOf(normalizedMethodRecordsBase\x2C null);\n    Object.setPrototypeOf(normalizedMethodRecords\x2C null);\n    module2.exports = {\n      kEnumerableProperty\x2C\n      nop\x2C\n      isDisturbed\x2C\n      isErrored\x2C\n      isReadable\x2C\n      toUSVString\x2C\n      isUSVString\x2C\n      isBlobLike\x2C\n      parseOrigin\x2C\n      parseURL\x2C\n      getServerName\x2C\n      isStream\x2C\n      isIterable\x2C\n      isAsyncIterable\x2C\n      isDestroyed\x2C\n      headerNameToString\x2C\n      bufferToLowerCasedHeaderName\x2C\n      addListener\x2C\n      removeAllListeners\x2C\n      errorRequest\x2C\n      parseRawHeaders\x2C\n      parseHeaders\x2C\n      parseKeepAliveTimeout\x2C\n      destroy\x2C\n      bodyLength\x2C\n      deepClone\x2C\n      ReadableStreamFrom\x2C\n      isBuffer\x2C\n      validateHandler\x2C\n      getSocketInfo\x2C\n      isFormDataLike\x2C\n      buildURL\x2C\n      addAbortListener\x2C\n      isValidHTTPToken\x2C\n      isValidHeaderValue\x2C\n      isTokenCharCode\x2C\n      parseRangeHeader\x2C\n      normalizedMethodRecordsBase\x2C\n      normalizedMethodRecords\x2C\n      isValidPort\x2C\n      isHttpOrHttpsPrefixed\x2C\n      nodeMajor\x2C\n      nodeMinor\x2C\n      safeHTTPMethods: ["GET"\x2C "HEAD"\x2C "OPTIONS"\x2C "TRACE"]\x2C\n      wrapRequestBody\n    };\n  }\n});\n\n// lib/core/diagnostics.js\nvar require_diagnostics = __commonJS({\n  "lib/core/diagnostics.js"(exports2\x2C module2) {\n    "use strict";\n    var diagnosticsChannel = require("node:diagnostics_channel");\n    var util = require("node:util");\n    var undiciDebugLog = util.debuglog("undici");\n    var fetchDebuglog = util.debuglog("fetch");\n    var websocketDebuglog = util.debuglog("websocket");\n    var isClientSet = false;\n    var channels = {\n      // Client\n      beforeConnect: diagnosticsChannel.channel("undici:client:beforeConnect")\x2C\n      connected: diagnosticsChannel.channel("undici:client:connected")\x2C\n      connectError: diagnosticsChannel.channel("undici:client:connectError")\x2C\n      sendHeaders: diagnosticsChannel.channel("undici:client:sendHeaders")\x2C\n      // Request\n      create: diagnosticsChannel.channel("undici:request:create")\x2C\n      bodySent: diagnosticsChannel.channel("undici:request:bodySent")\x2C\n      headers: diagnosticsChannel.channel("undici:request:headers")\x2C\n      trailers: diagnosticsChannel.channel("undici:request:trailers")\x2C\n      error: diagnosticsChannel.channel("undici:request:error")\x2C\n      // WebSocket\n      open: diagnosticsChannel.channel("undici:websocket:open")\x2C\n      close: diagnosticsChannel.channel("undici:websocket:close")\x2C\n      socketError: diagnosticsChannel.channel("undici:websocket:socket_error")\x2C\n      ping: diagnosticsChannel.channel("undici:websocket:ping")\x2C\n      pong: diagnosticsChannel.channel("undici:websocket:pong")\n    };\n    if (undiciDebugLog.enabled || fetchDebuglog.enabled) {\n      const debuglog = fetchDebuglog.enabled ? fetchDebuglog : undiciDebugLog;\n      diagnosticsChannel.channel("undici:client:beforeConnect").subscribe((evt) => {\n        const {\n          connectParams: { version\x2C protocol\x2C port\x2C host }\n        } = evt;\n        debuglog(\n          "connecting to %s using %s%s"\x2C\n          `${host}${port ? `:${port}` : ""}`\x2C\n          protocol\x2C\n          version\n        );\n      });\n      diagnosticsChannel.channel("undici:client:connected").subscribe((evt) => {\n        const {\n          connectParams: { version\x2C protocol\x2C port\x2C host }\n        } = evt;\n        debuglog(\n          "connected to %s using %s%s"\x2C\n          `${host}${port ? `:${port}` : ""}`\x2C\n          protocol\x2C\n          version\n        );\n      });\n      diagnosticsChannel.channel("undici:client:connectError").subscribe((evt) => {\n        const {\n          connectParams: { version\x2C protocol\x2C port\x2C host }\x2C\n          error\n        } = evt;\n        debuglog(\n          "connection to %s using %s%s errored - %s"\x2C\n          `${host}${port ? `:${port}` : ""}`\x2C\n          protocol\x2C\n          version\x2C\n          error.message\n        );\n      });\n      diagnosticsChannel.channel("undici:client:sendHeaders").subscribe((evt) => {\n        const {\n          request: { method\x2C path\x2C origin }\n        } = evt;\n        debuglog("sending request to %s %s/%s"\x2C method\x2C origin\x2C path);\n      });\n      diagnosticsChannel.channel("undici:request:headers").subscribe((evt) => {\n        const {\n          request: { method\x2C path\x2C origin }\x2C\n          response: { statusCode }\n        } = evt;\n        debuglog(\n          "received response to %s %s/%s - HTTP %d"\x2C\n          method\x2C\n          origin\x2C\n          path\x2C\n          statusCode\n        );\n      });\n      diagnosticsChannel.channel("undici:request:trailers").subscribe((evt) => {\n        const {\n          request: { method\x2C path\x2C origin }\n        } = evt;\n        debuglog("trailers received from %s %s/%s"\x2C method\x2C origin\x2C path);\n      });\n      diagnosticsChannel.channel("undici:request:error").subscribe((evt) => {\n        const {\n          request: { method\x2C path\x2C origin }\x2C\n          error\n        } = evt;\n        debuglog(\n          "request to %s %s/%s errored - %s"\x2C\n          method\x2C\n          origin\x2C\n          path\x2C\n          error.message\n        );\n      });\n      isClientSet = true;\n    }\n    if (websocketDebuglog.enabled) {\n      if (!isClientSet) {\n        const debuglog = undiciDebugLog.enabled ? undiciDebugLog : websocketDebuglog;\n        diagnosticsChannel.channel("undici:client:beforeConnect").subscribe((evt) => {\n          const {\n            connectParams: { version\x2C protocol\x2C port\x2C host }\n          } = evt;\n          debuglog(\n            "connecting to %s%s using %s%s"\x2C\n            host\x2C\n            port ? `:${port}` : ""\x2C\n            protocol\x2C\n            version\n          );\n        });\n        diagnosticsChannel.channel("undici:client:connected").subscribe((evt) => {\n          const {\n            connectParams: { version\x2C protocol\x2C port\x2C host }\n          } = evt;\n          debuglog(\n            "connected to %s%s using %s%s"\x2C\n            host\x2C\n            port ? `:${port}` : ""\x2C\n            protocol\x2C\n            version\n          );\n        });\n        diagnosticsChannel.channel("undici:client:connectError").subscribe((evt) => {\n          const {\n            connectParams: { version\x2C protocol\x2C port\x2C host }\x2C\n            error\n          } = evt;\n          debuglog(\n            "connection to %s%s using %s%s errored - %s"\x2C\n            host\x2C\n            port ? `:${port}` : ""\x2C\n            protocol\x2C\n            version\x2C\n            error.message\n          );\n        });\n        diagnosticsChannel.channel("undici:client:sendHeaders").subscribe((evt) => {\n          const {\n            request: { method\x2C path\x2C origin }\n          } = evt;\n          debuglog("sending request to %s %s/%s"\x2C method\x2C origin\x2C path);\n        });\n      }\n      diagnosticsChannel.channel("undici:websocket:open").subscribe((evt) => {\n        const {\n          address: { address\x2C port }\n        } = evt;\n        websocketDebuglog("connection opened %s%s"\x2C address\x2C port ? `:${port}` : "");\n      });\n      diagnosticsChannel.channel("undici:websocket:close").subscribe((evt) => {\n        const { websocket\x2C code\x2C reason } = evt;\n        websocketDebuglog(\n          "closed connection to %s - %s %s"\x2C\n          websocket.url\x2C\n          code\x2C\n          reason\n        );\n      });\n      diagnosticsChannel.channel("undici:websocket:socket_error").subscribe((err) => {\n        websocketDebuglog("connection errored - %s"\x2C err.message);\n      });\n      diagnosticsChannel.channel("undici:websocket:ping").subscribe((evt) => {\n        websocketDebuglog("ping received");\n      });\n      diagnosticsChannel.channel("undici:websocket:pong").subscribe((evt) => {\n        websocketDebuglog("pong received");\n      });\n    }\n    module2.exports = {\n      channels\n    };\n  }\n});\n\n// lib/core/request.js\nvar require_request = __commonJS({\n  "lib/core/request.js"(exports2\x2C module2) {\n    "use strict";\n    var {\n      InvalidArgumentError\x2C\n      NotSupportedError\n    } = require_errors();\n    var assert = require("node:assert");\n    var {\n      isValidHTTPToken\x2C\n      isValidHeaderValue\x2C\n      isStream\x2C\n      destroy\x2C\n      isBuffer\x2C\n      isFormDataLike\x2C\n      isIterable\x2C\n      isBlobLike\x2C\n      buildURL\x2C\n      validateHandler\x2C\n      getServerName\x2C\n      normalizedMethodRecords\n    } = require_util();\n    var { channels } = require_diagnostics();\n    var { headerNameLowerCasedRecord } = require_constants();\n    var invalidPathRegex = /[^\\u0021-\\u00ff]/;\n    var kHandler = Symbol("handler");\n    var Request = class {\n      static {\n        __name(this\x2C "Request");\n      }\n      constructor(origin\x2C {\n        path\x2C\n        method\x2C\n        body\x2C\n        headers\x2C\n        query\x2C\n        idempotent\x2C\n        blocking\x2C\n        upgrade\x2C\n        headersTimeout\x2C\n        bodyTimeout\x2C\n        reset\x2C\n        throwOnError\x2C\n        expectContinue\x2C\n        servername\n      }\x2C handler) {\n        if (typeof path !== "string") {\n          throw new InvalidArgumentError("path must be a string");\n        } else if (path[0] !== "/" && !(path.startsWith("http://") || path.startsWith("https://")) && method !== "CONNECT") {\n          throw new InvalidArgumentError("path must be an absolute URL or start with a slash");\n        } else if (invalidPathRegex.test(path)) {\n          throw new InvalidArgumentError("invalid request path");\n        }\n        if (typeof method !== "string") {\n          throw new InvalidArgumentError("method must be a string");\n        } else if (normalizedMethodRecords[method] === void 0 && !isValidHTTPToken(method)) {\n          throw new InvalidArgumentError("invalid request method");\n        }\n        if (upgrade && typeof upgrade !== "string") {\n          throw new InvalidArgumentError("upgrade must be a string");\n        }\n        if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError("invalid headersTimeout");\n        }\n        if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError("invalid bodyTimeout");\n        }\n        if (reset != null && typeof reset !== "boolean") {\n          throw new InvalidArgumentError("invalid reset");\n        }\n        if (expectContinue != null && typeof expectContinue !== "boolean") {\n          throw new InvalidArgumentError("invalid expectContinue");\n        }\n        this.headersTimeout = headersTimeout;\n        this.bodyTimeout = bodyTimeout;\n        this.throwOnError = throwOnError === true;\n        this.method = method;\n        this.abort = null;\n        if (body == null) {\n          this.body = null;\n        } else if (isStream(body)) {\n          this.body = body;\n          const rState = this.body._readableState;\n          if (!rState || !rState.autoDestroy) {\n            this.endHandler = /* @__PURE__ */ __name(function autoDestroy() {\n              destroy(this);\n            }\x2C "autoDestroy");\n            this.body.on("end"\x2C this.endHandler);\n          }\n          this.errorHandler = (err) => {\n            if (this.abort) {\n              this.abort(err);\n            } else {\n              this.error = err;\n            }\n          };\n          this.body.on("error"\x2C this.errorHandler);\n        } else if (isBuffer(body)) {\n          this.body = body.byteLength ? body : null;\n        } else if (ArrayBuffer.isView(body)) {\n          this.body = body.buffer.byteLength ? Buffer.from(body.buffer\x2C body.byteOffset\x2C body.byteLength) : null;\n        } else if (body instanceof ArrayBuffer) {\n          this.body = body.byteLength ? Buffer.from(body) : null;\n        } else if (typeof body === "string") {\n          this.body = body.length ? Buffer.from(body) : null;\n        } else if (isFormDataLike(body) || isIterable(body) || isBlobLike(body)) {\n          this.body = body;\n        } else {\n          throw new InvalidArgumentError("body must be a string\x2C a Buffer\x2C a Readable stream\x2C an iterable\x2C or an async iterable");\n        }\n        this.completed = false;\n        this.aborted = false;\n        this.upgrade = upgrade || null;\n        this.path = query ? buildURL(path\x2C query) : path;\n        this.origin = origin;\n        this.idempotent = idempotent == null ? method === "HEAD" || method === "GET" : idempotent;\n        this.blocking = blocking == null ? false : blocking;\n        this.reset = reset == null ? null : reset;\n        this.host = null;\n        this.contentLength = null;\n        this.contentType = null;\n        this.headers = [];\n        this.expectContinue = expectContinue != null ? expectContinue : false;\n        if (Array.isArray(headers)) {\n          if (headers.length % 2 !== 0) {\n            throw new InvalidArgumentError("headers array must be even");\n          }\n          for (let i = 0; i < headers.length; i += 2) {\n            processHeader(this\x2C headers[i]\x2C headers[i + 1]);\n          }\n        } else if (headers && typeof headers === "object") {\n          if (headers[Symbol.iterator]) {\n            for (const header of headers) {\n              if (!Array.isArray(header) || header.length !== 2) {\n                throw new InvalidArgumentError("headers must be in key-value pair format");\n              }\n              processHeader(this\x2C header[0]\x2C header[1]);\n            }\n          } else {\n            const keys = Object.keys(headers);\n            for (let i = 0; i < keys.length; ++i) {\n              processHeader(this\x2C keys[i]\x2C headers[keys[i]]);\n            }\n          }\n        } else if (headers != null) {\n          throw new InvalidArgumentError("headers must be an object or an array");\n        }\n        validateHandler(handler\x2C method\x2C upgrade);\n        this.servername = servername || getServerName(this.host);\n        this[kHandler] = handler;\n        if (channels.create.hasSubscribers) {\n          channels.create.publish({ request: this });\n        }\n      }\n      onBodySent(chunk) {\n        if (this[kHandler].onBodySent) {\n          try {\n            return this[kHandler].onBodySent(chunk);\n          } catch (err) {\n            this.abort(err);\n          }\n        }\n      }\n      onRequestSent() {\n        if (channels.bodySent.hasSubscribers) {\n          channels.bodySent.publish({ request: this });\n        }\n        if (this[kHandler].onRequestSent) {\n          try {\n            return this[kHandler].onRequestSent();\n          } catch (err) {\n            this.abort(err);\n          }\n        }\n      }\n      onConnect(abort) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        if (this.error) {\n          abort(this.error);\n        } else {\n          this.abort = abort;\n          return this[kHandler].onConnect(abort);\n        }\n      }\n      onResponseStarted() {\n        return this[kHandler].onResponseStarted?.();\n      }\n      onHeaders(statusCode\x2C headers\x2C resume\x2C statusText) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        if (channels.headers.hasSubscribers) {\n          channels.headers.publish({ request: this\x2C response: { statusCode\x2C headers\x2C statusText } });\n        }\n        try {\n          return this[kHandler].onHeaders(statusCode\x2C headers\x2C resume\x2C statusText);\n        } catch (err) {\n          this.abort(err);\n        }\n      }\n      onData(chunk) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        try {\n          return this[kHandler].onData(chunk);\n        } catch (err) {\n          this.abort(err);\n          return false;\n        }\n      }\n      onUpgrade(statusCode\x2C headers\x2C socket) {\n        assert(!this.aborted);\n        assert(!this.completed);\n        return this[kHandler].onUpgrade(statusCode\x2C headers\x2C socket);\n      }\n      onComplete(trailers) {\n        this.onFinally();\n        assert(!this.aborted);\n        this.completed = true;\n        if (channels.trailers.hasSubscribers) {\n          channels.trailers.publish({ request: this\x2C trailers });\n        }\n        try {\n          return this[kHandler].onComplete(trailers);\n        } catch (err) {\n          this.onError(err);\n        }\n      }\n      onError(error) {\n        this.onFinally();\n        if (channels.error.hasSubscribers) {\n          channels.error.publish({ request: this\x2C error });\n        }\n        if (this.aborted) {\n          return;\n        }\n        this.aborted = true;\n        return this[kHandler].onError(error);\n      }\n      onFinally() {\n        if (this.errorHandler) {\n          this.body.off("error"\x2C this.errorHandler);\n          this.errorHandler = null;\n        }\n        if (this.endHandler) {\n          this.body.off("end"\x2C this.endHandler);\n          this.endHandler = null;\n        }\n      }\n      addHeader(key\x2C value) {\n        processHeader(this\x2C key\x2C value);\n        return this;\n      }\n    };\n    function processHeader(request\x2C key\x2C val) {\n      if (val && (typeof val === "object" && !Array.isArray(val))) {\n        throw new InvalidArgumentError(`invalid ${key} header`);\n      } else if (val === void 0) {\n        return;\n      }\n      let headerName = headerNameLowerCasedRecord[key];\n      if (headerName === void 0) {\n        headerName = key.toLowerCase();\n        if (headerNameLowerCasedRecord[headerName] === void 0 && !isValidHTTPToken(headerName)) {\n          throw new InvalidArgumentError("invalid header key");\n        }\n      }\n      if (Array.isArray(val)) {\n        const arr = [];\n        for (let i = 0; i < val.length; i++) {\n          if (typeof val[i] === "string") {\n            if (!isValidHeaderValue(val[i])) {\n              throw new InvalidArgumentError(`invalid ${key} header`);\n            }\n            arr.push(val[i]);\n          } else if (val[i] === null) {\n            arr.push("");\n          } else if (typeof val[i] === "object") {\n            throw new InvalidArgumentError(`invalid ${key} header`);\n          } else {\n            arr.push(`${val[i]}`);\n          }\n        }\n        val = arr;\n      } else if (typeof val === "string") {\n        if (!isValidHeaderValue(val)) {\n          throw new InvalidArgumentError(`invalid ${key} header`);\n        }\n      } else if (val === null) {\n        val = "";\n      } else {\n        val = `${val}`;\n      }\n      if (request.host === null && headerName === "host") {\n        if (typeof val !== "string") {\n          throw new InvalidArgumentError("invalid host header");\n        }\n        request.host = val;\n      } else if (request.contentLength === null && headerName === "content-length") {\n        request.contentLength = parseInt(val\x2C 10);\n        if (!Number.isFinite(request.contentLength)) {\n          throw new InvalidArgumentError("invalid content-length header");\n        }\n      } else if (request.contentType === null && headerName === "content-type") {\n        request.contentType = val;\n        request.headers.push(key\x2C val);\n      } else if (headerName === "transfer-encoding" || headerName === "keep-alive" || headerName === "upgrade") {\n        throw new InvalidArgumentError(`invalid ${headerName} header`);\n      } else if (headerName === "connection") {\n        const value = typeof val === "string" ? val.toLowerCase() : null;\n        if (value !== "close" && value !== "keep-alive") {\n          throw new InvalidArgumentError("invalid connection header");\n        }\n        if (value === "close") {\n          request.reset = true;\n        }\n      } else if (headerName === "expect") {\n        throw new NotSupportedError("expect header not supported");\n      } else {\n        request.headers.push(key\x2C val);\n      }\n    }\n    __name(processHeader\x2C "processHeader");\n    module2.exports = Request;\n  }\n});\n\n// lib/util/timers.js\nvar require_timers = __commonJS({\n  "lib/util/timers.js"(exports2\x2C module2) {\n    "use strict";\n    var fastNow = 0;\n    var RESOLUTION_MS = 1e3;\n    var TICK_MS = (RESOLUTION_MS >> 1) - 1;\n    var fastNowTimeout;\n    var kFastTimer = Symbol("kFastTimer");\n    var fastTimers = [];\n    var NOT_IN_LIST = -2;\n    var TO_BE_CLEARED = -1;\n    var PENDING = 0;\n    var ACTIVE = 1;\n    function onTick() {\n      fastNow += TICK_MS;\n      let idx = 0;\n      let len = fastTimers.length;\n      while (idx < len) {\n        const timer = fastTimers[idx];\n        if (timer._state === PENDING) {\n          timer._idleStart = fastNow - TICK_MS;\n          timer._state = ACTIVE;\n        } else if (timer._state === ACTIVE && fastNow >= timer._idleStart + timer._idleTimeout) {\n          timer._state = TO_BE_CLEARED;\n          timer._idleStart = -1;\n          timer._onTimeout(timer._timerArg);\n        }\n        if (timer._state === TO_BE_CLEARED) {\n          timer._state = NOT_IN_LIST;\n          if (--len !== 0) {\n            fastTimers[idx] = fastTimers[len];\n          }\n        } else {\n          ++idx;\n        }\n      }\n      fastTimers.length = len;\n      if (fastTimers.length !== 0) {\n        refreshTimeout();\n      }\n    }\n    __name(onTick\x2C "onTick");\n    function refreshTimeout() {\n      if (fastNowTimeout) {\n        fastNowTimeout.refresh();\n      } else {\n        clearTimeout(fastNowTimeout);\n        fastNowTimeout = setTimeout(onTick\x2C TICK_MS);\n        if (fastNowTimeout.unref) {\n          fastNowTimeout.unref();\n        }\n      }\n    }\n    __name(refreshTimeout\x2C "refreshTimeout");\n    var FastTimer = class {\n      static {\n        __name(this\x2C "FastTimer");\n      }\n      [kFastTimer] = true;\n      /**\n       * The state of the timer\x2C which can be one of the following:\n       * - NOT_IN_LIST (-2)\n       * - TO_BE_CLEARED (-1)\n       * - PENDING (0)\n       * - ACTIVE (1)\n       *\n       * @type {-2|-1|0|1}\n       * @private\n       */\n      _state = NOT_IN_LIST;\n      /**\n       * The number of milliseconds to wait before calling the callback.\n       *\n       * @type {number}\n       * @private\n       */\n      _idleTimeout = -1;\n      /**\n       * The time in milliseconds when the timer was started. This value is used to\n       * calculate when the timer should expire.\n       *\n       * @type {number}\n       * @default -1\n       * @private\n       */\n      _idleStart = -1;\n      /**\n       * The function to be executed when the timer expires.\n       * @type {Function}\n       * @private\n       */\n      _onTimeout;\n      /**\n       * The argument to be passed to the callback when the timer expires.\n       *\n       * @type {*}\n       * @private\n       */\n      _timerArg;\n      /**\n       * @constructor\n       * @param {Function} callback A function to be executed after the timer\n       * expires.\n       * @param {number} delay The time\x2C in milliseconds that the timer should wait\n       * before the specified function or code is executed.\n       * @param {*} arg\n       */\n      constructor(callback\x2C delay\x2C arg) {\n        this._onTimeout = callback;\n        this._idleTimeout = delay;\n        this._timerArg = arg;\n        this.refresh();\n      }\n      /**\n       * Sets the timer's start time to the current time\x2C and reschedules the timer\n       * to call its callback at the previously specified duration adjusted to the\n       * current time.\n       * Using this on a timer that has already called its callback will reactivate\n       * the timer.\n       *\n       * @returns {void}\n       */\n      refresh() {\n        if (this._state === NOT_IN_LIST) {\n          fastTimers.push(this);\n        }\n        if (!fastNowTimeout || fastTimers.length === 1) {\n          refreshTimeout();\n        }\n        this._state = PENDING;\n      }\n      /**\n       * The `clear` method cancels the timer\x2C preventing it from executing.\n       *\n       * @returns {void}\n       * @private\n       */\n      clear() {\n        this._state = TO_BE_CLEARED;\n        this._idleStart = -1;\n      }\n    };\n    module2.exports = {\n      /**\n       * The setTimeout() method sets a timer which executes a function once the\n       * timer expires.\n       * @param {Function} callback A function to be executed after the timer\n       * expires.\n       * @param {number} delay The time\x2C in milliseconds that the timer should\n       * wait before the specified function or code is executed.\n       * @param {*} [arg] An optional argument to be passed to the callback function\n       * when the timer expires.\n       * @returns {NodeJS.Timeout|FastTimer}\n       */\n      setTimeout(callback\x2C delay\x2C arg) {\n        return delay <= RESOLUTION_MS ? setTimeout(callback\x2C delay\x2C arg) : new FastTimer(callback\x2C delay\x2C arg);\n      }\x2C\n      /**\n       * The clearTimeout method cancels an instantiated Timer previously created\n       * by calling setTimeout.\n       *\n       * @param {NodeJS.Timeout|FastTimer} timeout\n       */\n      clearTimeout(timeout) {\n        if (timeout[kFastTimer]) {\n          timeout.clear();\n        } else {\n          clearTimeout(timeout);\n        }\n      }\x2C\n      /**\n       * The setFastTimeout() method sets a fastTimer which executes a function once\n       * the timer expires.\n       * @param {Function} callback A function to be executed after the timer\n       * expires.\n       * @param {number} delay The time\x2C in milliseconds that the timer should\n       * wait before the specified function or code is executed.\n       * @param {*} [arg] An optional argument to be passed to the callback function\n       * when the timer expires.\n       * @returns {FastTimer}\n       */\n      setFastTimeout(callback\x2C delay\x2C arg) {\n        return new FastTimer(callback\x2C delay\x2C arg);\n      }\x2C\n      /**\n       * The clearTimeout method cancels an instantiated FastTimer previously\n       * created by calling setFastTimeout.\n       *\n       * @param {FastTimer} timeout\n       */\n      clearFastTimeout(timeout) {\n        timeout.clear();\n      }\x2C\n      /**\n       * The now method returns the value of the internal fast timer clock.\n       *\n       * @returns {number}\n       */\n      now() {\n        return fastNow;\n      }\x2C\n      /**\n       * Trigger the onTick function to process the fastTimers array.\n       * Exported for testing purposes only.\n       * Marking as deprecated to discourage any use outside of testing.\n       * @deprecated\n       * @param {number} [delay=0] The delay in milliseconds to add to the now value.\n       */\n      tick(delay = 0) {\n        fastNow += delay - RESOLUTION_MS + 1;\n        onTick();\n        onTick();\n      }\x2C\n      /**\n       * Reset FastTimers.\n       * Exported for testing purposes only.\n       * Marking as deprecated to discourage any use outside of testing.\n       * @deprecated\n       */\n      reset() {\n        fastNow = 0;\n        fastTimers.length = 0;\n        clearTimeout(fastNowTimeout);\n        fastNowTimeout = null;\n      }\x2C\n      /**\n       * Exporting for testing purposes only.\n       * Marking as deprecated to discourage any use outside of testing.\n       * @deprecated\n       */\n      kFastTimer\n    };\n  }\n});\n\n// lib/core/connect.js\nvar require_connect = __commonJS({\n  "lib/core/connect.js"(exports2\x2C module2) {\n    "use strict";\n    var net = require("node:net");\n    var assert = require("node:assert");\n    var util = require_util();\n    var { InvalidArgumentError\x2C ConnectTimeoutError } = require_errors();\n    var timers = require_timers();\n    function noop() {\n    }\n    __name(noop\x2C "noop");\n    var tls;\n    var SessionCache;\n    if (global.FinalizationRegistry && !(process.env.NODE_V8_COVERAGE || process.env.UNDICI_NO_FG)) {\n      SessionCache = class WeakSessionCache {\n        static {\n          __name(this\x2C "WeakSessionCache");\n        }\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n          this._sessionRegistry = new global.FinalizationRegistry((key) => {\n            if (this._sessionCache.size < this._maxCachedSessions) {\n              return;\n            }\n            const ref = this._sessionCache.get(key);\n            if (ref !== void 0 && ref.deref() === void 0) {\n              this._sessionCache.delete(key);\n            }\n          });\n        }\n        get(sessionKey) {\n          const ref = this._sessionCache.get(sessionKey);\n          return ref ? ref.deref() : null;\n        }\n        set(sessionKey\x2C session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          this._sessionCache.set(sessionKey\x2C new WeakRef(session));\n          this._sessionRegistry.register(session\x2C sessionKey);\n        }\n      };\n    } else {\n      SessionCache = class SimpleSessionCache {\n        static {\n          __name(this\x2C "SimpleSessionCache");\n        }\n        constructor(maxCachedSessions) {\n          this._maxCachedSessions = maxCachedSessions;\n          this._sessionCache = /* @__PURE__ */ new Map();\n        }\n        get(sessionKey) {\n          return this._sessionCache.get(sessionKey);\n        }\n        set(sessionKey\x2C session) {\n          if (this._maxCachedSessions === 0) {\n            return;\n          }\n          if (this._sessionCache.size >= this._maxCachedSessions) {\n            const { value: oldestKey } = this._sessionCache.keys().next();\n            this._sessionCache.delete(oldestKey);\n          }\n          this._sessionCache.set(sessionKey\x2C session);\n        }\n      };\n    }\n    function buildConnector({ allowH2\x2C maxCachedSessions\x2C socketPath\x2C timeout\x2C session: customSession\x2C ...opts }) {\n      if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n        throw new InvalidArgumentError("maxCachedSessions must be a positive integer or zero");\n      }\n      const options = { path: socketPath\x2C ...opts };\n      const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions);\n      timeout = timeout == null ? 1e4 : timeout;\n      allowH2 = allowH2 != null ? allowH2 : false;\n      return /* @__PURE__ */ __name(function connect({ hostname\x2C host\x2C protocol\x2C port\x2C servername\x2C localAddress\x2C httpSocket }\x2C callback) {\n        let socket;\n        if (protocol === "https:") {\n          if (!tls) {\n            tls = require("node:tls");\n          }\n          servername = servername || options.servername || util.getServerName(host) || null;\n          const sessionKey = servername || hostname;\n          assert(sessionKey);\n          const session = customSession || sessionCache.get(sessionKey) || null;\n          port = port || 443;\n          socket = tls.connect({\n            highWaterMark: 16384\x2C\n            // TLS in node can't have bigger HWM anyway...\n            ...options\x2C\n            servername\x2C\n            session\x2C\n            localAddress\x2C\n            // TODO(HTTP/2): Add support for h2c\n            ALPNProtocols: allowH2 ? ["http/1.1"\x2C "h2"] : ["http/1.1"]\x2C\n            socket: httpSocket\x2C\n            // upgrade socket connection\n            port\x2C\n            host: hostname\n          });\n          socket.on("session"\x2C function(session2) {\n            sessionCache.set(sessionKey\x2C session2);\n          });\n        } else {\n          assert(!httpSocket\x2C "httpSocket can only be sent on TLS update");\n          port = port || 80;\n          socket = net.connect({\n            highWaterMark: 64 * 1024\x2C\n            // Same as nodejs fs streams.\n            ...options\x2C\n            localAddress\x2C\n            port\x2C\n            host: hostname\n          });\n        }\n        if (options.keepAlive == null || options.keepAlive) {\n          const keepAliveInitialDelay = options.keepAliveInitialDelay === void 0 ? 6e4 : options.keepAliveInitialDelay;\n          socket.setKeepAlive(true\x2C keepAliveInitialDelay);\n        }\n        const clearConnectTimeout = setupConnectTimeout(new WeakRef(socket)\x2C { timeout\x2C hostname\x2C port });\n        socket.setNoDelay(true).once(protocol === "https:" ? "secureConnect" : "connect"\x2C function() {\n          queueMicrotask(clearConnectTimeout);\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(null\x2C this);\n          }\n        }).on("error"\x2C function(err) {\n          queueMicrotask(clearConnectTimeout);\n          if (callback) {\n            const cb = callback;\n            callback = null;\n            cb(err);\n          }\n        });\n        return socket;\n      }\x2C "connect");\n    }\n    __name(buildConnector\x2C "buildConnector");\n    var setupConnectTimeout = process.platform === "win32" ? (socketWeakRef\x2C opts) => {\n      if (!opts.timeout) {\n        return noop;\n      }\n      let s1 = null;\n      let s2 = null;\n      const fastTimer = timers.setFastTimeout(() => {\n        s1 = setImmediate(() => {\n          s2 = setImmediate(() => onConnectTimeout(socketWeakRef.deref()\x2C opts));\n        });\n      }\x2C opts.timeout);\n      return () => {\n        timers.clearFastTimeout(fastTimer);\n        clearImmediate(s1);\n        clearImmediate(s2);\n      };\n    } : (socketWeakRef\x2C opts) => {\n      if (!opts.timeout) {\n        return noop;\n      }\n      let s1 = null;\n      const fastTimer = timers.setFastTimeout(() => {\n        s1 = setImmediate(() => {\n          onConnectTimeout(socketWeakRef.deref()\x2C opts);\n        });\n      }\x2C opts.timeout);\n      return () => {\n        timers.clearFastTimeout(fastTimer);\n        clearImmediate(s1);\n      };\n    };\n    function onConnectTimeout(socket\x2C opts) {\n      if (socket == null) {\n        return;\n      }\n      let message = "Connect Timeout Error";\n      if (Array.isArray(socket.autoSelectFamilyAttemptedAddresses)) {\n        message += ` (attempted addresses: ${socket.autoSelectFamilyAttemptedAddresses.join("\x2C ")}\x2C`;\n      } else {\n        message += ` (attempted address: ${opts.hostname}:${opts.port}\x2C`;\n      }\n      message += ` timeout: ${opts.timeout}ms)`;\n      util.destroy(socket\x2C new ConnectTimeoutError(message));\n    }\n    __name(onConnectTimeout\x2C "onConnectTimeout");\n    module2.exports = buildConnector;\n  }\n});\n\n// lib/llhttp/utils.js\nvar require_utils = __commonJS({\n  "lib/llhttp/utils.js"(exports2) {\n    "use strict";\n    Object.defineProperty(exports2\x2C "__esModule"\x2C { value: true });\n    exports2.enumToMap = void 0;\n    function enumToMap(obj) {\n      const res = {};\n      Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n        if (typeof value === "number") {\n          res[key] = value;\n        }\n      });\n      return res;\n    }\n    __name(enumToMap\x2C "enumToMap");\n    exports2.enumToMap = enumToMap;\n  }\n});\n\n// lib/llhttp/constants.js\nvar require_constants2 = __commonJS({\n  "lib/llhttp/constants.js"(exports2) {\n    "use strict";\n    Object.defineProperty(exports2\x2C "__esModule"\x2C { value: true });\n    exports2.SPECIAL_HEADERS = exports2.HEADER_STATE = exports2.MINOR = exports2.MAJOR = exports2.CONNECTION_TOKEN_CHARS = exports2.HEADER_CHARS = exports2.TOKEN = exports2.STRICT_TOKEN = exports2.HEX = exports2.URL_CHAR = exports2.STRICT_URL_CHAR = exports2.USERINFO_CHARS = exports2.MARK = exports2.ALPHANUM = exports2.NUM = exports2.HEX_MAP = exports2.NUM_MAP = exports2.ALPHA = exports2.FINISH = exports2.H_METHOD_MAP = exports2.METHOD_MAP = exports2.METHODS_RTSP = exports2.METHODS_ICE = exports2.METHODS_HTTP = exports2.METHODS = exports2.LENIENT_FLAGS = exports2.FLAGS = exports2.TYPE = exports2.ERROR = void 0;\n    var utils_1 = require_utils();\n    var ERROR;\n    (function(ERROR2) {\n      ERROR2[ERROR2["OK"] = 0] = "OK";\n      ERROR2[ERROR2["INTERNAL"] = 1] = "INTERNAL";\n      ERROR2[ERROR2["STRICT"] = 2] = "STRICT";\n      ERROR2[ERROR2["LF_EXPECTED"] = 3] = "LF_EXPECTED";\n      ERROR2[ERROR2["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";\n      ERROR2[ERROR2["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";\n      ERROR2[ERROR2["INVALID_METHOD"] = 6] = "INVALID_METHOD";\n      ERROR2[ERROR2["INVALID_URL"] = 7] = "INVALID_URL";\n      ERROR2[ERROR2["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";\n      ERROR2[ERROR2["INVALID_VERSION"] = 9] = "INVALID_VERSION";\n      ERROR2[ERROR2["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";\n      ERROR2[ERROR2["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";\n      ERROR2[ERROR2["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";\n      ERROR2[ERROR2["INVALID_STATUS"] = 13] = "INVALID_STATUS";\n      ERROR2[ERROR2["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";\n      ERROR2[ERROR2["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";\n      ERROR2[ERROR2["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";\n      ERROR2[ERROR2["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";\n      ERROR2[ERROR2["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";\n      ERROR2[ERROR2["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";\n      ERROR2[ERROR2["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";\n      ERROR2[ERROR2["PAUSED"] = 21] = "PAUSED";\n      ERROR2[ERROR2["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";\n      ERROR2[ERROR2["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";\n      ERROR2[ERROR2["USER"] = 24] = "USER";\n    })(ERROR = exports2.ERROR || (exports2.ERROR = {}));\n    var TYPE;\n    (function(TYPE2) {\n      TYPE2[TYPE2["BOTH"] = 0] = "BOTH";\n      TYPE2[TYPE2["REQUEST"] = 1] = "REQUEST";\n      TYPE2[TYPE2["RESPONSE"] = 2] = "RESPONSE";\n    })(TYPE = exports2.TYPE || (exports2.TYPE = {}));\n    var FLAGS;\n    (function(FLAGS2) {\n      FLAGS2[FLAGS2["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";\n      FLAGS2[FLAGS2["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";\n      FLAGS2[FLAGS2["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";\n      FLAGS2[FLAGS2["CHUNKED"] = 8] = "CHUNKED";\n      FLAGS2[FLAGS2["UPGRADE"] = 16] = "UPGRADE";\n      FLAGS2[FLAGS2["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";\n      FLAGS2[FLAGS2["SKIPBODY"] = 64] = "SKIPBODY";\n      FLAGS2[FLAGS2["TRAILING"] = 128] = "TRAILING";\n      FLAGS2[FLAGS2["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";\n    })(FLAGS = exports2.FLAGS || (exports2.FLAGS = {}));\n    var LENIENT_FLAGS;\n    (function(LENIENT_FLAGS2) {\n      LENIENT_FLAGS2[LENIENT_FLAGS2["HEADERS"] = 1] = "HEADERS";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";\n      LENIENT_FLAGS2[LENIENT_FLAGS2["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";\n    })(LENIENT_FLAGS = exports2.LENIENT_FLAGS || (exports2.LENIENT_FLAGS = {}));\n    var METHODS;\n    (function(METHODS2) {\n      METHODS2[METHODS2["DELETE"] = 0] = "DELETE";\n      METHODS2[METHODS2["GET"] = 1] = "GET";\n      METHODS2[METHODS2["HEAD"] = 2] = "HEAD";\n      METHODS2[METHODS2["POST"] = 3] = "POST";\n      METHODS2[METHODS2["PUT"] = 4] = "PUT";\n      METHODS2[METHODS2["CONNECT"] = 5] = "CONNECT";\n      METHODS2[METHODS2["OPTIONS"] = 6] = "OPTIONS";\n      METHODS2[METHODS2["TRACE"] = 7] = "TRACE";\n      METHODS2[METHODS2["COPY"] = 8] = "COPY";\n      METHODS2[METHODS2["LOCK"] = 9] = "LOCK";\n      METHODS2[METHODS2["MKCOL"] = 10] = "MKCOL";\n      METHODS2[METHODS2["MOVE"] = 11] = "MOVE";\n      METHODS2[METHODS2["PROPFIND"] = 12] = "PROPFIND";\n      METHODS2[METHODS2["PROPPATCH"] = 13] = "PROPPATCH";\n      METHODS2[METHODS2["SEARCH"] = 14] = "SEARCH";\n      METHODS2[METHODS2["UNLOCK"] = 15] = "UNLOCK";\n      METHODS2[METHODS2["BIND"] = 16] = "BIND";\n      METHODS2[METHODS2["REBIND"] = 17] = "REBIND";\n      METHODS2[METHODS2["UNBIND"] = 18] = "UNBIND";\n      METHODS2[METHODS2["ACL"] = 19] = "ACL";\n      METHODS2[METHODS2["REPORT"] = 20] = "REPORT";\n      METHODS2[METHODS2["MKACTIVITY"] = 21] = "MKACTIVITY";\n      METHODS2[METHODS2["CHECKOUT"] = 22] = "CHECKOUT";\n      METHODS2[METHODS2["MERGE"] = 23] = "MERGE";\n      METHODS2[METHODS2["M-SEARCH"] = 24] = "M-SEARCH";\n      METHODS2[METHODS2["NOTIFY"] = 25] = "NOTIFY";\n      METHODS2[METHODS2["SUBSCRIBE"] = 26] = "SUBSCRIBE";\n      METHODS2[METHODS2["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";\n      METHODS2[METHODS2["PATCH"] = 28] = "PATCH";\n      METHODS2[METHODS2["PURGE"] = 29] = "PURGE";\n      METHODS2[METHODS2["MKCALENDAR"] = 30] = "MKCALENDAR";\n      METHODS2[METHODS2["LINK"] = 31] = "LINK";\n      METHODS2[METHODS2["UNLINK"] = 32] = "UNLINK";\n      METHODS2[METHODS2["SOURCE"] = 33] = "SOURCE";\n      METHODS2[METHODS2["PRI"] = 34] = "PRI";\n      METHODS2[METHODS2["DESCRIBE"] = 35] = "DESCRIBE";\n      METHODS2[METHODS2["ANNOUNCE"] = 36] = "ANNOUNCE";\n      METHODS2[METHODS2["SETUP"] = 37] = "SETUP";\n      METHODS2[METHODS2["PLAY"] = 38] = "PLAY";\n      METHODS2[METHODS2["PAUSE"] = 39] = "PAUSE";\n      METHODS2[METHODS2["TEARDOWN"] = 40] = "TEARDOWN";\n      METHODS2[METHODS2["GET_PARAMETER"] = 41] = "GET_PARAMETER";\n      METHODS2[METHODS2["SET_PARAMETER"] = 42] = "SET_PARAMETER";\n      METHODS2[METHODS2["REDIRECT"] = 43] = "REDIRECT";\n      METHODS2[METHODS2["RECORD"] = 44] = "RECORD";\n      METHODS2[METHODS2["FLUSH"] = 45] = "FLUSH";\n    })(METHODS = exports2.METHODS || (exports2.METHODS = {}));\n    exports2.METHODS_HTTP = [\n      METHODS.DELETE\x2C\n      METHODS.GET\x2C\n      METHODS.HEAD\x2C\n      METHODS.POST\x2C\n      METHODS.PUT\x2C\n      METHODS.CONNECT\x2C\n      METHODS.OPTIONS\x2C\n      METHODS.TRACE\x2C\n      METHODS.COPY\x2C\n      METHODS.LOCK\x2C\n      METHODS.MKCOL\x2C\n      METHODS.MOVE\x2C\n      METHODS.PROPFIND\x2C\n      METHODS.PROPPATCH\x2C\n      METHODS.SEARCH\x2C\n      METHODS.UNLOCK\x2C\n      METHODS.BIND\x2C\n      METHODS.REBIND\x2C\n      METHODS.UNBIND\x2C\n      METHODS.ACL\x2C\n      METHODS.REPORT\x2C\n      METHODS.MKACTIVITY\x2C\n      METHODS.CHECKOUT\x2C\n      METHODS.MERGE\x2C\n      METHODS["M-SEARCH"]\x2C\n      METHODS.NOTIFY\x2C\n      METHODS.SUBSCRIBE\x2C\n      METHODS.UNSUBSCRIBE\x2C\n      METHODS.PATCH\x2C\n      METHODS.PURGE\x2C\n      METHODS.MKCALENDAR\x2C\n      METHODS.LINK\x2C\n      METHODS.UNLINK\x2C\n      METHODS.PRI\x2C\n      // TODO(indutny): should we allow it with HTTP?\n      METHODS.SOURCE\n    ];\n    exports2.METHODS_ICE = [\n      METHODS.SOURCE\n    ];\n    exports2.METHODS_RTSP = [\n      METHODS.OPTIONS\x2C\n      METHODS.DESCRIBE\x2C\n      METHODS.ANNOUNCE\x2C\n      METHODS.SETUP\x2C\n      METHODS.PLAY\x2C\n      METHODS.PAUSE\x2C\n      METHODS.TEARDOWN\x2C\n      METHODS.GET_PARAMETER\x2C\n      METHODS.SET_PARAMETER\x2C\n      METHODS.REDIRECT\x2C\n      METHODS.RECORD\x2C\n      METHODS.FLUSH\x2C\n      // For AirPlay\n      METHODS.GET\x2C\n      METHODS.POST\n    ];\n    exports2.METHOD_MAP = utils_1.enumToMap(METHODS);\n    exports2.H_METHOD_MAP = {};\n    Object.keys(exports2.METHOD_MAP).forEach((key) => {\n      if (/^H/.test(key)) {\n        exports2.H_METHOD_MAP[key] = exports2.METHOD_MAP[key];\n      }\n    });\n    var FINISH;\n    (function(FINISH2) {\n      FINISH2[FINISH2["SAFE"] = 0] = "SAFE";\n      FINISH2[FINISH2["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";\n      FINISH2[FINISH2["UNSAFE"] = 2] = "UNSAFE";\n    })(FINISH = exports2.FINISH || (exports2.FINISH = {}));\n    exports2.ALPHA = [];\n    for (let i = "A".charCodeAt(0); i <= "Z".charCodeAt(0); i++) {\n      exports2.ALPHA.push(String.fromCharCode(i));\n      exports2.ALPHA.push(String.fromCharCode(i + 32));\n    }\n    exports2.NUM_MAP = {\n      0: 0\x2C\n      1: 1\x2C\n      2: 2\x2C\n      3: 3\x2C\n      4: 4\x2C\n      5: 5\x2C\n      6: 6\x2C\n      7: 7\x2C\n      8: 8\x2C\n      9: 9\n    };\n    exports2.HEX_MAP = {\n      0: 0\x2C\n      1: 1\x2C\n      2: 2\x2C\n      3: 3\x2C\n      4: 4\x2C\n      5: 5\x2C\n      6: 6\x2C\n      7: 7\x2C\n      8: 8\x2C\n      9: 9\x2C\n      A: 10\x2C\n      B: 11\x2C\n      C: 12\x2C\n      D: 13\x2C\n      E: 14\x2C\n      F: 15\x2C\n      a: 10\x2C\n      b: 11\x2C\n      c: 12\x2C\n      d: 13\x2C\n      e: 14\x2C\n      f: 15\n    };\n    exports2.NUM = [\n      "0"\x2C\n      "1"\x2C\n      "2"\x2C\n      "3"\x2C\n      "4"\x2C\n      "5"\x2C\n      "6"\x2C\n      "7"\x2C\n      "8"\x2C\n      "9"\n    ];\n    exports2.ALPHANUM = exports2.ALPHA.concat(exports2.NUM);\n    exports2.MARK = ["-"\x2C "_"\x2C "."\x2C "!"\x2C "~"\x2C "*"\x2C "'"\x2C "("\x2C ")"];\n    exports2.USERINFO_CHARS = exports2.ALPHANUM.concat(exports2.MARK).concat(["%"\x2C ";"\x2C ":"\x2C "&"\x2C "="\x2C "+"\x2C "$"\x2C "\x2C"]);\n    exports2.STRICT_URL_CHAR = [\n      "!"\x2C\n      '"'\x2C\n      "$"\x2C\n      "%"\x2C\n      "&"\x2C\n      "'"\x2C\n      "("\x2C\n      ")"\x2C\n      "*"\x2C\n      "+"\x2C\n      "\x2C"\x2C\n      "-"\x2C\n      "."\x2C\n      "/"\x2C\n      ":"\x2C\n      ";"\x2C\n      "<"\x2C\n      "="\x2C\n      ">"\x2C\n      "@"\x2C\n      "["\x2C\n      "\\\\"\x2C\n      "]"\x2C\n      "^"\x2C\n      "_"\x2C\n      "`"\x2C\n      "{"\x2C\n      "|"\x2C\n      "}"\x2C\n      "~"\n    ].concat(exports2.ALPHANUM);\n    exports2.URL_CHAR = exports2.STRICT_URL_CHAR.concat(["\x09"\x2C "\\f"]);\n    for (let i = 128; i <= 255; i++) {\n      exports2.URL_CHAR.push(i);\n    }\n    exports2.HEX = exports2.NUM.concat(["a"\x2C "b"\x2C "c"\x2C "d"\x2C "e"\x2C "f"\x2C "A"\x2C "B"\x2C "C"\x2C "D"\x2C "E"\x2C "F"]);\n    exports2.STRICT_TOKEN = [\n      "!"\x2C\n      "#"\x2C\n      "$"\x2C\n      "%"\x2C\n      "&"\x2C\n      "'"\x2C\n      "*"\x2C\n      "+"\x2C\n      "-"\x2C\n      "."\x2C\n      "^"\x2C\n      "_"\x2C\n      "`"\x2C\n      "|"\x2C\n      "~"\n    ].concat(exports2.ALPHANUM);\n    exports2.TOKEN = exports2.STRICT_TOKEN.concat([" "]);\n    exports2.HEADER_CHARS = ["\x09"];\n    for (let i = 32; i <= 255; i++) {\n      if (i !== 127) {\n        exports2.HEADER_CHARS.push(i);\n      }\n    }\n    exports2.CONNECTION_TOKEN_CHARS = exports2.HEADER_CHARS.filter((c) => c !== 44);\n    exports2.MAJOR = exports2.NUM_MAP;\n    exports2.MINOR = exports2.MAJOR;\n    var HEADER_STATE;\n    (function(HEADER_STATE2) {\n      HEADER_STATE2[HEADER_STATE2["GENERAL"] = 0] = "GENERAL";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION"] = 1] = "CONNECTION";\n      HEADER_STATE2[HEADER_STATE2["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";\n      HEADER_STATE2[HEADER_STATE2["UPGRADE"] = 4] = "UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";\n      HEADER_STATE2[HEADER_STATE2["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";\n      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";\n    })(HEADER_STATE = exports2.HEADER_STATE || (exports2.HEADER_STATE = {}));\n    exports2.SPECIAL_HEADERS = {\n      "connection": HEADER_STATE.CONNECTION\x2C\n      "content-length": HEADER_STATE.CONTENT_LENGTH\x2C\n      "proxy-connection": HEADER_STATE.CONNECTION\x2C\n      "transfer-encoding": HEADER_STATE.TRANSFER_ENCODING\x2C\n      "upgrade": HEADER_STATE.UPGRADE\n    };\n  }\n});\n\n// lib/llhttp/llhttp-wasm.js\nvar require_llhttp_wasm = __commonJS({\n  "lib/llhttp/llhttp-wasm.js"(exports2\x2C module2) {\n    "use strict";\n    var { Buffer: Buffer2 } = require("node:buffer");\n    module2.exports = Buffer2.from(""\x2C "base64");\n  }\n});\n\n// lib/llhttp/llhttp_simd-wasm.js\nvar require_llhttp_simd_wasm = __commonJS({\n  "lib/llhttp/llhttp_simd-wasm.js"(exports2\x2C module2) {\n    "use strict";\n    var { Buffer: Buffer2 } = require("node:buffer");\n    module2.exports = Buffer2.from(""\x2C "base64");\n  }\n});\n\n// lib/web/fetch/constants.js\nvar require_constants3 = __commonJS({\n  "lib/web/fetch/constants.js"(exports2\x2C module2) {\n    "use strict";\n    var corsSafeListedMethods = (\n      /** @type {const} */\n      ["GET"\x2C "HEAD"\x2C "POST"]\n    );\n    var corsSafeListedMethodsSet = new Set(corsSafeListedMethods);\n    var nullBodyStatus = (\n      /** @type {const} */\n      [101\x2C 204\x2C 205\x2C 304]\n    );\n    var redirectStatus = (\n      /** @type {const} */\n      [301\x2C 302\x2C 303\x2C 307\x2C 308]\n    );\n    var redirectStatusSet = new Set(redirectStatus);\n    var badPorts = (\n      /** @type {const} */\n      [\n        "1"\x2C\n        "7"\x2C\n        "9"\x2C\n        "11"\x2C\n        "13"\x2C\n        "15"\x2C\n        "17"\x2C\n        "19"\x2C\n        "20"\x2C\n        "21"\x2C\n        "22"\x2C\n        "23"\x2C\n        "25"\x2C\n        "37"\x2C\n        "42"\x2C\n        "43"\x2C\n        "53"\x2C\n        "69"\x2C\n        "77"\x2C\n        "79"\x2C\n        "87"\x2C\n        "95"\x2C\n        "101"\x2C\n        "102"\x2C\n        "103"\x2C\n        "104"\x2C\n        "109"\x2C\n        "110"\x2C\n        "111"\x2C\n        "113"\x2C\n        "115"\x2C\n        "117"\x2C\n        "119"\x2C\n        "123"\x2C\n        "135"\x2C\n        "137"\x2C\n        "139"\x2C\n        "143"\x2C\n        "161"\x2C\n        "179"\x2C\n        "389"\x2C\n        "427"\x2C\n        "465"\x2C\n        "512"\x2C\n        "513"\x2C\n        "514"\x2C\n        "515"\x2C\n        "526"\x2C\n        "530"\x2C\n        "531"\x2C\n        "532"\x2C\n        "540"\x2C\n        "548"\x2C\n        "554"\x2C\n        "556"\x2C\n        "563"\x2C\n        "587"\x2C\n        "601"\x2C\n        "636"\x2C\n        "989"\x2C\n        "990"\x2C\n        "993"\x2C\n        "995"\x2C\n        "1719"\x2C\n        "1720"\x2C\n        "1723"\x2C\n        "2049"\x2C\n        "3659"\x2C\n        "4045"\x2C\n        "4190"\x2C\n        "5060"\x2C\n        "5061"\x2C\n        "6000"\x2C\n        "6566"\x2C\n        "6665"\x2C\n        "6666"\x2C\n        "6667"\x2C\n        "6668"\x2C\n        "6669"\x2C\n        "6679"\x2C\n        "6697"\x2C\n        "10080"\n      ]\n    );\n    var badPortsSet = new Set(badPorts);\n    var referrerPolicy = (\n      /** @type {const} */\n      [\n        ""\x2C\n        "no-referrer"\x2C\n        "no-referrer-when-downgrade"\x2C\n        "same-origin"\x2C\n        "origin"\x2C\n        "strict-origin"\x2C\n        "origin-when-cross-origin"\x2C\n        "strict-origin-when-cross-origin"\x2C\n        "unsafe-url"\n      ]\n    );\n    var referrerPolicySet = new Set(referrerPolicy);\n    var requestRedirect = (\n      /** @type {const} */\n      ["follow"\x2C "manual"\x2C "error"]\n    );\n    var safeMethods = (\n      /** @type {const} */\n      ["GET"\x2C "HEAD"\x2C "OPTIONS"\x2C "TRACE"]\n    );\n    var safeMethodsSet = new Set(safeMethods);\n    var requestMode = (\n      /** @type {const} */\n      ["navigate"\x2C "same-origin"\x2C "no-cors"\x2C "cors"]\n    );\n    var requestCredentials = (\n      /** @type {const} */\n      ["omit"\x2C "same-origin"\x2C "include"]\n    );\n    var requestCache = (\n      /** @type {const} */\n      [\n        "default"\x2C\n        "no-store"\x2C\n        "reload"\x2C\n        "no-cache"\x2C\n        "force-cache"\x2C\n        "only-if-cached"\n      ]\n    );\n    var requestBodyHeader = (\n      /** @type {const} */\n      [\n        "content-encoding"\x2C\n        "content-language"\x2C\n        "content-location"\x2C\n        "content-type"\x2C\n        // See https://github.com/nodejs/undici/issues/2021\n        // 'Content-Length' is a forbidden header name\x2C which is typically\n        // removed in the Headers implementation. However\x2C undici doesn't\n        // filter out headers\x2C so we add it here.\n        "content-length"\n      ]\n    );\n    var requestDuplex = (\n      /** @type {const} */\n      [\n        "half"\n      ]\n    );\n    var forbiddenMethods = (\n      /** @type {const} */\n      ["CONNECT"\x2C "TRACE"\x2C "TRACK"]\n    );\n    var forbiddenMethodsSet = new Set(forbiddenMethods);\n    var subresource = (\n      /** @type {const} */\n      [\n        "audio"\x2C\n        "audioworklet"\x2C\n        "font"\x2C\n        "image"\x2C\n        "manifest"\x2C\n        "paintworklet"\x2C\n        "script"\x2C\n        "style"\x2C\n        "track"\x2C\n        "video"\x2C\n        "xslt"\x2C\n        ""\n      ]\n    );\n    var subresourceSet = new Set(subresource);\n    module2.exports = {\n      subresource\x2C\n      forbiddenMethods\x2C\n      requestBodyHeader\x2C\n      referrerPolicy\x2C\n      requestRedirect\x2C\n      requestMode\x2C\n      requestCredentials\x2C\n      requestCache\x2C\n      redirectStatus\x2C\n      corsSafeListedMethods\x2C\n      nullBodyStatus\x2C\n      safeMethods\x2C\n      badPorts\x2C\n      requestDuplex\x2C\n      subresourceSet\x2C\n      badPortsSet\x2C\n      redirectStatusSet\x2C\n      corsSafeListedMethodsSet\x2C\n      safeMethodsSet\x2C\n      forbiddenMethodsSet\x2C\n      referrerPolicySet\n    };\n  }\n});\n\n// lib/web/fetch/global.js\nvar require_global = __commonJS({\n  "lib/web/fetch/global.js"(exports2\x2C module2) {\n    "use strict";\n    var globalOrigin = Symbol.for("undici.globalOrigin.1");\n    function getGlobalOrigin() {\n      return globalThis[globalOrigin];\n    }\n    __name(getGlobalOrigin\x2C "getGlobalOrigin");\n    function setGlobalOrigin(newOrigin) {\n      if (newOrigin === void 0) {\n        Object.defineProperty(globalThis\x2C globalOrigin\x2C {\n          value: void 0\x2C\n          writable: true\x2C\n          enumerable: false\x2C\n          configurable: false\n        });\n        return;\n      }\n      const parsedURL = new URL(newOrigin);\n      if (parsedURL.protocol !== "http:" && parsedURL.protocol !== "https:") {\n        throw new TypeError(`Only http & https urls are allowed\x2C received ${parsedURL.protocol}`);\n      }\n      Object.defineProperty(globalThis\x2C globalOrigin\x2C {\n        value: parsedURL\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: false\n      });\n    }\n    __name(setGlobalOrigin\x2C "setGlobalOrigin");\n    module2.exports = {\n      getGlobalOrigin\x2C\n      setGlobalOrigin\n    };\n  }\n});\n\n// lib/web/fetch/data-url.js\nvar require_data_url = __commonJS({\n  "lib/web/fetch/data-url.js"(exports2\x2C module2) {\n    "use strict";\n    var assert = require("node:assert");\n    var encoder = new TextEncoder();\n    var HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+\\-.^_|~A-Za-z0-9]+$/;\n    var HTTP_WHITESPACE_REGEX = /[\\u000A\\u000D\\u0009\\u0020]/;\n    var ASCII_WHITESPACE_REPLACE_REGEX = /[\\u0009\\u000A\\u000C\\u000D\\u0020]/g;\n    var HTTP_QUOTED_STRING_TOKENS = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/;\n    function dataURLProcessor(dataURL) {\n      assert(dataURL.protocol === "data:");\n      let input = URLSerializer(dataURL\x2C true);\n      input = input.slice(5);\n      const position = { position: 0 };\n      let mimeType = collectASequenceOfCodePointsFast(\n        "\x2C"\x2C\n        input\x2C\n        position\n      );\n      const mimeTypeLength = mimeType.length;\n      mimeType = removeASCIIWhitespace(mimeType\x2C true\x2C true);\n      if (position.position >= input.length) {\n        return "failure";\n      }\n      position.position++;\n      const encodedBody = input.slice(mimeTypeLength + 1);\n      let body = stringPercentDecode(encodedBody);\n      if (/;(\\u0020){0\x2C}base64$/i.test(mimeType)) {\n        const stringBody = isomorphicDecode(body);\n        body = forgivingBase64(stringBody);\n        if (body === "failure") {\n          return "failure";\n        }\n        mimeType = mimeType.slice(0\x2C -6);\n        mimeType = mimeType.replace(/(\\u0020)+$/\x2C "");\n        mimeType = mimeType.slice(0\x2C -1);\n      }\n      if (mimeType.startsWith(";")) {\n        mimeType = "text/plain" + mimeType;\n      }\n      let mimeTypeRecord = parseMIMEType(mimeType);\n      if (mimeTypeRecord === "failure") {\n        mimeTypeRecord = parseMIMEType("text/plain;charset=US-ASCII");\n      }\n      return { mimeType: mimeTypeRecord\x2C body };\n    }\n    __name(dataURLProcessor\x2C "dataURLProcessor");\n    function URLSerializer(url\x2C excludeFragment = false) {\n      if (!excludeFragment) {\n        return url.href;\n      }\n      const href = url.href;\n      const hashLength = url.hash.length;\n      const serialized = hashLength === 0 ? href : href.substring(0\x2C href.length - hashLength);\n      if (!hashLength && href.endsWith("#")) {\n        return serialized.slice(0\x2C -1);\n      }\n      return serialized;\n    }\n    __name(URLSerializer\x2C "URLSerializer");\n    function collectASequenceOfCodePoints(condition\x2C input\x2C position) {\n      let result = "";\n      while (position.position < input.length && condition(input[position.position])) {\n        result += input[position.position];\n        position.position++;\n      }\n      return result;\n    }\n    __name(collectASequenceOfCodePoints\x2C "collectASequenceOfCodePoints");\n    function collectASequenceOfCodePointsFast(char\x2C input\x2C position) {\n      const idx = input.indexOf(char\x2C position.position);\n      const start = position.position;\n      if (idx === -1) {\n        position.position = input.length;\n        return input.slice(start);\n      }\n      position.position = idx;\n      return input.slice(start\x2C position.position);\n    }\n    __name(collectASequenceOfCodePointsFast\x2C "collectASequenceOfCodePointsFast");\n    function stringPercentDecode(input) {\n      const bytes = encoder.encode(input);\n      return percentDecode(bytes);\n    }\n    __name(stringPercentDecode\x2C "stringPercentDecode");\n    function isHexCharByte(byte) {\n      return byte >= 48 && byte <= 57 || byte >= 65 && byte <= 70 || byte >= 97 && byte <= 102;\n    }\n    __name(isHexCharByte\x2C "isHexCharByte");\n    function hexByteToNumber(byte) {\n      return (\n        // 0-9\n        byte >= 48 && byte <= 57 ? byte - 48 : (byte & 223) - 55\n      );\n    }\n    __name(hexByteToNumber\x2C "hexByteToNumber");\n    function percentDecode(input) {\n      const length = input.length;\n      const output = new Uint8Array(length);\n      let j = 0;\n      for (let i = 0; i < length; ++i) {\n        const byte = input[i];\n        if (byte !== 37) {\n          output[j++] = byte;\n        } else if (byte === 37 && !(isHexCharByte(input[i + 1]) && isHexCharByte(input[i + 2]))) {\n          output[j++] = 37;\n        } else {\n          output[j++] = hexByteToNumber(input[i + 1]) << 4 | hexByteToNumber(input[i + 2]);\n          i += 2;\n        }\n      }\n      return length === j ? output : output.subarray(0\x2C j);\n    }\n    __name(percentDecode\x2C "percentDecode");\n    function parseMIMEType(input) {\n      input = removeHTTPWhitespace(input\x2C true\x2C true);\n      const position = { position: 0 };\n      const type = collectASequenceOfCodePointsFast(\n        "/"\x2C\n        input\x2C\n        position\n      );\n      if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n        return "failure";\n      }\n      if (position.position > input.length) {\n        return "failure";\n      }\n      position.position++;\n      let subtype = collectASequenceOfCodePointsFast(\n        ";"\x2C\n        input\x2C\n        position\n      );\n      subtype = removeHTTPWhitespace(subtype\x2C false\x2C true);\n      if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n        return "failure";\n      }\n      const typeLowercase = type.toLowerCase();\n      const subtypeLowercase = subtype.toLowerCase();\n      const mimeType = {\n        type: typeLowercase\x2C\n        subtype: subtypeLowercase\x2C\n        /** @type {Map<string\x2C string>} */\n        parameters: /* @__PURE__ */ new Map()\x2C\n        // https://mimesniff.spec.whatwg.org/#mime-type-essence\n        essence: `${typeLowercase}/${subtypeLowercase}`\n      };\n      while (position.position < input.length) {\n        position.position++;\n        collectASequenceOfCodePoints(\n          // https://fetch.spec.whatwg.org/#http-whitespace\n          (char) => HTTP_WHITESPACE_REGEX.test(char)\x2C\n          input\x2C\n          position\n        );\n        let parameterName = collectASequenceOfCodePoints(\n          (char) => char !== ";" && char !== "="\x2C\n          input\x2C\n          position\n        );\n        parameterName = parameterName.toLowerCase();\n        if (position.position < input.length) {\n          if (input[position.position] === ";") {\n            continue;\n          }\n          position.position++;\n        }\n        if (position.position > input.length) {\n          break;\n        }\n        let parameterValue = null;\n        if (input[position.position] === '"') {\n          parameterValue = collectAnHTTPQuotedString(input\x2C position\x2C true);\n          collectASequenceOfCodePointsFast(\n            ";"\x2C\n            input\x2C\n            position\n          );\n        } else {\n          parameterValue = collectASequenceOfCodePointsFast(\n            ";"\x2C\n            input\x2C\n            position\n          );\n          parameterValue = removeHTTPWhitespace(parameterValue\x2C false\x2C true);\n          if (parameterValue.length === 0) {\n            continue;\n          }\n        }\n        if (parameterName.length !== 0 && HTTP_TOKEN_CODEPOINTS.test(parameterName) && (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) && !mimeType.parameters.has(parameterName)) {\n          mimeType.parameters.set(parameterName\x2C parameterValue);\n        }\n      }\n      return mimeType;\n    }\n    __name(parseMIMEType\x2C "parseMIMEType");\n    function forgivingBase64(data) {\n      data = data.replace(ASCII_WHITESPACE_REPLACE_REGEX\x2C "");\n      let dataLength = data.length;\n      if (dataLength % 4 === 0) {\n        if (data.charCodeAt(dataLength - 1) === 61) {\n          --dataLength;\n          if (data.charCodeAt(dataLength - 1) === 61) {\n            --dataLength;\n          }\n        }\n      }\n      if (dataLength % 4 === 1) {\n        return "failure";\n      }\n      if (/[^+/0-9A-Za-z]/.test(data.length === dataLength ? data : data.substring(0\x2C dataLength))) {\n        return "failure";\n      }\n      const buffer = Buffer.from(data\x2C "base64");\n      return new Uint8Array(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n    }\n    __name(forgivingBase64\x2C "forgivingBase64");\n    function collectAnHTTPQuotedString(input\x2C position\x2C extractValue) {\n      const positionStart = position.position;\n      let value = "";\n      assert(input[position.position] === '"');\n      position.position++;\n      while (true) {\n        value += collectASequenceOfCodePoints(\n          (char) => char !== '"' && char !== "\\\\"\x2C\n          input\x2C\n          position\n        );\n        if (position.position >= input.length) {\n          break;\n        }\n        const quoteOrBackslash = input[position.position];\n        position.position++;\n        if (quoteOrBackslash === "\\\\") {\n          if (position.position >= input.length) {\n            value += "\\\\";\n            break;\n          }\n          value += input[position.position];\n          position.position++;\n        } else {\n          assert(quoteOrBackslash === '"');\n          break;\n        }\n      }\n      if (extractValue) {\n        return value;\n      }\n      return input.slice(positionStart\x2C position.position);\n    }\n    __name(collectAnHTTPQuotedString\x2C "collectAnHTTPQuotedString");\n    function serializeAMimeType(mimeType) {\n      assert(mimeType !== "failure");\n      const { parameters\x2C essence } = mimeType;\n      let serialization = essence;\n      for (let [name\x2C value] of parameters.entries()) {\n        serialization += ";";\n        serialization += name;\n        serialization += "=";\n        if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n          value = value.replace(/(\\\\|")/g\x2C "\\\\$1");\n          value = '"' + value;\n          value += '"';\n        }\n        serialization += value;\n      }\n      return serialization;\n    }\n    __name(serializeAMimeType\x2C "serializeAMimeType");\n    function isHTTPWhiteSpace(char) {\n      return char === 13 || char === 10 || char === 9 || char === 32;\n    }\n    __name(isHTTPWhiteSpace\x2C "isHTTPWhiteSpace");\n    function removeHTTPWhitespace(str\x2C leading = true\x2C trailing = true) {\n      return removeChars(str\x2C leading\x2C trailing\x2C isHTTPWhiteSpace);\n    }\n    __name(removeHTTPWhitespace\x2C "removeHTTPWhitespace");\n    function isASCIIWhitespace(char) {\n      return char === 13 || char === 10 || char === 9 || char === 12 || char === 32;\n    }\n    __name(isASCIIWhitespace\x2C "isASCIIWhitespace");\n    function removeASCIIWhitespace(str\x2C leading = true\x2C trailing = true) {\n      return removeChars(str\x2C leading\x2C trailing\x2C isASCIIWhitespace);\n    }\n    __name(removeASCIIWhitespace\x2C "removeASCIIWhitespace");\n    function removeChars(str\x2C leading\x2C trailing\x2C predicate) {\n      let lead = 0;\n      let trail = str.length - 1;\n      if (leading) {\n        while (lead < str.length && predicate(str.charCodeAt(lead)))\n          lead++;\n      }\n      if (trailing) {\n        while (trail > 0 && predicate(str.charCodeAt(trail)))\n          trail--;\n      }\n      return lead === 0 && trail === str.length - 1 ? str : str.slice(lead\x2C trail + 1);\n    }\n    __name(removeChars\x2C "removeChars");\n    function isomorphicDecode(input) {\n      const length = input.length;\n      if ((2 << 15) - 1 > length) {\n        return String.fromCharCode.apply(null\x2C input);\n      }\n      let result = "";\n      let i = 0;\n      let addition = (2 << 15) - 1;\n      while (i < length) {\n        if (i + addition > length) {\n          addition = length - i;\n        }\n        result += String.fromCharCode.apply(null\x2C input.subarray(i\x2C i += addition));\n      }\n      return result;\n    }\n    __name(isomorphicDecode\x2C "isomorphicDecode");\n    function minimizeSupportedMimeType(mimeType) {\n      switch (mimeType.essence) {\n        case "application/ecmascript":\n        case "application/javascript":\n        case "application/x-ecmascript":\n        case "application/x-javascript":\n        case "text/ecmascript":\n        case "text/javascript":\n        case "text/javascript1.0":\n        case "text/javascript1.1":\n        case "text/javascript1.2":\n        case "text/javascript1.3":\n        case "text/javascript1.4":\n        case "text/javascript1.5":\n        case "text/jscript":\n        case "text/livescript":\n        case "text/x-ecmascript":\n        case "text/x-javascript":\n          return "text/javascript";\n        case "application/json":\n        case "text/json":\n          return "application/json";\n        case "image/svg+xml":\n          return "image/svg+xml";\n        case "text/xml":\n        case "application/xml":\n          return "application/xml";\n      }\n      if (mimeType.subtype.endsWith("+json")) {\n        return "application/json";\n      }\n      if (mimeType.subtype.endsWith("+xml")) {\n        return "application/xml";\n      }\n      return "";\n    }\n    __name(minimizeSupportedMimeType\x2C "minimizeSupportedMimeType");\n    module2.exports = {\n      dataURLProcessor\x2C\n      URLSerializer\x2C\n      collectASequenceOfCodePoints\x2C\n      collectASequenceOfCodePointsFast\x2C\n      stringPercentDecode\x2C\n      parseMIMEType\x2C\n      collectAnHTTPQuotedString\x2C\n      serializeAMimeType\x2C\n      removeChars\x2C\n      removeHTTPWhitespace\x2C\n      minimizeSupportedMimeType\x2C\n      HTTP_TOKEN_CODEPOINTS\x2C\n      isomorphicDecode\n    };\n  }\n});\n\n// lib/web/fetch/webidl.js\nvar require_webidl = __commonJS({\n  "lib/web/fetch/webidl.js"(exports2\x2C module2) {\n    "use strict";\n    var { types\x2C inspect } = require("node:util");\n    var { markAsUncloneable } = require("node:worker_threads");\n    var { toUSVString } = require_util();\n    var webidl = {};\n    webidl.converters = {};\n    webidl.util = {};\n    webidl.errors = {};\n    webidl.errors.exception = function(message) {\n      return new TypeError(`${message.header}: ${message.message}`);\n    };\n    webidl.errors.conversionFailed = function(context) {\n      const plural = context.types.length === 1 ? "" : " one of";\n      const message = `${context.argument} could not be converted to${plural}: ${context.types.join("\x2C ")}.`;\n      return webidl.errors.exception({\n        header: context.prefix\x2C\n        message\n      });\n    };\n    webidl.errors.invalidArgument = function(context) {\n      return webidl.errors.exception({\n        header: context.prefix\x2C\n        message: `"${context.value}" is an invalid ${context.type}.`\n      });\n    };\n    webidl.brandCheck = function(V\x2C I\x2C opts) {\n      if (opts?.strict !== false) {\n        if (!(V instanceof I)) {\n          const err = new TypeError("Illegal invocation");\n          err.code = "ERR_INVALID_THIS";\n          throw err;\n        }\n      } else {\n        if (V?.[Symbol.toStringTag] !== I.prototype[Symbol.toStringTag]) {\n          const err = new TypeError("Illegal invocation");\n          err.code = "ERR_INVALID_THIS";\n          throw err;\n        }\n      }\n    };\n    webidl.argumentLengthCheck = function({ length }\x2C min\x2C ctx) {\n      if (length < min) {\n        throw webidl.errors.exception({\n          message: `${min} argument${min !== 1 ? "s" : ""} required\x2C but${length ? " only" : ""} ${length} found.`\x2C\n          header: ctx\n        });\n      }\n    };\n    webidl.illegalConstructor = function() {\n      throw webidl.errors.exception({\n        header: "TypeError"\x2C\n        message: "Illegal constructor"\n      });\n    };\n    webidl.util.Type = function(V) {\n      switch (typeof V) {\n        case "undefined":\n          return "Undefined";\n        case "boolean":\n          return "Boolean";\n        case "string":\n          return "String";\n        case "symbol":\n          return "Symbol";\n        case "number":\n          return "Number";\n        case "bigint":\n          return "BigInt";\n        case "function":\n        case "object": {\n          if (V === null) {\n            return "Null";\n          }\n          return "Object";\n        }\n      }\n    };\n    webidl.util.markAsUncloneable = markAsUncloneable || (() => {\n    });\n    webidl.util.ConvertToInt = function(V\x2C bitLength\x2C signedness\x2C opts) {\n      let upperBound;\n      let lowerBound;\n      if (bitLength === 64) {\n        upperBound = Math.pow(2\x2C 53) - 1;\n        if (signedness === "unsigned") {\n          lowerBound = 0;\n        } else {\n          lowerBound = Math.pow(-2\x2C 53) + 1;\n        }\n      } else if (signedness === "unsigned") {\n        lowerBound = 0;\n        upperBound = Math.pow(2\x2C bitLength) - 1;\n      } else {\n        lowerBound = Math.pow(-2\x2C bitLength) - 1;\n        upperBound = Math.pow(2\x2C bitLength - 1) - 1;\n      }\n      let x = Number(V);\n      if (x === 0) {\n        x = 0;\n      }\n      if (opts?.enforceRange === true) {\n        if (Number.isNaN(x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n          throw webidl.errors.exception({\n            header: "Integer conversion"\x2C\n            message: `Could not convert ${webidl.util.Stringify(V)} to an integer.`\n          });\n        }\n        x = webidl.util.IntegerPart(x);\n        if (x < lowerBound || x > upperBound) {\n          throw webidl.errors.exception({\n            header: "Integer conversion"\x2C\n            message: `Value must be between ${lowerBound}-${upperBound}\x2C got ${x}.`\n          });\n        }\n        return x;\n      }\n      if (!Number.isNaN(x) && opts?.clamp === true) {\n        x = Math.min(Math.max(x\x2C lowerBound)\x2C upperBound);\n        if (Math.floor(x) % 2 === 0) {\n          x = Math.floor(x);\n        } else {\n          x = Math.ceil(x);\n        }\n        return x;\n      }\n      if (Number.isNaN(x) || x === 0 && Object.is(0\x2C x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {\n        return 0;\n      }\n      x = webidl.util.IntegerPart(x);\n      x = x % Math.pow(2\x2C bitLength);\n      if (signedness === "signed" && x >= Math.pow(2\x2C bitLength) - 1) {\n        return x - Math.pow(2\x2C bitLength);\n      }\n      return x;\n    };\n    webidl.util.IntegerPart = function(n) {\n      const r = Math.floor(Math.abs(n));\n      if (n < 0) {\n        return -1 * r;\n      }\n      return r;\n    };\n    webidl.util.Stringify = function(V) {\n      const type = webidl.util.Type(V);\n      switch (type) {\n        case "Symbol":\n          return `Symbol(${V.description})`;\n        case "Object":\n          return inspect(V);\n        case "String":\n          return `"${V}"`;\n        default:\n          return `${V}`;\n      }\n    };\n    webidl.sequenceConverter = function(converter) {\n      return (V\x2C prefix\x2C argument\x2C Iterable) => {\n        if (webidl.util.Type(V) !== "Object") {\n          throw webidl.errors.exception({\n            header: prefix\x2C\n            message: `${argument} (${webidl.util.Stringify(V)}) is not iterable.`\n          });\n        }\n        const method = typeof Iterable === "function" ? Iterable() : V?.[Symbol.iterator]?.();\n        const seq = [];\n        let index = 0;\n        if (method === void 0 || typeof method.next !== "function") {\n          throw webidl.errors.exception({\n            header: prefix\x2C\n            message: `${argument} is not iterable.`\n          });\n        }\n        while (true) {\n          const { done\x2C value } = method.next();\n          if (done) {\n            break;\n          }\n          seq.push(converter(value\x2C prefix\x2C `${argument}[${index++}]`));\n        }\n        return seq;\n      };\n    };\n    webidl.recordConverter = function(keyConverter\x2C valueConverter) {\n      return (O\x2C prefix\x2C argument) => {\n        if (webidl.util.Type(O) !== "Object") {\n          throw webidl.errors.exception({\n            header: prefix\x2C\n            message: `${argument} ("${webidl.util.Type(O)}") is not an Object.`\n          });\n        }\n        const result = {};\n        if (!types.isProxy(O)) {\n          const keys2 = [...Object.getOwnPropertyNames(O)\x2C ...Object.getOwnPropertySymbols(O)];\n          for (const key of keys2) {\n            const typedKey = keyConverter(key\x2C prefix\x2C argument);\n            const typedValue = valueConverter(O[key]\x2C prefix\x2C argument);\n            result[typedKey] = typedValue;\n          }\n          return result;\n        }\n        const keys = Reflect.ownKeys(O);\n        for (const key of keys) {\n          const desc = Reflect.getOwnPropertyDescriptor(O\x2C key);\n          if (desc?.enumerable) {\n            const typedKey = keyConverter(key\x2C prefix\x2C argument);\n            const typedValue = valueConverter(O[key]\x2C prefix\x2C argument);\n            result[typedKey] = typedValue;\n          }\n        }\n        return result;\n      };\n    };\n    webidl.interfaceConverter = function(i) {\n      return (V\x2C prefix\x2C argument\x2C opts) => {\n        if (opts?.strict !== false && !(V instanceof i)) {\n          throw webidl.errors.exception({\n            header: prefix\x2C\n            message: `Expected ${argument} ("${webidl.util.Stringify(V)}") to be an instance of ${i.name}.`\n          });\n        }\n        return V;\n      };\n    };\n    webidl.dictionaryConverter = function(converters) {\n      return (dictionary\x2C prefix\x2C argument) => {\n        const type = webidl.util.Type(dictionary);\n        const dict = {};\n        if (type === "Null" || type === "Undefined") {\n          return dict;\n        } else if (type !== "Object") {\n          throw webidl.errors.exception({\n            header: prefix\x2C\n            message: `Expected ${dictionary} to be one of: Null\x2C Undefined\x2C Object.`\n          });\n        }\n        for (const options of converters) {\n          const { key\x2C defaultValue\x2C required\x2C converter } = options;\n          if (required === true) {\n            if (!Object.hasOwn(dictionary\x2C key)) {\n              throw webidl.errors.exception({\n                header: prefix\x2C\n                message: `Missing required key "${key}".`\n              });\n            }\n          }\n          let value = dictionary[key];\n          const hasDefault = Object.hasOwn(options\x2C "defaultValue");\n          if (hasDefault && value !== null) {\n            value ??= defaultValue();\n          }\n          if (required || hasDefault || value !== void 0) {\n            value = converter(value\x2C prefix\x2C `${argument}.${key}`);\n            if (options.allowedValues && !options.allowedValues.includes(value)) {\n              throw webidl.errors.exception({\n                header: prefix\x2C\n                message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join("\x2C ")}.`\n              });\n            }\n            dict[key] = value;\n          }\n        }\n        return dict;\n      };\n    };\n    webidl.nullableConverter = function(converter) {\n      return (V\x2C prefix\x2C argument) => {\n        if (V === null) {\n          return V;\n        }\n        return converter(V\x2C prefix\x2C argument);\n      };\n    };\n    webidl.converters.DOMString = function(V\x2C prefix\x2C argument\x2C opts) {\n      if (V === null && opts?.legacyNullToEmptyString) {\n        return "";\n      }\n      if (typeof V === "symbol") {\n        throw webidl.errors.exception({\n          header: prefix\x2C\n          message: `${argument} is a symbol\x2C which cannot be converted to a DOMString.`\n        });\n      }\n      return String(V);\n    };\n    webidl.converters.ByteString = function(V\x2C prefix\x2C argument) {\n      const x = webidl.converters.DOMString(V\x2C prefix\x2C argument);\n      for (let index = 0; index < x.length; index++) {\n        if (x.charCodeAt(index) > 255) {\n          throw new TypeError(\n            `Cannot convert argument to a ByteString because the character at index ${index} has a value of ${x.charCodeAt(index)} which is greater than 255.`\n          );\n        }\n      }\n      return x;\n    };\n    webidl.converters.USVString = toUSVString;\n    webidl.converters.boolean = function(V) {\n      const x = Boolean(V);\n      return x;\n    };\n    webidl.converters.any = function(V) {\n      return V;\n    };\n    webidl.converters["long long"] = function(V\x2C prefix\x2C argument) {\n      const x = webidl.util.ConvertToInt(V\x2C 64\x2C "signed"\x2C void 0\x2C prefix\x2C argument);\n      return x;\n    };\n    webidl.converters["unsigned long long"] = function(V\x2C prefix\x2C argument) {\n      const x = webidl.util.ConvertToInt(V\x2C 64\x2C "unsigned"\x2C void 0\x2C prefix\x2C argument);\n      return x;\n    };\n    webidl.converters["unsigned long"] = function(V\x2C prefix\x2C argument) {\n      const x = webidl.util.ConvertToInt(V\x2C 32\x2C "unsigned"\x2C void 0\x2C prefix\x2C argument);\n      return x;\n    };\n    webidl.converters["unsigned short"] = function(V\x2C prefix\x2C argument\x2C opts) {\n      const x = webidl.util.ConvertToInt(V\x2C 16\x2C "unsigned"\x2C opts\x2C prefix\x2C argument);\n      return x;\n    };\n    webidl.converters.ArrayBuffer = function(V\x2C prefix\x2C argument\x2C opts) {\n      if (webidl.util.Type(V) !== "Object" || !types.isAnyArrayBuffer(V)) {\n        throw webidl.errors.conversionFailed({\n          prefix\x2C\n          argument: `${argument} ("${webidl.util.Stringify(V)}")`\x2C\n          types: ["ArrayBuffer"]\n        });\n      }\n      if (opts?.allowShared === false && types.isSharedArrayBuffer(V)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      if (V.resizable || V.growable) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "Received a resizable ArrayBuffer."\n        });\n      }\n      return V;\n    };\n    webidl.converters.TypedArray = function(V\x2C T\x2C prefix\x2C name\x2C opts) {\n      if (webidl.util.Type(V) !== "Object" || !types.isTypedArray(V) || V.constructor.name !== T.name) {\n        throw webidl.errors.conversionFailed({\n          prefix\x2C\n          argument: `${name} ("${webidl.util.Stringify(V)}")`\x2C\n          types: [T.name]\n        });\n      }\n      if (opts?.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      if (V.buffer.resizable || V.buffer.growable) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "Received a resizable ArrayBuffer."\n        });\n      }\n      return V;\n    };\n    webidl.converters.DataView = function(V\x2C prefix\x2C name\x2C opts) {\n      if (webidl.util.Type(V) !== "Object" || !types.isDataView(V)) {\n        throw webidl.errors.exception({\n          header: prefix\x2C\n          message: `${name} is not a DataView.`\n        });\n      }\n      if (opts?.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "SharedArrayBuffer is not allowed."\n        });\n      }\n      if (V.buffer.resizable || V.buffer.growable) {\n        throw webidl.errors.exception({\n          header: "ArrayBuffer"\x2C\n          message: "Received a resizable ArrayBuffer."\n        });\n      }\n      return V;\n    };\n    webidl.converters.BufferSource = function(V\x2C prefix\x2C name\x2C opts) {\n      if (types.isAnyArrayBuffer(V)) {\n        return webidl.converters.ArrayBuffer(V\x2C prefix\x2C name\x2C { ...opts\x2C allowShared: false });\n      }\n      if (types.isTypedArray(V)) {\n        return webidl.converters.TypedArray(V\x2C V.constructor\x2C prefix\x2C name\x2C { ...opts\x2C allowShared: false });\n      }\n      if (types.isDataView(V)) {\n        return webidl.converters.DataView(V\x2C prefix\x2C name\x2C { ...opts\x2C allowShared: false });\n      }\n      throw webidl.errors.conversionFailed({\n        prefix\x2C\n        argument: `${name} ("${webidl.util.Stringify(V)}")`\x2C\n        types: ["BufferSource"]\n      });\n    };\n    webidl.converters["sequence<ByteString>"] = webidl.sequenceConverter(\n      webidl.converters.ByteString\n    );\n    webidl.converters["sequence<sequence<ByteString>>"] = webidl.sequenceConverter(\n      webidl.converters["sequence<ByteString>"]\n    );\n    webidl.converters["record<ByteString\x2C ByteString>"] = webidl.recordConverter(\n      webidl.converters.ByteString\x2C\n      webidl.converters.ByteString\n    );\n    module2.exports = {\n      webidl\n    };\n  }\n});\n\n// lib/web/fetch/util.js\nvar require_util2 = __commonJS({\n  "lib/web/fetch/util.js"(exports2\x2C module2) {\n    "use strict";\n    var { Transform } = require("node:stream");\n    var zlib = require("node:zlib");\n    var { redirectStatusSet\x2C referrerPolicySet: referrerPolicyTokens\x2C badPortsSet } = require_constants3();\n    var { getGlobalOrigin } = require_global();\n    var { collectASequenceOfCodePoints\x2C collectAnHTTPQuotedString\x2C removeChars\x2C parseMIMEType } = require_data_url();\n    var { performance: performance2 } = require("node:perf_hooks");\n    var { isBlobLike\x2C ReadableStreamFrom\x2C isValidHTTPToken\x2C normalizedMethodRecordsBase } = require_util();\n    var assert = require("node:assert");\n    var { isUint8Array } = require("node:util/types");\n    var { webidl } = require_webidl();\n    var supportedHashes = [];\n    var crypto;\n    try {\n      crypto = require("node:crypto");\n      const possibleRelevantHashes = ["sha256"\x2C "sha384"\x2C "sha512"];\n      supportedHashes = crypto.getHashes().filter((hash) => possibleRelevantHashes.includes(hash));\n    } catch {\n    }\n    function responseURL(response) {\n      const urlList = response.urlList;\n      const length = urlList.length;\n      return length === 0 ? null : urlList[length - 1].toString();\n    }\n    __name(responseURL\x2C "responseURL");\n    function responseLocationURL(response\x2C requestFragment) {\n      if (!redirectStatusSet.has(response.status)) {\n        return null;\n      }\n      let location = response.headersList.get("location"\x2C true);\n      if (location !== null && isValidHeaderValue(location)) {\n        if (!isValidEncodedURL(location)) {\n          location = normalizeBinaryStringToUtf8(location);\n        }\n        location = new URL(location\x2C responseURL(response));\n      }\n      if (location && !location.hash) {\n        location.hash = requestFragment;\n      }\n      return location;\n    }\n    __name(responseLocationURL\x2C "responseLocationURL");\n    function isValidEncodedURL(url) {\n      for (let i = 0; i < url.length; ++i) {\n        const code = url.charCodeAt(i);\n        if (code > 126 || // Non-US-ASCII + DEL\n        code < 32) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidEncodedURL\x2C "isValidEncodedURL");\n    function normalizeBinaryStringToUtf8(value) {\n      return Buffer.from(value\x2C "binary").toString("utf8");\n    }\n    __name(normalizeBinaryStringToUtf8\x2C "normalizeBinaryStringToUtf8");\n    function requestCurrentURL(request) {\n      return request.urlList[request.urlList.length - 1];\n    }\n    __name(requestCurrentURL\x2C "requestCurrentURL");\n    function requestBadPort(request) {\n      const url = requestCurrentURL(request);\n      if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {\n        return "blocked";\n      }\n      return "allowed";\n    }\n    __name(requestBadPort\x2C "requestBadPort");\n    function isErrorLike(object) {\n      return object instanceof Error || (object?.constructor?.name === "Error" || object?.constructor?.name === "DOMException");\n    }\n    __name(isErrorLike\x2C "isErrorLike");\n    function isValidReasonPhrase(statusText) {\n      for (let i = 0; i < statusText.length; ++i) {\n        const c = statusText.charCodeAt(i);\n        if (!(c === 9 || // HTAB\n        c >= 32 && c <= 126 || // SP / VCHAR\n        c >= 128 && c <= 255)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidReasonPhrase\x2C "isValidReasonPhrase");\n    var isValidHeaderName = isValidHTTPToken;\n    function isValidHeaderValue(potentialValue) {\n      return (potentialValue[0] === "\x09" || potentialValue[0] === " " || potentialValue[potentialValue.length - 1] === "\x09" || potentialValue[potentialValue.length - 1] === " " || potentialValue.includes("\\n") || potentialValue.includes("\\r") || potentialValue.includes("\\0")) === false;\n    }\n    __name(isValidHeaderValue\x2C "isValidHeaderValue");\n    function setRequestReferrerPolicyOnRedirect(request\x2C actualResponse) {\n      const { headersList } = actualResponse;\n      const policyHeader = (headersList.get("referrer-policy"\x2C true) ?? "").split("\x2C");\n      let policy = "";\n      if (policyHeader.length > 0) {\n        for (let i = policyHeader.length; i !== 0; i--) {\n          const token = policyHeader[i - 1].trim();\n          if (referrerPolicyTokens.has(token)) {\n            policy = token;\n            break;\n          }\n        }\n      }\n      if (policy !== "") {\n        request.referrerPolicy = policy;\n      }\n    }\n    __name(setRequestReferrerPolicyOnRedirect\x2C "setRequestReferrerPolicyOnRedirect");\n    function crossOriginResourcePolicyCheck() {\n      return "allowed";\n    }\n    __name(crossOriginResourcePolicyCheck\x2C "crossOriginResourcePolicyCheck");\n    function corsCheck() {\n      return "success";\n    }\n    __name(corsCheck\x2C "corsCheck");\n    function TAOCheck() {\n      return "success";\n    }\n    __name(TAOCheck\x2C "TAOCheck");\n    function appendFetchMetadata(httpRequest) {\n      let header = null;\n      header = httpRequest.mode;\n      httpRequest.headersList.set("sec-fetch-mode"\x2C header\x2C true);\n    }\n    __name(appendFetchMetadata\x2C "appendFetchMetadata");\n    function appendRequestOriginHeader(request) {\n      let serializedOrigin = request.origin;\n      if (serializedOrigin === "client" || serializedOrigin === void 0) {\n        return;\n      }\n      if (request.responseTainting === "cors" || request.mode === "websocket") {\n        request.headersList.append("origin"\x2C serializedOrigin\x2C true);\n      } else if (request.method !== "GET" && request.method !== "HEAD") {\n        switch (request.referrerPolicy) {\n          case "no-referrer":\n            serializedOrigin = null;\n            break;\n          case "no-referrer-when-downgrade":\n          case "strict-origin":\n          case "strict-origin-when-cross-origin":\n            if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          case "same-origin":\n            if (!sameOrigin(request\x2C requestCurrentURL(request))) {\n              serializedOrigin = null;\n            }\n            break;\n          default:\n        }\n        request.headersList.append("origin"\x2C serializedOrigin\x2C true);\n      }\n    }\n    __name(appendRequestOriginHeader\x2C "appendRequestOriginHeader");\n    function coarsenTime(timestamp\x2C crossOriginIsolatedCapability) {\n      return timestamp;\n    }\n    __name(coarsenTime\x2C "coarsenTime");\n    function clampAndCoarsenConnectionTimingInfo(connectionTimingInfo\x2C defaultStartTime\x2C crossOriginIsolatedCapability) {\n      if (!connectionTimingInfo?.startTime || connectionTimingInfo.startTime < defaultStartTime) {\n        return {\n          domainLookupStartTime: defaultStartTime\x2C\n          domainLookupEndTime: defaultStartTime\x2C\n          connectionStartTime: defaultStartTime\x2C\n          connectionEndTime: defaultStartTime\x2C\n          secureConnectionStartTime: defaultStartTime\x2C\n          ALPNNegotiatedProtocol: connectionTimingInfo?.ALPNNegotiatedProtocol\n        };\n      }\n      return {\n        domainLookupStartTime: coarsenTime(connectionTimingInfo.domainLookupStartTime\x2C crossOriginIsolatedCapability)\x2C\n        domainLookupEndTime: coarsenTime(connectionTimingInfo.domainLookupEndTime\x2C crossOriginIsolatedCapability)\x2C\n        connectionStartTime: coarsenTime(connectionTimingInfo.connectionStartTime\x2C crossOriginIsolatedCapability)\x2C\n        connectionEndTime: coarsenTime(connectionTimingInfo.connectionEndTime\x2C crossOriginIsolatedCapability)\x2C\n        secureConnectionStartTime: coarsenTime(connectionTimingInfo.secureConnectionStartTime\x2C crossOriginIsolatedCapability)\x2C\n        ALPNNegotiatedProtocol: connectionTimingInfo.ALPNNegotiatedProtocol\n      };\n    }\n    __name(clampAndCoarsenConnectionTimingInfo\x2C "clampAndCoarsenConnectionTimingInfo");\n    function coarsenedSharedCurrentTime(crossOriginIsolatedCapability) {\n      return coarsenTime(performance2.now()\x2C crossOriginIsolatedCapability);\n    }\n    __name(coarsenedSharedCurrentTime\x2C "coarsenedSharedCurrentTime");\n    function createOpaqueTimingInfo(timingInfo) {\n      return {\n        startTime: timingInfo.startTime ?? 0\x2C\n        redirectStartTime: 0\x2C\n        redirectEndTime: 0\x2C\n        postRedirectStartTime: timingInfo.startTime ?? 0\x2C\n        finalServiceWorkerStartTime: 0\x2C\n        finalNetworkResponseStartTime: 0\x2C\n        finalNetworkRequestStartTime: 0\x2C\n        endTime: 0\x2C\n        encodedBodySize: 0\x2C\n        decodedBodySize: 0\x2C\n        finalConnectionTimingInfo: null\n      };\n    }\n    __name(createOpaqueTimingInfo\x2C "createOpaqueTimingInfo");\n    function makePolicyContainer() {\n      return {\n        referrerPolicy: "strict-origin-when-cross-origin"\n      };\n    }\n    __name(makePolicyContainer\x2C "makePolicyContainer");\n    function clonePolicyContainer(policyContainer) {\n      return {\n        referrerPolicy: policyContainer.referrerPolicy\n      };\n    }\n    __name(clonePolicyContainer\x2C "clonePolicyContainer");\n    function determineRequestsReferrer(request) {\n      const policy = request.referrerPolicy;\n      assert(policy);\n      let referrerSource = null;\n      if (request.referrer === "client") {\n        const globalOrigin = getGlobalOrigin();\n        if (!globalOrigin || globalOrigin.origin === "null") {\n          return "no-referrer";\n        }\n        referrerSource = new URL(globalOrigin);\n      } else if (request.referrer instanceof URL) {\n        referrerSource = request.referrer;\n      }\n      let referrerURL = stripURLForReferrer(referrerSource);\n      const referrerOrigin = stripURLForReferrer(referrerSource\x2C true);\n      if (referrerURL.toString().length > 4096) {\n        referrerURL = referrerOrigin;\n      }\n      const areSameOrigin = sameOrigin(request\x2C referrerURL);\n      const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(request.url);\n      switch (policy) {\n        case "origin":\n          return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource\x2C true);\n        case "unsafe-url":\n          return referrerURL;\n        case "same-origin":\n          return areSameOrigin ? referrerOrigin : "no-referrer";\n        case "origin-when-cross-origin":\n          return areSameOrigin ? referrerURL : referrerOrigin;\n        case "strict-origin-when-cross-origin": {\n          const currentURL = requestCurrentURL(request);\n          if (sameOrigin(referrerURL\x2C currentURL)) {\n            return referrerURL;\n          }\n          if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n            return "no-referrer";\n          }\n          return referrerOrigin;\n        }\n        case "strict-origin":\n        case "no-referrer-when-downgrade":\n        default:\n          return isNonPotentiallyTrustWorthy ? "no-referrer" : referrerOrigin;\n      }\n    }\n    __name(determineRequestsReferrer\x2C "determineRequestsReferrer");\n    function stripURLForReferrer(url\x2C originOnly) {\n      assert(url instanceof URL);\n      url = new URL(url);\n      if (url.protocol === "file:" || url.protocol === "about:" || url.protocol === "blank:") {\n        return "no-referrer";\n      }\n      url.username = "";\n      url.password = "";\n      url.hash = "";\n      if (originOnly) {\n        url.pathname = "";\n        url.search = "";\n      }\n      return url;\n    }\n    __name(stripURLForReferrer\x2C "stripURLForReferrer");\n    function isURLPotentiallyTrustworthy(url) {\n      if (!(url instanceof URL)) {\n        return false;\n      }\n      if (url.href === "about:blank" || url.href === "about:srcdoc") {\n        return true;\n      }\n      if (url.protocol === "data:")\n        return true;\n      if (url.protocol === "file:")\n        return true;\n      return isOriginPotentiallyTrustworthy(url.origin);\n      function isOriginPotentiallyTrustworthy(origin) {\n        if (origin == null || origin === "null")\n          return false;\n        const originAsURL = new URL(origin);\n        if (originAsURL.protocol === "https:" || originAsURL.protocol === "wss:") {\n          return true;\n        }\n        if (/^127(?:\\.[0-9]+){0\x2C2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) || (originAsURL.hostname === "localhost" || originAsURL.hostname.includes("localhost.")) || originAsURL.hostname.endsWith(".localhost")) {\n          return true;\n        }\n        return false;\n      }\n      __name(isOriginPotentiallyTrustworthy\x2C "isOriginPotentiallyTrustworthy");\n    }\n    __name(isURLPotentiallyTrustworthy\x2C "isURLPotentiallyTrustworthy");\n    function bytesMatch(bytes\x2C metadataList) {\n      if (crypto === void 0) {\n        return true;\n      }\n      const parsedMetadata = parseMetadata(metadataList);\n      if (parsedMetadata === "no metadata") {\n        return true;\n      }\n      if (parsedMetadata.length === 0) {\n        return true;\n      }\n      const strongest = getStrongestMetadata(parsedMetadata);\n      const metadata = filterMetadataListByAlgorithm(parsedMetadata\x2C strongest);\n      for (const item of metadata) {\n        const algorithm = item.algo;\n        const expectedValue = item.hash;\n        let actualValue = crypto.createHash(algorithm).update(bytes).digest("base64");\n        if (actualValue[actualValue.length - 1] === "=") {\n          if (actualValue[actualValue.length - 2] === "=") {\n            actualValue = actualValue.slice(0\x2C -2);\n          } else {\n            actualValue = actualValue.slice(0\x2C -1);\n          }\n        }\n        if (compareBase64Mixed(actualValue\x2C expectedValue)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    __name(bytesMatch\x2C "bytesMatch");\n    var parseHashWithOptions = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0\x2C2}(?:\\s|$)( +[!-~]*)?)?/i;\n    function parseMetadata(metadata) {\n      const result = [];\n      let empty = true;\n      for (const token of metadata.split(" ")) {\n        empty = false;\n        const parsedToken = parseHashWithOptions.exec(token);\n        if (parsedToken === null || parsedToken.groups === void 0 || parsedToken.groups.algo === void 0) {\n          continue;\n        }\n        const algorithm = parsedToken.groups.algo.toLowerCase();\n        if (supportedHashes.includes(algorithm)) {\n          result.push(parsedToken.groups);\n        }\n      }\n      if (empty === true) {\n        return "no metadata";\n      }\n      return result;\n    }\n    __name(parseMetadata\x2C "parseMetadata");\n    function getStrongestMetadata(metadataList) {\n      let algorithm = metadataList[0].algo;\n      if (algorithm[3] === "5") {\n        return algorithm;\n      }\n      for (let i = 1; i < metadataList.length; ++i) {\n        const metadata = metadataList[i];\n        if (metadata.algo[3] === "5") {\n          algorithm = "sha512";\n          break;\n        } else if (algorithm[3] === "3") {\n          continue;\n        } else if (metadata.algo[3] === "3") {\n          algorithm = "sha384";\n        }\n      }\n      return algorithm;\n    }\n    __name(getStrongestMetadata\x2C "getStrongestMetadata");\n    function filterMetadataListByAlgorithm(metadataList\x2C algorithm) {\n      if (metadataList.length === 1) {\n        return metadataList;\n      }\n      let pos = 0;\n      for (let i = 0; i < metadataList.length; ++i) {\n        if (metadataList[i].algo === algorithm) {\n          metadataList[pos++] = metadataList[i];\n        }\n      }\n      metadataList.length = pos;\n      return metadataList;\n    }\n    __name(filterMetadataListByAlgorithm\x2C "filterMetadataListByAlgorithm");\n    function compareBase64Mixed(actualValue\x2C expectedValue) {\n      if (actualValue.length !== expectedValue.length) {\n        return false;\n      }\n      for (let i = 0; i < actualValue.length; ++i) {\n        if (actualValue[i] !== expectedValue[i]) {\n          if (actualValue[i] === "+" && expectedValue[i] === "-" || actualValue[i] === "/" && expectedValue[i] === "_") {\n            continue;\n          }\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(compareBase64Mixed\x2C "compareBase64Mixed");\n    function tryUpgradeRequestToAPotentiallyTrustworthyURL(request) {\n    }\n    __name(tryUpgradeRequestToAPotentiallyTrustworthyURL\x2C "tryUpgradeRequestToAPotentiallyTrustworthyURL");\n    function sameOrigin(A\x2C B) {\n      if (A.origin === B.origin && A.origin === "null") {\n        return true;\n      }\n      if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n        return true;\n      }\n      return false;\n    }\n    __name(sameOrigin\x2C "sameOrigin");\n    function createDeferredPromise() {\n      let res;\n      let rej;\n      const promise = new Promise((resolve\x2C reject) => {\n        res = resolve;\n        rej = reject;\n      });\n      return { promise\x2C resolve: res\x2C reject: rej };\n    }\n    __name(createDeferredPromise\x2C "createDeferredPromise");\n    function isAborted(fetchParams) {\n      return fetchParams.controller.state === "aborted";\n    }\n    __name(isAborted\x2C "isAborted");\n    function isCancelled(fetchParams) {\n      return fetchParams.controller.state === "aborted" || fetchParams.controller.state === "terminated";\n    }\n    __name(isCancelled\x2C "isCancelled");\n    function normalizeMethod(method) {\n      return normalizedMethodRecordsBase[method.toLowerCase()] ?? method;\n    }\n    __name(normalizeMethod\x2C "normalizeMethod");\n    function serializeJavascriptValueToJSONString(value) {\n      const result = JSON.stringify(value);\n      if (result === void 0) {\n        throw new TypeError("Value is not JSON serializable");\n      }\n      assert(typeof result === "string");\n      return result;\n    }\n    __name(serializeJavascriptValueToJSONString\x2C "serializeJavascriptValueToJSONString");\n    var esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n    function createIterator(name\x2C kInternalIterator\x2C keyIndex = 0\x2C valueIndex = 1) {\n      class FastIterableIterator {\n        static {\n          __name(this\x2C "FastIterableIterator");\n        }\n        /** @type {any} */\n        #target;\n        /** @type {'key' | 'value' | 'key+value'} */\n        #kind;\n        /** @type {number} */\n        #index;\n        /**\n         * @see https://webidl.spec.whatwg.org/#dfn-default-iterator-object\n         * @param {unknown} target\n         * @param {'key' | 'value' | 'key+value'} kind\n         */\n        constructor(target\x2C kind) {\n          this.#target = target;\n          this.#kind = kind;\n          this.#index = 0;\n        }\n        next() {\n          if (typeof this !== "object" || this === null || !(#target in this)) {\n            throw new TypeError(\n              `'next' called on an object that does not implement interface ${name} Iterator.`\n            );\n          }\n          const index = this.#index;\n          const values = this.#target[kInternalIterator];\n          const len = values.length;\n          if (index >= len) {\n            return {\n              value: void 0\x2C\n              done: true\n            };\n          }\n          const { [keyIndex]: key\x2C [valueIndex]: value } = values[index];\n          this.#index = index + 1;\n          let result;\n          switch (this.#kind) {\n            case "key":\n              result = key;\n              break;\n            case "value":\n              result = value;\n              break;\n            case "key+value":\n              result = [key\x2C value];\n              break;\n          }\n          return {\n            value: result\x2C\n            done: false\n          };\n        }\n      }\n      delete FastIterableIterator.prototype.constructor;\n      Object.setPrototypeOf(FastIterableIterator.prototype\x2C esIteratorPrototype);\n      Object.defineProperties(FastIterableIterator.prototype\x2C {\n        [Symbol.toStringTag]: {\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: `${name} Iterator`\n        }\x2C\n        next: { writable: true\x2C enumerable: true\x2C configurable: true }\n      });\n      return function(target\x2C kind) {\n        return new FastIterableIterator(target\x2C kind);\n      };\n    }\n    __name(createIterator\x2C "createIterator");\n    function iteratorMixin(name\x2C object\x2C kInternalIterator\x2C keyIndex = 0\x2C valueIndex = 1) {\n      const makeIterator = createIterator(name\x2C kInternalIterator\x2C keyIndex\x2C valueIndex);\n      const properties = {\n        keys: {\n          writable: true\x2C\n          enumerable: true\x2C\n          configurable: true\x2C\n          value: /* @__PURE__ */ __name(function keys() {\n            webidl.brandCheck(this\x2C object);\n            return makeIterator(this\x2C "key");\n          }\x2C "keys")\n        }\x2C\n        values: {\n          writable: true\x2C\n          enumerable: true\x2C\n          configurable: true\x2C\n          value: /* @__PURE__ */ __name(function values() {\n            webidl.brandCheck(this\x2C object);\n            return makeIterator(this\x2C "value");\n          }\x2C "values")\n        }\x2C\n        entries: {\n          writable: true\x2C\n          enumerable: true\x2C\n          configurable: true\x2C\n          value: /* @__PURE__ */ __name(function entries() {\n            webidl.brandCheck(this\x2C object);\n            return makeIterator(this\x2C "key+value");\n          }\x2C "entries")\n        }\x2C\n        forEach: {\n          writable: true\x2C\n          enumerable: true\x2C\n          configurable: true\x2C\n          value: /* @__PURE__ */ __name(function forEach(callbackfn\x2C thisArg = globalThis) {\n            webidl.brandCheck(this\x2C object);\n            webidl.argumentLengthCheck(arguments\x2C 1\x2C `${name}.forEach`);\n            if (typeof callbackfn !== "function") {\n              throw new TypeError(\n                `Failed to execute 'forEach' on '${name}': parameter 1 is not of type 'Function'.`\n              );\n            }\n            for (const { 0: key\x2C 1: value } of makeIterator(this\x2C "key+value")) {\n              callbackfn.call(thisArg\x2C value\x2C key\x2C this);\n            }\n          }\x2C "forEach")\n        }\n      };\n      return Object.defineProperties(object.prototype\x2C {\n        ...properties\x2C\n        [Symbol.iterator]: {\n          writable: true\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: properties.entries.value\n        }\n      });\n    }\n    __name(iteratorMixin\x2C "iteratorMixin");\n    async function fullyReadBody(body\x2C processBody\x2C processBodyError) {\n      const successSteps = processBody;\n      const errorSteps = processBodyError;\n      let reader;\n      try {\n        reader = body.stream.getReader();\n      } catch (e) {\n        errorSteps(e);\n        return;\n      }\n      try {\n        successSteps(await readAllBytes(reader));\n      } catch (e) {\n        errorSteps(e);\n      }\n    }\n    __name(fullyReadBody\x2C "fullyReadBody");\n    function isReadableStreamLike(stream) {\n      return stream instanceof ReadableStream || stream[Symbol.toStringTag] === "ReadableStream" && typeof stream.tee === "function";\n    }\n    __name(isReadableStreamLike\x2C "isReadableStreamLike");\n    function readableStreamClose(controller) {\n      try {\n        controller.close();\n        controller.byobRequest?.respond(0);\n      } catch (err) {\n        if (!err.message.includes("Controller is already closed") && !err.message.includes("ReadableStream is already closed")) {\n          throw err;\n        }\n      }\n    }\n    __name(readableStreamClose\x2C "readableStreamClose");\n    var invalidIsomorphicEncodeValueRegex = /[^\\x00-\\xFF]/;\n    function isomorphicEncode(input) {\n      assert(!invalidIsomorphicEncodeValueRegex.test(input));\n      return input;\n    }\n    __name(isomorphicEncode\x2C "isomorphicEncode");\n    async function readAllBytes(reader) {\n      const bytes = [];\n      let byteLength = 0;\n      while (true) {\n        const { done\x2C value: chunk } = await reader.read();\n        if (done) {\n          return Buffer.concat(bytes\x2C byteLength);\n        }\n        if (!isUint8Array(chunk)) {\n          throw new TypeError("Received non-Uint8Array chunk");\n        }\n        bytes.push(chunk);\n        byteLength += chunk.length;\n      }\n    }\n    __name(readAllBytes\x2C "readAllBytes");\n    function urlIsLocal(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "about:" || protocol === "blob:" || protocol === "data:";\n    }\n    __name(urlIsLocal\x2C "urlIsLocal");\n    function urlHasHttpsScheme(url) {\n      return typeof url === "string" && url[5] === ":" && url[0] === "h" && url[1] === "t" && url[2] === "t" && url[3] === "p" && url[4] === "s" || url.protocol === "https:";\n    }\n    __name(urlHasHttpsScheme\x2C "urlHasHttpsScheme");\n    function urlIsHttpHttpsScheme(url) {\n      assert("protocol" in url);\n      const protocol = url.protocol;\n      return protocol === "http:" || protocol === "https:";\n    }\n    __name(urlIsHttpHttpsScheme\x2C "urlIsHttpHttpsScheme");\n    function simpleRangeHeaderValue(value\x2C allowWhitespace) {\n      const data = value;\n      if (!data.startsWith("bytes")) {\n        return "failure";\n      }\n      const position = { position: 5 };\n      if (allowWhitespace) {\n        collectASequenceOfCodePoints(\n          (char) => char === "\x09" || char === " "\x2C\n          data\x2C\n          position\n        );\n      }\n      if (data.charCodeAt(position.position) !== 61) {\n        return "failure";\n      }\n      position.position++;\n      if (allowWhitespace) {\n        collectASequenceOfCodePoints(\n          (char) => char === "\x09" || char === " "\x2C\n          data\x2C\n          position\n        );\n      }\n      const rangeStart = collectASequenceOfCodePoints(\n        (char) => {\n          const code = char.charCodeAt(0);\n          return code >= 48 && code <= 57;\n        }\x2C\n        data\x2C\n        position\n      );\n      const rangeStartValue = rangeStart.length ? Number(rangeStart) : null;\n      if (allowWhitespace) {\n        collectASequenceOfCodePoints(\n          (char) => char === "\x09" || char === " "\x2C\n          data\x2C\n          position\n        );\n      }\n      if (data.charCodeAt(position.position) !== 45) {\n        return "failure";\n      }\n      position.position++;\n      if (allowWhitespace) {\n        collectASequenceOfCodePoints(\n          (char) => char === "\x09" || char === " "\x2C\n          data\x2C\n          position\n        );\n      }\n      const rangeEnd = collectASequenceOfCodePoints(\n        (char) => {\n          const code = char.charCodeAt(0);\n          return code >= 48 && code <= 57;\n        }\x2C\n        data\x2C\n        position\n      );\n      const rangeEndValue = rangeEnd.length ? Number(rangeEnd) : null;\n      if (position.position < data.length) {\n        return "failure";\n      }\n      if (rangeEndValue === null && rangeStartValue === null) {\n        return "failure";\n      }\n      if (rangeStartValue > rangeEndValue) {\n        return "failure";\n      }\n      return { rangeStartValue\x2C rangeEndValue };\n    }\n    __name(simpleRangeHeaderValue\x2C "simpleRangeHeaderValue");\n    function buildContentRange(rangeStart\x2C rangeEnd\x2C fullLength) {\n      let contentRange = "bytes ";\n      contentRange += isomorphicEncode(`${rangeStart}`);\n      contentRange += "-";\n      contentRange += isomorphicEncode(`${rangeEnd}`);\n      contentRange += "/";\n      contentRange += isomorphicEncode(`${fullLength}`);\n      return contentRange;\n    }\n    __name(buildContentRange\x2C "buildContentRange");\n    var InflateStream = class extends Transform {\n      static {\n        __name(this\x2C "InflateStream");\n      }\n      #zlibOptions;\n      /** @param {zlib.ZlibOptions} [zlibOptions] */\n      constructor(zlibOptions) {\n        super();\n        this.#zlibOptions = zlibOptions;\n      }\n      _transform(chunk\x2C encoding\x2C callback) {\n        if (!this._inflateStream) {\n          if (chunk.length === 0) {\n            callback();\n            return;\n          }\n          this._inflateStream = (chunk[0] & 15) === 8 ? zlib.createInflate(this.#zlibOptions) : zlib.createInflateRaw(this.#zlibOptions);\n          this._inflateStream.on("data"\x2C this.push.bind(this));\n          this._inflateStream.on("end"\x2C () => this.push(null));\n          this._inflateStream.on("error"\x2C (err) => this.destroy(err));\n        }\n        this._inflateStream.write(chunk\x2C encoding\x2C callback);\n      }\n      _final(callback) {\n        if (this._inflateStream) {\n          this._inflateStream.end();\n          this._inflateStream = null;\n        }\n        callback();\n      }\n    };\n    function createInflate(zlibOptions) {\n      return new InflateStream(zlibOptions);\n    }\n    __name(createInflate\x2C "createInflate");\n    function extractMimeType(headers) {\n      let charset = null;\n      let essence = null;\n      let mimeType = null;\n      const values = getDecodeSplit("content-type"\x2C headers);\n      if (values === null) {\n        return "failure";\n      }\n      for (const value of values) {\n        const temporaryMimeType = parseMIMEType(value);\n        if (temporaryMimeType === "failure" || temporaryMimeType.essence === "*/*") {\n          continue;\n        }\n        mimeType = temporaryMimeType;\n        if (mimeType.essence !== essence) {\n          charset = null;\n          if (mimeType.parameters.has("charset")) {\n            charset = mimeType.parameters.get("charset");\n          }\n          essence = mimeType.essence;\n        } else if (!mimeType.parameters.has("charset") && charset !== null) {\n          mimeType.parameters.set("charset"\x2C charset);\n        }\n      }\n      if (mimeType == null) {\n        return "failure";\n      }\n      return mimeType;\n    }\n    __name(extractMimeType\x2C "extractMimeType");\n    function gettingDecodingSplitting(value) {\n      const input = value;\n      const position = { position: 0 };\n      const values = [];\n      let temporaryValue = "";\n      while (position.position < input.length) {\n        temporaryValue += collectASequenceOfCodePoints(\n          (char) => char !== '"' && char !== "\x2C"\x2C\n          input\x2C\n          position\n        );\n        if (position.position < input.length) {\n          if (input.charCodeAt(position.position) === 34) {\n            temporaryValue += collectAnHTTPQuotedString(\n              input\x2C\n              position\n            );\n            if (position.position < input.length) {\n              continue;\n            }\n          } else {\n            assert(input.charCodeAt(position.position) === 44);\n            position.position++;\n          }\n        }\n        temporaryValue = removeChars(temporaryValue\x2C true\x2C true\x2C (char) => char === 9 || char === 32);\n        values.push(temporaryValue);\n        temporaryValue = "";\n      }\n      return values;\n    }\n    __name(gettingDecodingSplitting\x2C "gettingDecodingSplitting");\n    function getDecodeSplit(name\x2C list) {\n      const value = list.get(name\x2C true);\n      if (value === null) {\n        return null;\n      }\n      return gettingDecodingSplitting(value);\n    }\n    __name(getDecodeSplit\x2C "getDecodeSplit");\n    var textDecoder = new TextDecoder();\n    function utf8DecodeBytes(buffer) {\n      if (buffer.length === 0) {\n        return "";\n      }\n      if (buffer[0] === 239 && buffer[1] === 187 && buffer[2] === 191) {\n        buffer = buffer.subarray(3);\n      }\n      const output = textDecoder.decode(buffer);\n      return output;\n    }\n    __name(utf8DecodeBytes\x2C "utf8DecodeBytes");\n    var EnvironmentSettingsObjectBase = class {\n      static {\n        __name(this\x2C "EnvironmentSettingsObjectBase");\n      }\n      get baseUrl() {\n        return getGlobalOrigin();\n      }\n      get origin() {\n        return this.baseUrl?.origin;\n      }\n      policyContainer = makePolicyContainer();\n    };\n    var EnvironmentSettingsObject = class {\n      static {\n        __name(this\x2C "EnvironmentSettingsObject");\n      }\n      settingsObject = new EnvironmentSettingsObjectBase();\n    };\n    var environmentSettingsObject = new EnvironmentSettingsObject();\n    module2.exports = {\n      isAborted\x2C\n      isCancelled\x2C\n      isValidEncodedURL\x2C\n      createDeferredPromise\x2C\n      ReadableStreamFrom\x2C\n      tryUpgradeRequestToAPotentiallyTrustworthyURL\x2C\n      clampAndCoarsenConnectionTimingInfo\x2C\n      coarsenedSharedCurrentTime\x2C\n      determineRequestsReferrer\x2C\n      makePolicyContainer\x2C\n      clonePolicyContainer\x2C\n      appendFetchMetadata\x2C\n      appendRequestOriginHeader\x2C\n      TAOCheck\x2C\n      corsCheck\x2C\n      crossOriginResourcePolicyCheck\x2C\n      createOpaqueTimingInfo\x2C\n      setRequestReferrerPolicyOnRedirect\x2C\n      isValidHTTPToken\x2C\n      requestBadPort\x2C\n      requestCurrentURL\x2C\n      responseURL\x2C\n      responseLocationURL\x2C\n      isBlobLike\x2C\n      isURLPotentiallyTrustworthy\x2C\n      isValidReasonPhrase\x2C\n      sameOrigin\x2C\n      normalizeMethod\x2C\n      serializeJavascriptValueToJSONString\x2C\n      iteratorMixin\x2C\n      createIterator\x2C\n      isValidHeaderName\x2C\n      isValidHeaderValue\x2C\n      isErrorLike\x2C\n      fullyReadBody\x2C\n      bytesMatch\x2C\n      isReadableStreamLike\x2C\n      readableStreamClose\x2C\n      isomorphicEncode\x2C\n      urlIsLocal\x2C\n      urlHasHttpsScheme\x2C\n      urlIsHttpHttpsScheme\x2C\n      readAllBytes\x2C\n      simpleRangeHeaderValue\x2C\n      buildContentRange\x2C\n      parseMetadata\x2C\n      createInflate\x2C\n      extractMimeType\x2C\n      getDecodeSplit\x2C\n      utf8DecodeBytes\x2C\n      environmentSettingsObject\n    };\n  }\n});\n\n// lib/web/fetch/symbols.js\nvar require_symbols2 = __commonJS({\n  "lib/web/fetch/symbols.js"(exports2\x2C module2) {\n    "use strict";\n    module2.exports = {\n      kUrl: Symbol("url")\x2C\n      kHeaders: Symbol("headers")\x2C\n      kSignal: Symbol("signal")\x2C\n      kState: Symbol("state")\x2C\n      kDispatcher: Symbol("dispatcher")\n    };\n  }\n});\n\n// lib/web/fetch/file.js\nvar require_file = __commonJS({\n  "lib/web/fetch/file.js"(exports2\x2C module2) {\n    "use strict";\n    var { Blob: Blob2\x2C File } = require("node:buffer");\n    var { kState } = require_symbols2();\n    var { webidl } = require_webidl();\n    var FileLike = class _FileLike {\n      static {\n        __name(this\x2C "FileLike");\n      }\n      constructor(blobLike\x2C fileName\x2C options = {}) {\n        const n = fileName;\n        const t = options.type;\n        const d = options.lastModified ?? Date.now();\n        this[kState] = {\n          blobLike\x2C\n          name: n\x2C\n          type: t\x2C\n          lastModified: d\n        };\n      }\n      stream(...args) {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.stream(...args);\n      }\n      arrayBuffer(...args) {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.arrayBuffer(...args);\n      }\n      slice(...args) {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.slice(...args);\n      }\n      text(...args) {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.text(...args);\n      }\n      get size() {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.size;\n      }\n      get type() {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].blobLike.type;\n      }\n      get name() {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].name;\n      }\n      get lastModified() {\n        webidl.brandCheck(this\x2C _FileLike);\n        return this[kState].lastModified;\n      }\n      get [Symbol.toStringTag]() {\n        return "File";\n      }\n    };\n    webidl.converters.Blob = webidl.interfaceConverter(Blob2);\n    function isFileLike(object) {\n      return object instanceof File || object && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && object[Symbol.toStringTag] === "File";\n    }\n    __name(isFileLike\x2C "isFileLike");\n    module2.exports = { FileLike\x2C isFileLike };\n  }\n});\n\n// lib/web/fetch/formdata.js\nvar require_formdata = __commonJS({\n  "lib/web/fetch/formdata.js"(exports2\x2C module2) {\n    "use strict";\n    var { isBlobLike\x2C iteratorMixin } = require_util2();\n    var { kState } = require_symbols2();\n    var { kEnumerableProperty } = require_util();\n    var { FileLike\x2C isFileLike } = require_file();\n    var { webidl } = require_webidl();\n    var { File: NativeFile } = require("node:buffer");\n    var nodeUtil = require("node:util");\n    var File = globalThis.File ?? NativeFile;\n    var FormData = class _FormData {\n      static {\n        __name(this\x2C "FormData");\n      }\n      constructor(form) {\n        webidl.util.markAsUncloneable(this);\n        if (form !== void 0) {\n          throw webidl.errors.conversionFailed({\n            prefix: "FormData constructor"\x2C\n            argument: "Argument 1"\x2C\n            types: ["undefined"]\n          });\n        }\n        this[kState] = [];\n      }\n      append(name\x2C value\x2C filename = void 0) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.append";\n        webidl.argumentLengthCheck(arguments\x2C 2\x2C prefix);\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"\n          );\n        }\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        value = isBlobLike(value) ? webidl.converters.Blob(value\x2C prefix\x2C "value"\x2C { strict: false }) : webidl.converters.USVString(value\x2C prefix\x2C "value");\n        filename = arguments.length === 3 ? webidl.converters.USVString(filename\x2C prefix\x2C "filename") : void 0;\n        const entry = makeEntry(name\x2C value\x2C filename);\n        this[kState].push(entry);\n      }\n      delete(name) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.delete";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        this[kState] = this[kState].filter((entry) => entry.name !== name);\n      }\n      get(name) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.get";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        const idx = this[kState].findIndex((entry) => entry.name === name);\n        if (idx === -1) {\n          return null;\n        }\n        return this[kState][idx].value;\n      }\n      getAll(name) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.getAll";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        return this[kState].filter((entry) => entry.name === name).map((entry) => entry.value);\n      }\n      has(name) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.has";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        return this[kState].findIndex((entry) => entry.name === name) !== -1;\n      }\n      set(name\x2C value\x2C filename = void 0) {\n        webidl.brandCheck(this\x2C _FormData);\n        const prefix = "FormData.set";\n        webidl.argumentLengthCheck(arguments\x2C 2\x2C prefix);\n        if (arguments.length === 3 && !isBlobLike(value)) {\n          throw new TypeError(\n            "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"\n          );\n        }\n        name = webidl.converters.USVString(name\x2C prefix\x2C "name");\n        value = isBlobLike(value) ? webidl.converters.Blob(value\x2C prefix\x2C "name"\x2C { strict: false }) : webidl.converters.USVString(value\x2C prefix\x2C "name");\n        filename = arguments.length === 3 ? webidl.converters.USVString(filename\x2C prefix\x2C "name") : void 0;\n        const entry = makeEntry(name\x2C value\x2C filename);\n        const idx = this[kState].findIndex((entry2) => entry2.name === name);\n        if (idx !== -1) {\n          this[kState] = [\n            ...this[kState].slice(0\x2C idx)\x2C\n            entry\x2C\n            ...this[kState].slice(idx + 1).filter((entry2) => entry2.name !== name)\n          ];\n        } else {\n          this[kState].push(entry);\n        }\n      }\n      [nodeUtil.inspect.custom](depth\x2C options) {\n        const state = this[kState].reduce((a\x2C b) => {\n          if (a[b.name]) {\n            if (Array.isArray(a[b.name])) {\n              a[b.name].push(b.value);\n            } else {\n              a[b.name] = [a[b.name]\x2C b.value];\n            }\n          } else {\n            a[b.name] = b.value;\n          }\n          return a;\n        }\x2C { __proto__: null });\n        options.depth ??= depth;\n        options.colors ??= true;\n        const output = nodeUtil.formatWithOptions(options\x2C state);\n        return `FormData ${output.slice(output.indexOf("]") + 2)}`;\n      }\n    };\n    iteratorMixin("FormData"\x2C FormData\x2C kState\x2C "name"\x2C "value");\n    Object.defineProperties(FormData.prototype\x2C {\n      append: kEnumerableProperty\x2C\n      delete: kEnumerableProperty\x2C\n      get: kEnumerableProperty\x2C\n      getAll: kEnumerableProperty\x2C\n      has: kEnumerableProperty\x2C\n      set: kEnumerableProperty\x2C\n      [Symbol.toStringTag]: {\n        value: "FormData"\x2C\n        configurable: true\n      }\n    });\n    function makeEntry(name\x2C value\x2C filename) {\n      if (typeof value === "string") {\n      } else {\n        if (!isFileLike(value)) {\n          value = value instanceof Blob ? new File([value]\x2C "blob"\x2C { type: value.type }) : new FileLike(value\x2C "blob"\x2C { type: value.type });\n        }\n        if (filename !== void 0) {\n          const options = {\n            type: value.type\x2C\n            lastModified: value.lastModified\n          };\n          value = value instanceof NativeFile ? new File([value]\x2C filename\x2C options) : new FileLike(value\x2C filename\x2C options);\n        }\n      }\n      return { name\x2C value };\n    }\n    __name(makeEntry\x2C "makeEntry");\n    module2.exports = { FormData\x2C makeEntry };\n  }\n});\n\n// lib/web/fetch/formdata-parser.js\nvar require_formdata_parser = __commonJS({\n  "lib/web/fetch/formdata-parser.js"(exports2\x2C module2) {\n    "use strict";\n    var { isUSVString\x2C bufferToLowerCasedHeaderName } = require_util();\n    var { utf8DecodeBytes } = require_util2();\n    var { HTTP_TOKEN_CODEPOINTS\x2C isomorphicDecode } = require_data_url();\n    var { isFileLike } = require_file();\n    var { makeEntry } = require_formdata();\n    var assert = require("node:assert");\n    var { File: NodeFile } = require("node:buffer");\n    var File = globalThis.File ?? NodeFile;\n    var formDataNameBuffer = Buffer.from('form-data; name="');\n    var filenameBuffer = Buffer.from("; filename");\n    var dd = Buffer.from("--");\n    var ddcrlf = Buffer.from("--\\r\\n");\n    function isAsciiString(chars) {\n      for (let i = 0; i < chars.length; ++i) {\n        if ((chars.charCodeAt(i) & ~127) !== 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isAsciiString\x2C "isAsciiString");\n    function validateBoundary(boundary) {\n      const length = boundary.length;\n      if (length < 27 || length > 70) {\n        return false;\n      }\n      for (let i = 0; i < length; ++i) {\n        const cp = boundary.charCodeAt(i);\n        if (!(cp >= 48 && cp <= 57 || cp >= 65 && cp <= 90 || cp >= 97 && cp <= 122 || cp === 39 || cp === 45 || cp === 95)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(validateBoundary\x2C "validateBoundary");\n    function multipartFormDataParser(input\x2C mimeType) {\n      assert(mimeType !== "failure" && mimeType.essence === "multipart/form-data");\n      const boundaryString = mimeType.parameters.get("boundary");\n      if (boundaryString === void 0) {\n        return "failure";\n      }\n      const boundary = Buffer.from(`--${boundaryString}`\x2C "utf8");\n      const entryList = [];\n      const position = { position: 0 };\n      while (input[position.position] === 13 && input[position.position + 1] === 10) {\n        position.position += 2;\n      }\n      let trailing = input.length;\n      while (input[trailing - 1] === 10 && input[trailing - 2] === 13) {\n        trailing -= 2;\n      }\n      if (trailing !== input.length) {\n        input = input.subarray(0\x2C trailing);\n      }\n      while (true) {\n        if (input.subarray(position.position\x2C position.position + boundary.length).equals(boundary)) {\n          position.position += boundary.length;\n        } else {\n          return "failure";\n        }\n        if (position.position === input.length - 2 && bufferStartsWith(input\x2C dd\x2C position) || position.position === input.length - 4 && bufferStartsWith(input\x2C ddcrlf\x2C position)) {\n          return entryList;\n        }\n        if (input[position.position] !== 13 || input[position.position + 1] !== 10) {\n          return "failure";\n        }\n        position.position += 2;\n        const result = parseMultipartFormDataHeaders(input\x2C position);\n        if (result === "failure") {\n          return "failure";\n        }\n        let { name\x2C filename\x2C contentType\x2C encoding } = result;\n        position.position += 2;\n        let body;\n        {\n          const boundaryIndex = input.indexOf(boundary.subarray(2)\x2C position.position);\n          if (boundaryIndex === -1) {\n            return "failure";\n          }\n          body = input.subarray(position.position\x2C boundaryIndex - 4);\n          position.position += body.length;\n          if (encoding === "base64") {\n            body = Buffer.from(body.toString()\x2C "base64");\n          }\n        }\n        if (input[position.position] !== 13 || input[position.position + 1] !== 10) {\n          return "failure";\n        } else {\n          position.position += 2;\n        }\n        let value;\n        if (filename !== null) {\n          contentType ??= "text/plain";\n          if (!isAsciiString(contentType)) {\n            contentType = "";\n          }\n          value = new File([body]\x2C filename\x2C { type: contentType });\n        } else {\n          value = utf8DecodeBytes(Buffer.from(body));\n        }\n        assert(isUSVString(name));\n        assert(typeof value === "string" && isUSVString(value) || isFileLike(value));\n        entryList.push(makeEntry(name\x2C value\x2C filename));\n      }\n    }\n    __name(multipartFormDataParser\x2C "multipartFormDataParser");\n    function parseMultipartFormDataHeaders(input\x2C position) {\n      let name = null;\n      let filename = null;\n      let contentType = null;\n      let encoding = null;\n      while (true) {\n        if (input[position.position] === 13 && input[position.position + 1] === 10) {\n          if (name === null) {\n            return "failure";\n          }\n          return { name\x2C filename\x2C contentType\x2C encoding };\n        }\n        let headerName = collectASequenceOfBytes(\n          (char) => char !== 10 && char !== 13 && char !== 58\x2C\n          input\x2C\n          position\n        );\n        headerName = removeChars(headerName\x2C true\x2C true\x2C (char) => char === 9 || char === 32);\n        if (!HTTP_TOKEN_CODEPOINTS.test(headerName.toString())) {\n          return "failure";\n        }\n        if (input[position.position] !== 58) {\n          return "failure";\n        }\n        position.position++;\n        collectASequenceOfBytes(\n          (char) => char === 32 || char === 9\x2C\n          input\x2C\n          position\n        );\n        switch (bufferToLowerCasedHeaderName(headerName)) {\n          case "content-disposition": {\n            name = filename = null;\n            if (!bufferStartsWith(input\x2C formDataNameBuffer\x2C position)) {\n              return "failure";\n            }\n            position.position += 17;\n            name = parseMultipartFormDataName(input\x2C position);\n            if (name === null) {\n              return "failure";\n            }\n            if (bufferStartsWith(input\x2C filenameBuffer\x2C position)) {\n              let check = position.position + filenameBuffer.length;\n              if (input[check] === 42) {\n                position.position += 1;\n                check += 1;\n              }\n              if (input[check] !== 61 || input[check + 1] !== 34) {\n                return "failure";\n              }\n              position.position += 12;\n              filename = parseMultipartFormDataName(input\x2C position);\n              if (filename === null) {\n                return "failure";\n              }\n            }\n            break;\n          }\n          case "content-type": {\n            let headerValue = collectASequenceOfBytes(\n              (char) => char !== 10 && char !== 13\x2C\n              input\x2C\n              position\n            );\n            headerValue = removeChars(headerValue\x2C false\x2C true\x2C (char) => char === 9 || char === 32);\n            contentType = isomorphicDecode(headerValue);\n            break;\n          }\n          case "content-transfer-encoding": {\n            let headerValue = collectASequenceOfBytes(\n              (char) => char !== 10 && char !== 13\x2C\n              input\x2C\n              position\n            );\n            headerValue = removeChars(headerValue\x2C false\x2C true\x2C (char) => char === 9 || char === 32);\n            encoding = isomorphicDecode(headerValue);\n            break;\n          }\n          default: {\n            collectASequenceOfBytes(\n              (char) => char !== 10 && char !== 13\x2C\n              input\x2C\n              position\n            );\n          }\n        }\n        if (input[position.position] !== 13 && input[position.position + 1] !== 10) {\n          return "failure";\n        } else {\n          position.position += 2;\n        }\n      }\n    }\n    __name(parseMultipartFormDataHeaders\x2C "parseMultipartFormDataHeaders");\n    function parseMultipartFormDataName(input\x2C position) {\n      assert(input[position.position - 1] === 34);\n      let name = collectASequenceOfBytes(\n        (char) => char !== 10 && char !== 13 && char !== 34\x2C\n        input\x2C\n        position\n      );\n      if (input[position.position] !== 34) {\n        return null;\n      } else {\n        position.position++;\n      }\n      name = new TextDecoder().decode(name).replace(/%0A/ig\x2C "\\n").replace(/%0D/ig\x2C "\\r").replace(/%22/g\x2C '"');\n      return name;\n    }\n    __name(parseMultipartFormDataName\x2C "parseMultipartFormDataName");\n    function collectASequenceOfBytes(condition\x2C input\x2C position) {\n      let start = position.position;\n      while (start < input.length && condition(input[start])) {\n        ++start;\n      }\n      return input.subarray(position.position\x2C position.position = start);\n    }\n    __name(collectASequenceOfBytes\x2C "collectASequenceOfBytes");\n    function removeChars(buf\x2C leading\x2C trailing\x2C predicate) {\n      let lead = 0;\n      let trail = buf.length - 1;\n      if (leading) {\n        while (lead < buf.length && predicate(buf[lead]))\n          lead++;\n      }\n      if (trailing) {\n        while (trail > 0 && predicate(buf[trail]))\n          trail--;\n      }\n      return lead === 0 && trail === buf.length - 1 ? buf : buf.subarray(lead\x2C trail + 1);\n    }\n    __name(removeChars\x2C "removeChars");\n    function bufferStartsWith(buffer\x2C start\x2C position) {\n      if (buffer.length < start.length) {\n        return false;\n      }\n      for (let i = 0; i < start.length; i++) {\n        if (start[i] !== buffer[position.position + i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(bufferStartsWith\x2C "bufferStartsWith");\n    module2.exports = {\n      multipartFormDataParser\x2C\n      validateBoundary\n    };\n  }\n});\n\n// lib/web/fetch/body.js\nvar require_body = __commonJS({\n  "lib/web/fetch/body.js"(exports2\x2C module2) {\n    "use strict";\n    var util = require_util();\n    var {\n      ReadableStreamFrom\x2C\n      isBlobLike\x2C\n      isReadableStreamLike\x2C\n      readableStreamClose\x2C\n      createDeferredPromise\x2C\n      fullyReadBody\x2C\n      extractMimeType\x2C\n      utf8DecodeBytes\n    } = require_util2();\n    var { FormData } = require_formdata();\n    var { kState } = require_symbols2();\n    var { webidl } = require_webidl();\n    var { Blob: Blob2 } = require("node:buffer");\n    var assert = require("node:assert");\n    var { isErrored\x2C isDisturbed } = require("node:stream");\n    var { isArrayBuffer } = require("node:util/types");\n    var { serializeAMimeType } = require_data_url();\n    var { multipartFormDataParser } = require_formdata_parser();\n    var textEncoder = new TextEncoder();\n    function noop() {\n    }\n    __name(noop\x2C "noop");\n    var hasFinalizationRegistry = globalThis.FinalizationRegistry && process.version.indexOf("v18") !== 0;\n    var streamRegistry;\n    if (hasFinalizationRegistry) {\n      streamRegistry = new FinalizationRegistry((weakRef) => {\n        const stream = weakRef.deref();\n        if (stream && !stream.locked && !isDisturbed(stream) && !isErrored(stream)) {\n          stream.cancel("Response object has been garbage collected").catch(noop);\n        }\n      });\n    }\n    function extractBody(object\x2C keepalive = false) {\n      let stream = null;\n      if (object instanceof ReadableStream) {\n        stream = object;\n      } else if (isBlobLike(object)) {\n        stream = object.stream();\n      } else {\n        stream = new ReadableStream({\n          async pull(controller) {\n            const buffer = typeof source === "string" ? textEncoder.encode(source) : source;\n            if (buffer.byteLength) {\n              controller.enqueue(buffer);\n            }\n            queueMicrotask(() => readableStreamClose(controller));\n          }\x2C\n          start() {\n          }\x2C\n          type: "bytes"\n        });\n      }\n      assert(isReadableStreamLike(stream));\n      let action = null;\n      let source = null;\n      let length = null;\n      let type = null;\n      if (typeof object === "string") {\n        source = object;\n        type = "text/plain;charset=UTF-8";\n      } else if (object instanceof URLSearchParams) {\n        source = object.toString();\n        type = "application/x-www-form-urlencoded;charset=UTF-8";\n      } else if (isArrayBuffer(object)) {\n        source = new Uint8Array(object.slice());\n      } else if (ArrayBuffer.isView(object)) {\n        source = new Uint8Array(object.buffer.slice(object.byteOffset\x2C object.byteOffset + object.byteLength));\n      } else if (util.isFormDataLike(object)) {\n        const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11\x2C "0")}`;\n        const prefix = `--${boundary}\\r\nContent-Disposition: form-data`;\n        const escape = /* @__PURE__ */ __name((str) => str.replace(/\\n/g\x2C "%0A").replace(/\\r/g\x2C "%0D").replace(/"/g\x2C "%22")\x2C "escape");\n        const normalizeLinefeeds = /* @__PURE__ */ __name((value) => value.replace(/\\r?\\n|\\r/g\x2C "\\r\\n")\x2C "normalizeLinefeeds");\n        const blobParts = [];\n        const rn = new Uint8Array([13\x2C 10]);\n        length = 0;\n        let hasUnknownSizeValue = false;\n        for (const [name\x2C value] of object) {\n          if (typeof value === "string") {\n            const chunk2 = textEncoder.encode(prefix + `; name="${escape(normalizeLinefeeds(name))}"\\r\n\\r\n${normalizeLinefeeds(value)}\\r\n`);\n            blobParts.push(chunk2);\n            length += chunk2.byteLength;\n          } else {\n            const chunk2 = textEncoder.encode(`${prefix}; name="${escape(normalizeLinefeeds(name))}"` + (value.name ? `; filename="${escape(value.name)}"` : "") + `\\r\nContent-Type: ${value.type || "application/octet-stream"}\\r\n\\r\n`);\n            blobParts.push(chunk2\x2C value\x2C rn);\n            if (typeof value.size === "number") {\n              length += chunk2.byteLength + value.size + rn.byteLength;\n            } else {\n              hasUnknownSizeValue = true;\n            }\n          }\n        }\n        const chunk = textEncoder.encode(`--${boundary}--`);\n        blobParts.push(chunk);\n        length += chunk.byteLength;\n        if (hasUnknownSizeValue) {\n          length = null;\n        }\n        source = object;\n        action = /* @__PURE__ */ __name(async function* () {\n          for (const part of blobParts) {\n            if (part.stream) {\n              yield* part.stream();\n            } else {\n              yield part;\n            }\n          }\n        }\x2C "action");\n        type = `multipart/form-data; boundary=${boundary}`;\n      } else if (isBlobLike(object)) {\n        source = object;\n        length = object.size;\n        if (object.type) {\n          type = object.type;\n        }\n      } else if (typeof object[Symbol.asyncIterator] === "function") {\n        if (keepalive) {\n          throw new TypeError("keepalive");\n        }\n        if (util.isDisturbed(object) || object.locked) {\n          throw new TypeError(\n            "Response body object should not be disturbed or locked"\n          );\n        }\n        stream = object instanceof ReadableStream ? object : ReadableStreamFrom(object);\n      }\n      if (typeof source === "string" || util.isBuffer(source)) {\n        length = Buffer.byteLength(source);\n      }\n      if (action != null) {\n        let iterator;\n        stream = new ReadableStream({\n          async start() {\n            iterator = action(object)[Symbol.asyncIterator]();\n          }\x2C\n          async pull(controller) {\n            const { value\x2C done } = await iterator.next();\n            if (done) {\n              queueMicrotask(() => {\n                controller.close();\n                controller.byobRequest?.respond(0);\n              });\n            } else {\n              if (!isErrored(stream)) {\n                const buffer = new Uint8Array(value);\n                if (buffer.byteLength) {\n                  controller.enqueue(buffer);\n                }\n              }\n            }\n            return controller.desiredSize > 0;\n          }\x2C\n          async cancel(reason) {\n            await iterator.return();\n          }\x2C\n          type: "bytes"\n        });\n      }\n      const body = { stream\x2C source\x2C length };\n      return [body\x2C type];\n    }\n    __name(extractBody\x2C "extractBody");\n    function safelyExtractBody(object\x2C keepalive = false) {\n      if (object instanceof ReadableStream) {\n        assert(!util.isDisturbed(object)\x2C "The body has already been consumed.");\n        assert(!object.locked\x2C "The stream is locked.");\n      }\n      return extractBody(object\x2C keepalive);\n    }\n    __name(safelyExtractBody\x2C "safelyExtractBody");\n    function cloneBody(instance\x2C body) {\n      const [out1\x2C out2] = body.stream.tee();\n      if (hasFinalizationRegistry) {\n        streamRegistry.register(instance\x2C new WeakRef(out1));\n      }\n      body.stream = out1;\n      return {\n        stream: out2\x2C\n        length: body.length\x2C\n        source: body.source\n      };\n    }\n    __name(cloneBody\x2C "cloneBody");\n    function throwIfAborted(state) {\n      if (state.aborted) {\n        throw new DOMException("The operation was aborted."\x2C "AbortError");\n      }\n    }\n    __name(throwIfAborted\x2C "throwIfAborted");\n    function bodyMixinMethods(instance) {\n      const methods = {\n        blob() {\n          return consumeBody(this\x2C (bytes) => {\n            let mimeType = bodyMimeType(this);\n            if (mimeType === null) {\n              mimeType = "";\n            } else if (mimeType) {\n              mimeType = serializeAMimeType(mimeType);\n            }\n            return new Blob2([bytes]\x2C { type: mimeType });\n          }\x2C instance);\n        }\x2C\n        arrayBuffer() {\n          return consumeBody(this\x2C (bytes) => {\n            return new Uint8Array(bytes).buffer;\n          }\x2C instance);\n        }\x2C\n        text() {\n          return consumeBody(this\x2C utf8DecodeBytes\x2C instance);\n        }\x2C\n        json() {\n          return consumeBody(this\x2C parseJSONFromBytes\x2C instance);\n        }\x2C\n        formData() {\n          return consumeBody(this\x2C (value) => {\n            const mimeType = bodyMimeType(this);\n            if (mimeType !== null) {\n              switch (mimeType.essence) {\n                case "multipart/form-data": {\n                  const parsed = multipartFormDataParser(value\x2C mimeType);\n                  if (parsed === "failure") {\n                    throw new TypeError("Failed to parse body as FormData.");\n                  }\n                  const fd = new FormData();\n                  fd[kState] = parsed;\n                  return fd;\n                }\n                case "application/x-www-form-urlencoded": {\n                  const entries = new URLSearchParams(value.toString());\n                  const fd = new FormData();\n                  for (const [name\x2C value2] of entries) {\n                    fd.append(name\x2C value2);\n                  }\n                  return fd;\n                }\n              }\n            }\n            throw new TypeError(\n              'Content-Type was not one of "multipart/form-data" or "application/x-www-form-urlencoded".'\n            );\n          }\x2C instance);\n        }\x2C\n        bytes() {\n          return consumeBody(this\x2C (bytes) => {\n            return new Uint8Array(bytes);\n          }\x2C instance);\n        }\n      };\n      return methods;\n    }\n    __name(bodyMixinMethods\x2C "bodyMixinMethods");\n    function mixinBody(prototype) {\n      Object.assign(prototype.prototype\x2C bodyMixinMethods(prototype));\n    }\n    __name(mixinBody\x2C "mixinBody");\n    async function consumeBody(object\x2C convertBytesToJSValue\x2C instance) {\n      webidl.brandCheck(object\x2C instance);\n      if (bodyUnusable(object)) {\n        throw new TypeError("Body is unusable: Body has already been read");\n      }\n      throwIfAborted(object[kState]);\n      const promise = createDeferredPromise();\n      const errorSteps = /* @__PURE__ */ __name((error) => promise.reject(error)\x2C "errorSteps");\n      const successSteps = /* @__PURE__ */ __name((data) => {\n        try {\n          promise.resolve(convertBytesToJSValue(data));\n        } catch (e) {\n          errorSteps(e);\n        }\n      }\x2C "successSteps");\n      if (object[kState].body == null) {\n        successSteps(Buffer.allocUnsafe(0));\n        return promise.promise;\n      }\n      await fullyReadBody(object[kState].body\x2C successSteps\x2C errorSteps);\n      return promise.promise;\n    }\n    __name(consumeBody\x2C "consumeBody");\n    function bodyUnusable(object) {\n      const body = object[kState].body;\n      return body != null && (body.stream.locked || util.isDisturbed(body.stream));\n    }\n    __name(bodyUnusable\x2C "bodyUnusable");\n    function parseJSONFromBytes(bytes) {\n      return JSON.parse(utf8DecodeBytes(bytes));\n    }\n    __name(parseJSONFromBytes\x2C "parseJSONFromBytes");\n    function bodyMimeType(requestOrResponse) {\n      const headers = requestOrResponse[kState].headersList;\n      const mimeType = extractMimeType(headers);\n      if (mimeType === "failure") {\n        return null;\n      }\n      return mimeType;\n    }\n    __name(bodyMimeType\x2C "bodyMimeType");\n    module2.exports = {\n      extractBody\x2C\n      safelyExtractBody\x2C\n      cloneBody\x2C\n      mixinBody\x2C\n      streamRegistry\x2C\n      hasFinalizationRegistry\x2C\n      bodyUnusable\n    };\n  }\n});\n\n// lib/dispatcher/client-h1.js\nvar require_client_h1 = __commonJS({\n  "lib/dispatcher/client-h1.js"(exports2\x2C module2) {\n    "use strict";\n    var assert = require("node:assert");\n    var util = require_util();\n    var { channels } = require_diagnostics();\n    var timers = require_timers();\n    var {\n      RequestContentLengthMismatchError\x2C\n      ResponseContentLengthMismatchError\x2C\n      RequestAbortedError\x2C\n      HeadersTimeoutError\x2C\n      HeadersOverflowError\x2C\n      SocketError\x2C\n      InformationalError\x2C\n      BodyTimeoutError\x2C\n      HTTPParserError\x2C\n      ResponseExceededMaxSizeError\n    } = require_errors();\n    var {\n      kUrl\x2C\n      kReset\x2C\n      kClient\x2C\n      kParser\x2C\n      kBlocking\x2C\n      kRunning\x2C\n      kPending\x2C\n      kSize\x2C\n      kWriting\x2C\n      kQueue\x2C\n      kNoRef\x2C\n      kKeepAliveDefaultTimeout\x2C\n      kHostHeader\x2C\n      kPendingIdx\x2C\n      kRunningIdx\x2C\n      kError\x2C\n      kPipelining\x2C\n      kSocket\x2C\n      kKeepAliveTimeoutValue\x2C\n      kMaxHeadersSize\x2C\n      kKeepAliveMaxTimeout\x2C\n      kKeepAliveTimeoutThreshold\x2C\n      kHeadersTimeout\x2C\n      kBodyTimeout\x2C\n      kStrictContentLength\x2C\n      kMaxRequests\x2C\n      kCounter\x2C\n      kMaxResponseSize\x2C\n      kOnError\x2C\n      kResume\x2C\n      kHTTPContext\n    } = require_symbols();\n    var constants = require_constants2();\n    var EMPTY_BUF = Buffer.alloc(0);\n    var FastBuffer = Buffer[Symbol.species];\n    var addListener = util.addListener;\n    var removeAllListeners = util.removeAllListeners;\n    var extractBody;\n    async function lazyllhttp() {\n      const llhttpWasmData = process.env.JEST_WORKER_ID ? require_llhttp_wasm() : void 0;\n      let mod;\n      try {\n        mod = await WebAssembly.compile(require_llhttp_simd_wasm());\n      } catch (e) {\n        mod = await WebAssembly.compile(llhttpWasmData || require_llhttp_wasm());\n      }\n      return await WebAssembly.instantiate(mod\x2C {\n        env: {\n          /* eslint-disable camelcase */\n          wasm_on_url: (p\x2C at\x2C len) => {\n            return 0;\n          }\x2C\n          wasm_on_status: (p\x2C at\x2C len) => {\n            assert(currentParser.ptr === p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer\x2C start\x2C len)) || 0;\n          }\x2C\n          wasm_on_message_begin: (p) => {\n            assert(currentParser.ptr === p);\n            return currentParser.onMessageBegin() || 0;\n          }\x2C\n          wasm_on_header_field: (p\x2C at\x2C len) => {\n            assert(currentParser.ptr === p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer\x2C start\x2C len)) || 0;\n          }\x2C\n          wasm_on_header_value: (p\x2C at\x2C len) => {\n            assert(currentParser.ptr === p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer\x2C start\x2C len)) || 0;\n          }\x2C\n          wasm_on_headers_complete: (p\x2C statusCode\x2C upgrade\x2C shouldKeepAlive) => {\n            assert(currentParser.ptr === p);\n            return currentParser.onHeadersComplete(statusCode\x2C Boolean(upgrade)\x2C Boolean(shouldKeepAlive)) || 0;\n          }\x2C\n          wasm_on_body: (p\x2C at\x2C len) => {\n            assert(currentParser.ptr === p);\n            const start = at - currentBufferPtr + currentBufferRef.byteOffset;\n            return currentParser.onBody(new FastBuffer(currentBufferRef.buffer\x2C start\x2C len)) || 0;\n          }\x2C\n          wasm_on_message_complete: (p) => {\n            assert(currentParser.ptr === p);\n            return currentParser.onMessageComplete() || 0;\n          }\n          /* eslint-enable camelcase */\n        }\n      });\n    }\n    __name(lazyllhttp\x2C "lazyllhttp");\n    var llhttpInstance = null;\n    var llhttpPromise = lazyllhttp();\n    llhttpPromise.catch();\n    var currentParser = null;\n    var currentBufferRef = null;\n    var currentBufferSize = 0;\n    var currentBufferPtr = null;\n    var USE_NATIVE_TIMER = 0;\n    var USE_FAST_TIMER = 1;\n    var TIMEOUT_HEADERS = 2 | USE_FAST_TIMER;\n    var TIMEOUT_BODY = 4 | USE_FAST_TIMER;\n    var TIMEOUT_KEEP_ALIVE = 8 | USE_NATIVE_TIMER;\n    var Parser = class {\n      static {\n        __name(this\x2C "Parser");\n      }\n      constructor(client\x2C socket\x2C { exports: exports3 }) {\n        assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0);\n        this.llhttp = exports3;\n        this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE);\n        this.client = client;\n        this.socket = socket;\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.statusCode = null;\n        this.statusText = "";\n        this.upgrade = false;\n        this.headers = [];\n        this.headersSize = 0;\n        this.headersMaxSize = client[kMaxHeadersSize];\n        this.shouldKeepAlive = false;\n        this.paused = false;\n        this.resume = this.resume.bind(this);\n        this.bytesRead = 0;\n        this.keepAlive = "";\n        this.contentLength = "";\n        this.connection = "";\n        this.maxResponseSize = client[kMaxResponseSize];\n      }\n      setTimeout(delay\x2C type) {\n        if (delay !== this.timeoutValue || type & USE_FAST_TIMER ^ this.timeoutType & USE_FAST_TIMER) {\n          if (this.timeout) {\n            timers.clearTimeout(this.timeout);\n            this.timeout = null;\n          }\n          if (delay) {\n            if (type & USE_FAST_TIMER) {\n              this.timeout = timers.setFastTimeout(onParserTimeout\x2C delay\x2C new WeakRef(this));\n            } else {\n              this.timeout = setTimeout(onParserTimeout\x2C delay\x2C new WeakRef(this));\n              this.timeout.unref();\n            }\n          }\n          this.timeoutValue = delay;\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        this.timeoutType = type;\n      }\n      resume() {\n        if (this.socket.destroyed || !this.paused) {\n          return;\n        }\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_resume(this.ptr);\n        assert(this.timeoutType === TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        this.paused = false;\n        this.execute(this.socket.read() || EMPTY_BUF);\n        this.readMore();\n      }\n      readMore() {\n        while (!this.paused && this.ptr) {\n          const chunk = this.socket.read();\n          if (chunk === null) {\n            break;\n          }\n          this.execute(chunk);\n        }\n      }\n      execute(data) {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        assert(!this.paused);\n        const { socket\x2C llhttp } = this;\n        if (data.length > currentBufferSize) {\n          if (currentBufferPtr) {\n            llhttp.free(currentBufferPtr);\n          }\n          currentBufferSize = Math.ceil(data.length / 4096) * 4096;\n          currentBufferPtr = llhttp.malloc(currentBufferSize);\n        }\n        new Uint8Array(llhttp.memory.buffer\x2C currentBufferPtr\x2C currentBufferSize).set(data);\n        try {\n          let ret;\n          try {\n            currentBufferRef = data;\n            currentParser = this;\n            ret = llhttp.llhttp_execute(this.ptr\x2C currentBufferPtr\x2C data.length);\n          } catch (err) {\n            throw err;\n          } finally {\n            currentParser = null;\n            currentBufferRef = null;\n          }\n          const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr;\n          if (ret === constants.ERROR.PAUSED_UPGRADE) {\n            this.onUpgrade(data.slice(offset));\n          } else if (ret === constants.ERROR.PAUSED) {\n            this.paused = true;\n            socket.unshift(data.slice(offset));\n          } else if (ret !== constants.ERROR.OK) {\n            const ptr = llhttp.llhttp_get_error_reason(this.ptr);\n            let message = "";\n            if (ptr) {\n              const len = new Uint8Array(llhttp.memory.buffer\x2C ptr).indexOf(0);\n              message = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(llhttp.memory.buffer\x2C ptr\x2C len).toString() + ")";\n            }\n            throw new HTTPParserError(message\x2C constants.ERROR[ret]\x2C data.slice(offset));\n          }\n        } catch (err) {\n          util.destroy(socket\x2C err);\n        }\n      }\n      destroy() {\n        assert(this.ptr != null);\n        assert(currentParser == null);\n        this.llhttp.llhttp_free(this.ptr);\n        this.ptr = null;\n        this.timeout && timers.clearTimeout(this.timeout);\n        this.timeout = null;\n        this.timeoutValue = null;\n        this.timeoutType = null;\n        this.paused = false;\n      }\n      onStatus(buf) {\n        this.statusText = buf.toString();\n      }\n      onMessageBegin() {\n        const { socket\x2C client } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n        request.onResponseStarted();\n      }\n      onHeaderField(buf) {\n        const len = this.headers.length;\n        if ((len & 1) === 0) {\n          this.headers.push(buf);\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1]\x2C buf]);\n        }\n        this.trackHeader(buf.length);\n      }\n      onHeaderValue(buf) {\n        let len = this.headers.length;\n        if ((len & 1) === 1) {\n          this.headers.push(buf);\n          len += 1;\n        } else {\n          this.headers[len - 1] = Buffer.concat([this.headers[len - 1]\x2C buf]);\n        }\n        const key = this.headers[len - 2];\n        if (key.length === 10) {\n          const headerName = util.bufferToLowerCasedHeaderName(key);\n          if (headerName === "keep-alive") {\n            this.keepAlive += buf.toString();\n          } else if (headerName === "connection") {\n            this.connection += buf.toString();\n          }\n        } else if (key.length === 14 && util.bufferToLowerCasedHeaderName(key) === "content-length") {\n          this.contentLength += buf.toString();\n        }\n        this.trackHeader(buf.length);\n      }\n      trackHeader(len) {\n        this.headersSize += len;\n        if (this.headersSize >= this.headersMaxSize) {\n          util.destroy(this.socket\x2C new HeadersOverflowError());\n        }\n      }\n      onUpgrade(head) {\n        const { upgrade\x2C client\x2C socket\x2C headers\x2C statusCode } = this;\n        assert(upgrade);\n        assert(client[kSocket] === socket);\n        assert(!socket.destroyed);\n        assert(!this.paused);\n        assert((headers.length & 1) === 0);\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(request.upgrade || request.method === "CONNECT");\n        this.statusCode = null;\n        this.statusText = "";\n        this.shouldKeepAlive = null;\n        this.headers = [];\n        this.headersSize = 0;\n        socket.unshift(head);\n        socket[kParser].destroy();\n        socket[kParser] = null;\n        socket[kClient] = null;\n        socket[kError] = null;\n        removeAllListeners(socket);\n        client[kSocket] = null;\n        client[kHTTPContext] = null;\n        client[kQueue][client[kRunningIdx]++] = null;\n        client.emit("disconnect"\x2C client[kUrl]\x2C [client]\x2C new InformationalError("upgrade"));\n        try {\n          request.onUpgrade(statusCode\x2C headers\x2C socket);\n        } catch (err) {\n          util.destroy(socket\x2C err);\n        }\n        client[kResume]();\n      }\n      onHeadersComplete(statusCode\x2C upgrade\x2C shouldKeepAlive) {\n        const { client\x2C socket\x2C headers\x2C statusText } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        if (!request) {\n          return -1;\n        }\n        assert(!this.upgrade);\n        assert(this.statusCode < 200);\n        if (statusCode === 100) {\n          util.destroy(socket\x2C new SocketError("bad response"\x2C util.getSocketInfo(socket)));\n          return -1;\n        }\n        if (upgrade && !request.upgrade) {\n          util.destroy(socket\x2C new SocketError("bad upgrade"\x2C util.getSocketInfo(socket)));\n          return -1;\n        }\n        assert(this.timeoutType === TIMEOUT_HEADERS);\n        this.statusCode = statusCode;\n        this.shouldKeepAlive = shouldKeepAlive || // Override llhttp value which does not allow keepAlive for HEAD.\n        request.method === "HEAD" && !socket[kReset] && this.connection.toLowerCase() === "keep-alive";\n        if (this.statusCode >= 200) {\n          const bodyTimeout = request.bodyTimeout != null ? request.bodyTimeout : client[kBodyTimeout];\n          this.setTimeout(bodyTimeout\x2C TIMEOUT_BODY);\n        } else if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        if (request.method === "CONNECT") {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        if (upgrade) {\n          assert(client[kRunning] === 1);\n          this.upgrade = true;\n          return 2;\n        }\n        assert((this.headers.length & 1) === 0);\n        this.headers = [];\n        this.headersSize = 0;\n        if (this.shouldKeepAlive && client[kPipelining]) {\n          const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null;\n          if (keepAliveTimeout != null) {\n            const timeout = Math.min(\n              keepAliveTimeout - client[kKeepAliveTimeoutThreshold]\x2C\n              client[kKeepAliveMaxTimeout]\n            );\n            if (timeout <= 0) {\n              socket[kReset] = true;\n            } else {\n              client[kKeepAliveTimeoutValue] = timeout;\n            }\n          } else {\n            client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout];\n          }\n        } else {\n          socket[kReset] = true;\n        }\n        const pause = request.onHeaders(statusCode\x2C headers\x2C this.resume\x2C statusText) === false;\n        if (request.aborted) {\n          return -1;\n        }\n        if (request.method === "HEAD") {\n          return 1;\n        }\n        if (statusCode < 200) {\n          return 1;\n        }\n        if (socket[kBlocking]) {\n          socket[kBlocking] = false;\n          client[kResume]();\n        }\n        return pause ? constants.ERROR.PAUSED : 0;\n      }\n      onBody(buf) {\n        const { client\x2C socket\x2C statusCode\x2C maxResponseSize } = this;\n        if (socket.destroyed) {\n          return -1;\n        }\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        assert(this.timeoutType === TIMEOUT_BODY);\n        if (this.timeout) {\n          if (this.timeout.refresh) {\n            this.timeout.refresh();\n          }\n        }\n        assert(statusCode >= 200);\n        if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n          util.destroy(socket\x2C new ResponseExceededMaxSizeError());\n          return -1;\n        }\n        this.bytesRead += buf.length;\n        if (request.onData(buf) === false) {\n          return constants.ERROR.PAUSED;\n        }\n      }\n      onMessageComplete() {\n        const { client\x2C socket\x2C statusCode\x2C upgrade\x2C headers\x2C contentLength\x2C bytesRead\x2C shouldKeepAlive } = this;\n        if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n          return -1;\n        }\n        if (upgrade) {\n          return;\n        }\n        assert(statusCode >= 100);\n        assert((this.headers.length & 1) === 0);\n        const request = client[kQueue][client[kRunningIdx]];\n        assert(request);\n        this.statusCode = null;\n        this.statusText = "";\n        this.bytesRead = 0;\n        this.contentLength = "";\n        this.keepAlive = "";\n        this.connection = "";\n        this.headers = [];\n        this.headersSize = 0;\n        if (statusCode < 200) {\n          return;\n        }\n        if (request.method !== "HEAD" && contentLength && bytesRead !== parseInt(contentLength\x2C 10)) {\n          util.destroy(socket\x2C new ResponseContentLengthMismatchError());\n          return -1;\n        }\n        request.onComplete(headers);\n        client[kQueue][client[kRunningIdx]++] = null;\n        if (socket[kWriting]) {\n          assert(client[kRunning] === 0);\n          util.destroy(socket\x2C new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (!shouldKeepAlive) {\n          util.destroy(socket\x2C new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (socket[kReset] && client[kRunning] === 0) {\n          util.destroy(socket\x2C new InformationalError("reset"));\n          return constants.ERROR.PAUSED;\n        } else if (client[kPipelining] == null || client[kPipelining] === 1) {\n          setImmediate(() => client[kResume]());\n        } else {\n          client[kResume]();\n        }\n      }\n    };\n    function onParserTimeout(parser) {\n      const { socket\x2C timeoutType\x2C client\x2C paused } = parser.deref();\n      if (timeoutType === TIMEOUT_HEADERS) {\n        if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n          assert(!paused\x2C "cannot be paused while waiting for headers");\n          util.destroy(socket\x2C new HeadersTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_BODY) {\n        if (!paused) {\n          util.destroy(socket\x2C new BodyTimeoutError());\n        }\n      } else if (timeoutType === TIMEOUT_KEEP_ALIVE) {\n        assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue]);\n        util.destroy(socket\x2C new InformationalError("socket idle timeout"));\n      }\n    }\n    __name(onParserTimeout\x2C "onParserTimeout");\n    async function connectH1(client\x2C socket) {\n      client[kSocket] = socket;\n      if (!llhttpInstance) {\n        llhttpInstance = await llhttpPromise;\n        llhttpPromise = null;\n      }\n      socket[kNoRef] = false;\n      socket[kWriting] = false;\n      socket[kReset] = false;\n      socket[kBlocking] = false;\n      socket[kParser] = new Parser(client\x2C socket\x2C llhttpInstance);\n      addListener(socket\x2C "error"\x2C function(err) {\n        assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");\n        const parser = this[kParser];\n        if (err.code === "ECONNRESET" && parser.statusCode && !parser.shouldKeepAlive) {\n          parser.onMessageComplete();\n          return;\n        }\n        this[kError] = err;\n        this[kClient][kOnError](err);\n      });\n      addListener(socket\x2C "readable"\x2C function() {\n        const parser = this[kParser];\n        if (parser) {\n          parser.readMore();\n        }\n      });\n      addListener(socket\x2C "end"\x2C function() {\n        const parser = this[kParser];\n        if (parser.statusCode && !parser.shouldKeepAlive) {\n          parser.onMessageComplete();\n          return;\n        }\n        util.destroy(this\x2C new SocketError("other side closed"\x2C util.getSocketInfo(this)));\n      });\n      addListener(socket\x2C "close"\x2C function() {\n        const client2 = this[kClient];\n        const parser = this[kParser];\n        if (parser) {\n          if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {\n            parser.onMessageComplete();\n          }\n          this[kParser].destroy();\n          this[kParser] = null;\n        }\n        const err = this[kError] || new SocketError("closed"\x2C util.getSocketInfo(this));\n        client2[kSocket] = null;\n        client2[kHTTPContext] = null;\n        if (client2.destroyed) {\n          assert(client2[kPending] === 0);\n          const requests = client2[kQueue].splice(client2[kRunningIdx]);\n          for (let i = 0; i < requests.length; i++) {\n            const request = requests[i];\n            util.errorRequest(client2\x2C request\x2C err);\n          }\n        } else if (client2[kRunning] > 0 && err.code !== "UND_ERR_INFO") {\n          const request = client2[kQueue][client2[kRunningIdx]];\n          client2[kQueue][client2[kRunningIdx]++] = null;\n          util.errorRequest(client2\x2C request\x2C err);\n        }\n        client2[kPendingIdx] = client2[kRunningIdx];\n        assert(client2[kRunning] === 0);\n        client2.emit("disconnect"\x2C client2[kUrl]\x2C [client2]\x2C err);\n        client2[kResume]();\n      });\n      let closed = false;\n      socket.on("close"\x2C () => {\n        closed = true;\n      });\n      return {\n        version: "h1"\x2C\n        defaultPipelining: 1\x2C\n        write(...args) {\n          return writeH1(client\x2C ...args);\n        }\x2C\n        resume() {\n          resumeH1(client);\n        }\x2C\n        destroy(err\x2C callback) {\n          if (closed) {\n            queueMicrotask(callback);\n          } else {\n            socket.destroy(err).on("close"\x2C callback);\n          }\n        }\x2C\n        get destroyed() {\n          return socket.destroyed;\n        }\x2C\n        busy(request) {\n          if (socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n            return true;\n          }\n          if (request) {\n            if (client[kRunning] > 0 && !request.idempotent) {\n              return true;\n            }\n            if (client[kRunning] > 0 && (request.upgrade || request.method === "CONNECT")) {\n              return true;\n            }\n            if (client[kRunning] > 0 && util.bodyLength(request.body) !== 0 && (util.isStream(request.body) || util.isAsyncIterable(request.body) || util.isFormDataLike(request.body))) {\n              return true;\n            }\n          }\n          return false;\n        }\n      };\n    }\n    __name(connectH1\x2C "connectH1");\n    function resumeH1(client) {\n      const socket = client[kSocket];\n      if (socket && !socket.destroyed) {\n        if (client[kSize] === 0) {\n          if (!socket[kNoRef] && socket.unref) {\n            socket.unref();\n            socket[kNoRef] = true;\n          }\n        } else if (socket[kNoRef] && socket.ref) {\n          socket.ref();\n          socket[kNoRef] = false;\n        }\n        if (client[kSize] === 0) {\n          if (socket[kParser].timeoutType !== TIMEOUT_KEEP_ALIVE) {\n            socket[kParser].setTimeout(client[kKeepAliveTimeoutValue]\x2C TIMEOUT_KEEP_ALIVE);\n          }\n        } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n          if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n            const request = client[kQueue][client[kRunningIdx]];\n            const headersTimeout = request.headersTimeout != null ? request.headersTimeout : client[kHeadersTimeout];\n            socket[kParser].setTimeout(headersTimeout\x2C TIMEOUT_HEADERS);\n          }\n        }\n      }\n    }\n    __name(resumeH1\x2C "resumeH1");\n    function shouldSendContentLength(method) {\n      return method !== "GET" && method !== "HEAD" && method !== "OPTIONS" && method !== "TRACE" && method !== "CONNECT";\n    }\n    __name(shouldSendContentLength\x2C "shouldSendContentLength");\n    function writeH1(client\x2C request) {\n      const { method\x2C path\x2C host\x2C upgrade\x2C blocking\x2C reset } = request;\n      let { body\x2C headers\x2C contentLength } = request;\n      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH" || method === "QUERY" || method === "PROPFIND" || method === "PROPPATCH";\n      if (util.isFormDataLike(body)) {\n        if (!extractBody) {\n          extractBody = require_body().extractBody;\n        }\n        const [bodyStream\x2C contentType] = extractBody(body);\n        if (request.contentType == null) {\n          headers.push("content-type"\x2C contentType);\n        }\n        body = bodyStream.stream;\n        contentLength = bodyStream.length;\n      } else if (util.isBlobLike(body) && request.contentType == null && body.type) {\n        headers.push("content-type"\x2C body.type);\n      }\n      if (body && typeof body.read === "function") {\n        body.read(0);\n      }\n      const bodyLength = util.bodyLength(body);\n      contentLength = bodyLength ?? contentLength;\n      if (contentLength === null) {\n        contentLength = request.contentLength;\n      }\n      if (contentLength === 0 && !expectsPayload) {\n        contentLength = null;\n      }\n      if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength !== null && request.contentLength !== contentLength) {\n        if (client[kStrictContentLength]) {\n          util.errorRequest(client\x2C request\x2C new RequestContentLengthMismatchError());\n          return false;\n        }\n        process.emitWarning(new RequestContentLengthMismatchError());\n      }\n      const socket = client[kSocket];\n      const abort = /* @__PURE__ */ __name((err) => {\n        if (request.aborted || request.completed) {\n          return;\n        }\n        util.errorRequest(client\x2C request\x2C err || new RequestAbortedError());\n        util.destroy(body);\n        util.destroy(socket\x2C new InformationalError("aborted"));\n      }\x2C "abort");\n      try {\n        request.onConnect(abort);\n      } catch (err) {\n        util.errorRequest(client\x2C request\x2C err);\n      }\n      if (request.aborted) {\n        return false;\n      }\n      if (method === "HEAD") {\n        socket[kReset] = true;\n      }\n      if (upgrade || method === "CONNECT") {\n        socket[kReset] = true;\n      }\n      if (reset != null) {\n        socket[kReset] = reset;\n      }\n      if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n        socket[kReset] = true;\n      }\n      if (blocking) {\n        socket[kBlocking] = true;\n      }\n      let header = `${method} ${path} HTTP/1.1\\r\n`;\n      if (typeof host === "string") {\n        header += `host: ${host}\\r\n`;\n      } else {\n        header += client[kHostHeader];\n      }\n      if (upgrade) {\n        header += `connection: upgrade\\r\nupgrade: ${upgrade}\\r\n`;\n      } else if (client[kPipelining] && !socket[kReset]) {\n        header += "connection: keep-alive\\r\\n";\n      } else {\n        header += "connection: close\\r\\n";\n      }\n      if (Array.isArray(headers)) {\n        for (let n = 0; n < headers.length; n += 2) {\n          const key = headers[n + 0];\n          const val = headers[n + 1];\n          if (Array.isArray(val)) {\n            for (let i = 0; i < val.length; i++) {\n              header += `${key}: ${val[i]}\\r\n`;\n            }\n          } else {\n            header += `${key}: ${val}\\r\n`;\n          }\n        }\n      }\n      if (channels.sendHeaders.hasSubscribers) {\n        channels.sendHeaders.publish({ request\x2C headers: header\x2C socket });\n      }\n      if (!body || bodyLength === 0) {\n        writeBuffer(abort\x2C null\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n      } else if (util.isBuffer(body)) {\n        writeBuffer(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n      } else if (util.isBlobLike(body)) {\n        if (typeof body.stream === "function") {\n          writeIterable(abort\x2C body.stream()\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n        } else {\n          writeBlob(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n        }\n      } else if (util.isStream(body)) {\n        writeStream(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n      } else if (util.isIterable(body)) {\n        writeIterable(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload);\n      } else {\n        assert(false);\n      }\n      return true;\n    }\n    __name(writeH1\x2C "writeH1");\n    function writeStream(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload) {\n      assert(contentLength !== 0 || client[kRunning] === 0\x2C "stream body cannot be pipelined");\n      let finished = false;\n      const writer = new AsyncWriter({ abort\x2C socket\x2C request\x2C contentLength\x2C client\x2C expectsPayload\x2C header });\n      const onData = /* @__PURE__ */ __name(function(chunk) {\n        if (finished) {\n          return;\n        }\n        try {\n          if (!writer.write(chunk) && this.pause) {\n            this.pause();\n          }\n        } catch (err) {\n          util.destroy(this\x2C err);\n        }\n      }\x2C "onData");\n      const onDrain = /* @__PURE__ */ __name(function() {\n        if (finished) {\n          return;\n        }\n        if (body.resume) {\n          body.resume();\n        }\n      }\x2C "onDrain");\n      const onClose = /* @__PURE__ */ __name(function() {\n        queueMicrotask(() => {\n          body.removeListener("error"\x2C onFinished);\n        });\n        if (!finished) {\n          const err = new RequestAbortedError();\n          queueMicrotask(() => onFinished(err));\n        }\n      }\x2C "onClose");\n      const onFinished = /* @__PURE__ */ __name(function(err) {\n        if (finished) {\n          return;\n        }\n        finished = true;\n        assert(socket.destroyed || socket[kWriting] && client[kRunning] <= 1);\n        socket.off("drain"\x2C onDrain).off("error"\x2C onFinished);\n        body.removeListener("data"\x2C onData).removeListener("end"\x2C onFinished).removeListener("close"\x2C onClose);\n        if (!err) {\n          try {\n            writer.end();\n          } catch (er) {\n            err = er;\n          }\n        }\n        writer.destroy(err);\n        if (err && (err.code !== "UND_ERR_INFO" || err.message !== "reset")) {\n          util.destroy(body\x2C err);\n        } else {\n          util.destroy(body);\n        }\n      }\x2C "onFinished");\n      body.on("data"\x2C onData).on("end"\x2C onFinished).on("error"\x2C onFinished).on("close"\x2C onClose);\n      if (body.resume) {\n        body.resume();\n      }\n      socket.on("drain"\x2C onDrain).on("error"\x2C onFinished);\n      if (body.errorEmitted ?? body.errored) {\n        setImmediate(() => onFinished(body.errored));\n      } else if (body.endEmitted ?? body.readableEnded) {\n        setImmediate(() => onFinished(null));\n      }\n      if (body.closeEmitted ?? body.closed) {\n        setImmediate(onClose);\n      }\n    }\n    __name(writeStream\x2C "writeStream");\n    function writeBuffer(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload) {\n      try {\n        if (!body) {\n          if (contentLength === 0) {\n            socket.write(`${header}content-length: 0\\r\n\\r\n`\x2C "latin1");\n          } else {\n            assert(contentLength === null\x2C "no body must not have content length");\n            socket.write(`${header}\\r\n`\x2C "latin1");\n          }\n        } else if (util.isBuffer(body)) {\n          assert(contentLength === body.byteLength\x2C "buffer body must have content length");\n          socket.cork();\n          socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`\x2C "latin1");\n          socket.write(body);\n          socket.uncork();\n          request.onBodySent(body);\n          if (!expectsPayload && request.reset !== false) {\n            socket[kReset] = true;\n          }\n        }\n        request.onRequestSent();\n        client[kResume]();\n      } catch (err) {\n        abort(err);\n      }\n    }\n    __name(writeBuffer\x2C "writeBuffer");\n    async function writeBlob(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload) {\n      assert(contentLength === body.size\x2C "blob body must have content length");\n      try {\n        if (contentLength != null && contentLength !== body.size) {\n          throw new RequestContentLengthMismatchError();\n        }\n        const buffer = Buffer.from(await body.arrayBuffer());\n        socket.cork();\n        socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`\x2C "latin1");\n        socket.write(buffer);\n        socket.uncork();\n        request.onBodySent(buffer);\n        request.onRequestSent();\n        if (!expectsPayload && request.reset !== false) {\n          socket[kReset] = true;\n        }\n        client[kResume]();\n      } catch (err) {\n        abort(err);\n      }\n    }\n    __name(writeBlob\x2C "writeBlob");\n    async function writeIterable(abort\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C header\x2C expectsPayload) {\n      assert(contentLength !== 0 || client[kRunning] === 0\x2C "iterator body cannot be pipelined");\n      let callback = null;\n      function onDrain() {\n        if (callback) {\n          const cb = callback;\n          callback = null;\n          cb();\n        }\n      }\n      __name(onDrain\x2C "onDrain");\n      const waitForDrain = /* @__PURE__ */ __name(() => new Promise((resolve\x2C reject) => {\n        assert(callback === null);\n        if (socket[kError]) {\n          reject(socket[kError]);\n        } else {\n          callback = resolve;\n        }\n      })\x2C "waitForDrain");\n      socket.on("close"\x2C onDrain).on("drain"\x2C onDrain);\n      const writer = new AsyncWriter({ abort\x2C socket\x2C request\x2C contentLength\x2C client\x2C expectsPayload\x2C header });\n      try {\n        for await (const chunk of body) {\n          if (socket[kError]) {\n            throw socket[kError];\n          }\n          if (!writer.write(chunk)) {\n            await waitForDrain();\n          }\n        }\n        writer.end();\n      } catch (err) {\n        writer.destroy(err);\n      } finally {\n        socket.off("close"\x2C onDrain).off("drain"\x2C onDrain);\n      }\n    }\n    __name(writeIterable\x2C "writeIterable");\n    var AsyncWriter = class {\n      static {\n        __name(this\x2C "AsyncWriter");\n      }\n      constructor({ abort\x2C socket\x2C request\x2C contentLength\x2C client\x2C expectsPayload\x2C header }) {\n        this.socket = socket;\n        this.request = request;\n        this.contentLength = contentLength;\n        this.client = client;\n        this.bytesWritten = 0;\n        this.expectsPayload = expectsPayload;\n        this.header = header;\n        this.abort = abort;\n        socket[kWriting] = true;\n      }\n      write(chunk) {\n        const { socket\x2C request\x2C contentLength\x2C client\x2C bytesWritten\x2C expectsPayload\x2C header } = this;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return false;\n        }\n        const len = Buffer.byteLength(chunk);\n        if (!len) {\n          return true;\n        }\n        if (contentLength !== null && bytesWritten + len > contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          }\n          process.emitWarning(new RequestContentLengthMismatchError());\n        }\n        socket.cork();\n        if (bytesWritten === 0) {\n          if (!expectsPayload && request.reset !== false) {\n            socket[kReset] = true;\n          }\n          if (contentLength === null) {\n            socket.write(`${header}transfer-encoding: chunked\\r\n`\x2C "latin1");\n          } else {\n            socket.write(`${header}content-length: ${contentLength}\\r\n\\r\n`\x2C "latin1");\n          }\n        }\n        if (contentLength === null) {\n          socket.write(`\\r\n${len.toString(16)}\\r\n`\x2C "latin1");\n        }\n        this.bytesWritten += len;\n        const ret = socket.write(chunk);\n        socket.uncork();\n        request.onBodySent(chunk);\n        if (!ret) {\n          if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n            if (socket[kParser].timeout.refresh) {\n              socket[kParser].timeout.refresh();\n            }\n          }\n        }\n        return ret;\n      }\n      end() {\n        const { socket\x2C contentLength\x2C client\x2C bytesWritten\x2C expectsPayload\x2C header\x2C request } = this;\n        request.onRequestSent();\n        socket[kWriting] = false;\n        if (socket[kError]) {\n          throw socket[kError];\n        }\n        if (socket.destroyed) {\n          return;\n        }\n        if (bytesWritten === 0) {\n          if (expectsPayload) {\n            socket.write(`${header}content-length: 0\\r\n\\r\n`\x2C "latin1");\n          } else {\n            socket.write(`${header}\\r\n`\x2C "latin1");\n          }\n        } else if (contentLength === null) {\n          socket.write("\\r\\n0\\r\\n\\r\\n"\x2C "latin1");\n        }\n        if (contentLength !== null && bytesWritten !== contentLength) {\n          if (client[kStrictContentLength]) {\n            throw new RequestContentLengthMismatchError();\n          } else {\n            process.emitWarning(new RequestContentLengthMismatchError());\n          }\n        }\n        if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n          if (socket[kParser].timeout.refresh) {\n            socket[kParser].timeout.refresh();\n          }\n        }\n        client[kResume]();\n      }\n      destroy(err) {\n        const { socket\x2C client\x2C abort } = this;\n        socket[kWriting] = false;\n        if (err) {\n          assert(client[kRunning] <= 1\x2C "pipeline should only contain this request");\n          abort(err);\n        }\n      }\n    };\n    module2.exports = connectH1;\n  }\n});\n\n// lib/dispatcher/client-h2.js\nvar require_client_h2 = __commonJS({\n  "lib/dispatcher/client-h2.js"(exports2\x2C module2) {\n    "use strict";\n    var assert = require("node:assert");\n    var { pipeline } = require("node:stream");\n    var util = require_util();\n    var {\n      RequestContentLengthMismatchError\x2C\n      RequestAbortedError\x2C\n      SocketError\x2C\n      InformationalError\n    } = require_errors();\n    var {\n      kUrl\x2C\n      kReset\x2C\n      kClient\x2C\n      kRunning\x2C\n      kPending\x2C\n      kQueue\x2C\n      kPendingIdx\x2C\n      kRunningIdx\x2C\n      kError\x2C\n      kSocket\x2C\n      kStrictContentLength\x2C\n      kOnError\x2C\n      kMaxConcurrentStreams\x2C\n      kHTTP2Session\x2C\n      kResume\x2C\n      kSize\x2C\n      kHTTPContext\n    } = require_symbols();\n    var kOpenStreams = Symbol("open streams");\n    var h2ExperimentalWarned = false;\n    var http2;\n    try {\n      http2 = require("node:http2");\n    } catch {\n      http2 = { constants: {} };\n    }\n    var {\n      constants: {\n        HTTP2_HEADER_AUTHORITY\x2C\n        HTTP2_HEADER_METHOD\x2C\n        HTTP2_HEADER_PATH\x2C\n        HTTP2_HEADER_SCHEME\x2C\n        HTTP2_HEADER_CONTENT_LENGTH\x2C\n        HTTP2_HEADER_EXPECT\x2C\n        HTTP2_HEADER_STATUS\n      }\n    } = http2;\n    function parseH2Headers(headers) {\n      const result = [];\n      for (const [name\x2C value] of Object.entries(headers)) {\n        if (Array.isArray(value)) {\n          for (const subvalue of value) {\n            result.push(Buffer.from(name)\x2C Buffer.from(subvalue));\n          }\n        } else {\n          result.push(Buffer.from(name)\x2C Buffer.from(value));\n        }\n      }\n      return result;\n    }\n    __name(parseH2Headers\x2C "parseH2Headers");\n    async function connectH2(client\x2C socket) {\n      client[kSocket] = socket;\n      if (!h2ExperimentalWarned) {\n        h2ExperimentalWarned = true;\n        process.emitWarning("H2 support is experimental\x2C expect them to change at any time."\x2C {\n          code: "UNDICI-H2"\n        });\n      }\n      const session = http2.connect(client[kUrl]\x2C {\n        createConnection: () => socket\x2C\n        peerMaxConcurrentStreams: client[kMaxConcurrentStreams]\n      });\n      session[kOpenStreams] = 0;\n      session[kClient] = client;\n      session[kSocket] = socket;\n      util.addListener(session\x2C "error"\x2C onHttp2SessionError);\n      util.addListener(session\x2C "frameError"\x2C onHttp2FrameError);\n      util.addListener(session\x2C "end"\x2C onHttp2SessionEnd);\n      util.addListener(session\x2C "goaway"\x2C onHTTP2GoAway);\n      util.addListener(session\x2C "close"\x2C function() {\n        const { [kClient]: client2 } = this;\n        const { [kSocket]: socket2 } = client2;\n        const err = this[kSocket][kError] || this[kError] || new SocketError("closed"\x2C util.getSocketInfo(socket2));\n        client2[kHTTP2Session] = null;\n        if (client2.destroyed) {\n          assert(client2[kPending] === 0);\n          const requests = client2[kQueue].splice(client2[kRunningIdx]);\n          for (let i = 0; i < requests.length; i++) {\n            const request = requests[i];\n            util.errorRequest(client2\x2C request\x2C err);\n          }\n        }\n      });\n      session.unref();\n      client[kHTTP2Session] = session;\n      socket[kHTTP2Session] = session;\n      util.addListener(socket\x2C "error"\x2C function(err) {\n        assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");\n        this[kError] = err;\n        this[kClient][kOnError](err);\n      });\n      util.addListener(socket\x2C "end"\x2C function() {\n        util.destroy(this\x2C new SocketError("other side closed"\x2C util.getSocketInfo(this)));\n      });\n      util.addListener(socket\x2C "close"\x2C function() {\n        const err = this[kError] || new SocketError("closed"\x2C util.getSocketInfo(this));\n        client[kSocket] = null;\n        if (this[kHTTP2Session] != null) {\n          this[kHTTP2Session].destroy(err);\n        }\n        client[kPendingIdx] = client[kRunningIdx];\n        assert(client[kRunning] === 0);\n        client.emit("disconnect"\x2C client[kUrl]\x2C [client]\x2C err);\n        client[kResume]();\n      });\n      let closed = false;\n      socket.on("close"\x2C () => {\n        closed = true;\n      });\n      return {\n        version: "h2"\x2C\n        defaultPipelining: Infinity\x2C\n        write(...args) {\n          return writeH2(client\x2C ...args);\n        }\x2C\n        resume() {\n          resumeH2(client);\n        }\x2C\n        destroy(err\x2C callback) {\n          if (closed) {\n            queueMicrotask(callback);\n          } else {\n            socket.destroy(err).on("close"\x2C callback);\n          }\n        }\x2C\n        get destroyed() {\n          return socket.destroyed;\n        }\x2C\n        busy() {\n          return false;\n        }\n      };\n    }\n    __name(connectH2\x2C "connectH2");\n    function resumeH2(client) {\n      const socket = client[kSocket];\n      if (socket?.destroyed === false) {\n        if (client[kSize] === 0 && client[kMaxConcurrentStreams] === 0) {\n          socket.unref();\n          client[kHTTP2Session].unref();\n        } else {\n          socket.ref();\n          client[kHTTP2Session].ref();\n        }\n      }\n    }\n    __name(resumeH2\x2C "resumeH2");\n    function onHttp2SessionError(err) {\n      assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");\n      this[kSocket][kError] = err;\n      this[kClient][kOnError](err);\n    }\n    __name(onHttp2SessionError\x2C "onHttp2SessionError");\n    function onHttp2FrameError(type\x2C code\x2C id) {\n      if (id === 0) {\n        const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}\x2C code ${code}`);\n        this[kSocket][kError] = err;\n        this[kClient][kOnError](err);\n      }\n    }\n    __name(onHttp2FrameError\x2C "onHttp2FrameError");\n    function onHttp2SessionEnd() {\n      const err = new SocketError("other side closed"\x2C util.getSocketInfo(this[kSocket]));\n      this.destroy(err);\n      util.destroy(this[kSocket]\x2C err);\n    }\n    __name(onHttp2SessionEnd\x2C "onHttp2SessionEnd");\n    function onHTTP2GoAway(code) {\n      const err = this[kError] || new SocketError(`HTTP/2: "GOAWAY" frame received with code ${code}`\x2C util.getSocketInfo(this));\n      const client = this[kClient];\n      client[kSocket] = null;\n      client[kHTTPContext] = null;\n      if (this[kHTTP2Session] != null) {\n        this[kHTTP2Session].destroy(err);\n        this[kHTTP2Session] = null;\n      }\n      util.destroy(this[kSocket]\x2C err);\n      const request = client[kQueue][client[kRunningIdx]];\n      client[kQueue][client[kRunningIdx]++] = null;\n      util.errorRequest(client\x2C request\x2C err);\n      client[kPendingIdx] = client[kRunningIdx];\n      assert(client[kRunning] === 0);\n      client.emit("disconnect"\x2C client[kUrl]\x2C [client]\x2C err);\n      client[kResume]();\n    }\n    __name(onHTTP2GoAway\x2C "onHTTP2GoAway");\n    function shouldSendContentLength(method) {\n      return method !== "GET" && method !== "HEAD" && method !== "OPTIONS" && method !== "TRACE" && method !== "CONNECT";\n    }\n    __name(shouldSendContentLength\x2C "shouldSendContentLength");\n    function writeH2(client\x2C request) {\n      const session = client[kHTTP2Session];\n      const { body\x2C method\x2C path\x2C host\x2C upgrade\x2C expectContinue\x2C signal\x2C headers: reqHeaders } = request;\n      if (upgrade) {\n        util.errorRequest(client\x2C request\x2C new Error("Upgrade not supported for H2"));\n        return false;\n      }\n      const headers = {};\n      for (let n = 0; n < reqHeaders.length; n += 2) {\n        const key = reqHeaders[n + 0];\n        const val = reqHeaders[n + 1];\n        if (Array.isArray(val)) {\n          for (let i = 0; i < val.length; i++) {\n            if (headers[key]) {\n              headers[key] += `\x2C${val[i]}`;\n            } else {\n              headers[key] = val[i];\n            }\n          }\n        } else {\n          headers[key] = val;\n        }\n      }\n      let stream;\n      const { hostname\x2C port } = client[kUrl];\n      headers[HTTP2_HEADER_AUTHORITY] = host || `${hostname}${port ? `:${port}` : ""}`;\n      headers[HTTP2_HEADER_METHOD] = method;\n      const abort = /* @__PURE__ */ __name((err) => {\n        if (request.aborted || request.completed) {\n          return;\n        }\n        err = err || new RequestAbortedError();\n        util.errorRequest(client\x2C request\x2C err);\n        if (stream != null) {\n          util.destroy(stream\x2C err);\n        }\n        util.destroy(body\x2C err);\n        client[kQueue][client[kRunningIdx]++] = null;\n        client[kResume]();\n      }\x2C "abort");\n      try {\n        request.onConnect(abort);\n      } catch (err) {\n        util.errorRequest(client\x2C request\x2C err);\n      }\n      if (request.aborted) {\n        return false;\n      }\n      if (method === "CONNECT") {\n        session.ref();\n        stream = session.request(headers\x2C { endStream: false\x2C signal });\n        if (stream.id && !stream.pending) {\n          request.onUpgrade(null\x2C null\x2C stream);\n          ++session[kOpenStreams];\n          client[kQueue][client[kRunningIdx]++] = null;\n        } else {\n          stream.once("ready"\x2C () => {\n            request.onUpgrade(null\x2C null\x2C stream);\n            ++session[kOpenStreams];\n            client[kQueue][client[kRunningIdx]++] = null;\n          });\n        }\n        stream.once("close"\x2C () => {\n          session[kOpenStreams] -= 1;\n          if (session[kOpenStreams] === 0)\n            session.unref();\n        });\n        return true;\n      }\n      headers[HTTP2_HEADER_PATH] = path;\n      headers[HTTP2_HEADER_SCHEME] = "https";\n      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";\n      if (body && typeof body.read === "function") {\n        body.read(0);\n      }\n      let contentLength = util.bodyLength(body);\n      if (contentLength == null) {\n        contentLength = request.contentLength;\n      }\n      if (contentLength === 0 || !expectsPayload) {\n        contentLength = null;\n      }\n      if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength != null && request.contentLength !== contentLength) {\n        if (client[kStrictContentLength]) {\n          util.errorRequest(client\x2C request\x2C new RequestContentLengthMismatchError());\n          return false;\n        }\n        process.emitWarning(new RequestContentLengthMismatchError());\n      }\n      if (contentLength != null) {\n        assert(body\x2C "no body must not have content length");\n        headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`;\n      }\n      session.ref();\n      const shouldEndStream = method === "GET" || method === "HEAD" || body === null;\n      if (expectContinue) {\n        headers[HTTP2_HEADER_EXPECT] = "100-continue";\n        stream = session.request(headers\x2C { endStream: shouldEndStream\x2C signal });\n        stream.once("continue"\x2C writeBodyH2);\n      } else {\n        stream = session.request(headers\x2C {\n          endStream: shouldEndStream\x2C\n          signal\n        });\n        writeBodyH2();\n      }\n      ++session[kOpenStreams];\n      stream.once("response"\x2C (headers2) => {\n        const { [HTTP2_HEADER_STATUS]: statusCode\x2C ...realHeaders } = headers2;\n        request.onResponseStarted();\n        if (request.aborted) {\n          const err = new RequestAbortedError();\n          util.errorRequest(client\x2C request\x2C err);\n          util.destroy(stream\x2C err);\n          return;\n        }\n        if (request.onHeaders(Number(statusCode)\x2C parseH2Headers(realHeaders)\x2C stream.resume.bind(stream)\x2C "") === false) {\n          stream.pause();\n        }\n        stream.on("data"\x2C (chunk) => {\n          if (request.onData(chunk) === false) {\n            stream.pause();\n          }\n        });\n      });\n      stream.once("end"\x2C () => {\n        if (stream.state?.state == null || stream.state.state < 6) {\n          request.onComplete([]);\n        }\n        if (session[kOpenStreams] === 0) {\n          session.unref();\n        }\n        abort(new InformationalError("HTTP/2: stream half-closed (remote)"));\n        client[kQueue][client[kRunningIdx]++] = null;\n        client[kPendingIdx] = client[kRunningIdx];\n        client[kResume]();\n      });\n      stream.once("close"\x2C () => {\n        session[kOpenStreams] -= 1;\n        if (session[kOpenStreams] === 0) {\n          session.unref();\n        }\n      });\n      stream.once("error"\x2C function(err) {\n        abort(err);\n      });\n      stream.once("frameError"\x2C (type\x2C code) => {\n        abort(new InformationalError(`HTTP/2: "frameError" received - type ${type}\x2C code ${code}`));\n      });\n      return true;\n      function writeBodyH2() {\n        if (!body || contentLength === 0) {\n          writeBuffer(\n            abort\x2C\n            stream\x2C\n            null\x2C\n            client\x2C\n            request\x2C\n            client[kSocket]\x2C\n            contentLength\x2C\n            expectsPayload\n          );\n        } else if (util.isBuffer(body)) {\n          writeBuffer(\n            abort\x2C\n            stream\x2C\n            body\x2C\n            client\x2C\n            request\x2C\n            client[kSocket]\x2C\n            contentLength\x2C\n            expectsPayload\n          );\n        } else if (util.isBlobLike(body)) {\n          if (typeof body.stream === "function") {\n            writeIterable(\n              abort\x2C\n              stream\x2C\n              body.stream()\x2C\n              client\x2C\n              request\x2C\n              client[kSocket]\x2C\n              contentLength\x2C\n              expectsPayload\n            );\n          } else {\n            writeBlob(\n              abort\x2C\n              stream\x2C\n              body\x2C\n              client\x2C\n              request\x2C\n              client[kSocket]\x2C\n              contentLength\x2C\n              expectsPayload\n            );\n          }\n        } else if (util.isStream(body)) {\n          writeStream(\n            abort\x2C\n            client[kSocket]\x2C\n            expectsPayload\x2C\n            stream\x2C\n            body\x2C\n            client\x2C\n            request\x2C\n            contentLength\n          );\n        } else if (util.isIterable(body)) {\n          writeIterable(\n            abort\x2C\n            stream\x2C\n            body\x2C\n            client\x2C\n            request\x2C\n            client[kSocket]\x2C\n            contentLength\x2C\n            expectsPayload\n          );\n        } else {\n          assert(false);\n        }\n      }\n      __name(writeBodyH2\x2C "writeBodyH2");\n    }\n    __name(writeH2\x2C "writeH2");\n    function writeBuffer(abort\x2C h2stream\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C expectsPayload) {\n      try {\n        if (body != null && util.isBuffer(body)) {\n          assert(contentLength === body.byteLength\x2C "buffer body must have content length");\n          h2stream.cork();\n          h2stream.write(body);\n          h2stream.uncork();\n          h2stream.end();\n          request.onBodySent(body);\n        }\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n        request.onRequestSent();\n        client[kResume]();\n      } catch (error) {\n        abort(error);\n      }\n    }\n    __name(writeBuffer\x2C "writeBuffer");\n    function writeStream(abort\x2C socket\x2C expectsPayload\x2C h2stream\x2C body\x2C client\x2C request\x2C contentLength) {\n      assert(contentLength !== 0 || client[kRunning] === 0\x2C "stream body cannot be pipelined");\n      const pipe = pipeline(\n        body\x2C\n        h2stream\x2C\n        (err) => {\n          if (err) {\n            util.destroy(pipe\x2C err);\n            abort(err);\n          } else {\n            util.removeAllListeners(pipe);\n            request.onRequestSent();\n            if (!expectsPayload) {\n              socket[kReset] = true;\n            }\n            client[kResume]();\n          }\n        }\n      );\n      util.addListener(pipe\x2C "data"\x2C onPipeData);\n      function onPipeData(chunk) {\n        request.onBodySent(chunk);\n      }\n      __name(onPipeData\x2C "onPipeData");\n    }\n    __name(writeStream\x2C "writeStream");\n    async function writeBlob(abort\x2C h2stream\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C expectsPayload) {\n      assert(contentLength === body.size\x2C "blob body must have content length");\n      try {\n        if (contentLength != null && contentLength !== body.size) {\n          throw new RequestContentLengthMismatchError();\n        }\n        const buffer = Buffer.from(await body.arrayBuffer());\n        h2stream.cork();\n        h2stream.write(buffer);\n        h2stream.uncork();\n        h2stream.end();\n        request.onBodySent(buffer);\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n        client[kResume]();\n      } catch (err) {\n        abort(err);\n      }\n    }\n    __name(writeBlob\x2C "writeBlob");\n    async function writeIterable(abort\x2C h2stream\x2C body\x2C client\x2C request\x2C socket\x2C contentLength\x2C expectsPayload) {\n      assert(contentLength !== 0 || client[kRunning] === 0\x2C "iterator body cannot be pipelined");\n      let callback = null;\n      function onDrain() {\n        if (callback) {\n          const cb = callback;\n          callback = null;\n          cb();\n        }\n      }\n      __name(onDrain\x2C "onDrain");\n      const waitForDrain = /* @__PURE__ */ __name(() => new Promise((resolve\x2C reject) => {\n        assert(callback === null);\n        if (socket[kError]) {\n          reject(socket[kError]);\n        } else {\n          callback = resolve;\n        }\n      })\x2C "waitForDrain");\n      h2stream.on("close"\x2C onDrain).on("drain"\x2C onDrain);\n      try {\n        for await (const chunk of body) {\n          if (socket[kError]) {\n            throw socket[kError];\n          }\n          const res = h2stream.write(chunk);\n          request.onBodySent(chunk);\n          if (!res) {\n            await waitForDrain();\n          }\n        }\n        h2stream.end();\n        request.onRequestSent();\n        if (!expectsPayload) {\n          socket[kReset] = true;\n        }\n        client[kResume]();\n      } catch (err) {\n        abort(err);\n      } finally {\n        h2stream.off("close"\x2C onDrain).off("drain"\x2C onDrain);\n      }\n    }\n    __name(writeIterable\x2C "writeIterable");\n    module2.exports = connectH2;\n  }\n});\n\n// lib/handler/redirect-handler.js\nvar require_redirect_handler = __commonJS({\n  "lib/handler/redirect-handler.js"(exports2\x2C module2) {\n    "use strict";\n    var util = require_util();\n    var { kBodyUsed } = require_symbols();\n    var assert = require("node:assert");\n    var { InvalidArgumentError } = require_errors();\n    var EE = require("node:events");\n    var redirectableStatusCodes = [300\x2C 301\x2C 302\x2C 303\x2C 307\x2C 308];\n    var kBody = Symbol("body");\n    var BodyAsyncIterable = class {\n      static {\n        __name(this\x2C "BodyAsyncIterable");\n      }\n      constructor(body) {\n        this[kBody] = body;\n        this[kBodyUsed] = false;\n      }\n      async *[Symbol.asyncIterator]() {\n        assert(!this[kBodyUsed]\x2C "disturbed");\n        this[kBodyUsed] = true;\n        yield* this[kBody];\n      }\n    };\n    var RedirectHandler = class {\n      static {\n        __name(this\x2C "RedirectHandler");\n      }\n      constructor(dispatch\x2C maxRedirections\x2C opts\x2C handler) {\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError("maxRedirections must be a positive number");\n        }\n        util.validateHandler(handler\x2C opts.method\x2C opts.upgrade);\n        this.dispatch = dispatch;\n        this.location = null;\n        this.abort = null;\n        this.opts = { ...opts\x2C maxRedirections: 0 };\n        this.maxRedirections = maxRedirections;\n        this.handler = handler;\n        this.history = [];\n        this.redirectionLimitReached = false;\n        if (util.isStream(this.opts.body)) {\n          if (util.bodyLength(this.opts.body) === 0) {\n            this.opts.body.on("data"\x2C function() {\n              assert(false);\n            });\n          }\n          if (typeof this.opts.body.readableDidRead !== "boolean") {\n            this.opts.body[kBodyUsed] = false;\n            EE.prototype.on.call(this.opts.body\x2C "data"\x2C function() {\n              this[kBodyUsed] = true;\n            });\n          }\n        } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && util.isIterable(this.opts.body)) {\n          this.opts.body = new BodyAsyncIterable(this.opts.body);\n        }\n      }\n      onConnect(abort) {\n        this.abort = abort;\n        this.handler.onConnect(abort\x2C { history: this.history });\n      }\n      onUpgrade(statusCode\x2C headers\x2C socket) {\n        this.handler.onUpgrade(statusCode\x2C headers\x2C socket);\n      }\n      onError(error) {\n        this.handler.onError(error);\n      }\n      onHeaders(statusCode\x2C headers\x2C resume\x2C statusText) {\n        this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body) ? null : parseLocation(statusCode\x2C headers);\n        if (this.opts.throwOnMaxRedirect && this.history.length >= this.maxRedirections) {\n          if (this.request) {\n            this.request.abort(new Error("max redirects"));\n          }\n          this.redirectionLimitReached = true;\n          this.abort(new Error("max redirects"));\n          return;\n        }\n        if (this.opts.origin) {\n          this.history.push(new URL(this.opts.path\x2C this.opts.origin));\n        }\n        if (!this.location) {\n          return this.handler.onHeaders(statusCode\x2C headers\x2C resume\x2C statusText);\n        }\n        const { origin\x2C pathname\x2C search } = util.parseURL(new URL(this.location\x2C this.opts.origin && new URL(this.opts.path\x2C this.opts.origin)));\n        const path = search ? `${pathname}${search}` : pathname;\n        this.opts.headers = cleanRequestHeaders(this.opts.headers\x2C statusCode === 303\x2C this.opts.origin !== origin);\n        this.opts.path = path;\n        this.opts.origin = origin;\n        this.opts.maxRedirections = 0;\n        this.opts.query = null;\n        if (statusCode === 303 && this.opts.method !== "HEAD") {\n          this.opts.method = "GET";\n          this.opts.body = null;\n        }\n      }\n      onData(chunk) {\n        if (this.location) {\n        } else {\n          return this.handler.onData(chunk);\n        }\n      }\n      onComplete(trailers) {\n        if (this.location) {\n          this.location = null;\n          this.abort = null;\n          this.dispatch(this.opts\x2C this);\n        } else {\n          this.handler.onComplete(trailers);\n        }\n      }\n      onBodySent(chunk) {\n        if (this.handler.onBodySent) {\n          this.handler.onBodySent(chunk);\n        }\n      }\n    };\n    function parseLocation(statusCode\x2C headers) {\n      if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n        return null;\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        if (headers[i].length === 8 && util.headerNameToString(headers[i]) === "location") {\n          return headers[i + 1];\n        }\n      }\n    }\n    __name(parseLocation\x2C "parseLocation");\n    function shouldRemoveHeader(header\x2C removeContent\x2C unknownOrigin) {\n      if (header.length === 4) {\n        return util.headerNameToString(header) === "host";\n      }\n      if (removeContent && util.headerNameToString(header).startsWith("content-")) {\n        return true;\n      }\n      if (unknownOrigin && (header.length === 13 || header.length === 6 || header.length === 19)) {\n        const name = util.headerNameToString(header);\n        return name === "authorization" || name === "cookie" || name === "proxy-authorization";\n      }\n      return false;\n    }\n    __name(shouldRemoveHeader\x2C "shouldRemoveHeader");\n    function cleanRequestHeaders(headers\x2C removeContent\x2C unknownOrigin) {\n      const ret = [];\n      if (Array.isArray(headers)) {\n        for (let i = 0; i < headers.length; i += 2) {\n          if (!shouldRemoveHeader(headers[i]\x2C removeContent\x2C unknownOrigin)) {\n            ret.push(headers[i]\x2C headers[i + 1]);\n          }\n        }\n      } else if (headers && typeof headers === "object") {\n        for (const key of Object.keys(headers)) {\n          if (!shouldRemoveHeader(key\x2C removeContent\x2C unknownOrigin)) {\n            ret.push(key\x2C headers[key]);\n          }\n        }\n      } else {\n        assert(headers == null\x2C "headers must be an object or an array");\n      }\n      return ret;\n    }\n    __name(cleanRequestHeaders\x2C "cleanRequestHeaders");\n    module2.exports = RedirectHandler;\n  }\n});\n\n// lib/interceptor/redirect-interceptor.js\nvar require_redirect_interceptor = __commonJS({\n  "lib/interceptor/redirect-interceptor.js"(exports2\x2C module2) {\n    "use strict";\n    var RedirectHandler = require_redirect_handler();\n    function createRedirectInterceptor({ maxRedirections: defaultMaxRedirections }) {\n      return (dispatch) => {\n        return /* @__PURE__ */ __name(function Intercept(opts\x2C handler) {\n          const { maxRedirections = defaultMaxRedirections } = opts;\n          if (!maxRedirections) {\n            return dispatch(opts\x2C handler);\n          }\n          const redirectHandler = new RedirectHandler(dispatch\x2C maxRedirections\x2C opts\x2C handler);\n          opts = { ...opts\x2C maxRedirections: 0 };\n          return dispatch(opts\x2C redirectHandler);\n        }\x2C "Intercept");\n      };\n    }\n    __name(createRedirectInterceptor\x2C "createRedirectInterceptor");\n    module2.exports = createRedirectInterceptor;\n  }\n});\n\n// lib/dispatcher/client.js\nvar require_client = __commonJS({\n  "lib/dispatcher/client.js"(exports2\x2C module2) {\n    "use strict";\n    var assert = require("node:assert");\n    var net = require("node:net");\n    var http = require("node:http");\n    var util = require_util();\n    var { channels } = require_diagnostics();\n    var Request = require_request();\n    var DispatcherBase = require_dispatcher_base();\n    var {\n      InvalidArgumentError\x2C\n      InformationalError\x2C\n      ClientDestroyedError\n    } = require_errors();\n    var buildConnector = require_connect();\n    var {\n      kUrl\x2C\n      kServerName\x2C\n      kClient\x2C\n      kBusy\x2C\n      kConnect\x2C\n      kResuming\x2C\n      kRunning\x2C\n      kPending\x2C\n      kSize\x2C\n      kQueue\x2C\n      kConnected\x2C\n      kConnecting\x2C\n      kNeedDrain\x2C\n      kKeepAliveDefaultTimeout\x2C\n      kHostHeader\x2C\n      kPendingIdx\x2C\n      kRunningIdx\x2C\n      kError\x2C\n      kPipelining\x2C\n      kKeepAliveTimeoutValue\x2C\n      kMaxHeadersSize\x2C\n      kKeepAliveMaxTimeout\x2C\n      kKeepAliveTimeoutThreshold\x2C\n      kHeadersTimeout\x2C\n      kBodyTimeout\x2C\n      kStrictContentLength\x2C\n      kConnector\x2C\n      kMaxRedirections\x2C\n      kMaxRequests\x2C\n      kCounter\x2C\n      kClose\x2C\n      kDestroy\x2C\n      kDispatch\x2C\n      kInterceptors\x2C\n      kLocalAddress\x2C\n      kMaxResponseSize\x2C\n      kOnError\x2C\n      kHTTPContext\x2C\n      kMaxConcurrentStreams\x2C\n      kResume\n    } = require_symbols();\n    var connectH1 = require_client_h1();\n    var connectH2 = require_client_h2();\n    var deprecatedInterceptorWarned = false;\n    var kClosedResolve = Symbol("kClosedResolve");\n    var noop = /* @__PURE__ */ __name(() => {\n    }\x2C "noop");\n    function getPipelining(client) {\n      return client[kPipelining] ?? client[kHTTPContext]?.defaultPipelining ?? 1;\n    }\n    __name(getPipelining\x2C "getPipelining");\n    var Client = class extends DispatcherBase {\n      static {\n        __name(this\x2C "Client");\n      }\n      /**\n       *\n       * @param {string|URL} url\n       * @param {import('../../types/client.js').Client.Options} options\n       */\n      constructor(url\x2C {\n        interceptors\x2C\n        maxHeaderSize\x2C\n        headersTimeout\x2C\n        socketTimeout\x2C\n        requestTimeout\x2C\n        connectTimeout\x2C\n        bodyTimeout\x2C\n        idleTimeout\x2C\n        keepAlive\x2C\n        keepAliveTimeout\x2C\n        maxKeepAliveTimeout\x2C\n        keepAliveMaxTimeout\x2C\n        keepAliveTimeoutThreshold\x2C\n        socketPath\x2C\n        pipelining\x2C\n        tls\x2C\n        strictContentLength\x2C\n        maxCachedSessions\x2C\n        maxRedirections\x2C\n        connect: connect2\x2C\n        maxRequestsPerClient\x2C\n        localAddress\x2C\n        maxResponseSize\x2C\n        autoSelectFamily\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n        // h2\n        maxConcurrentStreams\x2C\n        allowH2\n      } = {}) {\n        super();\n        if (keepAlive !== void 0) {\n          throw new InvalidArgumentError("unsupported keepAlive\x2C use pipelining=0 instead");\n        }\n        if (socketTimeout !== void 0) {\n          throw new InvalidArgumentError("unsupported socketTimeout\x2C use headersTimeout & bodyTimeout instead");\n        }\n        if (requestTimeout !== void 0) {\n          throw new InvalidArgumentError("unsupported requestTimeout\x2C use headersTimeout & bodyTimeout instead");\n        }\n        if (idleTimeout !== void 0) {\n          throw new InvalidArgumentError("unsupported idleTimeout\x2C use keepAliveTimeout instead");\n        }\n        if (maxKeepAliveTimeout !== void 0) {\n          throw new InvalidArgumentError("unsupported maxKeepAliveTimeout\x2C use keepAliveMaxTimeout instead");\n        }\n        if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n          throw new InvalidArgumentError("invalid maxHeaderSize");\n        }\n        if (socketPath != null && typeof socketPath !== "string") {\n          throw new InvalidArgumentError("invalid socketPath");\n        }\n        if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n          throw new InvalidArgumentError("invalid connectTimeout");\n        }\n        if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n          throw new InvalidArgumentError("invalid keepAliveTimeout");\n        }\n        if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n          throw new InvalidArgumentError("invalid keepAliveMaxTimeout");\n        }\n        if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n          throw new InvalidArgumentError("invalid keepAliveTimeoutThreshold");\n        }\n        if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n          throw new InvalidArgumentError("headersTimeout must be a positive integer or zero");\n        }\n        if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n          throw new InvalidArgumentError("bodyTimeout must be a positive integer or zero");\n        }\n        if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {\n          throw new InvalidArgumentError("connect must be a function or an object");\n        }\n        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n          throw new InvalidArgumentError("maxRedirections must be a positive number");\n        }\n        if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n          throw new InvalidArgumentError("maxRequestsPerClient must be a positive number");\n        }\n        if (localAddress != null && (typeof localAddress !== "string" || net.isIP(localAddress) === 0)) {\n          throw new InvalidArgumentError("localAddress must be valid string IP address");\n        }\n        if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n          throw new InvalidArgumentError("maxResponseSize must be a positive number");\n        }\n        if (autoSelectFamilyAttemptTimeout != null && (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)) {\n          throw new InvalidArgumentError("autoSelectFamilyAttemptTimeout must be a positive number");\n        }\n        if (allowH2 != null && typeof allowH2 !== "boolean") {\n          throw new InvalidArgumentError("allowH2 must be a valid boolean value");\n        }\n        if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== "number" || maxConcurrentStreams < 1)) {\n          throw new InvalidArgumentError("maxConcurrentStreams must be a positive integer\x2C greater than 0");\n        }\n        if (typeof connect2 !== "function") {\n          connect2 = buildConnector({\n            ...tls\x2C\n            maxCachedSessions\x2C\n            allowH2\x2C\n            socketPath\x2C\n            timeout: connectTimeout\x2C\n            ...autoSelectFamily ? { autoSelectFamily\x2C autoSelectFamilyAttemptTimeout } : void 0\x2C\n            ...connect2\n          });\n        }\n        if (interceptors?.Client && Array.isArray(interceptors.Client)) {\n          this[kInterceptors] = interceptors.Client;\n          if (!deprecatedInterceptorWarned) {\n            deprecatedInterceptorWarned = true;\n            process.emitWarning("Client.Options#interceptor is deprecated. Use Dispatcher#compose instead."\x2C {\n              code: "UNDICI-CLIENT-INTERCEPTOR-DEPRECATED"\n            });\n          }\n        } else {\n          this[kInterceptors] = [createRedirectInterceptor({ maxRedirections })];\n        }\n        this[kUrl] = util.parseOrigin(url);\n        this[kConnector] = connect2;\n        this[kPipelining] = pipelining != null ? pipelining : 1;\n        this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize;\n        this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout;\n        this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 6e5 : keepAliveMaxTimeout;\n        this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 2e3 : keepAliveTimeoutThreshold;\n        this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout];\n        this[kServerName] = null;\n        this[kLocalAddress] = localAddress != null ? localAddress : null;\n        this[kResuming] = 0;\n        this[kNeedDrain] = 0;\n        this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ""}\\r\n`;\n        this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 3e5;\n        this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 3e5;\n        this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength;\n        this[kMaxRedirections] = maxRedirections;\n        this[kMaxRequests] = maxRequestsPerClient;\n        this[kClosedResolve] = null;\n        this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1;\n        this[kMaxConcurrentStreams] = maxConcurrentStreams != null ? maxConcurrentStreams : 100;\n        this[kHTTPContext] = null;\n        this[kQueue] = [];\n        this[kRunningIdx] = 0;\n        this[kPendingIdx] = 0;\n        this[kResume] = (sync) => resume(this\x2C sync);\n        this[kOnError] = (err) => onError(this\x2C err);\n      }\n      get pipelining() {\n        return this[kPipelining];\n      }\n      set pipelining(value) {\n        this[kPipelining] = value;\n        this[kResume](true);\n      }\n      get [kPending]() {\n        return this[kQueue].length - this[kPendingIdx];\n      }\n      get [kRunning]() {\n        return this[kPendingIdx] - this[kRunningIdx];\n      }\n      get [kSize]() {\n        return this[kQueue].length - this[kRunningIdx];\n      }\n      get [kConnected]() {\n        return !!this[kHTTPContext] && !this[kConnecting] && !this[kHTTPContext].destroyed;\n      }\n      get [kBusy]() {\n        return Boolean(\n          this[kHTTPContext]?.busy(null) || this[kSize] >= (getPipelining(this) || 1) || this[kPending] > 0\n        );\n      }\n      /* istanbul ignore: only used for test */\n      [kConnect](cb) {\n        connect(this);\n        this.once("connect"\x2C cb);\n      }\n      [kDispatch](opts\x2C handler) {\n        const origin = opts.origin || this[kUrl].origin;\n        const request = new Request(origin\x2C opts\x2C handler);\n        this[kQueue].push(request);\n        if (this[kResuming]) {\n        } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n          this[kResuming] = 1;\n          queueMicrotask(() => resume(this));\n        } else {\n          this[kResume](true);\n        }\n        if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n          this[kNeedDrain] = 2;\n        }\n        return this[kNeedDrain] < 2;\n      }\n      async [kClose]() {\n        return new Promise((resolve) => {\n          if (this[kSize]) {\n            this[kClosedResolve] = resolve;\n          } else {\n            resolve(null);\n          }\n        });\n      }\n      async [kDestroy](err) {\n        return new Promise((resolve) => {\n          const requests = this[kQueue].splice(this[kPendingIdx]);\n          for (let i = 0; i < requests.length; i++) {\n            const request = requests[i];\n            util.errorRequest(this\x2C request\x2C err);\n          }\n          const callback = /* @__PURE__ */ __name(() => {\n            if (this[kClosedResolve]) {\n              this[kClosedResolve]();\n              this[kClosedResolve] = null;\n            }\n            resolve(null);\n          }\x2C "callback");\n          if (this[kHTTPContext]) {\n            this[kHTTPContext].destroy(err\x2C callback);\n            this[kHTTPContext] = null;\n          } else {\n            queueMicrotask(callback);\n          }\n          this[kResume]();\n        });\n      }\n    };\n    var createRedirectInterceptor = require_redirect_interceptor();\n    function onError(client\x2C err) {\n      if (client[kRunning] === 0 && err.code !== "UND_ERR_INFO" && err.code !== "UND_ERR_SOCKET") {\n        assert(client[kPendingIdx] === client[kRunningIdx]);\n        const requests = client[kQueue].splice(client[kRunningIdx]);\n        for (let i = 0; i < requests.length; i++) {\n          const request = requests[i];\n          util.errorRequest(client\x2C request\x2C err);\n        }\n        assert(client[kSize] === 0);\n      }\n    }\n    __name(onError\x2C "onError");\n    async function connect(client) {\n      assert(!client[kConnecting]);\n      assert(!client[kHTTPContext]);\n      let { host\x2C hostname\x2C protocol\x2C port } = client[kUrl];\n      if (hostname[0] === "[") {\n        const idx = hostname.indexOf("]");\n        assert(idx !== -1);\n        const ip = hostname.substring(1\x2C idx);\n        assert(net.isIP(ip));\n        hostname = ip;\n      }\n      client[kConnecting] = true;\n      if (channels.beforeConnect.hasSubscribers) {\n        channels.beforeConnect.publish({\n          connectParams: {\n            host\x2C\n            hostname\x2C\n            protocol\x2C\n            port\x2C\n            version: client[kHTTPContext]?.version\x2C\n            servername: client[kServerName]\x2C\n            localAddress: client[kLocalAddress]\n          }\x2C\n          connector: client[kConnector]\n        });\n      }\n      try {\n        const socket = await new Promise((resolve\x2C reject) => {\n          client[kConnector]({\n            host\x2C\n            hostname\x2C\n            protocol\x2C\n            port\x2C\n            servername: client[kServerName]\x2C\n            localAddress: client[kLocalAddress]\n          }\x2C (err\x2C socket2) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(socket2);\n            }\n          });\n        });\n        if (client.destroyed) {\n          util.destroy(socket.on("error"\x2C noop)\x2C new ClientDestroyedError());\n          return;\n        }\n        assert(socket);\n        try {\n          client[kHTTPContext] = socket.alpnProtocol === "h2" ? await connectH2(client\x2C socket) : await connectH1(client\x2C socket);\n        } catch (err) {\n          socket.destroy().on("error"\x2C noop);\n          throw err;\n        }\n        client[kConnecting] = false;\n        socket[kCounter] = 0;\n        socket[kMaxRequests] = client[kMaxRequests];\n        socket[kClient] = client;\n        socket[kError] = null;\n        if (channels.connected.hasSubscribers) {\n          channels.connected.publish({\n            connectParams: {\n              host\x2C\n              hostname\x2C\n              protocol\x2C\n              port\x2C\n              version: client[kHTTPContext]?.version\x2C\n              servername: client[kServerName]\x2C\n              localAddress: client[kLocalAddress]\n            }\x2C\n            connector: client[kConnector]\x2C\n            socket\n          });\n        }\n        client.emit("connect"\x2C client[kUrl]\x2C [client]);\n      } catch (err) {\n        if (client.destroyed) {\n          return;\n        }\n        client[kConnecting] = false;\n        if (channels.connectError.hasSubscribers) {\n          channels.connectError.publish({\n            connectParams: {\n              host\x2C\n              hostname\x2C\n              protocol\x2C\n              port\x2C\n              version: client[kHTTPContext]?.version\x2C\n              servername: client[kServerName]\x2C\n              localAddress: client[kLocalAddress]\n            }\x2C\n            connector: client[kConnector]\x2C\n            error: err\n          });\n        }\n        if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {\n          assert(client[kRunning] === 0);\n          while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n            const request = client[kQueue][client[kPendingIdx]++];\n            util.errorRequest(client\x2C request\x2C err);\n          }\n        } else {\n          onError(client\x2C err);\n        }\n        client.emit("connectionError"\x2C client[kUrl]\x2C [client]\x2C err);\n      }\n      client[kResume]();\n    }\n    __name(connect\x2C "connect");\n    function emitDrain(client) {\n      client[kNeedDrain] = 0;\n      client.emit("drain"\x2C client[kUrl]\x2C [client]);\n    }\n    __name(emitDrain\x2C "emitDrain");\n    function resume(client\x2C sync) {\n      if (client[kResuming] === 2) {\n        return;\n      }\n      client[kResuming] = 2;\n      _resume(client\x2C sync);\n      client[kResuming] = 0;\n      if (client[kRunningIdx] > 256) {\n        client[kQueue].splice(0\x2C client[kRunningIdx]);\n        client[kPendingIdx] -= client[kRunningIdx];\n        client[kRunningIdx] = 0;\n      }\n    }\n    __name(resume\x2C "resume");\n    function _resume(client\x2C sync) {\n      while (true) {\n        if (client.destroyed) {\n          assert(client[kPending] === 0);\n          return;\n        }\n        if (client[kClosedResolve] && !client[kSize]) {\n          client[kClosedResolve]();\n          client[kClosedResolve] = null;\n          return;\n        }\n        if (client[kHTTPContext]) {\n          client[kHTTPContext].resume();\n        }\n        if (client[kBusy]) {\n          client[kNeedDrain] = 2;\n        } else if (client[kNeedDrain] === 2) {\n          if (sync) {\n            client[kNeedDrain] = 1;\n            queueMicrotask(() => emitDrain(client));\n          } else {\n            emitDrain(client);\n          }\n          continue;\n        }\n        if (client[kPending] === 0) {\n          return;\n        }\n        if (client[kRunning] >= (getPipelining(client) || 1)) {\n          return;\n        }\n        const request = client[kQueue][client[kPendingIdx]];\n        if (client[kUrl].protocol === "https:" && client[kServerName] !== request.servername) {\n          if (client[kRunning] > 0) {\n            return;\n          }\n          client[kServerName] = request.servername;\n          client[kHTTPContext]?.destroy(new InformationalError("servername changed")\x2C () => {\n            client[kHTTPContext] = null;\n            resume(client);\n          });\n        }\n        if (client[kConnecting]) {\n          return;\n        }\n        if (!client[kHTTPContext]) {\n          connect(client);\n          return;\n        }\n        if (client[kHTTPContext].destroyed) {\n          return;\n        }\n        if (client[kHTTPContext].busy(request)) {\n          return;\n        }\n        if (!request.aborted && client[kHTTPContext].write(request)) {\n          client[kPendingIdx]++;\n        } else {\n          client[kQueue].splice(client[kPendingIdx]\x2C 1);\n        }\n      }\n    }\n    __name(_resume\x2C "_resume");\n    module2.exports = Client;\n  }\n});\n\n// lib/dispatcher/pool.js\nvar require_pool = __commonJS({\n  "lib/dispatcher/pool.js"(exports2\x2C module2) {\n    "use strict";\n    var {\n      PoolBase\x2C\n      kClients\x2C\n      kNeedDrain\x2C\n      kAddClient\x2C\n      kGetDispatcher\n    } = require_pool_base();\n    var Client = require_client();\n    var {\n      InvalidArgumentError\n    } = require_errors();\n    var util = require_util();\n    var { kUrl\x2C kInterceptors } = require_symbols();\n    var buildConnector = require_connect();\n    var kOptions = Symbol("options");\n    var kConnections = Symbol("connections");\n    var kFactory = Symbol("factory");\n    function defaultFactory(origin\x2C opts) {\n      return new Client(origin\x2C opts);\n    }\n    __name(defaultFactory\x2C "defaultFactory");\n    var Pool = class extends PoolBase {\n      static {\n        __name(this\x2C "Pool");\n      }\n      constructor(origin\x2C {\n        connections\x2C\n        factory = defaultFactory\x2C\n        connect\x2C\n        connectTimeout\x2C\n        tls\x2C\n        maxCachedSessions\x2C\n        socketPath\x2C\n        autoSelectFamily\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n        allowH2\x2C\n        ...options\n      } = {}) {\n        super();\n        if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n          throw new InvalidArgumentError("invalid connections");\n        }\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError("connect must be a function or an object");\n        }\n        if (typeof connect !== "function") {\n          connect = buildConnector({\n            ...tls\x2C\n            maxCachedSessions\x2C\n            allowH2\x2C\n            socketPath\x2C\n            timeout: connectTimeout\x2C\n            ...autoSelectFamily ? { autoSelectFamily\x2C autoSelectFamilyAttemptTimeout } : void 0\x2C\n            ...connect\n          });\n        }\n        this[kInterceptors] = options.interceptors?.Pool && Array.isArray(options.interceptors.Pool) ? options.interceptors.Pool : [];\n        this[kConnections] = connections || null;\n        this[kUrl] = util.parseOrigin(origin);\n        this[kOptions] = { ...util.deepClone(options)\x2C connect\x2C allowH2 };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kFactory] = factory;\n      }\n      [kGetDispatcher]() {\n        for (const client of this[kClients]) {\n          if (!client[kNeedDrain]) {\n            return client;\n          }\n        }\n        if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n          const dispatcher = this[kFactory](this[kUrl]\x2C this[kOptions]);\n          this[kAddClient](dispatcher);\n          return dispatcher;\n        }\n      }\n    };\n    module2.exports = Pool;\n  }\n});\n\n// lib/dispatcher/agent.js\nvar require_agent = __commonJS({\n  "lib/dispatcher/agent.js"(exports2\x2C module2) {\n    "use strict";\n    var { InvalidArgumentError } = require_errors();\n    var { kClients\x2C kRunning\x2C kClose\x2C kDestroy\x2C kDispatch\x2C kInterceptors } = require_symbols();\n    var DispatcherBase = require_dispatcher_base();\n    var Pool = require_pool();\n    var Client = require_client();\n    var util = require_util();\n    var createRedirectInterceptor = require_redirect_interceptor();\n    var kOnConnect = Symbol("onConnect");\n    var kOnDisconnect = Symbol("onDisconnect");\n    var kOnConnectionError = Symbol("onConnectionError");\n    var kMaxRedirections = Symbol("maxRedirections");\n    var kOnDrain = Symbol("onDrain");\n    var kFactory = Symbol("factory");\n    var kOptions = Symbol("options");\n    function defaultFactory(origin\x2C opts) {\n      return opts && opts.connections === 1 ? new Client(origin\x2C opts) : new Pool(origin\x2C opts);\n    }\n    __name(defaultFactory\x2C "defaultFactory");\n    var Agent = class extends DispatcherBase {\n      static {\n        __name(this\x2C "Agent");\n      }\n      constructor({ factory = defaultFactory\x2C maxRedirections = 0\x2C connect\x2C ...options } = {}) {\n        super();\n        if (typeof factory !== "function") {\n          throw new InvalidArgumentError("factory must be a function.");\n        }\n        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {\n          throw new InvalidArgumentError("connect must be a function or an object");\n        }\n        if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n          throw new InvalidArgumentError("maxRedirections must be a positive number");\n        }\n        if (connect && typeof connect !== "function") {\n          connect = { ...connect };\n        }\n        this[kInterceptors] = options.interceptors?.Agent && Array.isArray(options.interceptors.Agent) ? options.interceptors.Agent : [createRedirectInterceptor({ maxRedirections })];\n        this[kOptions] = { ...util.deepClone(options)\x2C connect };\n        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;\n        this[kMaxRedirections] = maxRedirections;\n        this[kFactory] = factory;\n        this[kClients] = /* @__PURE__ */ new Map();\n        this[kOnDrain] = (origin\x2C targets) => {\n          this.emit("drain"\x2C origin\x2C [this\x2C ...targets]);\n        };\n        this[kOnConnect] = (origin\x2C targets) => {\n          this.emit("connect"\x2C origin\x2C [this\x2C ...targets]);\n        };\n        this[kOnDisconnect] = (origin\x2C targets\x2C err) => {\n          this.emit("disconnect"\x2C origin\x2C [this\x2C ...targets]\x2C err);\n        };\n        this[kOnConnectionError] = (origin\x2C targets\x2C err) => {\n          this.emit("connectionError"\x2C origin\x2C [this\x2C ...targets]\x2C err);\n        };\n      }\n      get [kRunning]() {\n        let ret = 0;\n        for (const client of this[kClients].values()) {\n          ret += client[kRunning];\n        }\n        return ret;\n      }\n      [kDispatch](opts\x2C handler) {\n        let key;\n        if (opts.origin && (typeof opts.origin === "string" || opts.origin instanceof URL)) {\n          key = String(opts.origin);\n        } else {\n          throw new InvalidArgumentError("opts.origin must be a non-empty string or URL.");\n        }\n        let dispatcher = this[kClients].get(key);\n        if (!dispatcher) {\n          dispatcher = this[kFactory](opts.origin\x2C this[kOptions]).on("drain"\x2C this[kOnDrain]).on("connect"\x2C this[kOnConnect]).on("disconnect"\x2C this[kOnDisconnect]).on("connectionError"\x2C this[kOnConnectionError]);\n          this[kClients].set(key\x2C dispatcher);\n        }\n        return dispatcher.dispatch(opts\x2C handler);\n      }\n      async [kClose]() {\n        const closePromises = [];\n        for (const client of this[kClients].values()) {\n          closePromises.push(client.close());\n        }\n        this[kClients].clear();\n        await Promise.all(closePromises);\n      }\n      async [kDestroy](err) {\n        const destroyPromises = [];\n        for (const client of this[kClients].values()) {\n          destroyPromises.push(client.destroy(err));\n        }\n        this[kClients].clear();\n        await Promise.all(destroyPromises);\n      }\n    };\n    module2.exports = Agent;\n  }\n});\n\n// lib/global.js\nvar require_global2 = __commonJS({\n  "lib/global.js"(exports2\x2C module2) {\n    "use strict";\n    var globalDispatcher = Symbol.for("undici.globalDispatcher.1");\n    var { InvalidArgumentError } = require_errors();\n    var Agent = require_agent();\n    if (getGlobalDispatcher2() === void 0) {\n      setGlobalDispatcher2(new Agent());\n    }\n    function setGlobalDispatcher2(agent) {\n      if (!agent || typeof agent.dispatch !== "function") {\n        throw new InvalidArgumentError("Argument agent must implement Agent");\n      }\n      Object.defineProperty(globalThis\x2C globalDispatcher\x2C {\n        value: agent\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: false\n      });\n    }\n    __name(setGlobalDispatcher2\x2C "setGlobalDispatcher");\n    function getGlobalDispatcher2() {\n      return globalThis[globalDispatcher];\n    }\n    __name(getGlobalDispatcher2\x2C "getGlobalDispatcher");\n    module2.exports = {\n      setGlobalDispatcher: setGlobalDispatcher2\x2C\n      getGlobalDispatcher: getGlobalDispatcher2\n    };\n  }\n});\n\n// lib/dispatcher/proxy-agent.js\nvar require_proxy_agent = __commonJS({\n  "lib/dispatcher/proxy-agent.js"(exports2\x2C module2) {\n    "use strict";\n    var { kProxy\x2C kClose\x2C kDestroy\x2C kInterceptors } = require_symbols();\n    var { URL: URL2 } = require("node:url");\n    var Agent = require_agent();\n    var Pool = require_pool();\n    var DispatcherBase = require_dispatcher_base();\n    var { InvalidArgumentError\x2C RequestAbortedError\x2C SecureProxyConnectionError } = require_errors();\n    var buildConnector = require_connect();\n    var kAgent = Symbol("proxy agent");\n    var kClient = Symbol("proxy client");\n    var kProxyHeaders = Symbol("proxy headers");\n    var kRequestTls = Symbol("request tls settings");\n    var kProxyTls = Symbol("proxy tls settings");\n    var kConnectEndpoint = Symbol("connect endpoint function");\n    function defaultProtocolPort(protocol) {\n      return protocol === "https:" ? 443 : 80;\n    }\n    __name(defaultProtocolPort\x2C "defaultProtocolPort");\n    function defaultFactory(origin\x2C opts) {\n      return new Pool(origin\x2C opts);\n    }\n    __name(defaultFactory\x2C "defaultFactory");\n    var noop = /* @__PURE__ */ __name(() => {\n    }\x2C "noop");\n    var ProxyAgent = class extends DispatcherBase {\n      static {\n        __name(this\x2C "ProxyAgent");\n      }\n      constructor(opts) {\n        super();\n        if (!opts || typeof opts === "object" && !(opts instanceof URL2) && !opts.uri) {\n          throw new InvalidArgumentError("Proxy uri is mandatory");\n        }\n        const { clientFactory = defaultFactory } = opts;\n        if (typeof clientFactory !== "function") {\n          throw new InvalidArgumentError("Proxy opts.clientFactory must be a function.");\n        }\n        const url = this.#getUrl(opts);\n        const { href\x2C origin\x2C port\x2C protocol\x2C username\x2C password\x2C hostname: proxyHostname } = url;\n        this[kProxy] = { uri: href\x2C protocol };\n        this[kInterceptors] = opts.interceptors?.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent) ? opts.interceptors.ProxyAgent : [];\n        this[kRequestTls] = opts.requestTls;\n        this[kProxyTls] = opts.proxyTls;\n        this[kProxyHeaders] = opts.headers || {};\n        if (opts.auth && opts.token) {\n          throw new InvalidArgumentError("opts.auth cannot be used in combination with opts.token");\n        } else if (opts.auth) {\n          this[kProxyHeaders]["proxy-authorization"] = `Basic ${opts.auth}`;\n        } else if (opts.token) {\n          this[kProxyHeaders]["proxy-authorization"] = opts.token;\n        } else if (username && password) {\n          this[kProxyHeaders]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString("base64")}`;\n        }\n        const connect = buildConnector({ ...opts.proxyTls });\n        this[kConnectEndpoint] = buildConnector({ ...opts.requestTls });\n        this[kClient] = clientFactory(url\x2C { connect });\n        this[kAgent] = new Agent({\n          ...opts\x2C\n          connect: async (opts2\x2C callback) => {\n            let requestedPath = opts2.host;\n            if (!opts2.port) {\n              requestedPath += `:${defaultProtocolPort(opts2.protocol)}`;\n            }\n            try {\n              const { socket\x2C statusCode } = await this[kClient].connect({\n                origin\x2C\n                port\x2C\n                path: requestedPath\x2C\n                signal: opts2.signal\x2C\n                headers: {\n                  ...this[kProxyHeaders]\x2C\n                  host: opts2.host\n                }\x2C\n                servername: this[kProxyTls]?.servername || proxyHostname\n              });\n              if (statusCode !== 200) {\n                socket.on("error"\x2C noop).destroy();\n                callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`));\n              }\n              if (opts2.protocol !== "https:") {\n                callback(null\x2C socket);\n                return;\n              }\n              let servername;\n              if (this[kRequestTls]) {\n                servername = this[kRequestTls].servername;\n              } else {\n                servername = opts2.servername;\n              }\n              this[kConnectEndpoint]({ ...opts2\x2C servername\x2C httpSocket: socket }\x2C callback);\n            } catch (err) {\n              if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {\n                callback(new SecureProxyConnectionError(err));\n              } else {\n                callback(err);\n              }\n            }\n          }\n        });\n      }\n      dispatch(opts\x2C handler) {\n        const headers = buildHeaders(opts.headers);\n        throwIfProxyAuthIsSent(headers);\n        if (headers && !("host" in headers) && !("Host" in headers)) {\n          const { host } = new URL2(opts.origin);\n          headers.host = host;\n        }\n        return this[kAgent].dispatch(\n          {\n            ...opts\x2C\n            headers\n          }\x2C\n          handler\n        );\n      }\n      /**\n       * @param {import('../types/proxy-agent').ProxyAgent.Options | string | URL} opts\n       * @returns {URL}\n       */\n      #getUrl(opts) {\n        if (typeof opts === "string") {\n          return new URL2(opts);\n        } else if (opts instanceof URL2) {\n          return opts;\n        } else {\n          return new URL2(opts.uri);\n        }\n      }\n      async [kClose]() {\n        await this[kAgent].close();\n        await this[kClient].close();\n      }\n      async [kDestroy]() {\n        await this[kAgent].destroy();\n        await this[kClient].destroy();\n      }\n    };\n    function buildHeaders(headers) {\n      if (Array.isArray(headers)) {\n        const headersPair = {};\n        for (let i = 0; i < headers.length; i += 2) {\n          headersPair[headers[i]] = headers[i + 1];\n        }\n        return headersPair;\n      }\n      return headers;\n    }\n    __name(buildHeaders\x2C "buildHeaders");\n    function throwIfProxyAuthIsSent(headers) {\n      const existProxyAuth = headers && Object.keys(headers).find((key) => key.toLowerCase() === "proxy-authorization");\n      if (existProxyAuth) {\n        throw new InvalidArgumentError("Proxy-Authorization should be sent in ProxyAgent constructor");\n      }\n    }\n    __name(throwIfProxyAuthIsSent\x2C "throwIfProxyAuthIsSent");\n    module2.exports = ProxyAgent;\n  }\n});\n\n// lib/dispatcher/env-http-proxy-agent.js\nvar require_env_http_proxy_agent = __commonJS({\n  "lib/dispatcher/env-http-proxy-agent.js"(exports2\x2C module2) {\n    "use strict";\n    var DispatcherBase = require_dispatcher_base();\n    var { kClose\x2C kDestroy\x2C kClosed\x2C kDestroyed\x2C kDispatch\x2C kNoProxyAgent\x2C kHttpProxyAgent\x2C kHttpsProxyAgent } = require_symbols();\n    var ProxyAgent = require_proxy_agent();\n    var Agent = require_agent();\n    var DEFAULT_PORTS = {\n      "http:": 80\x2C\n      "https:": 443\n    };\n    var experimentalWarned = false;\n    var EnvHttpProxyAgent2 = class extends DispatcherBase {\n      static {\n        __name(this\x2C "EnvHttpProxyAgent");\n      }\n      #noProxyValue = null;\n      #noProxyEntries = null;\n      #opts = null;\n      constructor(opts = {}) {\n        super();\n        this.#opts = opts;\n        if (!experimentalWarned) {\n          experimentalWarned = true;\n          process.emitWarning("EnvHttpProxyAgent is experimental\x2C expect them to change at any time."\x2C {\n            code: "UNDICI-EHPA"\n          });\n        }\n        const { httpProxy\x2C httpsProxy\x2C noProxy\x2C ...agentOpts } = opts;\n        this[kNoProxyAgent] = new Agent(agentOpts);\n        const HTTP_PROXY = httpProxy ?? process.env.http_proxy ?? process.env.HTTP_PROXY;\n        if (HTTP_PROXY) {\n          this[kHttpProxyAgent] = new ProxyAgent({ ...agentOpts\x2C uri: HTTP_PROXY });\n        } else {\n          this[kHttpProxyAgent] = this[kNoProxyAgent];\n        }\n        const HTTPS_PROXY = httpsProxy ?? process.env.https_proxy ?? process.env.HTTPS_PROXY;\n        if (HTTPS_PROXY) {\n          this[kHttpsProxyAgent] = new ProxyAgent({ ...agentOpts\x2C uri: HTTPS_PROXY });\n        } else {\n          this[kHttpsProxyAgent] = this[kHttpProxyAgent];\n        }\n        this.#parseNoProxy();\n      }\n      [kDispatch](opts\x2C handler) {\n        const url = new URL(opts.origin);\n        const agent = this.#getProxyAgentForUrl(url);\n        return agent.dispatch(opts\x2C handler);\n      }\n      async [kClose]() {\n        await this[kNoProxyAgent].close();\n        if (!this[kHttpProxyAgent][kClosed]) {\n          await this[kHttpProxyAgent].close();\n        }\n        if (!this[kHttpsProxyAgent][kClosed]) {\n          await this[kHttpsProxyAgent].close();\n        }\n      }\n      async [kDestroy](err) {\n        await this[kNoProxyAgent].destroy(err);\n        if (!this[kHttpProxyAgent][kDestroyed]) {\n          await this[kHttpProxyAgent].destroy(err);\n        }\n        if (!this[kHttpsProxyAgent][kDestroyed]) {\n          await this[kHttpsProxyAgent].destroy(err);\n        }\n      }\n      #getProxyAgentForUrl(url) {\n        let { protocol\x2C host: hostname\x2C port } = url;\n        hostname = hostname.replace(/:\\d*$/\x2C "").toLowerCase();\n        port = Number.parseInt(port\x2C 10) || DEFAULT_PORTS[protocol] || 0;\n        if (!this.#shouldProxy(hostname\x2C port)) {\n          return this[kNoProxyAgent];\n        }\n        if (protocol === "https:") {\n          return this[kHttpsProxyAgent];\n        }\n        return this[kHttpProxyAgent];\n      }\n      #shouldProxy(hostname\x2C port) {\n        if (this.#noProxyChanged) {\n          this.#parseNoProxy();\n        }\n        if (this.#noProxyEntries.length === 0) {\n          return true;\n        }\n        if (this.#noProxyValue === "*") {\n          return false;\n        }\n        for (let i = 0; i < this.#noProxyEntries.length; i++) {\n          const entry = this.#noProxyEntries[i];\n          if (entry.port && entry.port !== port) {\n            continue;\n          }\n          if (!/^[.*]/.test(entry.hostname)) {\n            if (hostname === entry.hostname) {\n              return false;\n            }\n          } else {\n            if (hostname.endsWith(entry.hostname.replace(/^\\*/\x2C ""))) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      #parseNoProxy() {\n        const noProxyValue = this.#opts.noProxy ?? this.#noProxyEnv;\n        const noProxySplit = noProxyValue.split(/[\x2C\\s]/);\n        const noProxyEntries = [];\n        for (let i = 0; i < noProxySplit.length; i++) {\n          const entry = noProxySplit[i];\n          if (!entry) {\n            continue;\n          }\n          const parsed = entry.match(/^(.+):(\\d+)$/);\n          noProxyEntries.push({\n            hostname: (parsed ? parsed[1] : entry).toLowerCase()\x2C\n            port: parsed ? Number.parseInt(parsed[2]\x2C 10) : 0\n          });\n        }\n        this.#noProxyValue = noProxyValue;\n        this.#noProxyEntries = noProxyEntries;\n      }\n      get #noProxyChanged() {\n        if (this.#opts.noProxy !== void 0) {\n          return false;\n        }\n        return this.#noProxyValue !== this.#noProxyEnv;\n      }\n      get #noProxyEnv() {\n        return process.env.no_proxy ?? process.env.NO_PROXY ?? "";\n      }\n    };\n    module2.exports = EnvHttpProxyAgent2;\n  }\n});\n\n// lib/web/fetch/headers.js\nvar require_headers = __commonJS({\n  "lib/web/fetch/headers.js"(exports2\x2C module2) {\n    "use strict";\n    var { kConstruct } = require_symbols();\n    var { kEnumerableProperty } = require_util();\n    var {\n      iteratorMixin\x2C\n      isValidHeaderName\x2C\n      isValidHeaderValue\n    } = require_util2();\n    var { webidl } = require_webidl();\n    var assert = require("node:assert");\n    var util = require("node:util");\n    var kHeadersMap = Symbol("headers map");\n    var kHeadersSortedMap = Symbol("headers map sorted");\n    function isHTTPWhiteSpaceCharCode(code) {\n      return code === 10 || code === 13 || code === 9 || code === 32;\n    }\n    __name(isHTTPWhiteSpaceCharCode\x2C "isHTTPWhiteSpaceCharCode");\n    function headerValueNormalize(potentialValue) {\n      let i = 0;\n      let j = potentialValue.length;\n      while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(j - 1)))\n        --j;\n      while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(i)))\n        ++i;\n      return i === 0 && j === potentialValue.length ? potentialValue : potentialValue.substring(i\x2C j);\n    }\n    __name(headerValueNormalize\x2C "headerValueNormalize");\n    function fill(headers\x2C object) {\n      if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; ++i) {\n          const header = object[i];\n          if (header.length !== 2) {\n            throw webidl.errors.exception({\n              header: "Headers constructor"\x2C\n              message: `expected name/value pair to be length 2\x2C found ${header.length}.`\n            });\n          }\n          appendHeader(headers\x2C header[0]\x2C header[1]);\n        }\n      } else if (typeof object === "object" && object !== null) {\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; ++i) {\n          appendHeader(headers\x2C keys[i]\x2C object[keys[i]]);\n        }\n      } else {\n        throw webidl.errors.conversionFailed({\n          prefix: "Headers constructor"\x2C\n          argument: "Argument 1"\x2C\n          types: ["sequence<sequence<ByteString>>"\x2C "record<ByteString\x2C ByteString>"]\n        });\n      }\n    }\n    __name(fill\x2C "fill");\n    function appendHeader(headers\x2C name\x2C value) {\n      value = headerValueNormalize(value);\n      if (!isValidHeaderName(name)) {\n        throw webidl.errors.invalidArgument({\n          prefix: "Headers.append"\x2C\n          value: name\x2C\n          type: "header name"\n        });\n      } else if (!isValidHeaderValue(value)) {\n        throw webidl.errors.invalidArgument({\n          prefix: "Headers.append"\x2C\n          value\x2C\n          type: "header value"\n        });\n      }\n      if (getHeadersGuard(headers) === "immutable") {\n        throw new TypeError("immutable");\n      }\n      return getHeadersList(headers).append(name\x2C value\x2C false);\n    }\n    __name(appendHeader\x2C "appendHeader");\n    function compareHeaderName(a\x2C b) {\n      return a[0] < b[0] ? -1 : 1;\n    }\n    __name(compareHeaderName\x2C "compareHeaderName");\n    var HeadersList = class _HeadersList {\n      static {\n        __name(this\x2C "HeadersList");\n      }\n      /** @type {[string\x2C string][]|null} */\n      cookies = null;\n      constructor(init) {\n        if (init instanceof _HeadersList) {\n          this[kHeadersMap] = new Map(init[kHeadersMap]);\n          this[kHeadersSortedMap] = init[kHeadersSortedMap];\n          this.cookies = init.cookies === null ? null : [...init.cookies];\n        } else {\n          this[kHeadersMap] = new Map(init);\n          this[kHeadersSortedMap] = null;\n        }\n      }\n      /**\n       * @see https://fetch.spec.whatwg.org/#header-list-contains\n       * @param {string} name\n       * @param {boolean} isLowerCase\n       */\n      contains(name\x2C isLowerCase) {\n        return this[kHeadersMap].has(isLowerCase ? name : name.toLowerCase());\n      }\n      clear() {\n        this[kHeadersMap].clear();\n        this[kHeadersSortedMap] = null;\n        this.cookies = null;\n      }\n      /**\n       * @see https://fetch.spec.whatwg.org/#concept-header-list-append\n       * @param {string} name\n       * @param {string} value\n       * @param {boolean} isLowerCase\n       */\n      append(name\x2C value\x2C isLowerCase) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = isLowerCase ? name : name.toLowerCase();\n        const exists = this[kHeadersMap].get(lowercaseName);\n        if (exists) {\n          const delimiter = lowercaseName === "cookie" ? "; " : "\x2C ";\n          this[kHeadersMap].set(lowercaseName\x2C {\n            name: exists.name\x2C\n            value: `${exists.value}${delimiter}${value}`\n          });\n        } else {\n          this[kHeadersMap].set(lowercaseName\x2C { name\x2C value });\n        }\n        if (lowercaseName === "set-cookie") {\n          (this.cookies ??= []).push(value);\n        }\n      }\n      /**\n       * @see https://fetch.spec.whatwg.org/#concept-header-list-set\n       * @param {string} name\n       * @param {string} value\n       * @param {boolean} isLowerCase\n       */\n      set(name\x2C value\x2C isLowerCase) {\n        this[kHeadersSortedMap] = null;\n        const lowercaseName = isLowerCase ? name : name.toLowerCase();\n        if (lowercaseName === "set-cookie") {\n          this.cookies = [value];\n        }\n        this[kHeadersMap].set(lowercaseName\x2C { name\x2C value });\n      }\n      /**\n       * @see https://fetch.spec.whatwg.org/#concept-header-list-delete\n       * @param {string} name\n       * @param {boolean} isLowerCase\n       */\n      delete(name\x2C isLowerCase) {\n        this[kHeadersSortedMap] = null;\n        if (!isLowerCase)\n          name = name.toLowerCase();\n        if (name === "set-cookie") {\n          this.cookies = null;\n        }\n        this[kHeadersMap].delete(name);\n      }\n      /**\n       * @see https://fetch.spec.whatwg.org/#concept-header-list-get\n       * @param {string} name\n       * @param {boolean} isLowerCase\n       * @returns {string | null}\n       */\n      get(name\x2C isLowerCase) {\n        return this[kHeadersMap].get(isLowerCase ? name : name.toLowerCase())?.value ?? null;\n      }\n      *[Symbol.iterator]() {\n        for (const { 0: name\x2C 1: { value } } of this[kHeadersMap]) {\n          yield [name\x2C value];\n        }\n      }\n      get entries() {\n        const headers = {};\n        if (this[kHeadersMap].size !== 0) {\n          for (const { name\x2C value } of this[kHeadersMap].values()) {\n            headers[name] = value;\n          }\n        }\n        return headers;\n      }\n      rawValues() {\n        return this[kHeadersMap].values();\n      }\n      get entriesList() {\n        const headers = [];\n        if (this[kHeadersMap].size !== 0) {\n          for (const { 0: lowerName\x2C 1: { name\x2C value } } of this[kHeadersMap]) {\n            if (lowerName === "set-cookie") {\n              for (const cookie of this.cookies) {\n                headers.push([name\x2C cookie]);\n              }\n            } else {\n              headers.push([name\x2C value]);\n            }\n          }\n        }\n        return headers;\n      }\n      // https://fetch.spec.whatwg.org/#convert-header-names-to-a-sorted-lowercase-set\n      toSortedArray() {\n        const size = this[kHeadersMap].size;\n        const array = new Array(size);\n        if (size <= 32) {\n          if (size === 0) {\n            return array;\n          }\n          const iterator = this[kHeadersMap][Symbol.iterator]();\n          const firstValue = iterator.next().value;\n          array[0] = [firstValue[0]\x2C firstValue[1].value];\n          assert(firstValue[1].value !== null);\n          for (let i = 1\x2C j = 0\x2C right = 0\x2C left = 0\x2C pivot = 0\x2C x\x2C value; i < size; ++i) {\n            value = iterator.next().value;\n            x = array[i] = [value[0]\x2C value[1].value];\n            assert(x[1] !== null);\n            left = 0;\n            right = i;\n            while (left < right) {\n              pivot = left + (right - left >> 1);\n              if (array[pivot][0] <= x[0]) {\n                left = pivot + 1;\n              } else {\n                right = pivot;\n              }\n            }\n            if (i !== pivot) {\n              j = i;\n              while (j > left) {\n                array[j] = array[--j];\n              }\n              array[left] = x;\n            }\n          }\n          if (!iterator.next().done) {\n            throw new TypeError("Unreachable");\n          }\n          return array;\n        } else {\n          let i = 0;\n          for (const { 0: name\x2C 1: { value } } of this[kHeadersMap]) {\n            array[i++] = [name\x2C value];\n            assert(value !== null);\n          }\n          return array.sort(compareHeaderName);\n        }\n      }\n    };\n    var Headers = class _Headers {\n      static {\n        __name(this\x2C "Headers");\n      }\n      #guard;\n      #headersList;\n      constructor(init = void 0) {\n        webidl.util.markAsUncloneable(this);\n        if (init === kConstruct) {\n          return;\n        }\n        this.#headersList = new HeadersList();\n        this.#guard = "none";\n        if (init !== void 0) {\n          init = webidl.converters.HeadersInit(init\x2C "Headers contructor"\x2C "init");\n          fill(this\x2C init);\n        }\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-append\n      append(name\x2C value) {\n        webidl.brandCheck(this\x2C _Headers);\n        webidl.argumentLengthCheck(arguments\x2C 2\x2C "Headers.append");\n        const prefix = "Headers.append";\n        name = webidl.converters.ByteString(name\x2C prefix\x2C "name");\n        value = webidl.converters.ByteString(value\x2C prefix\x2C "value");\n        return appendHeader(this\x2C name\x2C value);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-delete\n      delete(name) {\n        webidl.brandCheck(this\x2C _Headers);\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "Headers.delete");\n        const prefix = "Headers.delete";\n        name = webidl.converters.ByteString(name\x2C prefix\x2C "name");\n        if (!isValidHeaderName(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix: "Headers.delete"\x2C\n            value: name\x2C\n            type: "header name"\n          });\n        }\n        if (this.#guard === "immutable") {\n          throw new TypeError("immutable");\n        }\n        if (!this.#headersList.contains(name\x2C false)) {\n          return;\n        }\n        this.#headersList.delete(name\x2C false);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-get\n      get(name) {\n        webidl.brandCheck(this\x2C _Headers);\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "Headers.get");\n        const prefix = "Headers.get";\n        name = webidl.converters.ByteString(name\x2C prefix\x2C "name");\n        if (!isValidHeaderName(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix\x2C\n            value: name\x2C\n            type: "header name"\n          });\n        }\n        return this.#headersList.get(name\x2C false);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-has\n      has(name) {\n        webidl.brandCheck(this\x2C _Headers);\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "Headers.has");\n        const prefix = "Headers.has";\n        name = webidl.converters.ByteString(name\x2C prefix\x2C "name");\n        if (!isValidHeaderName(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix\x2C\n            value: name\x2C\n            type: "header name"\n          });\n        }\n        return this.#headersList.contains(name\x2C false);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-set\n      set(name\x2C value) {\n        webidl.brandCheck(this\x2C _Headers);\n        webidl.argumentLengthCheck(arguments\x2C 2\x2C "Headers.set");\n        const prefix = "Headers.set";\n        name = webidl.converters.ByteString(name\x2C prefix\x2C "name");\n        value = webidl.converters.ByteString(value\x2C prefix\x2C "value");\n        value = headerValueNormalize(value);\n        if (!isValidHeaderName(name)) {\n          throw webidl.errors.invalidArgument({\n            prefix\x2C\n            value: name\x2C\n            type: "header name"\n          });\n        } else if (!isValidHeaderValue(value)) {\n          throw webidl.errors.invalidArgument({\n            prefix\x2C\n            value\x2C\n            type: "header value"\n          });\n        }\n        if (this.#guard === "immutable") {\n          throw new TypeError("immutable");\n        }\n        this.#headersList.set(name\x2C value\x2C false);\n      }\n      // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n      getSetCookie() {\n        webidl.brandCheck(this\x2C _Headers);\n        const list = this.#headersList.cookies;\n        if (list) {\n          return [...list];\n        }\n        return [];\n      }\n      // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n      get [kHeadersSortedMap]() {\n        if (this.#headersList[kHeadersSortedMap]) {\n          return this.#headersList[kHeadersSortedMap];\n        }\n        const headers = [];\n        const names = this.#headersList.toSortedArray();\n        const cookies = this.#headersList.cookies;\n        if (cookies === null || cookies.length === 1) {\n          return this.#headersList[kHeadersSortedMap] = names;\n        }\n        for (let i = 0; i < names.length; ++i) {\n          const { 0: name\x2C 1: value } = names[i];\n          if (name === "set-cookie") {\n            for (let j = 0; j < cookies.length; ++j) {\n              headers.push([name\x2C cookies[j]]);\n            }\n          } else {\n            headers.push([name\x2C value]);\n          }\n        }\n        return this.#headersList[kHeadersSortedMap] = headers;\n      }\n      [util.inspect.custom](depth\x2C options) {\n        options.depth ??= depth;\n        return `Headers ${util.formatWithOptions(options\x2C this.#headersList.entries)}`;\n      }\n      static getHeadersGuard(o) {\n        return o.#guard;\n      }\n      static setHeadersGuard(o\x2C guard) {\n        o.#guard = guard;\n      }\n      static getHeadersList(o) {\n        return o.#headersList;\n      }\n      static setHeadersList(o\x2C list) {\n        o.#headersList = list;\n      }\n    };\n    var { getHeadersGuard\x2C setHeadersGuard\x2C getHeadersList\x2C setHeadersList } = Headers;\n    Reflect.deleteProperty(Headers\x2C "getHeadersGuard");\n    Reflect.deleteProperty(Headers\x2C "setHeadersGuard");\n    Reflect.deleteProperty(Headers\x2C "getHeadersList");\n    Reflect.deleteProperty(Headers\x2C "setHeadersList");\n    iteratorMixin("Headers"\x2C Headers\x2C kHeadersSortedMap\x2C 0\x2C 1);\n    Object.defineProperties(Headers.prototype\x2C {\n      append: kEnumerableProperty\x2C\n      delete: kEnumerableProperty\x2C\n      get: kEnumerableProperty\x2C\n      has: kEnumerableProperty\x2C\n      set: kEnumerableProperty\x2C\n      getSetCookie: kEnumerableProperty\x2C\n      [Symbol.toStringTag]: {\n        value: "Headers"\x2C\n        configurable: true\n      }\x2C\n      [util.inspect.custom]: {\n        enumerable: false\n      }\n    });\n    webidl.converters.HeadersInit = function(V\x2C prefix\x2C argument) {\n      if (webidl.util.Type(V) === "Object") {\n        const iterator = Reflect.get(V\x2C Symbol.iterator);\n        if (!util.types.isProxy(V) && iterator === Headers.prototype.entries) {\n          try {\n            return getHeadersList(V).entriesList;\n          } catch {\n          }\n        }\n        if (typeof iterator === "function") {\n          return webidl.converters["sequence<sequence<ByteString>>"](V\x2C prefix\x2C argument\x2C iterator.bind(V));\n        }\n        return webidl.converters["record<ByteString\x2C ByteString>"](V\x2C prefix\x2C argument);\n      }\n      throw webidl.errors.conversionFailed({\n        prefix: "Headers constructor"\x2C\n        argument: "Argument 1"\x2C\n        types: ["sequence<sequence<ByteString>>"\x2C "record<ByteString\x2C ByteString>"]\n      });\n    };\n    module2.exports = {\n      fill\x2C\n      // for test.\n      compareHeaderName\x2C\n      Headers\x2C\n      HeadersList\x2C\n      getHeadersGuard\x2C\n      setHeadersGuard\x2C\n      setHeadersList\x2C\n      getHeadersList\n    };\n  }\n});\n\n// lib/web/fetch/response.js\nvar require_response = __commonJS({\n  "lib/web/fetch/response.js"(exports2\x2C module2) {\n    "use strict";\n    var { Headers\x2C HeadersList\x2C fill\x2C getHeadersGuard\x2C setHeadersGuard\x2C setHeadersList } = require_headers();\n    var { extractBody\x2C cloneBody\x2C mixinBody\x2C hasFinalizationRegistry\x2C streamRegistry\x2C bodyUnusable } = require_body();\n    var util = require_util();\n    var nodeUtil = require("node:util");\n    var { kEnumerableProperty } = util;\n    var {\n      isValidReasonPhrase\x2C\n      isCancelled\x2C\n      isAborted\x2C\n      isBlobLike\x2C\n      serializeJavascriptValueToJSONString\x2C\n      isErrorLike\x2C\n      isomorphicEncode\x2C\n      environmentSettingsObject: relevantRealm\n    } = require_util2();\n    var {\n      redirectStatusSet\x2C\n      nullBodyStatus\n    } = require_constants3();\n    var { kState\x2C kHeaders } = require_symbols2();\n    var { webidl } = require_webidl();\n    var { FormData } = require_formdata();\n    var { URLSerializer } = require_data_url();\n    var { kConstruct } = require_symbols();\n    var assert = require("node:assert");\n    var { types } = require("node:util");\n    var textEncoder = new TextEncoder("utf-8");\n    var Response = class _Response {\n      static {\n        __name(this\x2C "Response");\n      }\n      // Creates network error Response.\n      static error() {\n        const responseObject = fromInnerResponse(makeNetworkError()\x2C "immutable");\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response-json\n      static json(data\x2C init = {}) {\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "Response.json");\n        if (init !== null) {\n          init = webidl.converters.ResponseInit(init);\n        }\n        const bytes = textEncoder.encode(\n          serializeJavascriptValueToJSONString(data)\n        );\n        const body = extractBody(bytes);\n        const responseObject = fromInnerResponse(makeResponse({})\x2C "response");\n        initializeResponse(responseObject\x2C init\x2C { body: body[0]\x2C type: "application/json" });\n        return responseObject;\n      }\n      // Creates a redirect Response that redirects to url with status status.\n      static redirect(url\x2C status = 302) {\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "Response.redirect");\n        url = webidl.converters.USVString(url);\n        status = webidl.converters["unsigned short"](status);\n        let parsedURL;\n        try {\n          parsedURL = new URL(url\x2C relevantRealm.settingsObject.baseUrl);\n        } catch (err) {\n          throw new TypeError(`Failed to parse URL from ${url}`\x2C { cause: err });\n        }\n        if (!redirectStatusSet.has(status)) {\n          throw new RangeError(`Invalid status code ${status}`);\n        }\n        const responseObject = fromInnerResponse(makeResponse({})\x2C "immutable");\n        responseObject[kState].status = status;\n        const value = isomorphicEncode(URLSerializer(parsedURL));\n        responseObject[kState].headersList.append("location"\x2C value\x2C true);\n        return responseObject;\n      }\n      // https://fetch.spec.whatwg.org/#dom-response\n      constructor(body = null\x2C init = {}) {\n        webidl.util.markAsUncloneable(this);\n        if (body === kConstruct) {\n          return;\n        }\n        if (body !== null) {\n          body = webidl.converters.BodyInit(body);\n        }\n        init = webidl.converters.ResponseInit(init);\n        this[kState] = makeResponse({});\n        this[kHeaders] = new Headers(kConstruct);\n        setHeadersGuard(this[kHeaders]\x2C "response");\n        setHeadersList(this[kHeaders]\x2C this[kState].headersList);\n        let bodyWithType = null;\n        if (body != null) {\n          const [extractedBody\x2C type] = extractBody(body);\n          bodyWithType = { body: extractedBody\x2C type };\n        }\n        initializeResponse(this\x2C init\x2C bodyWithType);\n      }\n      // Returns response?s type\x2C e.g.\x2C "cors".\n      get type() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].type;\n      }\n      // Returns response?s URL\x2C if it has one; otherwise the empty string.\n      get url() {\n        webidl.brandCheck(this\x2C _Response);\n        const urlList = this[kState].urlList;\n        const url = urlList[urlList.length - 1] ?? null;\n        if (url === null) {\n          return "";\n        }\n        return URLSerializer(url\x2C true);\n      }\n      // Returns whether response was obtained through a redirect.\n      get redirected() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].urlList.length > 1;\n      }\n      // Returns response?s status.\n      get status() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].status;\n      }\n      // Returns whether response?s status is an ok status.\n      get ok() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].status >= 200 && this[kState].status <= 299;\n      }\n      // Returns response?s status message.\n      get statusText() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].statusText;\n      }\n      // Returns response?s headers as Headers.\n      get headers() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kHeaders];\n      }\n      get body() {\n        webidl.brandCheck(this\x2C _Response);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this\x2C _Response);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      // Returns a clone of response.\n      clone() {\n        webidl.brandCheck(this\x2C _Response);\n        if (bodyUnusable(this)) {\n          throw webidl.errors.exception({\n            header: "Response.clone"\x2C\n            message: "Body has already been consumed."\n          });\n        }\n        const clonedResponse = cloneResponse(this[kState]);\n        return fromInnerResponse(clonedResponse\x2C getHeadersGuard(this[kHeaders]));\n      }\n      [nodeUtil.inspect.custom](depth\x2C options) {\n        if (options.depth === null) {\n          options.depth = 2;\n        }\n        options.colors ??= true;\n        const properties = {\n          status: this.status\x2C\n          statusText: this.statusText\x2C\n          headers: this.headers\x2C\n          body: this.body\x2C\n          bodyUsed: this.bodyUsed\x2C\n          ok: this.ok\x2C\n          redirected: this.redirected\x2C\n          type: this.type\x2C\n          url: this.url\n        };\n        return `Response ${nodeUtil.formatWithOptions(options\x2C properties)}`;\n      }\n    };\n    mixinBody(Response);\n    Object.defineProperties(Response.prototype\x2C {\n      type: kEnumerableProperty\x2C\n      url: kEnumerableProperty\x2C\n      status: kEnumerableProperty\x2C\n      ok: kEnumerableProperty\x2C\n      redirected: kEnumerableProperty\x2C\n      statusText: kEnumerableProperty\x2C\n      headers: kEnumerableProperty\x2C\n      clone: kEnumerableProperty\x2C\n      body: kEnumerableProperty\x2C\n      bodyUsed: kEnumerableProperty\x2C\n      [Symbol.toStringTag]: {\n        value: "Response"\x2C\n        configurable: true\n      }\n    });\n    Object.defineProperties(Response\x2C {\n      json: kEnumerableProperty\x2C\n      redirect: kEnumerableProperty\x2C\n      error: kEnumerableProperty\n    });\n    function cloneResponse(response) {\n      if (response.internalResponse) {\n        return filterResponse(\n          cloneResponse(response.internalResponse)\x2C\n          response.type\n        );\n      }\n      const newResponse = makeResponse({ ...response\x2C body: null });\n      if (response.body != null) {\n        newResponse.body = cloneBody(newResponse\x2C response.body);\n      }\n      return newResponse;\n    }\n    __name(cloneResponse\x2C "cloneResponse");\n    function makeResponse(init) {\n      return {\n        aborted: false\x2C\n        rangeRequested: false\x2C\n        timingAllowPassed: false\x2C\n        requestIncludesCredentials: false\x2C\n        type: "default"\x2C\n        status: 200\x2C\n        timingInfo: null\x2C\n        cacheState: ""\x2C\n        statusText: ""\x2C\n        ...init\x2C\n        headersList: init?.headersList ? new HeadersList(init?.headersList) : new HeadersList()\x2C\n        urlList: init?.urlList ? [...init.urlList] : []\n      };\n    }\n    __name(makeResponse\x2C "makeResponse");\n    function makeNetworkError(reason) {\n      const isError = isErrorLike(reason);\n      return makeResponse({\n        type: "error"\x2C\n        status: 0\x2C\n        error: isError ? reason : new Error(reason ? String(reason) : reason)\x2C\n        aborted: reason && reason.name === "AbortError"\n      });\n    }\n    __name(makeNetworkError\x2C "makeNetworkError");\n    function isNetworkError(response) {\n      return (\n        // A network error is a response whose type is "error"\x2C\n        response.type === "error" && // status is 0\n        response.status === 0\n      );\n    }\n    __name(isNetworkError\x2C "isNetworkError");\n    function makeFilteredResponse(response\x2C state) {\n      state = {\n        internalResponse: response\x2C\n        ...state\n      };\n      return new Proxy(response\x2C {\n        get(target\x2C p) {\n          return p in state ? state[p] : target[p];\n        }\x2C\n        set(target\x2C p\x2C value) {\n          assert(!(p in state));\n          target[p] = value;\n          return true;\n        }\n      });\n    }\n    __name(makeFilteredResponse\x2C "makeFilteredResponse");\n    function filterResponse(response\x2C type) {\n      if (type === "basic") {\n        return makeFilteredResponse(response\x2C {\n          type: "basic"\x2C\n          headersList: response.headersList\n        });\n      } else if (type === "cors") {\n        return makeFilteredResponse(response\x2C {\n          type: "cors"\x2C\n          headersList: response.headersList\n        });\n      } else if (type === "opaque") {\n        return makeFilteredResponse(response\x2C {\n          type: "opaque"\x2C\n          urlList: Object.freeze([])\x2C\n          status: 0\x2C\n          statusText: ""\x2C\n          body: null\n        });\n      } else if (type === "opaqueredirect") {\n        return makeFilteredResponse(response\x2C {\n          type: "opaqueredirect"\x2C\n          status: 0\x2C\n          statusText: ""\x2C\n          headersList: []\x2C\n          body: null\n        });\n      } else {\n        assert(false);\n      }\n    }\n    __name(filterResponse\x2C "filterResponse");\n    function makeAppropriateNetworkError(fetchParams\x2C err = null) {\n      assert(isCancelled(fetchParams));\n      return isAborted(fetchParams) ? makeNetworkError(Object.assign(new DOMException("The operation was aborted."\x2C "AbortError")\x2C { cause: err })) : makeNetworkError(Object.assign(new DOMException("Request was cancelled.")\x2C { cause: err }));\n    }\n    __name(makeAppropriateNetworkError\x2C "makeAppropriateNetworkError");\n    function initializeResponse(response\x2C init\x2C body) {\n      if (init.status !== null && (init.status < 200 || init.status > 599)) {\n        throw new RangeError('init["status"] must be in the range of 200 to 599\x2C inclusive.');\n      }\n      if ("statusText" in init && init.statusText != null) {\n        if (!isValidReasonPhrase(String(init.statusText))) {\n          throw new TypeError("Invalid statusText");\n        }\n      }\n      if ("status" in init && init.status != null) {\n        response[kState].status = init.status;\n      }\n      if ("statusText" in init && init.statusText != null) {\n        response[kState].statusText = init.statusText;\n      }\n      if ("headers" in init && init.headers != null) {\n        fill(response[kHeaders]\x2C init.headers);\n      }\n      if (body) {\n        if (nullBodyStatus.includes(response.status)) {\n          throw webidl.errors.exception({\n            header: "Response constructor"\x2C\n            message: `Invalid response status code ${response.status}`\n          });\n        }\n        response[kState].body = body.body;\n        if (body.type != null && !response[kState].headersList.contains("content-type"\x2C true)) {\n          response[kState].headersList.append("content-type"\x2C body.type\x2C true);\n        }\n      }\n    }\n    __name(initializeResponse\x2C "initializeResponse");\n    function fromInnerResponse(innerResponse\x2C guard) {\n      const response = new Response(kConstruct);\n      response[kState] = innerResponse;\n      response[kHeaders] = new Headers(kConstruct);\n      setHeadersList(response[kHeaders]\x2C innerResponse.headersList);\n      setHeadersGuard(response[kHeaders]\x2C guard);\n      if (hasFinalizationRegistry && innerResponse.body?.stream) {\n        streamRegistry.register(response\x2C new WeakRef(innerResponse.body.stream));\n      }\n      return response;\n    }\n    __name(fromInnerResponse\x2C "fromInnerResponse");\n    webidl.converters.ReadableStream = webidl.interfaceConverter(\n      ReadableStream\n    );\n    webidl.converters.FormData = webidl.interfaceConverter(\n      FormData\n    );\n    webidl.converters.URLSearchParams = webidl.interfaceConverter(\n      URLSearchParams\n    );\n    webidl.converters.XMLHttpRequestBodyInit = function(V\x2C prefix\x2C name) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V\x2C prefix\x2C name);\n      }\n      if (isBlobLike(V)) {\n        return webidl.converters.Blob(V\x2C prefix\x2C name\x2C { strict: false });\n      }\n      if (ArrayBuffer.isView(V) || types.isArrayBuffer(V)) {\n        return webidl.converters.BufferSource(V\x2C prefix\x2C name);\n      }\n      if (util.isFormDataLike(V)) {\n        return webidl.converters.FormData(V\x2C prefix\x2C name\x2C { strict: false });\n      }\n      if (V instanceof URLSearchParams) {\n        return webidl.converters.URLSearchParams(V\x2C prefix\x2C name);\n      }\n      return webidl.converters.DOMString(V\x2C prefix\x2C name);\n    };\n    webidl.converters.BodyInit = function(V\x2C prefix\x2C argument) {\n      if (V instanceof ReadableStream) {\n        return webidl.converters.ReadableStream(V\x2C prefix\x2C argument);\n      }\n      if (V?.[Symbol.asyncIterator]) {\n        return V;\n      }\n      return webidl.converters.XMLHttpRequestBodyInit(V\x2C prefix\x2C argument);\n    };\n    webidl.converters.ResponseInit = webidl.dictionaryConverter([\n      {\n        key: "status"\x2C\n        converter: webidl.converters["unsigned short"]\x2C\n        defaultValue: () => 200\n      }\x2C\n      {\n        key: "statusText"\x2C\n        converter: webidl.converters.ByteString\x2C\n        defaultValue: () => ""\n      }\x2C\n      {\n        key: "headers"\x2C\n        converter: webidl.converters.HeadersInit\n      }\n    ]);\n    module2.exports = {\n      isNetworkError\x2C\n      makeNetworkError\x2C\n      makeResponse\x2C\n      makeAppropriateNetworkError\x2C\n      filterResponse\x2C\n      Response\x2C\n      cloneResponse\x2C\n      fromInnerResponse\n    };\n  }\n});\n\n// lib/web/fetch/dispatcher-weakref.js\nvar require_dispatcher_weakref = __commonJS({\n  "lib/web/fetch/dispatcher-weakref.js"(exports2\x2C module2) {\n    "use strict";\n    var { kConnected\x2C kSize } = require_symbols();\n    var CompatWeakRef = class {\n      static {\n        __name(this\x2C "CompatWeakRef");\n      }\n      constructor(value) {\n        this.value = value;\n      }\n      deref() {\n        return this.value[kConnected] === 0 && this.value[kSize] === 0 ? void 0 : this.value;\n      }\n    };\n    var CompatFinalizer = class {\n      static {\n        __name(this\x2C "CompatFinalizer");\n      }\n      constructor(finalizer) {\n        this.finalizer = finalizer;\n      }\n      register(dispatcher\x2C key) {\n        if (dispatcher.on) {\n          dispatcher.on("disconnect"\x2C () => {\n            if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n              this.finalizer(key);\n            }\n          });\n        }\n      }\n      unregister(key) {\n      }\n    };\n    module2.exports = function() {\n      if (process.env.NODE_V8_COVERAGE && process.version.startsWith("v18")) {\n        process._rawDebug("Using compatibility WeakRef and FinalizationRegistry");\n        return {\n          WeakRef: CompatWeakRef\x2C\n          FinalizationRegistry: CompatFinalizer\n        };\n      }\n      return { WeakRef\x2C FinalizationRegistry };\n    };\n  }\n});\n\n// lib/web/fetch/request.js\nvar require_request2 = __commonJS({\n  "lib/web/fetch/request.js"(exports2\x2C module2) {\n    "use strict";\n    var { extractBody\x2C mixinBody\x2C cloneBody\x2C bodyUnusable } = require_body();\n    var { Headers\x2C fill: fillHeaders\x2C HeadersList\x2C setHeadersGuard\x2C getHeadersGuard\x2C setHeadersList\x2C getHeadersList } = require_headers();\n    var { FinalizationRegistry: FinalizationRegistry2 } = require_dispatcher_weakref()();\n    var util = require_util();\n    var nodeUtil = require("node:util");\n    var {\n      isValidHTTPToken\x2C\n      sameOrigin\x2C\n      environmentSettingsObject\n    } = require_util2();\n    var {\n      forbiddenMethodsSet\x2C\n      corsSafeListedMethodsSet\x2C\n      referrerPolicy\x2C\n      requestRedirect\x2C\n      requestMode\x2C\n      requestCredentials\x2C\n      requestCache\x2C\n      requestDuplex\n    } = require_constants3();\n    var { kEnumerableProperty\x2C normalizedMethodRecordsBase\x2C normalizedMethodRecords } = util;\n    var { kHeaders\x2C kSignal\x2C kState\x2C kDispatcher } = require_symbols2();\n    var { webidl } = require_webidl();\n    var { URLSerializer } = require_data_url();\n    var { kConstruct } = require_symbols();\n    var assert = require("node:assert");\n    var { getMaxListeners\x2C setMaxListeners\x2C getEventListeners\x2C defaultMaxListeners } = require("node:events");\n    var kAbortController = Symbol("abortController");\n    var requestFinalizer = new FinalizationRegistry2(({ signal\x2C abort }) => {\n      signal.removeEventListener("abort"\x2C abort);\n    });\n    var dependentControllerMap = /* @__PURE__ */ new WeakMap();\n    function buildAbort(acRef) {\n      return abort;\n      function abort() {\n        const ac = acRef.deref();\n        if (ac !== void 0) {\n          requestFinalizer.unregister(abort);\n          this.removeEventListener("abort"\x2C abort);\n          ac.abort(this.reason);\n          const controllerList = dependentControllerMap.get(ac.signal);\n          if (controllerList !== void 0) {\n            if (controllerList.size !== 0) {\n              for (const ref of controllerList) {\n                const ctrl = ref.deref();\n                if (ctrl !== void 0) {\n                  ctrl.abort(this.reason);\n                }\n              }\n              controllerList.clear();\n            }\n            dependentControllerMap.delete(ac.signal);\n          }\n        }\n      }\n      __name(abort\x2C "abort");\n    }\n    __name(buildAbort\x2C "buildAbort");\n    var patchMethodWarning = false;\n    var Request = class _Request {\n      static {\n        __name(this\x2C "Request");\n      }\n      // https://fetch.spec.whatwg.org/#dom-request\n      constructor(input\x2C init = {}) {\n        webidl.util.markAsUncloneable(this);\n        if (input === kConstruct) {\n          return;\n        }\n        const prefix = "Request constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        input = webidl.converters.RequestInfo(input\x2C prefix\x2C "input");\n        init = webidl.converters.RequestInit(init\x2C prefix\x2C "init");\n        let request = null;\n        let fallbackMode = null;\n        const baseUrl = environmentSettingsObject.settingsObject.baseUrl;\n        let signal = null;\n        if (typeof input === "string") {\n          this[kDispatcher] = init.dispatcher;\n          let parsedURL;\n          try {\n            parsedURL = new URL(input\x2C baseUrl);\n          } catch (err) {\n            throw new TypeError("Failed to parse URL from " + input\x2C { cause: err });\n          }\n          if (parsedURL.username || parsedURL.password) {\n            throw new TypeError(\n              "Request cannot be constructed from a URL that includes credentials: " + input\n            );\n          }\n          request = makeRequest({ urlList: [parsedURL] });\n          fallbackMode = "cors";\n        } else {\n          this[kDispatcher] = init.dispatcher || input[kDispatcher];\n          assert(input instanceof _Request);\n          request = input[kState];\n          signal = input[kSignal];\n        }\n        const origin = environmentSettingsObject.settingsObject.origin;\n        let window = "client";\n        if (request.window?.constructor?.name === "EnvironmentSettingsObject" && sameOrigin(request.window\x2C origin)) {\n          window = request.window;\n        }\n        if (init.window != null) {\n          throw new TypeError(`'window' option '${window}' must be null`);\n        }\n        if ("window" in init) {\n          window = "no-window";\n        }\n        request = makeRequest({\n          // URL request?s URL.\n          // undici implementation note: this is set as the first item in request's urlList in makeRequest\n          // method request?s method.\n          method: request.method\x2C\n          // header list A copy of request?s header list.\n          // undici implementation note: headersList is cloned in makeRequest\n          headersList: request.headersList\x2C\n          // unsafe-request flag Set.\n          unsafeRequest: request.unsafeRequest\x2C\n          // client This?s relevant settings object.\n          client: environmentSettingsObject.settingsObject\x2C\n          // window window.\n          window\x2C\n          // priority request?s priority.\n          priority: request.priority\x2C\n          // origin request?s origin. The propagation of the origin is only significant for navigation requests\n          // being handled by a service worker. In this scenario a request can have an origin that is different\n          // from the current client.\n          origin: request.origin\x2C\n          // referrer request?s referrer.\n          referrer: request.referrer\x2C\n          // referrer policy request?s referrer policy.\n          referrerPolicy: request.referrerPolicy\x2C\n          // mode request?s mode.\n          mode: request.mode\x2C\n          // credentials mode request?s credentials mode.\n          credentials: request.credentials\x2C\n          // cache mode request?s cache mode.\n          cache: request.cache\x2C\n          // redirect mode request?s redirect mode.\n          redirect: request.redirect\x2C\n          // integrity metadata request?s integrity metadata.\n          integrity: request.integrity\x2C\n          // keepalive request?s keepalive.\n          keepalive: request.keepalive\x2C\n          // reload-navigation flag request?s reload-navigation flag.\n          reloadNavigation: request.reloadNavigation\x2C\n          // history-navigation flag request?s history-navigation flag.\n          historyNavigation: request.historyNavigation\x2C\n          // URL list A clone of request?s URL list.\n          urlList: [...request.urlList]\n        });\n        const initHasKey = Object.keys(init).length !== 0;\n        if (initHasKey) {\n          if (request.mode === "navigate") {\n            request.mode = "same-origin";\n          }\n          request.reloadNavigation = false;\n          request.historyNavigation = false;\n          request.origin = "client";\n          request.referrer = "client";\n          request.referrerPolicy = "";\n          request.url = request.urlList[request.urlList.length - 1];\n          request.urlList = [request.url];\n        }\n        if (init.referrer !== void 0) {\n          const referrer = init.referrer;\n          if (referrer === "") {\n            request.referrer = "no-referrer";\n          } else {\n            let parsedReferrer;\n            try {\n              parsedReferrer = new URL(referrer\x2C baseUrl);\n            } catch (err) {\n              throw new TypeError(`Referrer "${referrer}" is not a valid URL.`\x2C { cause: err });\n            }\n            if (parsedReferrer.protocol === "about:" && parsedReferrer.hostname === "client" || origin && !sameOrigin(parsedReferrer\x2C environmentSettingsObject.settingsObject.baseUrl)) {\n              request.referrer = "client";\n            } else {\n              request.referrer = parsedReferrer;\n            }\n          }\n        }\n        if (init.referrerPolicy !== void 0) {\n          request.referrerPolicy = init.referrerPolicy;\n        }\n        let mode;\n        if (init.mode !== void 0) {\n          mode = init.mode;\n        } else {\n          mode = fallbackMode;\n        }\n        if (mode === "navigate") {\n          throw webidl.errors.exception({\n            header: "Request constructor"\x2C\n            message: "invalid request mode navigate."\n          });\n        }\n        if (mode != null) {\n          request.mode = mode;\n        }\n        if (init.credentials !== void 0) {\n          request.credentials = init.credentials;\n        }\n        if (init.cache !== void 0) {\n          request.cache = init.cache;\n        }\n        if (request.cache === "only-if-cached" && request.mode !== "same-origin") {\n          throw new TypeError(\n            "'only-if-cached' can be set only with 'same-origin' mode"\n          );\n        }\n        if (init.redirect !== void 0) {\n          request.redirect = init.redirect;\n        }\n        if (init.integrity != null) {\n          request.integrity = String(init.integrity);\n        }\n        if (init.keepalive !== void 0) {\n          request.keepalive = Boolean(init.keepalive);\n        }\n        if (init.method !== void 0) {\n          let method = init.method;\n          const mayBeNormalized = normalizedMethodRecords[method];\n          if (mayBeNormalized !== void 0) {\n            request.method = mayBeNormalized;\n          } else {\n            if (!isValidHTTPToken(method)) {\n              throw new TypeError(`'${method}' is not a valid HTTP method.`);\n            }\n            const upperCase = method.toUpperCase();\n            if (forbiddenMethodsSet.has(upperCase)) {\n              throw new TypeError(`'${method}' HTTP method is unsupported.`);\n            }\n            method = normalizedMethodRecordsBase[upperCase] ?? method;\n            request.method = method;\n          }\n          if (!patchMethodWarning && request.method === "patch") {\n            process.emitWarning("Using `patch` is highly likely to result in a `405 Method Not Allowed`. `PATCH` is much more likely to succeed."\x2C {\n              code: "UNDICI-FETCH-patch"\n            });\n            patchMethodWarning = true;\n          }\n        }\n        if (init.signal !== void 0) {\n          signal = init.signal;\n        }\n        this[kState] = request;\n        const ac = new AbortController();\n        this[kSignal] = ac.signal;\n        if (signal != null) {\n          if (!signal || typeof signal.aborted !== "boolean" || typeof signal.addEventListener !== "function") {\n            throw new TypeError(\n              "Failed to construct 'Request': member signal is not of type AbortSignal."\n            );\n          }\n          if (signal.aborted) {\n            ac.abort(signal.reason);\n          } else {\n            this[kAbortController] = ac;\n            const acRef = new WeakRef(ac);\n            const abort = buildAbort(acRef);\n            try {\n              if (typeof getMaxListeners === "function" && getMaxListeners(signal) === defaultMaxListeners) {\n                setMaxListeners(1500\x2C signal);\n              } else if (getEventListeners(signal\x2C "abort").length >= defaultMaxListeners) {\n                setMaxListeners(1500\x2C signal);\n              }\n            } catch {\n            }\n            util.addAbortListener(signal\x2C abort);\n            requestFinalizer.register(ac\x2C { signal\x2C abort }\x2C abort);\n          }\n        }\n        this[kHeaders] = new Headers(kConstruct);\n        setHeadersList(this[kHeaders]\x2C request.headersList);\n        setHeadersGuard(this[kHeaders]\x2C "request");\n        if (mode === "no-cors") {\n          if (!corsSafeListedMethodsSet.has(request.method)) {\n            throw new TypeError(\n              `'${request.method} is unsupported in no-cors mode.`\n            );\n          }\n          setHeadersGuard(this[kHeaders]\x2C "request-no-cors");\n        }\n        if (initHasKey) {\n          const headersList = getHeadersList(this[kHeaders]);\n          const headers = init.headers !== void 0 ? init.headers : new HeadersList(headersList);\n          headersList.clear();\n          if (headers instanceof HeadersList) {\n            for (const { name\x2C value } of headers.rawValues()) {\n              headersList.append(name\x2C value\x2C false);\n            }\n            headersList.cookies = headers.cookies;\n          } else {\n            fillHeaders(this[kHeaders]\x2C headers);\n          }\n        }\n        const inputBody = input instanceof _Request ? input[kState].body : null;\n        if ((init.body != null || inputBody != null) && (request.method === "GET" || request.method === "HEAD")) {\n          throw new TypeError("Request with GET/HEAD method cannot have body.");\n        }\n        let initBody = null;\n        if (init.body != null) {\n          const [extractedBody\x2C contentType] = extractBody(\n            init.body\x2C\n            request.keepalive\n          );\n          initBody = extractedBody;\n          if (contentType && !getHeadersList(this[kHeaders]).contains("content-type"\x2C true)) {\n            this[kHeaders].append("content-type"\x2C contentType);\n          }\n        }\n        const inputOrInitBody = initBody ?? inputBody;\n        if (inputOrInitBody != null && inputOrInitBody.source == null) {\n          if (initBody != null && init.duplex == null) {\n            throw new TypeError("RequestInit: duplex option is required when sending a body.");\n          }\n          if (request.mode !== "same-origin" && request.mode !== "cors") {\n            throw new TypeError(\n              'If request is made from ReadableStream\x2C mode should be "same-origin" or "cors"'\n            );\n          }\n          request.useCORSPreflightFlag = true;\n        }\n        let finalBody = inputOrInitBody;\n        if (initBody == null && inputBody != null) {\n          if (bodyUnusable(input)) {\n            throw new TypeError(\n              "Cannot construct a Request with a Request object that has already been used."\n            );\n          }\n          const identityTransform = new TransformStream();\n          inputBody.stream.pipeThrough(identityTransform);\n          finalBody = {\n            source: inputBody.source\x2C\n            length: inputBody.length\x2C\n            stream: identityTransform.readable\n          };\n        }\n        this[kState].body = finalBody;\n      }\n      // Returns request?s HTTP method\x2C which is "GET" by default.\n      get method() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].method;\n      }\n      // Returns the URL of request as a string.\n      get url() {\n        webidl.brandCheck(this\x2C _Request);\n        return URLSerializer(this[kState].url);\n      }\n      // Returns a Headers object consisting of the headers associated with request.\n      // Note that headers added in the network layer by the user agent will not\n      // be accounted for in this object\x2C e.g.\x2C the "Host" header.\n      get headers() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kHeaders];\n      }\n      // Returns the kind of resource requested by request\x2C e.g.\x2C "document"\n      // or "script".\n      get destination() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].destination;\n      }\n      // Returns the referrer of request. Its value can be a same-origin URL if\n      // explicitly set in init\x2C the empty string to indicate no referrer\x2C and\n      // "about:client" when defaulting to the global?s default. This is used\n      // during fetching to determine the value of the `Referer` header of the\n      // request being made.\n      get referrer() {\n        webidl.brandCheck(this\x2C _Request);\n        if (this[kState].referrer === "no-referrer") {\n          return "";\n        }\n        if (this[kState].referrer === "client") {\n          return "about:client";\n        }\n        return this[kState].referrer.toString();\n      }\n      // Returns the referrer policy associated with request.\n      // This is used during fetching to compute the value of the request?s\n      // referrer.\n      get referrerPolicy() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].referrerPolicy;\n      }\n      // Returns the mode associated with request\x2C which is a string indicating\n      // whether the request will use CORS\x2C or will be restricted to same-origin\n      // URLs.\n      get mode() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].mode;\n      }\n      // Returns the credentials mode associated with request\x2C\n      // which is a string indicating whether credentials will be sent with the\n      // request always\x2C never\x2C or only when sent to a same-origin URL.\n      get credentials() {\n        return this[kState].credentials;\n      }\n      // Returns the cache mode associated with request\x2C\n      // which is a string indicating how the request will\n      // interact with the browser?s cache when fetching.\n      get cache() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].cache;\n      }\n      // Returns the redirect mode associated with request\x2C\n      // which is a string indicating how redirects for the\n      // request will be handled during fetching. A request\n      // will follow redirects by default.\n      get redirect() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].redirect;\n      }\n      // Returns request?s subresource integrity metadata\x2C which is a\n      // cryptographic hash of the resource being fetched. Its value\n      // consists of multiple hashes separated by whitespace. [SRI]\n      get integrity() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].integrity;\n      }\n      // Returns a boolean indicating whether or not request can outlive the\n      // global in which it was created.\n      get keepalive() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].keepalive;\n      }\n      // Returns a boolean indicating whether or not request is for a reload\n      // navigation.\n      get isReloadNavigation() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].reloadNavigation;\n      }\n      // Returns a boolean indicating whether or not request is for a history\n      // navigation (a.k.a. back-forward navigation).\n      get isHistoryNavigation() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].historyNavigation;\n      }\n      // Returns the signal associated with request\x2C which is an AbortSignal\n      // object indicating whether or not request has been aborted\x2C and its\n      // abort event handler.\n      get signal() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kSignal];\n      }\n      get body() {\n        webidl.brandCheck(this\x2C _Request);\n        return this[kState].body ? this[kState].body.stream : null;\n      }\n      get bodyUsed() {\n        webidl.brandCheck(this\x2C _Request);\n        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);\n      }\n      get duplex() {\n        webidl.brandCheck(this\x2C _Request);\n        return "half";\n      }\n      // Returns a clone of request.\n      clone() {\n        webidl.brandCheck(this\x2C _Request);\n        if (bodyUnusable(this)) {\n          throw new TypeError("unusable");\n        }\n        const clonedRequest = cloneRequest(this[kState]);\n        const ac = new AbortController();\n        if (this.signal.aborted) {\n          ac.abort(this.signal.reason);\n        } else {\n          let list = dependentControllerMap.get(this.signal);\n          if (list === void 0) {\n            list = /* @__PURE__ */ new Set();\n            dependentControllerMap.set(this.signal\x2C list);\n          }\n          const acRef = new WeakRef(ac);\n          list.add(acRef);\n          util.addAbortListener(\n            ac.signal\x2C\n            buildAbort(acRef)\n          );\n        }\n        return fromInnerRequest(clonedRequest\x2C ac.signal\x2C getHeadersGuard(this[kHeaders]));\n      }\n      [nodeUtil.inspect.custom](depth\x2C options) {\n        if (options.depth === null) {\n          options.depth = 2;\n        }\n        options.colors ??= true;\n        const properties = {\n          method: this.method\x2C\n          url: this.url\x2C\n          headers: this.headers\x2C\n          destination: this.destination\x2C\n          referrer: this.referrer\x2C\n          referrerPolicy: this.referrerPolicy\x2C\n          mode: this.mode\x2C\n          credentials: this.credentials\x2C\n          cache: this.cache\x2C\n          redirect: this.redirect\x2C\n          integrity: this.integrity\x2C\n          keepalive: this.keepalive\x2C\n          isReloadNavigation: this.isReloadNavigation\x2C\n          isHistoryNavigation: this.isHistoryNavigation\x2C\n          signal: this.signal\n        };\n        return `Request ${nodeUtil.formatWithOptions(options\x2C properties)}`;\n      }\n    };\n    mixinBody(Request);\n    function makeRequest(init) {\n      return {\n        method: init.method ?? "GET"\x2C\n        localURLsOnly: init.localURLsOnly ?? false\x2C\n        unsafeRequest: init.unsafeRequest ?? false\x2C\n        body: init.body ?? null\x2C\n        client: init.client ?? null\x2C\n        reservedClient: init.reservedClient ?? null\x2C\n        replacesClientId: init.replacesClientId ?? ""\x2C\n        window: init.window ?? "client"\x2C\n        keepalive: init.keepalive ?? false\x2C\n        serviceWorkers: init.serviceWorkers ?? "all"\x2C\n        initiator: init.initiator ?? ""\x2C\n        destination: init.destination ?? ""\x2C\n        priority: init.priority ?? null\x2C\n        origin: init.origin ?? "client"\x2C\n        policyContainer: init.policyContainer ?? "client"\x2C\n        referrer: init.referrer ?? "client"\x2C\n        referrerPolicy: init.referrerPolicy ?? ""\x2C\n        mode: init.mode ?? "no-cors"\x2C\n        useCORSPreflightFlag: init.useCORSPreflightFlag ?? false\x2C\n        credentials: init.credentials ?? "same-origin"\x2C\n        useCredentials: init.useCredentials ?? false\x2C\n        cache: init.cache ?? "default"\x2C\n        redirect: init.redirect ?? "follow"\x2C\n        integrity: init.integrity ?? ""\x2C\n        cryptoGraphicsNonceMetadata: init.cryptoGraphicsNonceMetadata ?? ""\x2C\n        parserMetadata: init.parserMetadata ?? ""\x2C\n        reloadNavigation: init.reloadNavigation ?? false\x2C\n        historyNavigation: init.historyNavigation ?? false\x2C\n        userActivation: init.userActivation ?? false\x2C\n        taintedOrigin: init.taintedOrigin ?? false\x2C\n        redirectCount: init.redirectCount ?? 0\x2C\n        responseTainting: init.responseTainting ?? "basic"\x2C\n        preventNoCacheCacheControlHeaderModification: init.preventNoCacheCacheControlHeaderModification ?? false\x2C\n        done: init.done ?? false\x2C\n        timingAllowFailed: init.timingAllowFailed ?? false\x2C\n        urlList: init.urlList\x2C\n        url: init.urlList[0]\x2C\n        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList()\n      };\n    }\n    __name(makeRequest\x2C "makeRequest");\n    function cloneRequest(request) {\n      const newRequest = makeRequest({ ...request\x2C body: null });\n      if (request.body != null) {\n        newRequest.body = cloneBody(newRequest\x2C request.body);\n      }\n      return newRequest;\n    }\n    __name(cloneRequest\x2C "cloneRequest");\n    function fromInnerRequest(innerRequest\x2C signal\x2C guard) {\n      const request = new Request(kConstruct);\n      request[kState] = innerRequest;\n      request[kSignal] = signal;\n      request[kHeaders] = new Headers(kConstruct);\n      setHeadersList(request[kHeaders]\x2C innerRequest.headersList);\n      setHeadersGuard(request[kHeaders]\x2C guard);\n      return request;\n    }\n    __name(fromInnerRequest\x2C "fromInnerRequest");\n    Object.defineProperties(Request.prototype\x2C {\n      method: kEnumerableProperty\x2C\n      url: kEnumerableProperty\x2C\n      headers: kEnumerableProperty\x2C\n      redirect: kEnumerableProperty\x2C\n      clone: kEnumerableProperty\x2C\n      signal: kEnumerableProperty\x2C\n      duplex: kEnumerableProperty\x2C\n      destination: kEnumerableProperty\x2C\n      body: kEnumerableProperty\x2C\n      bodyUsed: kEnumerableProperty\x2C\n      isHistoryNavigation: kEnumerableProperty\x2C\n      isReloadNavigation: kEnumerableProperty\x2C\n      keepalive: kEnumerableProperty\x2C\n      integrity: kEnumerableProperty\x2C\n      cache: kEnumerableProperty\x2C\n      credentials: kEnumerableProperty\x2C\n      attribute: kEnumerableProperty\x2C\n      referrerPolicy: kEnumerableProperty\x2C\n      referrer: kEnumerableProperty\x2C\n      mode: kEnumerableProperty\x2C\n      [Symbol.toStringTag]: {\n        value: "Request"\x2C\n        configurable: true\n      }\n    });\n    webidl.converters.Request = webidl.interfaceConverter(\n      Request\n    );\n    webidl.converters.RequestInfo = function(V\x2C prefix\x2C argument) {\n      if (typeof V === "string") {\n        return webidl.converters.USVString(V\x2C prefix\x2C argument);\n      }\n      if (V instanceof Request) {\n        return webidl.converters.Request(V\x2C prefix\x2C argument);\n      }\n      return webidl.converters.USVString(V\x2C prefix\x2C argument);\n    };\n    webidl.converters.AbortSignal = webidl.interfaceConverter(\n      AbortSignal\n    );\n    webidl.converters.RequestInit = webidl.dictionaryConverter([\n      {\n        key: "method"\x2C\n        converter: webidl.converters.ByteString\n      }\x2C\n      {\n        key: "headers"\x2C\n        converter: webidl.converters.HeadersInit\n      }\x2C\n      {\n        key: "body"\x2C\n        converter: webidl.nullableConverter(\n          webidl.converters.BodyInit\n        )\n      }\x2C\n      {\n        key: "referrer"\x2C\n        converter: webidl.converters.USVString\n      }\x2C\n      {\n        key: "referrerPolicy"\x2C\n        converter: webidl.converters.DOMString\x2C\n        // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n        allowedValues: referrerPolicy\n      }\x2C\n      {\n        key: "mode"\x2C\n        converter: webidl.converters.DOMString\x2C\n        // https://fetch.spec.whatwg.org/#concept-request-mode\n        allowedValues: requestMode\n      }\x2C\n      {\n        key: "credentials"\x2C\n        converter: webidl.converters.DOMString\x2C\n        // https://fetch.spec.whatwg.org/#requestcredentials\n        allowedValues: requestCredentials\n      }\x2C\n      {\n        key: "cache"\x2C\n        converter: webidl.converters.DOMString\x2C\n        // https://fetch.spec.whatwg.org/#requestcache\n        allowedValues: requestCache\n      }\x2C\n      {\n        key: "redirect"\x2C\n        converter: webidl.converters.DOMString\x2C\n        // https://fetch.spec.whatwg.org/#requestredirect\n        allowedValues: requestRedirect\n      }\x2C\n      {\n        key: "integrity"\x2C\n        converter: webidl.converters.DOMString\n      }\x2C\n      {\n        key: "keepalive"\x2C\n        converter: webidl.converters.boolean\n      }\x2C\n      {\n        key: "signal"\x2C\n        converter: webidl.nullableConverter(\n          (signal) => webidl.converters.AbortSignal(\n            signal\x2C\n            "RequestInit"\x2C\n            "signal"\x2C\n            { strict: false }\n          )\n        )\n      }\x2C\n      {\n        key: "window"\x2C\n        converter: webidl.converters.any\n      }\x2C\n      {\n        key: "duplex"\x2C\n        converter: webidl.converters.DOMString\x2C\n        allowedValues: requestDuplex\n      }\x2C\n      {\n        key: "dispatcher"\x2C\n        // undici specific option\n        converter: webidl.converters.any\n      }\n    ]);\n    module2.exports = { Request\x2C makeRequest\x2C fromInnerRequest\x2C cloneRequest };\n  }\n});\n\n// lib/web/fetch/index.js\nvar require_fetch = __commonJS({\n  "lib/web/fetch/index.js"(exports2\x2C module2) {\n    "use strict";\n    var {\n      makeNetworkError\x2C\n      makeAppropriateNetworkError\x2C\n      filterResponse\x2C\n      makeResponse\x2C\n      fromInnerResponse\n    } = require_response();\n    var { HeadersList } = require_headers();\n    var { Request\x2C cloneRequest } = require_request2();\n    var zlib = require("node:zlib");\n    var {\n      bytesMatch\x2C\n      makePolicyContainer\x2C\n      clonePolicyContainer\x2C\n      requestBadPort\x2C\n      TAOCheck\x2C\n      appendRequestOriginHeader\x2C\n      responseLocationURL\x2C\n      requestCurrentURL\x2C\n      setRequestReferrerPolicyOnRedirect\x2C\n      tryUpgradeRequestToAPotentiallyTrustworthyURL\x2C\n      createOpaqueTimingInfo\x2C\n      appendFetchMetadata\x2C\n      corsCheck\x2C\n      crossOriginResourcePolicyCheck\x2C\n      determineRequestsReferrer\x2C\n      coarsenedSharedCurrentTime\x2C\n      createDeferredPromise\x2C\n      isBlobLike\x2C\n      sameOrigin\x2C\n      isCancelled\x2C\n      isAborted\x2C\n      isErrorLike\x2C\n      fullyReadBody\x2C\n      readableStreamClose\x2C\n      isomorphicEncode\x2C\n      urlIsLocal\x2C\n      urlIsHttpHttpsScheme\x2C\n      urlHasHttpsScheme\x2C\n      clampAndCoarsenConnectionTimingInfo\x2C\n      simpleRangeHeaderValue\x2C\n      buildContentRange\x2C\n      createInflate\x2C\n      extractMimeType\n    } = require_util2();\n    var { kState\x2C kDispatcher } = require_symbols2();\n    var assert = require("node:assert");\n    var { safelyExtractBody\x2C extractBody } = require_body();\n    var {\n      redirectStatusSet\x2C\n      nullBodyStatus\x2C\n      safeMethodsSet\x2C\n      requestBodyHeader\x2C\n      subresourceSet\n    } = require_constants3();\n    var EE = require("node:events");\n    var { Readable\x2C pipeline\x2C finished } = require("node:stream");\n    var { addAbortListener\x2C isErrored\x2C isReadable\x2C bufferToLowerCasedHeaderName } = require_util();\n    var { dataURLProcessor\x2C serializeAMimeType\x2C minimizeSupportedMimeType } = require_data_url();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { webidl } = require_webidl();\n    var { STATUS_CODES } = require("node:http");\n    var GET_OR_HEAD = ["GET"\x2C "HEAD"];\n    var defaultUserAgent = typeof __UNDICI_IS_NODE__ !== "undefined" || true ? "node" : "undici";\n    var resolveObjectURL;\n    var Fetch = class extends EE {\n      static {\n        __name(this\x2C "Fetch");\n      }\n      constructor(dispatcher) {\n        super();\n        this.dispatcher = dispatcher;\n        this.connection = null;\n        this.dump = false;\n        this.state = "ongoing";\n      }\n      terminate(reason) {\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "terminated";\n        this.connection?.destroy(reason);\n        this.emit("terminated"\x2C reason);\n      }\n      // https://fetch.spec.whatwg.org/#fetch-controller-abort\n      abort(error) {\n        if (this.state !== "ongoing") {\n          return;\n        }\n        this.state = "aborted";\n        if (!error) {\n          error = new DOMException("The operation was aborted."\x2C "AbortError");\n        }\n        this.serializedAbortReason = error;\n        this.connection?.destroy(error);\n        this.emit("terminated"\x2C error);\n      }\n    };\n    function handleFetchDone(response) {\n      finalizeAndReportTiming(response\x2C "fetch");\n    }\n    __name(handleFetchDone\x2C "handleFetchDone");\n    function fetch2(input\x2C init = void 0) {\n      webidl.argumentLengthCheck(arguments\x2C 1\x2C "globalThis.fetch");\n      let p = createDeferredPromise();\n      let requestObject;\n      try {\n        requestObject = new Request(input\x2C init);\n      } catch (e) {\n        p.reject(e);\n        return p.promise;\n      }\n      const request = requestObject[kState];\n      if (requestObject.signal.aborted) {\n        abortFetch(p\x2C request\x2C null\x2C requestObject.signal.reason);\n        return p.promise;\n      }\n      const globalObject = request.client.globalObject;\n      if (globalObject?.constructor?.name === "ServiceWorkerGlobalScope") {\n        request.serviceWorkers = "none";\n      }\n      let responseObject = null;\n      let locallyAborted = false;\n      let controller = null;\n      addAbortListener(\n        requestObject.signal\x2C\n        () => {\n          locallyAborted = true;\n          assert(controller != null);\n          controller.abort(requestObject.signal.reason);\n          const realResponse = responseObject?.deref();\n          abortFetch(p\x2C request\x2C realResponse\x2C requestObject.signal.reason);\n        }\n      );\n      const processResponse = /* @__PURE__ */ __name((response) => {\n        if (locallyAborted) {\n          return;\n        }\n        if (response.aborted) {\n          abortFetch(p\x2C request\x2C responseObject\x2C controller.serializedAbortReason);\n          return;\n        }\n        if (response.type === "error") {\n          p.reject(new TypeError("fetch failed"\x2C { cause: response.error }));\n          return;\n        }\n        responseObject = new WeakRef(fromInnerResponse(response\x2C "immutable"));\n        p.resolve(responseObject.deref());\n        p = null;\n      }\x2C "processResponse");\n      controller = fetching({\n        request\x2C\n        processResponseEndOfBody: handleFetchDone\x2C\n        processResponse\x2C\n        dispatcher: requestObject[kDispatcher]\n        // undici\n      });\n      return p.promise;\n    }\n    __name(fetch2\x2C "fetch");\n    function finalizeAndReportTiming(response\x2C initiatorType = "other") {\n      if (response.type === "error" && response.aborted) {\n        return;\n      }\n      if (!response.urlList?.length) {\n        return;\n      }\n      const originalURL = response.urlList[0];\n      let timingInfo = response.timingInfo;\n      let cacheState = response.cacheState;\n      if (!urlIsHttpHttpsScheme(originalURL)) {\n        return;\n      }\n      if (timingInfo === null) {\n        return;\n      }\n      if (!response.timingAllowPassed) {\n        timingInfo = createOpaqueTimingInfo({\n          startTime: timingInfo.startTime\n        });\n        cacheState = "";\n      }\n      timingInfo.endTime = coarsenedSharedCurrentTime();\n      response.timingInfo = timingInfo;\n      markResourceTiming(\n        timingInfo\x2C\n        originalURL.href\x2C\n        initiatorType\x2C\n        globalThis\x2C\n        cacheState\n      );\n    }\n    __name(finalizeAndReportTiming\x2C "finalizeAndReportTiming");\n    var markResourceTiming = performance.markResourceTiming;\n    function abortFetch(p\x2C request\x2C responseObject\x2C error) {\n      if (p) {\n        p.reject(error);\n      }\n      if (request.body != null && isReadable(request.body?.stream)) {\n        request.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n      if (responseObject == null) {\n        return;\n      }\n      const response = responseObject[kState];\n      if (response.body != null && isReadable(response.body?.stream)) {\n        response.body.stream.cancel(error).catch((err) => {\n          if (err.code === "ERR_INVALID_STATE") {\n            return;\n          }\n          throw err;\n        });\n      }\n    }\n    __name(abortFetch\x2C "abortFetch");\n    function fetching({\n      request\x2C\n      processRequestBodyChunkLength\x2C\n      processRequestEndOfBody\x2C\n      processResponse\x2C\n      processResponseEndOfBody\x2C\n      processResponseConsumeBody\x2C\n      useParallelQueue = false\x2C\n      dispatcher = getGlobalDispatcher2()\n      // undici\n    }) {\n      assert(dispatcher);\n      let taskDestination = null;\n      let crossOriginIsolatedCapability = false;\n      if (request.client != null) {\n        taskDestination = request.client.globalObject;\n        crossOriginIsolatedCapability = request.client.crossOriginIsolatedCapability;\n      }\n      const currentTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability);\n      const timingInfo = createOpaqueTimingInfo({\n        startTime: currentTime\n      });\n      const fetchParams = {\n        controller: new Fetch(dispatcher)\x2C\n        request\x2C\n        timingInfo\x2C\n        processRequestBodyChunkLength\x2C\n        processRequestEndOfBody\x2C\n        processResponse\x2C\n        processResponseConsumeBody\x2C\n        processResponseEndOfBody\x2C\n        taskDestination\x2C\n        crossOriginIsolatedCapability\n      };\n      assert(!request.body || request.body.stream);\n      if (request.window === "client") {\n        request.window = request.client?.globalObject?.constructor?.name === "Window" ? request.client : "no-window";\n      }\n      if (request.origin === "client") {\n        request.origin = request.client.origin;\n      }\n      if (request.policyContainer === "client") {\n        if (request.client != null) {\n          request.policyContainer = clonePolicyContainer(\n            request.client.policyContainer\n          );\n        } else {\n          request.policyContainer = makePolicyContainer();\n        }\n      }\n      if (!request.headersList.contains("accept"\x2C true)) {\n        const value = "*/*";\n        request.headersList.append("accept"\x2C value\x2C true);\n      }\n      if (!request.headersList.contains("accept-language"\x2C true)) {\n        request.headersList.append("accept-language"\x2C "*"\x2C true);\n      }\n      if (request.priority === null) {\n      }\n      if (subresourceSet.has(request.destination)) {\n      }\n      mainFetch(fetchParams).catch((err) => {\n        fetchParams.controller.terminate(err);\n      });\n      return fetchParams.controller;\n    }\n    __name(fetching\x2C "fetching");\n    async function mainFetch(fetchParams\x2C recursive = false) {\n      const request = fetchParams.request;\n      let response = null;\n      if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n        response = makeNetworkError("local URLs only");\n      }\n      tryUpgradeRequestToAPotentiallyTrustworthyURL(request);\n      if (requestBadPort(request) === "blocked") {\n        response = makeNetworkError("bad port");\n      }\n      if (request.referrerPolicy === "") {\n        request.referrerPolicy = request.policyContainer.referrerPolicy;\n      }\n      if (request.referrer !== "no-referrer") {\n        request.referrer = determineRequestsReferrer(request);\n      }\n      if (response === null) {\n        response = await (async () => {\n          const currentURL = requestCurrentURL(request);\n          if (\n            // - request?s current URL?s origin is same origin with request?s origin\x2C\n            //   and request?s response tainting is "basic"\n            sameOrigin(currentURL\x2C request.url) && request.responseTainting === "basic" || // request?s current URL?s scheme is "data"\n            currentURL.protocol === "data:" || // - request?s mode is "navigate" or "websocket"\n            (request.mode === "navigate" || request.mode === "websocket")\n          ) {\n            request.responseTainting = "basic";\n            return await schemeFetch(fetchParams);\n          }\n          if (request.mode === "same-origin") {\n            return makeNetworkError('request mode cannot be "same-origin"');\n          }\n          if (request.mode === "no-cors") {\n            if (request.redirect !== "follow") {\n              return makeNetworkError(\n                'redirect mode cannot be "follow" for "no-cors" request'\n              );\n            }\n            request.responseTainting = "opaque";\n            return await schemeFetch(fetchParams);\n          }\n          if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n            return makeNetworkError("URL scheme must be a HTTP(S) scheme");\n          }\n          request.responseTainting = "cors";\n          return await httpFetch(fetchParams);\n        })();\n      }\n      if (recursive) {\n        return response;\n      }\n      if (response.status !== 0 && !response.internalResponse) {\n        if (request.responseTainting === "cors") {\n        }\n        if (request.responseTainting === "basic") {\n          response = filterResponse(response\x2C "basic");\n        } else if (request.responseTainting === "cors") {\n          response = filterResponse(response\x2C "cors");\n        } else if (request.responseTainting === "opaque") {\n          response = filterResponse(response\x2C "opaque");\n        } else {\n          assert(false);\n        }\n      }\n      let internalResponse = response.status === 0 ? response : response.internalResponse;\n      if (internalResponse.urlList.length === 0) {\n        internalResponse.urlList.push(...request.urlList);\n      }\n      if (!request.timingAllowFailed) {\n        response.timingAllowPassed = true;\n      }\n      if (response.type === "opaque" && internalResponse.status === 206 && internalResponse.rangeRequested && !request.headers.contains("range"\x2C true)) {\n        response = internalResponse = makeNetworkError();\n      }\n      if (response.status !== 0 && (request.method === "HEAD" || request.method === "CONNECT" || nullBodyStatus.includes(internalResponse.status))) {\n        internalResponse.body = null;\n        fetchParams.controller.dump = true;\n      }\n      if (request.integrity) {\n        const processBodyError = /* @__PURE__ */ __name((reason) => fetchFinale(fetchParams\x2C makeNetworkError(reason))\x2C "processBodyError");\n        if (request.responseTainting === "opaque" || response.body == null) {\n          processBodyError(response.error);\n          return;\n        }\n        const processBody = /* @__PURE__ */ __name((bytes) => {\n          if (!bytesMatch(bytes\x2C request.integrity)) {\n            processBodyError("integrity mismatch");\n            return;\n          }\n          response.body = safelyExtractBody(bytes)[0];\n          fetchFinale(fetchParams\x2C response);\n        }\x2C "processBody");\n        await fullyReadBody(response.body\x2C processBody\x2C processBodyError);\n      } else {\n        fetchFinale(fetchParams\x2C response);\n      }\n    }\n    __name(mainFetch\x2C "mainFetch");\n    function schemeFetch(fetchParams) {\n      if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n        return Promise.resolve(makeAppropriateNetworkError(fetchParams));\n      }\n      const { request } = fetchParams;\n      const { protocol: scheme } = requestCurrentURL(request);\n      switch (scheme) {\n        case "about:": {\n          return Promise.resolve(makeNetworkError("about scheme is not supported"));\n        }\n        case "blob:": {\n          if (!resolveObjectURL) {\n            resolveObjectURL = require("node:buffer").resolveObjectURL;\n          }\n          const blobURLEntry = requestCurrentURL(request);\n          if (blobURLEntry.search.length !== 0) {\n            return Promise.resolve(makeNetworkError("NetworkError when attempting to fetch resource."));\n          }\n          const blob = resolveObjectURL(blobURLEntry.toString());\n          if (request.method !== "GET" || !isBlobLike(blob)) {\n            return Promise.resolve(makeNetworkError("invalid method"));\n          }\n          const response = makeResponse();\n          const fullLength = blob.size;\n          const serializedFullLength = isomorphicEncode(`${fullLength}`);\n          const type = blob.type;\n          if (!request.headersList.contains("range"\x2C true)) {\n            const bodyWithType = extractBody(blob);\n            response.statusText = "OK";\n            response.body = bodyWithType[0];\n            response.headersList.set("content-length"\x2C serializedFullLength\x2C true);\n            response.headersList.set("content-type"\x2C type\x2C true);\n          } else {\n            response.rangeRequested = true;\n            const rangeHeader = request.headersList.get("range"\x2C true);\n            const rangeValue = simpleRangeHeaderValue(rangeHeader\x2C true);\n            if (rangeValue === "failure") {\n              return Promise.resolve(makeNetworkError("failed to fetch the data URL"));\n            }\n            let { rangeStartValue: rangeStart\x2C rangeEndValue: rangeEnd } = rangeValue;\n            if (rangeStart === null) {\n              rangeStart = fullLength - rangeEnd;\n              rangeEnd = rangeStart + rangeEnd - 1;\n            } else {\n              if (rangeStart >= fullLength) {\n                return Promise.resolve(makeNetworkError("Range start is greater than the blob's size."));\n              }\n              if (rangeEnd === null || rangeEnd >= fullLength) {\n                rangeEnd = fullLength - 1;\n              }\n            }\n            const slicedBlob = blob.slice(rangeStart\x2C rangeEnd\x2C type);\n            const slicedBodyWithType = extractBody(slicedBlob);\n            response.body = slicedBodyWithType[0];\n            const serializedSlicedLength = isomorphicEncode(`${slicedBlob.size}`);\n            const contentRange = buildContentRange(rangeStart\x2C rangeEnd\x2C fullLength);\n            response.status = 206;\n            response.statusText = "Partial Content";\n            response.headersList.set("content-length"\x2C serializedSlicedLength\x2C true);\n            response.headersList.set("content-type"\x2C type\x2C true);\n            response.headersList.set("content-range"\x2C contentRange\x2C true);\n          }\n          return Promise.resolve(response);\n        }\n        case "data:": {\n          const currentURL = requestCurrentURL(request);\n          const dataURLStruct = dataURLProcessor(currentURL);\n          if (dataURLStruct === "failure") {\n            return Promise.resolve(makeNetworkError("failed to fetch the data URL"));\n          }\n          const mimeType = serializeAMimeType(dataURLStruct.mimeType);\n          return Promise.resolve(makeResponse({\n            statusText: "OK"\x2C\n            headersList: [\n              ["content-type"\x2C { name: "Content-Type"\x2C value: mimeType }]\n            ]\x2C\n            body: safelyExtractBody(dataURLStruct.body)[0]\n          }));\n        }\n        case "file:": {\n          return Promise.resolve(makeNetworkError("not implemented... yet..."));\n        }\n        case "http:":\n        case "https:": {\n          return httpFetch(fetchParams).catch((err) => makeNetworkError(err));\n        }\n        default: {\n          return Promise.resolve(makeNetworkError("unknown scheme"));\n        }\n      }\n    }\n    __name(schemeFetch\x2C "schemeFetch");\n    function finalizeResponse(fetchParams\x2C response) {\n      fetchParams.request.done = true;\n      if (fetchParams.processResponseDone != null) {\n        queueMicrotask(() => fetchParams.processResponseDone(response));\n      }\n    }\n    __name(finalizeResponse\x2C "finalizeResponse");\n    function fetchFinale(fetchParams\x2C response) {\n      let timingInfo = fetchParams.timingInfo;\n      const processResponseEndOfBody = /* @__PURE__ */ __name(() => {\n        const unsafeEndTime = Date.now();\n        if (fetchParams.request.destination === "document") {\n          fetchParams.controller.fullTimingInfo = timingInfo;\n        }\n        fetchParams.controller.reportTimingSteps = () => {\n          if (fetchParams.request.url.protocol !== "https:") {\n            return;\n          }\n          timingInfo.endTime = unsafeEndTime;\n          let cacheState = response.cacheState;\n          const bodyInfo = response.bodyInfo;\n          if (!response.timingAllowPassed) {\n            timingInfo = createOpaqueTimingInfo(timingInfo);\n            cacheState = "";\n          }\n          let responseStatus = 0;\n          if (fetchParams.request.mode !== "navigator" || !response.hasCrossOriginRedirects) {\n            responseStatus = response.status;\n            const mimeType = extractMimeType(response.headersList);\n            if (mimeType !== "failure") {\n              bodyInfo.contentType = minimizeSupportedMimeType(mimeType);\n            }\n          }\n          if (fetchParams.request.initiatorType != null) {\n            markResourceTiming(timingInfo\x2C fetchParams.request.url.href\x2C fetchParams.request.initiatorType\x2C globalThis\x2C cacheState\x2C bodyInfo\x2C responseStatus);\n          }\n        };\n        const processResponseEndOfBodyTask = /* @__PURE__ */ __name(() => {\n          fetchParams.request.done = true;\n          if (fetchParams.processResponseEndOfBody != null) {\n            queueMicrotask(() => fetchParams.processResponseEndOfBody(response));\n          }\n          if (fetchParams.request.initiatorType != null) {\n            fetchParams.controller.reportTimingSteps();\n          }\n        }\x2C "processResponseEndOfBodyTask");\n        queueMicrotask(() => processResponseEndOfBodyTask());\n      }\x2C "processResponseEndOfBody");\n      if (fetchParams.processResponse != null) {\n        queueMicrotask(() => {\n          fetchParams.processResponse(response);\n          fetchParams.processResponse = null;\n        });\n      }\n      const internalResponse = response.type === "error" ? response : response.internalResponse ?? response;\n      if (internalResponse.body == null) {\n        processResponseEndOfBody();\n      } else {\n        finished(internalResponse.body.stream\x2C () => {\n          processResponseEndOfBody();\n        });\n      }\n    }\n    __name(fetchFinale\x2C "fetchFinale");\n    async function httpFetch(fetchParams) {\n      const request = fetchParams.request;\n      let response = null;\n      let actualResponse = null;\n      const timingInfo = fetchParams.timingInfo;\n      if (request.serviceWorkers === "all") {\n      }\n      if (response === null) {\n        if (request.redirect === "follow") {\n          request.serviceWorkers = "none";\n        }\n        actualResponse = response = await httpNetworkOrCacheFetch(fetchParams);\n        if (request.responseTainting === "cors" && corsCheck(request\x2C response) === "failure") {\n          return makeNetworkError("cors failure");\n        }\n        if (TAOCheck(request\x2C response) === "failure") {\n          request.timingAllowFailed = true;\n        }\n      }\n      if ((request.responseTainting === "opaque" || response.type === "opaque") && crossOriginResourcePolicyCheck(\n        request.origin\x2C\n        request.client\x2C\n        request.destination\x2C\n        actualResponse\n      ) === "blocked") {\n        return makeNetworkError("blocked");\n      }\n      if (redirectStatusSet.has(actualResponse.status)) {\n        if (request.redirect !== "manual") {\n          fetchParams.controller.connection.destroy(void 0\x2C false);\n        }\n        if (request.redirect === "error") {\n          response = makeNetworkError("unexpected redirect");\n        } else if (request.redirect === "manual") {\n          response = actualResponse;\n        } else if (request.redirect === "follow") {\n          response = await httpRedirectFetch(fetchParams\x2C response);\n        } else {\n          assert(false);\n        }\n      }\n      response.timingInfo = timingInfo;\n      return response;\n    }\n    __name(httpFetch\x2C "httpFetch");\n    function httpRedirectFetch(fetchParams\x2C response) {\n      const request = fetchParams.request;\n      const actualResponse = response.internalResponse ? response.internalResponse : response;\n      let locationURL;\n      try {\n        locationURL = responseLocationURL(\n          actualResponse\x2C\n          requestCurrentURL(request).hash\n        );\n        if (locationURL == null) {\n          return response;\n        }\n      } catch (err) {\n        return Promise.resolve(makeNetworkError(err));\n      }\n      if (!urlIsHttpHttpsScheme(locationURL)) {\n        return Promise.resolve(makeNetworkError("URL scheme must be a HTTP(S) scheme"));\n      }\n      if (request.redirectCount === 20) {\n        return Promise.resolve(makeNetworkError("redirect count exceeded"));\n      }\n      request.redirectCount += 1;\n      if (request.mode === "cors" && (locationURL.username || locationURL.password) && !sameOrigin(request\x2C locationURL)) {\n        return Promise.resolve(makeNetworkError('cross origin not allowed for request mode "cors"'));\n      }\n      if (request.responseTainting === "cors" && (locationURL.username || locationURL.password)) {\n        return Promise.resolve(makeNetworkError(\n          'URL cannot contain credentials for request mode "cors"'\n        ));\n      }\n      if (actualResponse.status !== 303 && request.body != null && request.body.source == null) {\n        return Promise.resolve(makeNetworkError());\n      }\n      if ([301\x2C 302].includes(actualResponse.status) && request.method === "POST" || actualResponse.status === 303 && !GET_OR_HEAD.includes(request.method)) {\n        request.method = "GET";\n        request.body = null;\n        for (const headerName of requestBodyHeader) {\n          request.headersList.delete(headerName);\n        }\n      }\n      if (!sameOrigin(requestCurrentURL(request)\x2C locationURL)) {\n        request.headersList.delete("authorization"\x2C true);\n        request.headersList.delete("proxy-authorization"\x2C true);\n        request.headersList.delete("cookie"\x2C true);\n        request.headersList.delete("host"\x2C true);\n      }\n      if (request.body != null) {\n        assert(request.body.source != null);\n        request.body = safelyExtractBody(request.body.source)[0];\n      }\n      const timingInfo = fetchParams.timingInfo;\n      timingInfo.redirectEndTime = timingInfo.postRedirectStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);\n      if (timingInfo.redirectStartTime === 0) {\n        timingInfo.redirectStartTime = timingInfo.startTime;\n      }\n      request.urlList.push(locationURL);\n      setRequestReferrerPolicyOnRedirect(request\x2C actualResponse);\n      return mainFetch(fetchParams\x2C true);\n    }\n    __name(httpRedirectFetch\x2C "httpRedirectFetch");\n    async function httpNetworkOrCacheFetch(fetchParams\x2C isAuthenticationFetch = false\x2C isNewConnectionFetch = false) {\n      const request = fetchParams.request;\n      let httpFetchParams = null;\n      let httpRequest = null;\n      let response = null;\n      const httpCache = null;\n      const revalidatingFlag = false;\n      if (request.window === "no-window" && request.redirect === "error") {\n        httpFetchParams = fetchParams;\n        httpRequest = request;\n      } else {\n        httpRequest = cloneRequest(request);\n        httpFetchParams = { ...fetchParams };\n        httpFetchParams.request = httpRequest;\n      }\n      const includeCredentials = request.credentials === "include" || request.credentials === "same-origin" && request.responseTainting === "basic";\n      const contentLength = httpRequest.body ? httpRequest.body.length : null;\n      let contentLengthHeaderValue = null;\n      if (httpRequest.body == null && ["POST"\x2C "PUT"].includes(httpRequest.method)) {\n        contentLengthHeaderValue = "0";\n      }\n      if (contentLength != null) {\n        contentLengthHeaderValue = isomorphicEncode(`${contentLength}`);\n      }\n      if (contentLengthHeaderValue != null) {\n        httpRequest.headersList.append("content-length"\x2C contentLengthHeaderValue\x2C true);\n      }\n      if (contentLength != null && httpRequest.keepalive) {\n      }\n      if (httpRequest.referrer instanceof URL) {\n        httpRequest.headersList.append("referer"\x2C isomorphicEncode(httpRequest.referrer.href)\x2C true);\n      }\n      appendRequestOriginHeader(httpRequest);\n      appendFetchMetadata(httpRequest);\n      if (!httpRequest.headersList.contains("user-agent"\x2C true)) {\n        httpRequest.headersList.append("user-agent"\x2C defaultUserAgent);\n      }\n      if (httpRequest.cache === "default" && (httpRequest.headersList.contains("if-modified-since"\x2C true) || httpRequest.headersList.contains("if-none-match"\x2C true) || httpRequest.headersList.contains("if-unmodified-since"\x2C true) || httpRequest.headersList.contains("if-match"\x2C true) || httpRequest.headersList.contains("if-range"\x2C true))) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.cache === "no-cache" && !httpRequest.preventNoCacheCacheControlHeaderModification && !httpRequest.headersList.contains("cache-control"\x2C true)) {\n        httpRequest.headersList.append("cache-control"\x2C "max-age=0"\x2C true);\n      }\n      if (httpRequest.cache === "no-store" || httpRequest.cache === "reload") {\n        if (!httpRequest.headersList.contains("pragma"\x2C true)) {\n          httpRequest.headersList.append("pragma"\x2C "no-cache"\x2C true);\n        }\n        if (!httpRequest.headersList.contains("cache-control"\x2C true)) {\n          httpRequest.headersList.append("cache-control"\x2C "no-cache"\x2C true);\n        }\n      }\n      if (httpRequest.headersList.contains("range"\x2C true)) {\n        httpRequest.headersList.append("accept-encoding"\x2C "identity"\x2C true);\n      }\n      if (!httpRequest.headersList.contains("accept-encoding"\x2C true)) {\n        if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n          httpRequest.headersList.append("accept-encoding"\x2C "br\x2C gzip\x2C deflate"\x2C true);\n        } else {\n          httpRequest.headersList.append("accept-encoding"\x2C "gzip\x2C deflate"\x2C true);\n        }\n      }\n      httpRequest.headersList.delete("host"\x2C true);\n      if (includeCredentials) {\n      }\n      if (httpCache == null) {\n        httpRequest.cache = "no-store";\n      }\n      if (httpRequest.cache !== "no-store" && httpRequest.cache !== "reload") {\n      }\n      if (response == null) {\n        if (httpRequest.cache === "only-if-cached") {\n          return makeNetworkError("only if cached");\n        }\n        const forwardResponse = await httpNetworkFetch(\n          httpFetchParams\x2C\n          includeCredentials\x2C\n          isNewConnectionFetch\n        );\n        if (!safeMethodsSet.has(httpRequest.method) && forwardResponse.status >= 200 && forwardResponse.status <= 399) {\n        }\n        if (revalidatingFlag && forwardResponse.status === 304) {\n        }\n        if (response == null) {\n          response = forwardResponse;\n        }\n      }\n      response.urlList = [...httpRequest.urlList];\n      if (httpRequest.headersList.contains("range"\x2C true)) {\n        response.rangeRequested = true;\n      }\n      response.requestIncludesCredentials = includeCredentials;\n      if (response.status === 407) {\n        if (request.window === "no-window") {\n          return makeNetworkError();\n        }\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        return makeNetworkError("proxy authentication required");\n      }\n      if (\n        // response?s status is 421\n        response.status === 421 && // isNewConnectionFetch is false\n        !isNewConnectionFetch && // request?s body is null\x2C or request?s body is non-null and request?s body?s source is non-null\n        (request.body == null || request.body.source != null)\n      ) {\n        if (isCancelled(fetchParams)) {\n          return makeAppropriateNetworkError(fetchParams);\n        }\n        fetchParams.controller.connection.destroy();\n        response = await httpNetworkOrCacheFetch(\n          fetchParams\x2C\n          isAuthenticationFetch\x2C\n          true\n        );\n      }\n      if (isAuthenticationFetch) {\n      }\n      return response;\n    }\n    __name(httpNetworkOrCacheFetch\x2C "httpNetworkOrCacheFetch");\n    async function httpNetworkFetch(fetchParams\x2C includeCredentials = false\x2C forceNewConnection = false) {\n      assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed);\n      fetchParams.controller.connection = {\n        abort: null\x2C\n        destroyed: false\x2C\n        destroy(err\x2C abort = true) {\n          if (!this.destroyed) {\n            this.destroyed = true;\n            if (abort) {\n              this.abort?.(err ?? new DOMException("The operation was aborted."\x2C "AbortError"));\n            }\n          }\n        }\n      };\n      const request = fetchParams.request;\n      let response = null;\n      const timingInfo = fetchParams.timingInfo;\n      const httpCache = null;\n      if (httpCache == null) {\n        request.cache = "no-store";\n      }\n      const newConnection = forceNewConnection ? "yes" : "no";\n      if (request.mode === "websocket") {\n      } else {\n      }\n      let requestBody = null;\n      if (request.body == null && fetchParams.processRequestEndOfBody) {\n        queueMicrotask(() => fetchParams.processRequestEndOfBody());\n      } else if (request.body != null) {\n        const processBodyChunk = /* @__PURE__ */ __name(async function* (bytes) {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          yield bytes;\n          fetchParams.processRequestBodyChunkLength?.(bytes.byteLength);\n        }\x2C "processBodyChunk");\n        const processEndOfBody = /* @__PURE__ */ __name(() => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (fetchParams.processRequestEndOfBody) {\n            fetchParams.processRequestEndOfBody();\n          }\n        }\x2C "processEndOfBody");\n        const processBodyError = /* @__PURE__ */ __name((e) => {\n          if (isCancelled(fetchParams)) {\n            return;\n          }\n          if (e.name === "AbortError") {\n            fetchParams.controller.abort();\n          } else {\n            fetchParams.controller.terminate(e);\n          }\n        }\x2C "processBodyError");\n        requestBody = async function* () {\n          try {\n            for await (const bytes of request.body.stream) {\n              yield* processBodyChunk(bytes);\n            }\n            processEndOfBody();\n          } catch (err) {\n            processBodyError(err);\n          }\n        }();\n      }\n      try {\n        const { body\x2C status\x2C statusText\x2C headersList\x2C socket } = await dispatch({ body: requestBody });\n        if (socket) {\n          response = makeResponse({ status\x2C statusText\x2C headersList\x2C socket });\n        } else {\n          const iterator = body[Symbol.asyncIterator]();\n          fetchParams.controller.next = () => iterator.next();\n          response = makeResponse({ status\x2C statusText\x2C headersList });\n        }\n      } catch (err) {\n        if (err.name === "AbortError") {\n          fetchParams.controller.connection.destroy();\n          return makeAppropriateNetworkError(fetchParams\x2C err);\n        }\n        return makeNetworkError(err);\n      }\n      const pullAlgorithm = /* @__PURE__ */ __name(async () => {\n        await fetchParams.controller.resume();\n      }\x2C "pullAlgorithm");\n      const cancelAlgorithm = /* @__PURE__ */ __name((reason) => {\n        if (!isCancelled(fetchParams)) {\n          fetchParams.controller.abort(reason);\n        }\n      }\x2C "cancelAlgorithm");\n      const stream = new ReadableStream(\n        {\n          async start(controller) {\n            fetchParams.controller.controller = controller;\n          }\x2C\n          async pull(controller) {\n            await pullAlgorithm(controller);\n          }\x2C\n          async cancel(reason) {\n            await cancelAlgorithm(reason);\n          }\x2C\n          type: "bytes"\n        }\n      );\n      response.body = { stream\x2C source: null\x2C length: null };\n      fetchParams.controller.onAborted = onAborted;\n      fetchParams.controller.on("terminated"\x2C onAborted);\n      fetchParams.controller.resume = async () => {\n        while (true) {\n          let bytes;\n          let isFailure;\n          try {\n            const { done\x2C value } = await fetchParams.controller.next();\n            if (isAborted(fetchParams)) {\n              break;\n            }\n            bytes = done ? void 0 : value;\n          } catch (err) {\n            if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n              bytes = void 0;\n            } else {\n              bytes = err;\n              isFailure = true;\n            }\n          }\n          if (bytes === void 0) {\n            readableStreamClose(fetchParams.controller.controller);\n            finalizeResponse(fetchParams\x2C response);\n            return;\n          }\n          timingInfo.decodedBodySize += bytes?.byteLength ?? 0;\n          if (isFailure) {\n            fetchParams.controller.terminate(bytes);\n            return;\n          }\n          const buffer = new Uint8Array(bytes);\n          if (buffer.byteLength) {\n            fetchParams.controller.controller.enqueue(buffer);\n          }\n          if (isErrored(stream)) {\n            fetchParams.controller.terminate();\n            return;\n          }\n          if (fetchParams.controller.controller.desiredSize <= 0) {\n            return;\n          }\n        }\n      };\n      function onAborted(reason) {\n        if (isAborted(fetchParams)) {\n          response.aborted = true;\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(\n              fetchParams.controller.serializedAbortReason\n            );\n          }\n        } else {\n          if (isReadable(stream)) {\n            fetchParams.controller.controller.error(new TypeError("terminated"\x2C {\n              cause: isErrorLike(reason) ? reason : void 0\n            }));\n          }\n        }\n        fetchParams.controller.connection.destroy();\n      }\n      __name(onAborted\x2C "onAborted");\n      return response;\n      function dispatch({ body }) {\n        const url = requestCurrentURL(request);\n        const agent = fetchParams.controller.dispatcher;\n        return new Promise((resolve\x2C reject) => agent.dispatch(\n          {\n            path: url.pathname + url.search\x2C\n            origin: url.origin\x2C\n            method: request.method\x2C\n            body: agent.isMockActive ? request.body && (request.body.source || request.body.stream) : body\x2C\n            headers: request.headersList.entries\x2C\n            maxRedirections: 0\x2C\n            upgrade: request.mode === "websocket" ? "websocket" : void 0\n          }\x2C\n          {\n            body: null\x2C\n            abort: null\x2C\n            onConnect(abort) {\n              const { connection } = fetchParams.controller;\n              timingInfo.finalConnectionTimingInfo = clampAndCoarsenConnectionTimingInfo(void 0\x2C timingInfo.postRedirectStartTime\x2C fetchParams.crossOriginIsolatedCapability);\n              if (connection.destroyed) {\n                abort(new DOMException("The operation was aborted."\x2C "AbortError"));\n              } else {\n                fetchParams.controller.on("terminated"\x2C abort);\n                this.abort = connection.abort = abort;\n              }\n              timingInfo.finalNetworkRequestStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);\n            }\x2C\n            onResponseStarted() {\n              timingInfo.finalNetworkResponseStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);\n            }\x2C\n            onHeaders(status\x2C rawHeaders\x2C resume\x2C statusText) {\n              if (status < 200) {\n                return;\n              }\n              let codings = [];\n              let location = "";\n              const headersList = new HeadersList();\n              for (let i = 0; i < rawHeaders.length; i += 2) {\n                headersList.append(bufferToLowerCasedHeaderName(rawHeaders[i])\x2C rawHeaders[i + 1].toString("latin1")\x2C true);\n              }\n              const contentEncoding = headersList.get("content-encoding"\x2C true);\n              if (contentEncoding) {\n                codings = contentEncoding.toLowerCase().split("\x2C").map((x) => x.trim());\n              }\n              location = headersList.get("location"\x2C true);\n              this.body = new Readable({ read: resume });\n              const decoders = [];\n              const willFollow = location && request.redirect === "follow" && redirectStatusSet.has(status);\n              if (codings.length !== 0 && request.method !== "HEAD" && request.method !== "CONNECT" && !nullBodyStatus.includes(status) && !willFollow) {\n                for (let i = codings.length - 1; i >= 0; --i) {\n                  const coding = codings[i];\n                  if (coding === "x-gzip" || coding === "gzip") {\n                    decoders.push(zlib.createGunzip({\n                      // Be less strict when decoding compressed responses\x2C since sometimes\n                      // servers send slightly invalid responses that are still accepted\n                      // by common browsers.\n                      // Always using Z_SYNC_FLUSH is what cURL does.\n                      flush: zlib.constants.Z_SYNC_FLUSH\x2C\n                      finishFlush: zlib.constants.Z_SYNC_FLUSH\n                    }));\n                  } else if (coding === "deflate") {\n                    decoders.push(createInflate({\n                      flush: zlib.constants.Z_SYNC_FLUSH\x2C\n                      finishFlush: zlib.constants.Z_SYNC_FLUSH\n                    }));\n                  } else if (coding === "br") {\n                    decoders.push(zlib.createBrotliDecompress({\n                      flush: zlib.constants.BROTLI_OPERATION_FLUSH\x2C\n                      finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n                    }));\n                  } else {\n                    decoders.length = 0;\n                    break;\n                  }\n                }\n              }\n              const onError = this.onError.bind(this);\n              resolve({\n                status\x2C\n                statusText\x2C\n                headersList\x2C\n                body: decoders.length ? pipeline(this.body\x2C ...decoders\x2C (err) => {\n                  if (err) {\n                    this.onError(err);\n                  }\n                }).on("error"\x2C onError) : this.body.on("error"\x2C onError)\n              });\n              return true;\n            }\x2C\n            onData(chunk) {\n              if (fetchParams.controller.dump) {\n                return;\n              }\n              const bytes = chunk;\n              timingInfo.encodedBodySize += bytes.byteLength;\n              return this.body.push(bytes);\n            }\x2C\n            onComplete() {\n              if (this.abort) {\n                fetchParams.controller.off("terminated"\x2C this.abort);\n              }\n              if (fetchParams.controller.onAborted) {\n                fetchParams.controller.off("terminated"\x2C fetchParams.controller.onAborted);\n              }\n              fetchParams.controller.ended = true;\n              this.body.push(null);\n            }\x2C\n            onError(error) {\n              if (this.abort) {\n                fetchParams.controller.off("terminated"\x2C this.abort);\n              }\n              this.body?.destroy(error);\n              fetchParams.controller.terminate(error);\n              reject(error);\n            }\x2C\n            onUpgrade(status\x2C rawHeaders\x2C socket) {\n              if (status !== 101) {\n                return;\n              }\n              const headersList = new HeadersList();\n              for (let i = 0; i < rawHeaders.length; i += 2) {\n                headersList.append(bufferToLowerCasedHeaderName(rawHeaders[i])\x2C rawHeaders[i + 1].toString("latin1")\x2C true);\n              }\n              resolve({\n                status\x2C\n                statusText: STATUS_CODES[status]\x2C\n                headersList\x2C\n                socket\n              });\n              return true;\n            }\n          }\n        ));\n      }\n      __name(dispatch\x2C "dispatch");\n    }\n    __name(httpNetworkFetch\x2C "httpNetworkFetch");\n    module2.exports = {\n      fetch: fetch2\x2C\n      Fetch\x2C\n      fetching\x2C\n      finalizeAndReportTiming\n    };\n  }\n});\n\n// lib/web/websocket/events.js\nvar require_events = __commonJS({\n  "lib/web/websocket/events.js"(exports2\x2C module2) {\n    "use strict";\n    var { webidl } = require_webidl();\n    var { kEnumerableProperty } = require_util();\n    var { kConstruct } = require_symbols();\n    var { MessagePort } = require("node:worker_threads");\n    var MessageEvent2 = class _MessageEvent extends Event {\n      static {\n        __name(this\x2C "MessageEvent");\n      }\n      #eventInit;\n      constructor(type\x2C eventInitDict = {}) {\n        if (type === kConstruct) {\n          super(arguments[1]\x2C arguments[2]);\n          webidl.util.markAsUncloneable(this);\n          return;\n        }\n        const prefix = "MessageEvent constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        type = webidl.converters.DOMString(type\x2C prefix\x2C "type");\n        eventInitDict = webidl.converters.MessageEventInit(eventInitDict\x2C prefix\x2C "eventInitDict");\n        super(type\x2C eventInitDict);\n        this.#eventInit = eventInitDict;\n        webidl.util.markAsUncloneable(this);\n      }\n      get data() {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        return this.#eventInit.data;\n      }\n      get origin() {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        return this.#eventInit.origin;\n      }\n      get lastEventId() {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        return this.#eventInit.lastEventId;\n      }\n      get source() {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        return this.#eventInit.source;\n      }\n      get ports() {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        if (!Object.isFrozen(this.#eventInit.ports)) {\n          Object.freeze(this.#eventInit.ports);\n        }\n        return this.#eventInit.ports;\n      }\n      initMessageEvent(type\x2C bubbles = false\x2C cancelable = false\x2C data = null\x2C origin = ""\x2C lastEventId = ""\x2C source = null\x2C ports = []) {\n        webidl.brandCheck(this\x2C _MessageEvent);\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C "MessageEvent.initMessageEvent");\n        return new _MessageEvent(type\x2C {\n          bubbles\x2C\n          cancelable\x2C\n          data\x2C\n          origin\x2C\n          lastEventId\x2C\n          source\x2C\n          ports\n        });\n      }\n      static createFastMessageEvent(type\x2C init) {\n        const messageEvent = new _MessageEvent(kConstruct\x2C type\x2C init);\n        messageEvent.#eventInit = init;\n        messageEvent.#eventInit.data ??= null;\n        messageEvent.#eventInit.origin ??= "";\n        messageEvent.#eventInit.lastEventId ??= "";\n        messageEvent.#eventInit.source ??= null;\n        messageEvent.#eventInit.ports ??= [];\n        return messageEvent;\n      }\n    };\n    var { createFastMessageEvent: createFastMessageEvent2 } = MessageEvent2;\n    delete MessageEvent2.createFastMessageEvent;\n    var CloseEvent2 = class _CloseEvent extends Event {\n      static {\n        __name(this\x2C "CloseEvent");\n      }\n      #eventInit;\n      constructor(type\x2C eventInitDict = {}) {\n        const prefix = "CloseEvent constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        type = webidl.converters.DOMString(type\x2C prefix\x2C "type");\n        eventInitDict = webidl.converters.CloseEventInit(eventInitDict);\n        super(type\x2C eventInitDict);\n        this.#eventInit = eventInitDict;\n        webidl.util.markAsUncloneable(this);\n      }\n      get wasClean() {\n        webidl.brandCheck(this\x2C _CloseEvent);\n        return this.#eventInit.wasClean;\n      }\n      get code() {\n        webidl.brandCheck(this\x2C _CloseEvent);\n        return this.#eventInit.code;\n      }\n      get reason() {\n        webidl.brandCheck(this\x2C _CloseEvent);\n        return this.#eventInit.reason;\n      }\n    };\n    var ErrorEvent2 = class _ErrorEvent extends Event {\n      static {\n        __name(this\x2C "ErrorEvent");\n      }\n      #eventInit;\n      constructor(type\x2C eventInitDict) {\n        const prefix = "ErrorEvent constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        super(type\x2C eventInitDict);\n        webidl.util.markAsUncloneable(this);\n        type = webidl.converters.DOMString(type\x2C prefix\x2C "type");\n        eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {});\n        this.#eventInit = eventInitDict;\n      }\n      get message() {\n        webidl.brandCheck(this\x2C _ErrorEvent);\n        return this.#eventInit.message;\n      }\n      get filename() {\n        webidl.brandCheck(this\x2C _ErrorEvent);\n        return this.#eventInit.filename;\n      }\n      get lineno() {\n        webidl.brandCheck(this\x2C _ErrorEvent);\n        return this.#eventInit.lineno;\n      }\n      get colno() {\n        webidl.brandCheck(this\x2C _ErrorEvent);\n        return this.#eventInit.colno;\n      }\n      get error() {\n        webidl.brandCheck(this\x2C _ErrorEvent);\n        return this.#eventInit.error;\n      }\n    };\n    Object.defineProperties(MessageEvent2.prototype\x2C {\n      [Symbol.toStringTag]: {\n        value: "MessageEvent"\x2C\n        configurable: true\n      }\x2C\n      data: kEnumerableProperty\x2C\n      origin: kEnumerableProperty\x2C\n      lastEventId: kEnumerableProperty\x2C\n      source: kEnumerableProperty\x2C\n      ports: kEnumerableProperty\x2C\n      initMessageEvent: kEnumerableProperty\n    });\n    Object.defineProperties(CloseEvent2.prototype\x2C {\n      [Symbol.toStringTag]: {\n        value: "CloseEvent"\x2C\n        configurable: true\n      }\x2C\n      reason: kEnumerableProperty\x2C\n      code: kEnumerableProperty\x2C\n      wasClean: kEnumerableProperty\n    });\n    Object.defineProperties(ErrorEvent2.prototype\x2C {\n      [Symbol.toStringTag]: {\n        value: "ErrorEvent"\x2C\n        configurable: true\n      }\x2C\n      message: kEnumerableProperty\x2C\n      filename: kEnumerableProperty\x2C\n      lineno: kEnumerableProperty\x2C\n      colno: kEnumerableProperty\x2C\n      error: kEnumerableProperty\n    });\n    webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort);\n    webidl.converters["sequence<MessagePort>"] = webidl.sequenceConverter(\n      webidl.converters.MessagePort\n    );\n    var eventInit = [\n      {\n        key: "bubbles"\x2C\n        converter: webidl.converters.boolean\x2C\n        defaultValue: () => false\n      }\x2C\n      {\n        key: "cancelable"\x2C\n        converter: webidl.converters.boolean\x2C\n        defaultValue: () => false\n      }\x2C\n      {\n        key: "composed"\x2C\n        converter: webidl.converters.boolean\x2C\n        defaultValue: () => false\n      }\n    ];\n    webidl.converters.MessageEventInit = webidl.dictionaryConverter([\n      ...eventInit\x2C\n      {\n        key: "data"\x2C\n        converter: webidl.converters.any\x2C\n        defaultValue: () => null\n      }\x2C\n      {\n        key: "origin"\x2C\n        converter: webidl.converters.USVString\x2C\n        defaultValue: () => ""\n      }\x2C\n      {\n        key: "lastEventId"\x2C\n        converter: webidl.converters.DOMString\x2C\n        defaultValue: () => ""\n      }\x2C\n      {\n        key: "source"\x2C\n        // Node doesn't implement WindowProxy or ServiceWorker\x2C so the only\n        // valid value for source is a MessagePort.\n        converter: webidl.nullableConverter(webidl.converters.MessagePort)\x2C\n        defaultValue: () => null\n      }\x2C\n      {\n        key: "ports"\x2C\n        converter: webidl.converters["sequence<MessagePort>"]\x2C\n        defaultValue: () => new Array(0)\n      }\n    ]);\n    webidl.converters.CloseEventInit = webidl.dictionaryConverter([\n      ...eventInit\x2C\n      {\n        key: "wasClean"\x2C\n        converter: webidl.converters.boolean\x2C\n        defaultValue: () => false\n      }\x2C\n      {\n        key: "code"\x2C\n        converter: webidl.converters["unsigned short"]\x2C\n        defaultValue: () => 0\n      }\x2C\n      {\n        key: "reason"\x2C\n        converter: webidl.converters.USVString\x2C\n        defaultValue: () => ""\n      }\n    ]);\n    webidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n      ...eventInit\x2C\n      {\n        key: "message"\x2C\n        converter: webidl.converters.DOMString\x2C\n        defaultValue: () => ""\n      }\x2C\n      {\n        key: "filename"\x2C\n        converter: webidl.converters.USVString\x2C\n        defaultValue: () => ""\n      }\x2C\n      {\n        key: "lineno"\x2C\n        converter: webidl.converters["unsigned long"]\x2C\n        defaultValue: () => 0\n      }\x2C\n      {\n        key: "colno"\x2C\n        converter: webidl.converters["unsigned long"]\x2C\n        defaultValue: () => 0\n      }\x2C\n      {\n        key: "error"\x2C\n        converter: webidl.converters.any\n      }\n    ]);\n    module2.exports = {\n      MessageEvent: MessageEvent2\x2C\n      CloseEvent: CloseEvent2\x2C\n      ErrorEvent: ErrorEvent2\x2C\n      createFastMessageEvent: createFastMessageEvent2\n    };\n  }\n});\n\n// lib/web/websocket/constants.js\nvar require_constants4 = __commonJS({\n  "lib/web/websocket/constants.js"(exports2\x2C module2) {\n    "use strict";\n    var uid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";\n    var staticPropertyDescriptors = {\n      enumerable: true\x2C\n      writable: false\x2C\n      configurable: false\n    };\n    var states = {\n      CONNECTING: 0\x2C\n      OPEN: 1\x2C\n      CLOSING: 2\x2C\n      CLOSED: 3\n    };\n    var sentCloseFrameState = {\n      NOT_SENT: 0\x2C\n      PROCESSING: 1\x2C\n      SENT: 2\n    };\n    var opcodes = {\n      CONTINUATION: 0\x2C\n      TEXT: 1\x2C\n      BINARY: 2\x2C\n      CLOSE: 8\x2C\n      PING: 9\x2C\n      PONG: 10\n    };\n    var maxUnsigned16Bit = 2 ** 16 - 1;\n    var parserStates = {\n      INFO: 0\x2C\n      PAYLOADLENGTH_16: 2\x2C\n      PAYLOADLENGTH_64: 3\x2C\n      READ_DATA: 4\n    };\n    var emptyBuffer = Buffer.allocUnsafe(0);\n    var sendHints = {\n      string: 1\x2C\n      typedArray: 2\x2C\n      arrayBuffer: 3\x2C\n      blob: 4\n    };\n    module2.exports = {\n      uid\x2C\n      sentCloseFrameState\x2C\n      staticPropertyDescriptors\x2C\n      states\x2C\n      opcodes\x2C\n      maxUnsigned16Bit\x2C\n      parserStates\x2C\n      emptyBuffer\x2C\n      sendHints\n    };\n  }\n});\n\n// lib/web/websocket/symbols.js\nvar require_symbols3 = __commonJS({\n  "lib/web/websocket/symbols.js"(exports2\x2C module2) {\n    "use strict";\n    module2.exports = {\n      kWebSocketURL: Symbol("url")\x2C\n      kReadyState: Symbol("ready state")\x2C\n      kController: Symbol("controller")\x2C\n      kResponse: Symbol("response")\x2C\n      kBinaryType: Symbol("binary type")\x2C\n      kSentClose: Symbol("sent close")\x2C\n      kReceivedClose: Symbol("received close")\x2C\n      kByteParser: Symbol("byte parser")\n    };\n  }\n});\n\n// lib/web/websocket/util.js\nvar require_util3 = __commonJS({\n  "lib/web/websocket/util.js"(exports2\x2C module2) {\n    "use strict";\n    var { kReadyState\x2C kController\x2C kResponse\x2C kBinaryType\x2C kWebSocketURL } = require_symbols3();\n    var { states\x2C opcodes } = require_constants4();\n    var { ErrorEvent: ErrorEvent2\x2C createFastMessageEvent: createFastMessageEvent2 } = require_events();\n    var { isUtf8 } = require("node:buffer");\n    var { collectASequenceOfCodePointsFast\x2C removeHTTPWhitespace } = require_data_url();\n    function isConnecting(ws) {\n      return ws[kReadyState] === states.CONNECTING;\n    }\n    __name(isConnecting\x2C "isConnecting");\n    function isEstablished(ws) {\n      return ws[kReadyState] === states.OPEN;\n    }\n    __name(isEstablished\x2C "isEstablished");\n    function isClosing(ws) {\n      return ws[kReadyState] === states.CLOSING;\n    }\n    __name(isClosing\x2C "isClosing");\n    function isClosed(ws) {\n      return ws[kReadyState] === states.CLOSED;\n    }\n    __name(isClosed\x2C "isClosed");\n    function fireEvent(e\x2C target\x2C eventFactory = (type\x2C init) => new Event(type\x2C init)\x2C eventInitDict = {}) {\n      const event = eventFactory(e\x2C eventInitDict);\n      target.dispatchEvent(event);\n    }\n    __name(fireEvent\x2C "fireEvent");\n    function websocketMessageReceived(ws\x2C type\x2C data) {\n      if (ws[kReadyState] !== states.OPEN) {\n        return;\n      }\n      let dataForEvent;\n      if (type === opcodes.TEXT) {\n        try {\n          dataForEvent = utf8Decode(data);\n        } catch {\n          failWebsocketConnection(ws\x2C "Received invalid UTF-8 in text frame.");\n          return;\n        }\n      } else if (type === opcodes.BINARY) {\n        if (ws[kBinaryType] === "blob") {\n          dataForEvent = new Blob([data]);\n        } else {\n          dataForEvent = toArrayBuffer(data);\n        }\n      }\n      fireEvent("message"\x2C ws\x2C createFastMessageEvent2\x2C {\n        origin: ws[kWebSocketURL].origin\x2C\n        data: dataForEvent\n      });\n    }\n    __name(websocketMessageReceived\x2C "websocketMessageReceived");\n    function toArrayBuffer(buffer) {\n      if (buffer.byteLength === buffer.buffer.byteLength) {\n        return buffer.buffer;\n      }\n      return buffer.buffer.slice(buffer.byteOffset\x2C buffer.byteOffset + buffer.byteLength);\n    }\n    __name(toArrayBuffer\x2C "toArrayBuffer");\n    function isValidSubprotocol(protocol) {\n      if (protocol.length === 0) {\n        return false;\n      }\n      for (let i = 0; i < protocol.length; ++i) {\n        const code = protocol.charCodeAt(i);\n        if (code < 33 || // CTL\x2C contains SP (0x20) and HT (0x09)\n        code > 126 || code === 34 || // "\n        code === 40 || // (\n        code === 41 || // )\n        code === 44 || // \x2C\n        code === 47 || // /\n        code === 58 || // :\n        code === 59 || // ;\n        code === 60 || // <\n        code === 61 || // =\n        code === 62 || // >\n        code === 63 || // ?\n        code === 64 || // @\n        code === 91 || // [\n        code === 92 || // \\\n        code === 93 || // ]\n        code === 123 || // {\n        code === 125) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidSubprotocol\x2C "isValidSubprotocol");\n    function isValidStatusCode(code) {\n      if (code >= 1e3 && code < 1015) {\n        return code !== 1004 && // reserved\n        code !== 1005 && // "MUST NOT be set as a status code"\n        code !== 1006;\n      }\n      return code >= 3e3 && code <= 4999;\n    }\n    __name(isValidStatusCode\x2C "isValidStatusCode");\n    function failWebsocketConnection(ws\x2C reason) {\n      const { [kController]: controller\x2C [kResponse]: response } = ws;\n      controller.abort();\n      if (response?.socket && !response.socket.destroyed) {\n        response.socket.destroy();\n      }\n      if (reason) {\n        fireEvent("error"\x2C ws\x2C (type\x2C init) => new ErrorEvent2(type\x2C init)\x2C {\n          error: new Error(reason)\x2C\n          message: reason\n        });\n      }\n    }\n    __name(failWebsocketConnection\x2C "failWebsocketConnection");\n    function isControlFrame(opcode) {\n      return opcode === opcodes.CLOSE || opcode === opcodes.PING || opcode === opcodes.PONG;\n    }\n    __name(isControlFrame\x2C "isControlFrame");\n    function isContinuationFrame(opcode) {\n      return opcode === opcodes.CONTINUATION;\n    }\n    __name(isContinuationFrame\x2C "isContinuationFrame");\n    function isTextBinaryFrame(opcode) {\n      return opcode === opcodes.TEXT || opcode === opcodes.BINARY;\n    }\n    __name(isTextBinaryFrame\x2C "isTextBinaryFrame");\n    function isValidOpcode(opcode) {\n      return isTextBinaryFrame(opcode) || isContinuationFrame(opcode) || isControlFrame(opcode);\n    }\n    __name(isValidOpcode\x2C "isValidOpcode");\n    function parseExtensions(extensions) {\n      const position = { position: 0 };\n      const extensionList = /* @__PURE__ */ new Map();\n      while (position.position < extensions.length) {\n        const pair = collectASequenceOfCodePointsFast(";"\x2C extensions\x2C position);\n        const [name\x2C value = ""] = pair.split("=");\n        extensionList.set(\n          removeHTTPWhitespace(name\x2C true\x2C false)\x2C\n          removeHTTPWhitespace(value\x2C false\x2C true)\n        );\n        position.position++;\n      }\n      return extensionList;\n    }\n    __name(parseExtensions\x2C "parseExtensions");\n    function isValidClientWindowBits(value) {\n      for (let i = 0; i < value.length; i++) {\n        const byte = value.charCodeAt(i);\n        if (byte < 48 || byte > 57) {\n          return false;\n        }\n      }\n      return true;\n    }\n    __name(isValidClientWindowBits\x2C "isValidClientWindowBits");\n    var hasIntl = typeof process.versions.icu === "string";\n    var fatalDecoder = hasIntl ? new TextDecoder("utf-8"\x2C { fatal: true }) : void 0;\n    var utf8Decode = hasIntl ? fatalDecoder.decode.bind(fatalDecoder) : function(buffer) {\n      if (isUtf8(buffer)) {\n        return buffer.toString("utf-8");\n      }\n      throw new TypeError("Invalid utf-8 received.");\n    };\n    module2.exports = {\n      isConnecting\x2C\n      isEstablished\x2C\n      isClosing\x2C\n      isClosed\x2C\n      fireEvent\x2C\n      isValidSubprotocol\x2C\n      isValidStatusCode\x2C\n      failWebsocketConnection\x2C\n      websocketMessageReceived\x2C\n      utf8Decode\x2C\n      isControlFrame\x2C\n      isContinuationFrame\x2C\n      isTextBinaryFrame\x2C\n      isValidOpcode\x2C\n      parseExtensions\x2C\n      isValidClientWindowBits\n    };\n  }\n});\n\n// lib/web/websocket/frame.js\nvar require_frame = __commonJS({\n  "lib/web/websocket/frame.js"(exports2\x2C module2) {\n    "use strict";\n    var { maxUnsigned16Bit } = require_constants4();\n    var BUFFER_SIZE = 16386;\n    var crypto;\n    var buffer = null;\n    var bufIdx = BUFFER_SIZE;\n    try {\n      crypto = require("node:crypto");\n    } catch {\n      crypto = {\n        // not full compatibility\x2C but minimum.\n        randomFillSync: /* @__PURE__ */ __name(function randomFillSync(buffer2\x2C _offset\x2C _size) {\n          for (let i = 0; i < buffer2.length; ++i) {\n            buffer2[i] = Math.random() * 255 | 0;\n          }\n          return buffer2;\n        }\x2C "randomFillSync")\n      };\n    }\n    function generateMask() {\n      if (bufIdx === BUFFER_SIZE) {\n        bufIdx = 0;\n        crypto.randomFillSync(buffer ??= Buffer.allocUnsafe(BUFFER_SIZE)\x2C 0\x2C BUFFER_SIZE);\n      }\n      return [buffer[bufIdx++]\x2C buffer[bufIdx++]\x2C buffer[bufIdx++]\x2C buffer[bufIdx++]];\n    }\n    __name(generateMask\x2C "generateMask");\n    var WebsocketFrameSend = class {\n      static {\n        __name(this\x2C "WebsocketFrameSend");\n      }\n      /**\n       * @param {Buffer|undefined} data\n       */\n      constructor(data) {\n        this.frameData = data;\n      }\n      createFrame(opcode) {\n        const frameData = this.frameData;\n        const maskKey = generateMask();\n        const bodyLength = frameData?.byteLength ?? 0;\n        let payloadLength = bodyLength;\n        let offset = 6;\n        if (bodyLength > maxUnsigned16Bit) {\n          offset += 8;\n          payloadLength = 127;\n        } else if (bodyLength > 125) {\n          offset += 2;\n          payloadLength = 126;\n        }\n        const buffer2 = Buffer.allocUnsafe(bodyLength + offset);\n        buffer2[0] = buffer2[1] = 0;\n        buffer2[0] |= 128;\n        buffer2[0] = (buffer2[0] & 240) + opcode;\n        buffer2[offset - 4] = maskKey[0];\n        buffer2[offset - 3] = maskKey[1];\n        buffer2[offset - 2] = maskKey[2];\n        buffer2[offset - 1] = maskKey[3];\n        buffer2[1] = payloadLength;\n        if (payloadLength === 126) {\n          buffer2.writeUInt16BE(bodyLength\x2C 2);\n        } else if (payloadLength === 127) {\n          buffer2[2] = buffer2[3] = 0;\n          buffer2.writeUIntBE(bodyLength\x2C 4\x2C 6);\n        }\n        buffer2[1] |= 128;\n        for (let i = 0; i < bodyLength; ++i) {\n          buffer2[offset + i] = frameData[i] ^ maskKey[i & 3];\n        }\n        return buffer2;\n      }\n    };\n    module2.exports = {\n      WebsocketFrameSend\n    };\n  }\n});\n\n// lib/web/websocket/connection.js\nvar require_connection = __commonJS({\n  "lib/web/websocket/connection.js"(exports2\x2C module2) {\n    "use strict";\n    var { uid\x2C states\x2C sentCloseFrameState\x2C emptyBuffer\x2C opcodes } = require_constants4();\n    var {\n      kReadyState\x2C\n      kSentClose\x2C\n      kByteParser\x2C\n      kReceivedClose\x2C\n      kResponse\n    } = require_symbols3();\n    var { fireEvent\x2C failWebsocketConnection\x2C isClosing\x2C isClosed\x2C isEstablished\x2C parseExtensions } = require_util3();\n    var { channels } = require_diagnostics();\n    var { CloseEvent: CloseEvent2 } = require_events();\n    var { makeRequest } = require_request2();\n    var { fetching } = require_fetch();\n    var { Headers\x2C getHeadersList } = require_headers();\n    var { getDecodeSplit } = require_util2();\n    var { WebsocketFrameSend } = require_frame();\n    var crypto;\n    try {\n      crypto = require("node:crypto");\n    } catch {\n    }\n    function establishWebSocketConnection(url\x2C protocols\x2C client\x2C ws\x2C onEstablish\x2C options) {\n      const requestURL = url;\n      requestURL.protocol = url.protocol === "ws:" ? "http:" : "https:";\n      const request = makeRequest({\n        urlList: [requestURL]\x2C\n        client\x2C\n        serviceWorkers: "none"\x2C\n        referrer: "no-referrer"\x2C\n        mode: "websocket"\x2C\n        credentials: "include"\x2C\n        cache: "no-store"\x2C\n        redirect: "error"\n      });\n      if (options.headers) {\n        const headersList = getHeadersList(new Headers(options.headers));\n        request.headersList = headersList;\n      }\n      const keyValue = crypto.randomBytes(16).toString("base64");\n      request.headersList.append("sec-websocket-key"\x2C keyValue);\n      request.headersList.append("sec-websocket-version"\x2C "13");\n      for (const protocol of protocols) {\n        request.headersList.append("sec-websocket-protocol"\x2C protocol);\n      }\n      const permessageDeflate = "permessage-deflate; client_max_window_bits";\n      request.headersList.append("sec-websocket-extensions"\x2C permessageDeflate);\n      const controller = fetching({\n        request\x2C\n        useParallelQueue: true\x2C\n        dispatcher: options.dispatcher\x2C\n        processResponse(response) {\n          if (response.type === "error" || response.status !== 101) {\n            failWebsocketConnection(ws\x2C "Received network error or non-101 status code.");\n            return;\n          }\n          if (protocols.length !== 0 && !response.headersList.get("Sec-WebSocket-Protocol")) {\n            failWebsocketConnection(ws\x2C "Server did not respond with sent protocols.");\n            return;\n          }\n          if (response.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {\n            failWebsocketConnection(ws\x2C 'Server did not set Upgrade header to "websocket".');\n            return;\n          }\n          if (response.headersList.get("Connection")?.toLowerCase() !== "upgrade") {\n            failWebsocketConnection(ws\x2C 'Server did not set Connection header to "upgrade".');\n            return;\n          }\n          const secWSAccept = response.headersList.get("Sec-WebSocket-Accept");\n          const digest = crypto.createHash("sha1").update(keyValue + uid).digest("base64");\n          if (secWSAccept !== digest) {\n            failWebsocketConnection(ws\x2C "Incorrect hash received in Sec-WebSocket-Accept header.");\n            return;\n          }\n          const secExtension = response.headersList.get("Sec-WebSocket-Extensions");\n          let extensions;\n          if (secExtension !== null) {\n            extensions = parseExtensions(secExtension);\n            if (!extensions.has("permessage-deflate")) {\n              failWebsocketConnection(ws\x2C "Sec-WebSocket-Extensions header does not match.");\n              return;\n            }\n          }\n          const secProtocol = response.headersList.get("Sec-WebSocket-Protocol");\n          if (secProtocol !== null) {\n            const requestProtocols = getDecodeSplit("sec-websocket-protocol"\x2C request.headersList);\n            if (!requestProtocols.includes(secProtocol)) {\n              failWebsocketConnection(ws\x2C "Protocol was not set in the opening handshake.");\n              return;\n            }\n          }\n          response.socket.on("data"\x2C onSocketData);\n          response.socket.on("close"\x2C onSocketClose);\n          response.socket.on("error"\x2C onSocketError);\n          if (channels.open.hasSubscribers) {\n            channels.open.publish({\n              address: response.socket.address()\x2C\n              protocol: secProtocol\x2C\n              extensions: secExtension\n            });\n          }\n          onEstablish(response\x2C extensions);\n        }\n      });\n      return controller;\n    }\n    __name(establishWebSocketConnection\x2C "establishWebSocketConnection");\n    function closeWebSocketConnection(ws\x2C code\x2C reason\x2C reasonByteLength) {\n      if (isClosing(ws) || isClosed(ws)) {\n      } else if (!isEstablished(ws)) {\n        failWebsocketConnection(ws\x2C "Connection was closed before it was established.");\n        ws[kReadyState] = states.CLOSING;\n      } else if (ws[kSentClose] === sentCloseFrameState.NOT_SENT) {\n        ws[kSentClose] = sentCloseFrameState.PROCESSING;\n        const frame = new WebsocketFrameSend();\n        if (code !== void 0 && reason === void 0) {\n          frame.frameData = Buffer.allocUnsafe(2);\n          frame.frameData.writeUInt16BE(code\x2C 0);\n        } else if (code !== void 0 && reason !== void 0) {\n          frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength);\n          frame.frameData.writeUInt16BE(code\x2C 0);\n          frame.frameData.write(reason\x2C 2\x2C "utf-8");\n        } else {\n          frame.frameData = emptyBuffer;\n        }\n        const socket = ws[kResponse].socket;\n        socket.write(frame.createFrame(opcodes.CLOSE));\n        ws[kSentClose] = sentCloseFrameState.SENT;\n        ws[kReadyState] = states.CLOSING;\n      } else {\n        ws[kReadyState] = states.CLOSING;\n      }\n    }\n    __name(closeWebSocketConnection\x2C "closeWebSocketConnection");\n    function onSocketData(chunk) {\n      if (!this.ws[kByteParser].write(chunk)) {\n        this.pause();\n      }\n    }\n    __name(onSocketData\x2C "onSocketData");\n    function onSocketClose() {\n      const { ws } = this;\n      const { [kResponse]: response } = ws;\n      response.socket.off("data"\x2C onSocketData);\n      response.socket.off("close"\x2C onSocketClose);\n      response.socket.off("error"\x2C onSocketError);\n      const wasClean = ws[kSentClose] === sentCloseFrameState.SENT && ws[kReceivedClose];\n      let code = 1005;\n      let reason = "";\n      const result = ws[kByteParser].closingInfo;\n      if (result && !result.error) {\n        code = result.code ?? 1005;\n        reason = result.reason;\n      } else if (!ws[kReceivedClose]) {\n        code = 1006;\n      }\n      ws[kReadyState] = states.CLOSED;\n      fireEvent("close"\x2C ws\x2C (type\x2C init) => new CloseEvent2(type\x2C init)\x2C {\n        wasClean\x2C\n        code\x2C\n        reason\n      });\n      if (channels.close.hasSubscribers) {\n        channels.close.publish({\n          websocket: ws\x2C\n          code\x2C\n          reason\n        });\n      }\n    }\n    __name(onSocketClose\x2C "onSocketClose");\n    function onSocketError(error) {\n      const { ws } = this;\n      ws[kReadyState] = states.CLOSING;\n      if (channels.socketError.hasSubscribers) {\n        channels.socketError.publish(error);\n      }\n      this.destroy();\n    }\n    __name(onSocketError\x2C "onSocketError");\n    module2.exports = {\n      establishWebSocketConnection\x2C\n      closeWebSocketConnection\n    };\n  }\n});\n\n// lib/web/websocket/permessage-deflate.js\nvar require_permessage_deflate = __commonJS({\n  "lib/web/websocket/permessage-deflate.js"(exports2\x2C module2) {\n    "use strict";\n    var { createInflateRaw\x2C Z_DEFAULT_WINDOWBITS } = require("node:zlib");\n    var { isValidClientWindowBits } = require_util3();\n    var tail = Buffer.from([0\x2C 0\x2C 255\x2C 255]);\n    var kBuffer = Symbol("kBuffer");\n    var kLength = Symbol("kLength");\n    var PerMessageDeflate = class {\n      static {\n        __name(this\x2C "PerMessageDeflate");\n      }\n      /** @type {import('node:zlib').InflateRaw} */\n      #inflate;\n      #options = {};\n      constructor(extensions) {\n        this.#options.serverNoContextTakeover = extensions.has("server_no_context_takeover");\n        this.#options.serverMaxWindowBits = extensions.get("server_max_window_bits");\n      }\n      decompress(chunk\x2C fin\x2C callback) {\n        if (!this.#inflate) {\n          let windowBits = Z_DEFAULT_WINDOWBITS;\n          if (this.#options.serverMaxWindowBits) {\n            if (!isValidClientWindowBits(this.#options.serverMaxWindowBits)) {\n              callback(new Error("Invalid server_max_window_bits"));\n              return;\n            }\n            windowBits = Number.parseInt(this.#options.serverMaxWindowBits);\n          }\n          this.#inflate = createInflateRaw({ windowBits });\n          this.#inflate[kBuffer] = [];\n          this.#inflate[kLength] = 0;\n          this.#inflate.on("data"\x2C (data) => {\n            this.#inflate[kBuffer].push(data);\n            this.#inflate[kLength] += data.length;\n          });\n          this.#inflate.on("error"\x2C (err) => {\n            this.#inflate = null;\n            callback(err);\n          });\n        }\n        this.#inflate.write(chunk);\n        if (fin) {\n          this.#inflate.write(tail);\n        }\n        this.#inflate.flush(() => {\n          const full = Buffer.concat(this.#inflate[kBuffer]\x2C this.#inflate[kLength]);\n          this.#inflate[kBuffer].length = 0;\n          this.#inflate[kLength] = 0;\n          callback(null\x2C full);\n        });\n      }\n    };\n    module2.exports = { PerMessageDeflate };\n  }\n});\n\n// lib/web/websocket/receiver.js\nvar require_receiver = __commonJS({\n  "lib/web/websocket/receiver.js"(exports2\x2C module2) {\n    "use strict";\n    var { Writable } = require("node:stream");\n    var assert = require("node:assert");\n    var { parserStates\x2C opcodes\x2C states\x2C emptyBuffer\x2C sentCloseFrameState } = require_constants4();\n    var { kReadyState\x2C kSentClose\x2C kResponse\x2C kReceivedClose } = require_symbols3();\n    var { channels } = require_diagnostics();\n    var {\n      isValidStatusCode\x2C\n      isValidOpcode\x2C\n      failWebsocketConnection\x2C\n      websocketMessageReceived\x2C\n      utf8Decode\x2C\n      isControlFrame\x2C\n      isTextBinaryFrame\x2C\n      isContinuationFrame\n    } = require_util3();\n    var { WebsocketFrameSend } = require_frame();\n    var { closeWebSocketConnection } = require_connection();\n    var { PerMessageDeflate } = require_permessage_deflate();\n    var ByteParser = class extends Writable {\n      static {\n        __name(this\x2C "ByteParser");\n      }\n      #buffers = [];\n      #byteOffset = 0;\n      #loop = false;\n      #state = parserStates.INFO;\n      #info = {};\n      #fragments = [];\n      /** @type {Map<string\x2C PerMessageDeflate>} */\n      #extensions;\n      constructor(ws\x2C extensions) {\n        super();\n        this.ws = ws;\n        this.#extensions = extensions == null ? /* @__PURE__ */ new Map() : extensions;\n        if (this.#extensions.has("permessage-deflate")) {\n          this.#extensions.set("permessage-deflate"\x2C new PerMessageDeflate(extensions));\n        }\n      }\n      /**\n       * @param {Buffer} chunk\n       * @param {() => void} callback\n       */\n      _write(chunk\x2C _\x2C callback) {\n        this.#buffers.push(chunk);\n        this.#byteOffset += chunk.length;\n        this.#loop = true;\n        this.run(callback);\n      }\n      /**\n       * Runs whenever a new chunk is received.\n       * Callback is called whenever there are no more chunks buffering\x2C\n       * or not enough bytes are buffered to parse.\n       */\n      run(callback) {\n        while (this.#loop) {\n          if (this.#state === parserStates.INFO) {\n            if (this.#byteOffset < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            const fin = (buffer[0] & 128) !== 0;\n            const opcode = buffer[0] & 15;\n            const masked = (buffer[1] & 128) === 128;\n            const fragmented = !fin && opcode !== opcodes.CONTINUATION;\n            const payloadLength = buffer[1] & 127;\n            const rsv1 = buffer[0] & 64;\n            const rsv2 = buffer[0] & 32;\n            const rsv3 = buffer[0] & 16;\n            if (!isValidOpcode(opcode)) {\n              failWebsocketConnection(this.ws\x2C "Invalid opcode received");\n              return callback();\n            }\n            if (masked) {\n              failWebsocketConnection(this.ws\x2C "Frame cannot be masked");\n              return callback();\n            }\n            if (rsv1 !== 0 && !this.#extensions.has("permessage-deflate")) {\n              failWebsocketConnection(this.ws\x2C "Expected RSV1 to be clear.");\n              return;\n            }\n            if (rsv2 !== 0 || rsv3 !== 0) {\n              failWebsocketConnection(this.ws\x2C "RSV1\x2C RSV2\x2C RSV3 must be clear");\n              return;\n            }\n            if (fragmented && !isTextBinaryFrame(opcode)) {\n              failWebsocketConnection(this.ws\x2C "Invalid frame type was fragmented.");\n              return;\n            }\n            if (isTextBinaryFrame(opcode) && this.#fragments.length > 0) {\n              failWebsocketConnection(this.ws\x2C "Expected continuation frame");\n              return;\n            }\n            if (this.#info.fragmented && fragmented) {\n              failWebsocketConnection(this.ws\x2C "Fragmented frame exceeded 125 bytes.");\n              return;\n            }\n            if ((payloadLength > 125 || fragmented) && isControlFrame(opcode)) {\n              failWebsocketConnection(this.ws\x2C "Control frame either too large or fragmented");\n              return;\n            }\n            if (isContinuationFrame(opcode) && this.#fragments.length === 0 && !this.#info.compressed) {\n              failWebsocketConnection(this.ws\x2C "Unexpected continuation frame");\n              return;\n            }\n            if (payloadLength <= 125) {\n              this.#info.payloadLength = payloadLength;\n              this.#state = parserStates.READ_DATA;\n            } else if (payloadLength === 126) {\n              this.#state = parserStates.PAYLOADLENGTH_16;\n            } else if (payloadLength === 127) {\n              this.#state = parserStates.PAYLOADLENGTH_64;\n            }\n            if (isTextBinaryFrame(opcode)) {\n              this.#info.binaryType = opcode;\n              this.#info.compressed = rsv1 !== 0;\n            }\n            this.#info.opcode = opcode;\n            this.#info.masked = masked;\n            this.#info.fin = fin;\n            this.#info.fragmented = fragmented;\n          } else if (this.#state === parserStates.PAYLOADLENGTH_16) {\n            if (this.#byteOffset < 2) {\n              return callback();\n            }\n            const buffer = this.consume(2);\n            this.#info.payloadLength = buffer.readUInt16BE(0);\n            this.#state = parserStates.READ_DATA;\n          } else if (this.#state === parserStates.PAYLOADLENGTH_64) {\n            if (this.#byteOffset < 8) {\n              return callback();\n            }\n            const buffer = this.consume(8);\n            const upper = buffer.readUInt32BE(0);\n            if (upper > 2 ** 31 - 1) {\n              failWebsocketConnection(this.ws\x2C "Received payload length > 2^31 bytes.");\n              return;\n            }\n            const lower = buffer.readUInt32BE(4);\n            this.#info.payloadLength = (upper << 8) + lower;\n            this.#state = parserStates.READ_DATA;\n          } else if (this.#state === parserStates.READ_DATA) {\n            if (this.#byteOffset < this.#info.payloadLength) {\n              return callback();\n            }\n            const body = this.consume(this.#info.payloadLength);\n            if (isControlFrame(this.#info.opcode)) {\n              this.#loop = this.parseControlFrame(body);\n              this.#state = parserStates.INFO;\n            } else {\n              if (!this.#info.compressed) {\n                this.#fragments.push(body);\n                if (!this.#info.fragmented && this.#info.fin) {\n                  const fullMessage = Buffer.concat(this.#fragments);\n                  websocketMessageReceived(this.ws\x2C this.#info.binaryType\x2C fullMessage);\n                  this.#fragments.length = 0;\n                }\n                this.#state = parserStates.INFO;\n              } else {\n                this.#extensions.get("permessage-deflate").decompress(body\x2C this.#info.fin\x2C (error\x2C data) => {\n                  if (error) {\n                    closeWebSocketConnection(this.ws\x2C 1007\x2C error.message\x2C error.message.length);\n                    return;\n                  }\n                  this.#fragments.push(data);\n                  if (!this.#info.fin) {\n                    this.#state = parserStates.INFO;\n                    this.#loop = true;\n                    this.run(callback);\n                    return;\n                  }\n                  websocketMessageReceived(this.ws\x2C this.#info.binaryType\x2C Buffer.concat(this.#fragments));\n                  this.#loop = true;\n                  this.#state = parserStates.INFO;\n                  this.#fragments.length = 0;\n                  this.run(callback);\n                });\n                this.#loop = false;\n                break;\n              }\n            }\n          }\n        }\n      }\n      /**\n       * Take n bytes from the buffered Buffers\n       * @param {number} n\n       * @returns {Buffer}\n       */\n      consume(n) {\n        if (n > this.#byteOffset) {\n          throw new Error("Called consume() before buffers satiated.");\n        } else if (n === 0) {\n          return emptyBuffer;\n        }\n        if (this.#buffers[0].length === n) {\n          this.#byteOffset -= this.#buffers[0].length;\n          return this.#buffers.shift();\n        }\n        const buffer = Buffer.allocUnsafe(n);\n        let offset = 0;\n        while (offset !== n) {\n          const next = this.#buffers[0];\n          const { length } = next;\n          if (length + offset === n) {\n            buffer.set(this.#buffers.shift()\x2C offset);\n            break;\n          } else if (length + offset > n) {\n            buffer.set(next.subarray(0\x2C n - offset)\x2C offset);\n            this.#buffers[0] = next.subarray(n - offset);\n            break;\n          } else {\n            buffer.set(this.#buffers.shift()\x2C offset);\n            offset += next.length;\n          }\n        }\n        this.#byteOffset -= n;\n        return buffer;\n      }\n      parseCloseBody(data) {\n        assert(data.length !== 1);\n        let code;\n        if (data.length >= 2) {\n          code = data.readUInt16BE(0);\n        }\n        if (code !== void 0 && !isValidStatusCode(code)) {\n          return { code: 1002\x2C reason: "Invalid status code"\x2C error: true };\n        }\n        let reason = data.subarray(2);\n        if (reason[0] === 239 && reason[1] === 187 && reason[2] === 191) {\n          reason = reason.subarray(3);\n        }\n        try {\n          reason = utf8Decode(reason);\n        } catch {\n          return { code: 1007\x2C reason: "Invalid UTF-8"\x2C error: true };\n        }\n        return { code\x2C reason\x2C error: false };\n      }\n      /**\n       * Parses control frames.\n       * @param {Buffer} body\n       */\n      parseControlFrame(body) {\n        const { opcode\x2C payloadLength } = this.#info;\n        if (opcode === opcodes.CLOSE) {\n          if (payloadLength === 1) {\n            failWebsocketConnection(this.ws\x2C "Received close frame with a 1-byte body.");\n            return false;\n          }\n          this.#info.closeInfo = this.parseCloseBody(body);\n          if (this.#info.closeInfo.error) {\n            const { code\x2C reason } = this.#info.closeInfo;\n            closeWebSocketConnection(this.ws\x2C code\x2C reason\x2C reason.length);\n            failWebsocketConnection(this.ws\x2C reason);\n            return false;\n          }\n          if (this.ws[kSentClose] !== sentCloseFrameState.SENT) {\n            let body2 = emptyBuffer;\n            if (this.#info.closeInfo.code) {\n              body2 = Buffer.allocUnsafe(2);\n              body2.writeUInt16BE(this.#info.closeInfo.code\x2C 0);\n            }\n            const closeFrame = new WebsocketFrameSend(body2);\n            this.ws[kResponse].socket.write(\n              closeFrame.createFrame(opcodes.CLOSE)\x2C\n              (err) => {\n                if (!err) {\n                  this.ws[kSentClose] = sentCloseFrameState.SENT;\n                }\n              }\n            );\n          }\n          this.ws[kReadyState] = states.CLOSING;\n          this.ws[kReceivedClose] = true;\n          return false;\n        } else if (opcode === opcodes.PING) {\n          if (!this.ws[kReceivedClose]) {\n            const frame = new WebsocketFrameSend(body);\n            this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG));\n            if (channels.ping.hasSubscribers) {\n              channels.ping.publish({\n                payload: body\n              });\n            }\n          }\n        } else if (opcode === opcodes.PONG) {\n          if (channels.pong.hasSubscribers) {\n            channels.pong.publish({\n              payload: body\n            });\n          }\n        }\n        return true;\n      }\n      get closingInfo() {\n        return this.#info.closeInfo;\n      }\n    };\n    module2.exports = {\n      ByteParser\n    };\n  }\n});\n\n// lib/web/websocket/sender.js\nvar require_sender = __commonJS({\n  "lib/web/websocket/sender.js"(exports2\x2C module2) {\n    "use strict";\n    var { WebsocketFrameSend } = require_frame();\n    var { opcodes\x2C sendHints } = require_constants4();\n    var FixedQueue = require_fixed_queue();\n    var FastBuffer = Buffer[Symbol.species];\n    var SendQueue = class {\n      static {\n        __name(this\x2C "SendQueue");\n      }\n      /**\n       * @type {FixedQueue}\n       */\n      #queue = new FixedQueue();\n      /**\n       * @type {boolean}\n       */\n      #running = false;\n      /** @type {import('node:net').Socket} */\n      #socket;\n      constructor(socket) {\n        this.#socket = socket;\n      }\n      add(item\x2C cb\x2C hint) {\n        if (hint !== sendHints.blob) {\n          const frame = createFrame(item\x2C hint);\n          if (!this.#running) {\n            this.#socket.write(frame\x2C cb);\n          } else {\n            const node2 = {\n              promise: null\x2C\n              callback: cb\x2C\n              frame\n            };\n            this.#queue.push(node2);\n          }\n          return;\n        }\n        const node = {\n          promise: item.arrayBuffer().then((ab) => {\n            node.promise = null;\n            node.frame = createFrame(ab\x2C hint);\n          })\x2C\n          callback: cb\x2C\n          frame: null\n        };\n        this.#queue.push(node);\n        if (!this.#running) {\n          this.#run();\n        }\n      }\n      async #run() {\n        this.#running = true;\n        const queue = this.#queue;\n        while (!queue.isEmpty()) {\n          const node = queue.shift();\n          if (node.promise !== null) {\n            await node.promise;\n          }\n          this.#socket.write(node.frame\x2C node.callback);\n          node.callback = node.frame = null;\n        }\n        this.#running = false;\n      }\n    };\n    function createFrame(data\x2C hint) {\n      return new WebsocketFrameSend(toBuffer(data\x2C hint)).createFrame(hint === sendHints.string ? opcodes.TEXT : opcodes.BINARY);\n    }\n    __name(createFrame\x2C "createFrame");\n    function toBuffer(data\x2C hint) {\n      switch (hint) {\n        case sendHints.string:\n          return Buffer.from(data);\n        case sendHints.arrayBuffer:\n        case sendHints.blob:\n          return new FastBuffer(data);\n        case sendHints.typedArray:\n          return new FastBuffer(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n      }\n    }\n    __name(toBuffer\x2C "toBuffer");\n    module2.exports = { SendQueue };\n  }\n});\n\n// lib/web/websocket/websocket.js\nvar require_websocket = __commonJS({\n  "lib/web/websocket/websocket.js"(exports2\x2C module2) {\n    "use strict";\n    var { webidl } = require_webidl();\n    var { URLSerializer } = require_data_url();\n    var { environmentSettingsObject } = require_util2();\n    var { staticPropertyDescriptors\x2C states\x2C sentCloseFrameState\x2C sendHints } = require_constants4();\n    var {\n      kWebSocketURL\x2C\n      kReadyState\x2C\n      kController\x2C\n      kBinaryType\x2C\n      kResponse\x2C\n      kSentClose\x2C\n      kByteParser\n    } = require_symbols3();\n    var {\n      isConnecting\x2C\n      isEstablished\x2C\n      isClosing\x2C\n      isValidSubprotocol\x2C\n      fireEvent\n    } = require_util3();\n    var { establishWebSocketConnection\x2C closeWebSocketConnection } = require_connection();\n    var { ByteParser } = require_receiver();\n    var { kEnumerableProperty\x2C isBlobLike } = require_util();\n    var { getGlobalDispatcher: getGlobalDispatcher2 } = require_global2();\n    var { types } = require("node:util");\n    var { ErrorEvent: ErrorEvent2\x2C CloseEvent: CloseEvent2 } = require_events();\n    var { SendQueue } = require_sender();\n    var WebSocket = class _WebSocket extends EventTarget {\n      static {\n        __name(this\x2C "WebSocket");\n      }\n      #events = {\n        open: null\x2C\n        error: null\x2C\n        close: null\x2C\n        message: null\n      };\n      #bufferedAmount = 0;\n      #protocol = "";\n      #extensions = "";\n      /** @type {SendQueue} */\n      #sendQueue;\n      /**\n       * @param {string} url\n       * @param {string|string[]} protocols\n       */\n      constructor(url\x2C protocols = []) {\n        super();\n        webidl.util.markAsUncloneable(this);\n        const prefix = "WebSocket constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        const options = webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"](protocols\x2C prefix\x2C "options");\n        url = webidl.converters.USVString(url\x2C prefix\x2C "url");\n        protocols = options.protocols;\n        const baseURL = environmentSettingsObject.settingsObject.baseUrl;\n        let urlRecord;\n        try {\n          urlRecord = new URL(url\x2C baseURL);\n        } catch (e) {\n          throw new DOMException(e\x2C "SyntaxError");\n        }\n        if (urlRecord.protocol === "http:") {\n          urlRecord.protocol = "ws:";\n        } else if (urlRecord.protocol === "https:") {\n          urlRecord.protocol = "wss:";\n        }\n        if (urlRecord.protocol !== "ws:" && urlRecord.protocol !== "wss:") {\n          throw new DOMException(\n            `Expected a ws: or wss: protocol\x2C got ${urlRecord.protocol}`\x2C\n            "SyntaxError"\n          );\n        }\n        if (urlRecord.hash || urlRecord.href.endsWith("#")) {\n          throw new DOMException("Got fragment"\x2C "SyntaxError");\n        }\n        if (typeof protocols === "string") {\n          protocols = [protocols];\n        }\n        if (protocols.length !== new Set(protocols.map((p) => p.toLowerCase())).size) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value"\x2C "SyntaxError");\n        }\n        if (protocols.length > 0 && !protocols.every((p) => isValidSubprotocol(p))) {\n          throw new DOMException("Invalid Sec-WebSocket-Protocol value"\x2C "SyntaxError");\n        }\n        this[kWebSocketURL] = new URL(urlRecord.href);\n        const client = environmentSettingsObject.settingsObject;\n        this[kController] = establishWebSocketConnection(\n          urlRecord\x2C\n          protocols\x2C\n          client\x2C\n          this\x2C\n          (response\x2C extensions) => this.#onConnectionEstablished(response\x2C extensions)\x2C\n          options\n        );\n        this[kReadyState] = _WebSocket.CONNECTING;\n        this[kSentClose] = sentCloseFrameState.NOT_SENT;\n        this[kBinaryType] = "blob";\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n       * @param {number|undefined} code\n       * @param {string|undefined} reason\n       */\n      close(code = void 0\x2C reason = void 0) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        const prefix = "WebSocket.close";\n        if (code !== void 0) {\n          code = webidl.converters["unsigned short"](code\x2C prefix\x2C "code"\x2C { clamp: true });\n        }\n        if (reason !== void 0) {\n          reason = webidl.converters.USVString(reason\x2C prefix\x2C "reason");\n        }\n        if (code !== void 0) {\n          if (code !== 1e3 && (code < 3e3 || code > 4999)) {\n            throw new DOMException("invalid code"\x2C "InvalidAccessError");\n          }\n        }\n        let reasonByteLength = 0;\n        if (reason !== void 0) {\n          reasonByteLength = Buffer.byteLength(reason);\n          if (reasonByteLength > 123) {\n            throw new DOMException(\n              `Reason must be less than 123 bytes; received ${reasonByteLength}`\x2C\n              "SyntaxError"\n            );\n          }\n        }\n        closeWebSocketConnection(this\x2C code\x2C reason\x2C reasonByteLength);\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n       * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n       */\n      send(data) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        const prefix = "WebSocket.send";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        data = webidl.converters.WebSocketSendData(data\x2C prefix\x2C "data");\n        if (isConnecting(this)) {\n          throw new DOMException("Sent before connected."\x2C "InvalidStateError");\n        }\n        if (!isEstablished(this) || isClosing(this)) {\n          return;\n        }\n        if (typeof data === "string") {\n          const length = Buffer.byteLength(data);\n          this.#bufferedAmount += length;\n          this.#sendQueue.add(data\x2C () => {\n            this.#bufferedAmount -= length;\n          }\x2C sendHints.string);\n        } else if (types.isArrayBuffer(data)) {\n          this.#bufferedAmount += data.byteLength;\n          this.#sendQueue.add(data\x2C () => {\n            this.#bufferedAmount -= data.byteLength;\n          }\x2C sendHints.arrayBuffer);\n        } else if (ArrayBuffer.isView(data)) {\n          this.#bufferedAmount += data.byteLength;\n          this.#sendQueue.add(data\x2C () => {\n            this.#bufferedAmount -= data.byteLength;\n          }\x2C sendHints.typedArray);\n        } else if (isBlobLike(data)) {\n          this.#bufferedAmount += data.size;\n          this.#sendQueue.add(data\x2C () => {\n            this.#bufferedAmount -= data.size;\n          }\x2C sendHints.blob);\n        }\n      }\n      get readyState() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this[kReadyState];\n      }\n      get bufferedAmount() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#bufferedAmount;\n      }\n      get url() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return URLSerializer(this[kWebSocketURL]);\n      }\n      get extensions() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#extensions;\n      }\n      get protocol() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#protocol;\n      }\n      get onopen() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#events.open;\n      }\n      set onopen(fn) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        if (this.#events.open) {\n          this.removeEventListener("open"\x2C this.#events.open);\n        }\n        if (typeof fn === "function") {\n          this.#events.open = fn;\n          this.addEventListener("open"\x2C fn);\n        } else {\n          this.#events.open = null;\n        }\n      }\n      get onerror() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#events.error;\n      }\n      set onerror(fn) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        if (this.#events.error) {\n          this.removeEventListener("error"\x2C this.#events.error);\n        }\n        if (typeof fn === "function") {\n          this.#events.error = fn;\n          this.addEventListener("error"\x2C fn);\n        } else {\n          this.#events.error = null;\n        }\n      }\n      get onclose() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#events.close;\n      }\n      set onclose(fn) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        if (this.#events.close) {\n          this.removeEventListener("close"\x2C this.#events.close);\n        }\n        if (typeof fn === "function") {\n          this.#events.close = fn;\n          this.addEventListener("close"\x2C fn);\n        } else {\n          this.#events.close = null;\n        }\n      }\n      get onmessage() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this.#events.message;\n      }\n      set onmessage(fn) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        if (this.#events.message) {\n          this.removeEventListener("message"\x2C this.#events.message);\n        }\n        if (typeof fn === "function") {\n          this.#events.message = fn;\n          this.addEventListener("message"\x2C fn);\n        } else {\n          this.#events.message = null;\n        }\n      }\n      get binaryType() {\n        webidl.brandCheck(this\x2C _WebSocket);\n        return this[kBinaryType];\n      }\n      set binaryType(type) {\n        webidl.brandCheck(this\x2C _WebSocket);\n        if (type !== "blob" && type !== "arraybuffer") {\n          this[kBinaryType] = "blob";\n        } else {\n          this[kBinaryType] = type;\n        }\n      }\n      /**\n       * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n       */\n      #onConnectionEstablished(response\x2C parsedExtensions) {\n        this[kResponse] = response;\n        const parser = new ByteParser(this\x2C parsedExtensions);\n        parser.on("drain"\x2C onParserDrain);\n        parser.on("error"\x2C onParserError.bind(this));\n        response.socket.ws = this;\n        this[kByteParser] = parser;\n        this.#sendQueue = new SendQueue(response.socket);\n        this[kReadyState] = states.OPEN;\n        const extensions = response.headersList.get("sec-websocket-extensions");\n        if (extensions !== null) {\n          this.#extensions = extensions;\n        }\n        const protocol = response.headersList.get("sec-websocket-protocol");\n        if (protocol !== null) {\n          this.#protocol = protocol;\n        }\n        fireEvent("open"\x2C this);\n      }\n    };\n    WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING;\n    WebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN;\n    WebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING;\n    WebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED;\n    Object.defineProperties(WebSocket.prototype\x2C {\n      CONNECTING: staticPropertyDescriptors\x2C\n      OPEN: staticPropertyDescriptors\x2C\n      CLOSING: staticPropertyDescriptors\x2C\n      CLOSED: staticPropertyDescriptors\x2C\n      url: kEnumerableProperty\x2C\n      readyState: kEnumerableProperty\x2C\n      bufferedAmount: kEnumerableProperty\x2C\n      onopen: kEnumerableProperty\x2C\n      onerror: kEnumerableProperty\x2C\n      onclose: kEnumerableProperty\x2C\n      close: kEnumerableProperty\x2C\n      onmessage: kEnumerableProperty\x2C\n      binaryType: kEnumerableProperty\x2C\n      send: kEnumerableProperty\x2C\n      extensions: kEnumerableProperty\x2C\n      protocol: kEnumerableProperty\x2C\n      [Symbol.toStringTag]: {\n        value: "WebSocket"\x2C\n        writable: false\x2C\n        enumerable: false\x2C\n        configurable: true\n      }\n    });\n    Object.defineProperties(WebSocket\x2C {\n      CONNECTING: staticPropertyDescriptors\x2C\n      OPEN: staticPropertyDescriptors\x2C\n      CLOSING: staticPropertyDescriptors\x2C\n      CLOSED: staticPropertyDescriptors\n    });\n    webidl.converters["sequence<DOMString>"] = webidl.sequenceConverter(\n      webidl.converters.DOMString\n    );\n    webidl.converters["DOMString or sequence<DOMString>"] = function(V\x2C prefix\x2C argument) {\n      if (webidl.util.Type(V) === "Object" && Symbol.iterator in V) {\n        return webidl.converters["sequence<DOMString>"](V);\n      }\n      return webidl.converters.DOMString(V\x2C prefix\x2C argument);\n    };\n    webidl.converters.WebSocketInit = webidl.dictionaryConverter([\n      {\n        key: "protocols"\x2C\n        converter: webidl.converters["DOMString or sequence<DOMString>"]\x2C\n        defaultValue: () => new Array(0)\n      }\x2C\n      {\n        key: "dispatcher"\x2C\n        converter: webidl.converters.any\x2C\n        defaultValue: () => getGlobalDispatcher2()\n      }\x2C\n      {\n        key: "headers"\x2C\n        converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n      }\n    ]);\n    webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(V) {\n      if (webidl.util.Type(V) === "Object" && !(Symbol.iterator in V)) {\n        return webidl.converters.WebSocketInit(V);\n      }\n      return { protocols: webidl.converters["DOMString or sequence<DOMString>"](V) };\n    };\n    webidl.converters.WebSocketSendData = function(V) {\n      if (webidl.util.Type(V) === "Object") {\n        if (isBlobLike(V)) {\n          return webidl.converters.Blob(V\x2C { strict: false });\n        }\n        if (ArrayBuffer.isView(V) || types.isArrayBuffer(V)) {\n          return webidl.converters.BufferSource(V);\n        }\n      }\n      return webidl.converters.USVString(V);\n    };\n    function onParserDrain() {\n      this.ws[kResponse].socket.resume();\n    }\n    __name(onParserDrain\x2C "onParserDrain");\n    function onParserError(err) {\n      let message;\n      let code;\n      if (err instanceof CloseEvent2) {\n        message = err.reason;\n        code = err.code;\n      } else {\n        message = err.message;\n      }\n      fireEvent("error"\x2C this\x2C () => new ErrorEvent2("error"\x2C { error: err\x2C message }));\n      closeWebSocketConnection(this\x2C code);\n    }\n    __name(onParserError\x2C "onParserError");\n    module2.exports = {\n      WebSocket\n    };\n  }\n});\n\n// lib/web/eventsource/util.js\nvar require_util4 = __commonJS({\n  "lib/web/eventsource/util.js"(exports2\x2C module2) {\n    "use strict";\n    function isValidLastEventId(value) {\n      return value.indexOf("\\0") === -1;\n    }\n    __name(isValidLastEventId\x2C "isValidLastEventId");\n    function isASCIINumber(value) {\n      if (value.length === 0)\n        return false;\n      for (let i = 0; i < value.length; i++) {\n        if (value.charCodeAt(i) < 48 || value.charCodeAt(i) > 57)\n          return false;\n      }\n      return true;\n    }\n    __name(isASCIINumber\x2C "isASCIINumber");\n    function delay(ms) {\n      return new Promise((resolve) => {\n        setTimeout(resolve\x2C ms).unref();\n      });\n    }\n    __name(delay\x2C "delay");\n    module2.exports = {\n      isValidLastEventId\x2C\n      isASCIINumber\x2C\n      delay\n    };\n  }\n});\n\n// lib/web/eventsource/eventsource-stream.js\nvar require_eventsource_stream = __commonJS({\n  "lib/web/eventsource/eventsource-stream.js"(exports2\x2C module2) {\n    "use strict";\n    var { Transform } = require("node:stream");\n    var { isASCIINumber\x2C isValidLastEventId } = require_util4();\n    var BOM = [239\x2C 187\x2C 191];\n    var LF = 10;\n    var CR = 13;\n    var COLON = 58;\n    var SPACE = 32;\n    var EventSourceStream = class extends Transform {\n      static {\n        __name(this\x2C "EventSourceStream");\n      }\n      /**\n       * @type {eventSourceSettings}\n       */\n      state = null;\n      /**\n       * Leading byte-order-mark check.\n       * @type {boolean}\n       */\n      checkBOM = true;\n      /**\n       * @type {boolean}\n       */\n      crlfCheck = false;\n      /**\n       * @type {boolean}\n       */\n      eventEndCheck = false;\n      /**\n       * @type {Buffer}\n       */\n      buffer = null;\n      pos = 0;\n      event = {\n        data: void 0\x2C\n        event: void 0\x2C\n        id: void 0\x2C\n        retry: void 0\n      };\n      /**\n       * @param {object} options\n       * @param {eventSourceSettings} options.eventSourceSettings\n       * @param {Function} [options.push]\n       */\n      constructor(options = {}) {\n        options.readableObjectMode = true;\n        super(options);\n        this.state = options.eventSourceSettings || {};\n        if (options.push) {\n          this.push = options.push;\n        }\n      }\n      /**\n       * @param {Buffer} chunk\n       * @param {string} _encoding\n       * @param {Function} callback\n       * @returns {void}\n       */\n      _transform(chunk\x2C _encoding\x2C callback) {\n        if (chunk.length === 0) {\n          callback();\n          return;\n        }\n        if (this.buffer) {\n          this.buffer = Buffer.concat([this.buffer\x2C chunk]);\n        } else {\n          this.buffer = chunk;\n        }\n        if (this.checkBOM) {\n          switch (this.buffer.length) {\n            case 1:\n              if (this.buffer[0] === BOM[0]) {\n                callback();\n                return;\n              }\n              this.checkBOM = false;\n              callback();\n              return;\n            case 2:\n              if (this.buffer[0] === BOM[0] && this.buffer[1] === BOM[1]) {\n                callback();\n                return;\n              }\n              this.checkBOM = false;\n              break;\n            case 3:\n              if (this.buffer[0] === BOM[0] && this.buffer[1] === BOM[1] && this.buffer[2] === BOM[2]) {\n                this.buffer = Buffer.alloc(0);\n                this.checkBOM = false;\n                callback();\n                return;\n              }\n              this.checkBOM = false;\n              break;\n            default:\n              if (this.buffer[0] === BOM[0] && this.buffer[1] === BOM[1] && this.buffer[2] === BOM[2]) {\n                this.buffer = this.buffer.subarray(3);\n              }\n              this.checkBOM = false;\n              break;\n          }\n        }\n        while (this.pos < this.buffer.length) {\n          if (this.eventEndCheck) {\n            if (this.crlfCheck) {\n              if (this.buffer[this.pos] === LF) {\n                this.buffer = this.buffer.subarray(this.pos + 1);\n                this.pos = 0;\n                this.crlfCheck = false;\n                continue;\n              }\n              this.crlfCheck = false;\n            }\n            if (this.buffer[this.pos] === LF || this.buffer[this.pos] === CR) {\n              if (this.buffer[this.pos] === CR) {\n                this.crlfCheck = true;\n              }\n              this.buffer = this.buffer.subarray(this.pos + 1);\n              this.pos = 0;\n              if (this.event.data !== void 0 || this.event.event || this.event.id || this.event.retry) {\n                this.processEvent(this.event);\n              }\n              this.clearEvent();\n              continue;\n            }\n            this.eventEndCheck = false;\n            continue;\n          }\n          if (this.buffer[this.pos] === LF || this.buffer[this.pos] === CR) {\n            if (this.buffer[this.pos] === CR) {\n              this.crlfCheck = true;\n            }\n            this.parseLine(this.buffer.subarray(0\x2C this.pos)\x2C this.event);\n            this.buffer = this.buffer.subarray(this.pos + 1);\n            this.pos = 0;\n            this.eventEndCheck = true;\n            continue;\n          }\n          this.pos++;\n        }\n        callback();\n      }\n      /**\n       * @param {Buffer} line\n       * @param {EventStreamEvent} event\n       */\n      parseLine(line\x2C event) {\n        if (line.length === 0) {\n          return;\n        }\n        const colonPosition = line.indexOf(COLON);\n        if (colonPosition === 0) {\n          return;\n        }\n        let field = "";\n        let value = "";\n        if (colonPosition !== -1) {\n          field = line.subarray(0\x2C colonPosition).toString("utf8");\n          let valueStart = colonPosition + 1;\n          if (line[valueStart] === SPACE) {\n            ++valueStart;\n          }\n          value = line.subarray(valueStart).toString("utf8");\n        } else {\n          field = line.toString("utf8");\n          value = "";\n        }\n        switch (field) {\n          case "data":\n            if (event[field] === void 0) {\n              event[field] = value;\n            } else {\n              event[field] += `\n${value}`;\n            }\n            break;\n          case "retry":\n            if (isASCIINumber(value)) {\n              event[field] = value;\n            }\n            break;\n          case "id":\n            if (isValidLastEventId(value)) {\n              event[field] = value;\n            }\n            break;\n          case "event":\n            if (value.length > 0) {\n              event[field] = value;\n            }\n            break;\n        }\n      }\n      /**\n       * @param {EventSourceStreamEvent} event\n       */\n      processEvent(event) {\n        if (event.retry && isASCIINumber(event.retry)) {\n          this.state.reconnectionTime = parseInt(event.retry\x2C 10);\n        }\n        if (event.id && isValidLastEventId(event.id)) {\n          this.state.lastEventId = event.id;\n        }\n        if (event.data !== void 0) {\n          this.push({\n            type: event.event || "message"\x2C\n            options: {\n              data: event.data\x2C\n              lastEventId: this.state.lastEventId\x2C\n              origin: this.state.origin\n            }\n          });\n        }\n      }\n      clearEvent() {\n        this.event = {\n          data: void 0\x2C\n          event: void 0\x2C\n          id: void 0\x2C\n          retry: void 0\n        };\n      }\n    };\n    module2.exports = {\n      EventSourceStream\n    };\n  }\n});\n\n// lib/web/eventsource/eventsource.js\nvar require_eventsource = __commonJS({\n  "lib/web/eventsource/eventsource.js"(exports2\x2C module2) {\n    "use strict";\n    var { pipeline } = require("node:stream");\n    var { fetching } = require_fetch();\n    var { makeRequest } = require_request2();\n    var { webidl } = require_webidl();\n    var { EventSourceStream } = require_eventsource_stream();\n    var { parseMIMEType } = require_data_url();\n    var { createFastMessageEvent: createFastMessageEvent2 } = require_events();\n    var { isNetworkError } = require_response();\n    var { delay } = require_util4();\n    var { kEnumerableProperty } = require_util();\n    var { environmentSettingsObject } = require_util2();\n    var experimentalWarned = false;\n    var defaultReconnectionTime = 3e3;\n    var CONNECTING = 0;\n    var OPEN = 1;\n    var CLOSED = 2;\n    var ANONYMOUS = "anonymous";\n    var USE_CREDENTIALS = "use-credentials";\n    var EventSource = class _EventSource extends EventTarget {\n      static {\n        __name(this\x2C "EventSource");\n      }\n      #events = {\n        open: null\x2C\n        error: null\x2C\n        message: null\n      };\n      #url = null;\n      #withCredentials = false;\n      #readyState = CONNECTING;\n      #request = null;\n      #controller = null;\n      #dispatcher;\n      /**\n       * @type {import('./eventsource-stream').eventSourceSettings}\n       */\n      #state;\n      /**\n       * Creates a new EventSource object.\n       * @param {string} url\n       * @param {EventSourceInit} [eventSourceInitDict]\n       * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface\n       */\n      constructor(url\x2C eventSourceInitDict = {}) {\n        super();\n        webidl.util.markAsUncloneable(this);\n        const prefix = "EventSource constructor";\n        webidl.argumentLengthCheck(arguments\x2C 1\x2C prefix);\n        if (!experimentalWarned) {\n          experimentalWarned = true;\n          process.emitWarning("EventSource is experimental\x2C expect them to change at any time."\x2C {\n            code: "UNDICI-ES"\n          });\n        }\n        url = webidl.converters.USVString(url\x2C prefix\x2C "url");\n        eventSourceInitDict = webidl.converters.EventSourceInitDict(eventSourceInitDict\x2C prefix\x2C "eventSourceInitDict");\n        this.#dispatcher = eventSourceInitDict.dispatcher;\n        this.#state = {\n          lastEventId: ""\x2C\n          reconnectionTime: defaultReconnectionTime\n        };\n        const settings = environmentSettingsObject;\n        let urlRecord;\n        try {\n          urlRecord = new URL(url\x2C settings.settingsObject.baseUrl);\n          this.#state.origin = urlRecord.origin;\n        } catch (e) {\n          throw new DOMException(e\x2C "SyntaxError");\n        }\n        this.#url = urlRecord.href;\n        let corsAttributeState = ANONYMOUS;\n        if (eventSourceInitDict.withCredentials) {\n          corsAttributeState = USE_CREDENTIALS;\n          this.#withCredentials = true;\n        }\n        const initRequest = {\n          redirect: "follow"\x2C\n          keepalive: true\x2C\n          // @see https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-settings-attributes\n          mode: "cors"\x2C\n          credentials: corsAttributeState === "anonymous" ? "same-origin" : "omit"\x2C\n          referrer: "no-referrer"\n        };\n        initRequest.client = environmentSettingsObject.settingsObject;\n        initRequest.headersList = [["accept"\x2C { name: "accept"\x2C value: "text/event-stream" }]];\n        initRequest.cache = "no-store";\n        initRequest.initiator = "other";\n        initRequest.urlList = [new URL(this.#url)];\n        this.#request = makeRequest(initRequest);\n        this.#connect();\n      }\n      /**\n       * Returns the state of this EventSource object's connection. It can have the\n       * values described below.\n       * @returns {0|1|2}\n       * @readonly\n       */\n      get readyState() {\n        return this.#readyState;\n      }\n      /**\n       * Returns the URL providing the event stream.\n       * @readonly\n       * @returns {string}\n       */\n      get url() {\n        return this.#url;\n      }\n      /**\n       * Returns a boolean indicating whether the EventSource object was\n       * instantiated with CORS credentials set (true)\x2C or not (false\x2C the default).\n       */\n      get withCredentials() {\n        return this.#withCredentials;\n      }\n      #connect() {\n        if (this.#readyState === CLOSED)\n          return;\n        this.#readyState = CONNECTING;\n        const fetchParams = {\n          request: this.#request\x2C\n          dispatcher: this.#dispatcher\n        };\n        const processEventSourceEndOfBody = /* @__PURE__ */ __name((response) => {\n          if (isNetworkError(response)) {\n            this.dispatchEvent(new Event("error"));\n            this.close();\n          }\n          this.#reconnect();\n        }\x2C "processEventSourceEndOfBody");\n        fetchParams.processResponseEndOfBody = processEventSourceEndOfBody;\n        fetchParams.processResponse = (response) => {\n          if (isNetworkError(response)) {\n            if (response.aborted) {\n              this.close();\n              this.dispatchEvent(new Event("error"));\n              return;\n            } else {\n              this.#reconnect();\n              return;\n            }\n          }\n          const contentType = response.headersList.get("content-type"\x2C true);\n          const mimeType = contentType !== null ? parseMIMEType(contentType) : "failure";\n          const contentTypeValid = mimeType !== "failure" && mimeType.essence === "text/event-stream";\n          if (response.status !== 200 || contentTypeValid === false) {\n            this.close();\n            this.dispatchEvent(new Event("error"));\n            return;\n          }\n          this.#readyState = OPEN;\n          this.dispatchEvent(new Event("open"));\n          this.#state.origin = response.urlList[response.urlList.length - 1].origin;\n          const eventSourceStream = new EventSourceStream({\n            eventSourceSettings: this.#state\x2C\n            push: (event) => {\n              this.dispatchEvent(createFastMessageEvent2(\n                event.type\x2C\n                event.options\n              ));\n            }\n          });\n          pipeline(\n            response.body.stream\x2C\n            eventSourceStream\x2C\n            (error) => {\n              if (error?.aborted === false) {\n                this.close();\n                this.dispatchEvent(new Event("error"));\n              }\n            }\n          );\n        };\n        this.#controller = fetching(fetchParams);\n      }\n      /**\n       * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#sse-processing-model\n       * @returns {Promise<void>}\n       */\n      async #reconnect() {\n        if (this.#readyState === CLOSED)\n          return;\n        this.#readyState = CONNECTING;\n        this.dispatchEvent(new Event("error"));\n        await delay(this.#state.reconnectionTime);\n        if (this.#readyState !== CONNECTING)\n          return;\n        if (this.#state.lastEventId.length) {\n          this.#request.headersList.set("last-event-id"\x2C this.#state.lastEventId\x2C true);\n        }\n        this.#connect();\n      }\n      /**\n       * Closes the connection\x2C if any\x2C and sets the readyState attribute to\n       * CLOSED.\n       */\n      close() {\n        webidl.brandCheck(this\x2C _EventSource);\n        if (this.#readyState === CLOSED)\n          return;\n        this.#readyState = CLOSED;\n        this.#controller.abort();\n        this.#request = null;\n      }\n      get onopen() {\n        return this.#events.open;\n      }\n      set onopen(fn) {\n        if (this.#events.open) {\n          this.removeEventListener("open"\x2C this.#events.open);\n        }\n        if (typeof fn === "function") {\n          this.#events.open = fn;\n          this.addEventListener("open"\x2C fn);\n        } else {\n          this.#events.open = null;\n        }\n      }\n      get onmessage() {\n        return this.#events.message;\n      }\n      set onmessage(fn) {\n        if (this.#events.message) {\n          this.removeEventListener("message"\x2C this.#events.message);\n        }\n        if (typeof fn === "function") {\n          this.#events.message = fn;\n          this.addEventListener("message"\x2C fn);\n        } else {\n          this.#events.message = null;\n        }\n      }\n      get onerror() {\n        return this.#events.error;\n      }\n      set onerror(fn) {\n        if (this.#events.error) {\n          this.removeEventListener("error"\x2C this.#events.error);\n        }\n        if (typeof fn === "function") {\n          this.#events.error = fn;\n          this.addEventListener("error"\x2C fn);\n        } else {\n          this.#events.error = null;\n        }\n      }\n    };\n    var constantsPropertyDescriptors = {\n      CONNECTING: {\n        __proto__: null\x2C\n        configurable: false\x2C\n        enumerable: true\x2C\n        value: CONNECTING\x2C\n        writable: false\n      }\x2C\n      OPEN: {\n        __proto__: null\x2C\n        configurable: false\x2C\n        enumerable: true\x2C\n        value: OPEN\x2C\n        writable: false\n      }\x2C\n      CLOSED: {\n        __proto__: null\x2C\n        configurable: false\x2C\n        enumerable: true\x2C\n        value: CLOSED\x2C\n        writable: false\n      }\n    };\n    Object.defineProperties(EventSource\x2C constantsPropertyDescriptors);\n    Object.defineProperties(EventSource.prototype\x2C constantsPropertyDescriptors);\n    Object.defineProperties(EventSource.prototype\x2C {\n      close: kEnumerableProperty\x2C\n      onerror: kEnumerableProperty\x2C\n      onmessage: kEnumerableProperty\x2C\n      onopen: kEnumerableProperty\x2C\n      readyState: kEnumerableProperty\x2C\n      url: kEnumerableProperty\x2C\n      withCredentials: kEnumerableProperty\n    });\n    webidl.converters.EventSourceInitDict = webidl.dictionaryConverter([\n      {\n        key: "withCredentials"\x2C\n        converter: webidl.converters.boolean\x2C\n        defaultValue: () => false\n      }\x2C\n      {\n        key: "dispatcher"\x2C\n        // undici only\n        converter: webidl.converters.any\n      }\n    ]);\n    module2.exports = {\n      EventSource\x2C\n      defaultReconnectionTime\n    };\n  }\n});\n\n// index-fetch.js\nvar { getGlobalDispatcher\x2C setGlobalDispatcher } = require_global2();\nvar EnvHttpProxyAgent = require_env_http_proxy_agent();\nvar fetchImpl = require_fetch().fetch;\nmodule.exports.fetch = /* @__PURE__ */ __name(function fetch(resource\x2C init = void 0) {\n  return fetchImpl(resource\x2C init).catch((err) => {\n    if (err && typeof err === "object") {\n      Error.captureStackTrace(err);\n    }\n    throw err;\n  });\n}\x2C "fetch");\nmodule.exports.FormData = require_formdata().FormData;\nmodule.exports.Headers = require_headers().Headers;\nmodule.exports.Response = require_response().Response;\nmodule.exports.Request = require_request2().Request;\nvar { CloseEvent\x2C ErrorEvent\x2C MessageEvent\x2C createFastMessageEvent } = require_events();\nmodule.exports.WebSocket = require_websocket().WebSocket;\nmodule.exports.CloseEvent = CloseEvent;\nmodule.exports.ErrorEvent = ErrorEvent;\nmodule.exports.MessageEvent = MessageEvent;\nmodule.exports.createFastMessageEvent = createFastMessageEvent;\nmodule.exports.EventSource = require_eventsource().EventSource;\nmodule.exports.EnvHttpProxyAgent = EnvHttpProxyAgent;\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher;\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher;\n/*! formdata-polyfill. MIT License. Jimmy W\xe4rting <https://jimmy.warting.se/opensource> */\n/*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */\n
code-source-info,0x12ea9865fb20,125,0,600780,C0O0C4O600780,,
code-creation,JS,9,133125,0x12ea98660188,1649, node:internal/deps/undici/undici:1:1,0x38a74a566af8,~
code-source-info,0x12ea
tick,0x1924008e8,133208,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x100fb3250,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1925629f4,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1009ee310,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1925278f4,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1009ee338,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x192475e08,133250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1009ee338,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x19252adc4,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x100d18254,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1925629f4,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1925278f4,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x100d180d8,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x192475198,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x192475198,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x192475e28,133292,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x101197fac,133667,0,0x0,3,0x12ea986601c1,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
new,MemoryChunk,0x25c70e000000,262144
code-creation,JS,9,133875,0x12ea98660b28,18,__commonJS node:internal/deps/undici/undici:5:18,0x38a74a566bb8,~
code-source-info,0x12ea98660b28,125,212,351,C0O212C13O225C17O351,,
code-creation,JS,9,133917,0x12ea98660bc0,56,__require node:internal/deps/undici/undici:5:49,0x38a74a56b4d8,~
code-source-info,0x12ea98660bc0,125,243,351,C0O250C4O270C15O271C21O292C24O270C32O303C35O322C43O297C48O341C51O341C55O349,,
code-creation,JS,9,133958,0x12ea98660cd0,126,lib/global.js node:internal/deps/undici/undici:8229:18,0x38a74a568eb8,~
code-source-info,0x12ea98660cd0,125,411502,412487,C0O411502C15O411569C19O411576C27O411579C32O411569C34O411645C39O411645C43O411620C49O411679C54O411679C58O411704C63O411747C65O411768C71O411747C75O412159C83O412159C88O412303C96O412303C101O412360C108O412407C114O412456C120O412376C125O412486,,
code-creation,JS,9,134083,0x12ea986610e8,938,lib/core/errors.js node:internal/deps/undici/undici:11:23,0x38a74a566c10,~
code-source-info,0x12ea986610e8,125,432,9540,C0O494C36O740C70O1083C104O1427C138O1771C172O2106C206O2625C240O2971C274O3323C308O3605C342O3923C376O4265C410O4698C444O5120C478O5459C512O5780C546O6125C580O6473C614O6856C650O7204C684O7582C718O8022C752O8461C786O8866C794O8892C800O8910C806O8933C812O8952C818O8979C824O9007C830O9031C836O9072C842O9099C848O9130C854O9158C860O9189C866O9216C872O9244C878O9269C884O9295C890O9314C896O9339C902O9381C908O9421C914O9457C920O9482C926O9503C932O8882C937O9539,,
code-creation,JS,9,134083,0x12ea98661588,13, node:internal/deps/undici/undici:264:64,0x25c70e01f3a0,~
code-source-info,0x12ea98661588,125,8487,8860,C0O8512C6O8512C12O8860,,
code-creation,JS,9,134083,0x12ea98661610,13, node:internal/deps/undici/undici:250:51,0x25c70e01f308,~
code-source-info,0x12ea98661610,125,8048,8422,C0O8073C6O8073C12O8422,,
code-creation,JS,9,134083,0x12ea98661698,13, node:internal/deps/undici/undici:236:55,0x25c70e01f270,~
code-source-info,0x12ea98661698,125,7608,7996,C0O7633C6O7633C12O7996,,
code-creation,JS,9,134125,0x12ea98661720,13, node:internal/deps/undici/undici:225:66,0x25c70e01f1d8,~
code-source-info,0x12ea98661720,125,7230,7552,C0O7255C6O7255C12O7552,,
code-creation,JS,9,134125,0x12ea986617a8,13, node:internal/deps/undici/undici:214:47,0x25c70e01f140,~
code-source-info,0x12ea986617a8,125,6876,7163,C0O6901C6O6901C12O7163,,
code-creation,JS,9,134125,0x12ea98661830,13, node:internal/deps/undici/undici:203:70,0x25c70e01f0a8,~
code-source-info,0x12ea98661830,125,6499,6828,C0O6524C6O6524C12O6828,,
code-creation,JS,9,134125,0x12ea986618b8,13, node:internal/deps/undici/undici:192:55,0x25c70e01f010,~
code-source-info,0x12ea986618b8,125,6151,6428,C0O6176C6O6176C12O6428,,
code-creation,JS,9,134125,0x12ea98661940,13, node:internal/deps/undici/undici:180:49,0x25c70e01ef78,~
code-source-info,0x12ea98661940,125,5806,6095,C0O5831C6O5831C12O6095,,
code-creation,JS,9,134125,0x12ea986619c8,13, node:internal/deps/undici/undici:169:55,0x25c70e01eee0,~
code-source-info,0x12ea986619c8,125,5485,5756,C0O5510C6O5510C12O5756,,
code-creation,JS,9,134167,0x12ea98661a50,13, node:internal/deps/undici/undici:158:58,0x25c70e01ee48,~
code-source-info,0x12ea98661a50,125,5146,5429,C0O5171C6O5171C12O5429,,
code-creation,JS,9,134167,0x12ea98661ad8,13, node:internal/deps/undici/undici:147:72,0x25c70e01edb0,~
code-source-info,0x12ea98661ad8,125,4724,5087,C0O4749C6O4749C12O5087,,
code-creation,JS,9,134167,0x12ea98661b60,13, node:internal/deps/undici/undici:136:71,0x25c70e01ed18,~
code-source-info,0x12ea98661b60,125,4291,4651,C0O4316C6O4316C12O4651,,
code-creation,JS,9,134167,0x12ea98661be8,13, node:internal/deps/undici/undici:125:56,0x25c70e01ec80,~
code-source-info,0x12ea98661be8,125,3949,4219,C0O3974C6O3974C12O4219,,
code-creation,JS,9,134167,0x12ea98661c70,13, node:internal/deps/undici/undici:114:56,0x25c70e01ebe8,~
code-source-info,0x12ea98661c70,125,3630,3892,C0O3655C6O3655C12O3892,,
code-creation,JS,9,134167,0x12ea98661cf8,13, node:internal/deps/undici/undici:104:48,0x25c70e01eb50,~
code-source-info,0x12ea98661cf8,125,3349,3573,C0O3374C6O3374C12O3573,,
code-creation,JS,9,134208,0x12ea98661d80,13, node:internal/deps/undici/undici:93:61,0x25c70e01eab8,~
code-source-info,0x12ea98661d80,125,2997,3300,C0O3022C6O3022C12O3300,,
code-creation,JS,9,134208,0x12ea98661e08,13, node:internal/deps/undici/undici:82:58,0x25c70e01ea20,~
code-source-info,0x12ea98661e08,125,2651,2935,C0O2676C6O2676C12O2935,,
code-creation,JS,9,134208,0x12ea98661e90,13, node:internal/deps/undici/undici:67:61,0x25c70e01e988,~
code-source-info,0x12ea98661e90,125,2132,2592,C0O2157C6O2157C12O2592,,
code-creation,JS,9,134208,0x12ea98661f18,13, node:internal/deps/undici/undici:56:54,0x25c70e01e8f0,~
code-source-info,0x12ea98661f18,125,1797,2070,C0O1822C6O1822C12O2070,,
code-creation,JS,9,134208,0x12ea98661fa0,13, node:internal/deps/undici/undici:45:58,0x25c70e01e858,~
code-source-info,0x12ea98661fa0,125,1453,1742,C0O1478C6O1478C12O1742,,
code-creation,JS,9,134208,0x12ea98662028,13, node:internal/deps/undici/undici:34:57,0x25c70e01e7c0,~
code-source-info,0x12ea98662028,125,1109,1394,C0O1134C6O1134C12O1394,,
code-creation,JS,9,134250,0x12ea986620b0,13, node:internal/deps/undici/undici:23:57,0x25c70e01e728,~
code-source-info,0x12ea986620b0,125,766,1051,C0O791C6O791C12O1051,,
code-creation,JS,9,134250,0x12ea98662138,13, node:internal/deps/undici/undici:13:43,0x25c70e01e690,~
code-source-info,0x12ea98662138,125,514,708,C0O539C6O539C12O708,,
code-creation,JS,9,134250,0x12ea986621d0,26,__name node:internal/deps/undici/undici:4:14,0x38a74a566b60,~
code-source-info,0x12ea986621d0,125,118,193,C0O137C6O147C13O165C20O137C25O193,,
code-creation,JS,9,134333,0x12ea98662330,301,lib/dispatcher/agent.js node:internal/deps/undici/undici:8128:28,0x38a74a568e00,~
code-source-info,0x12ea
code-creation,JS,9,134375,0x12ea98662558,15, node:internal/deps/undici/undici:8148:46,0x25c70e024240,~
code-source-info,0x12ea98662558,125,408207,411393,C0O408232C8O408232C14O411393,,
code-creation,JS,9,134417,0x12ea98662a08,1014,lib/core/symbols.js node:internal/deps/undici/undici:306:24,0x38a74a566d70,~
code-source-info,0x12ea98662a
code-creation,JS,9,134542,0x12ea98663080,208,lib/dispatcher/dispatcher-base.js node:internal/deps/undici/undici:440:38,0x38a74a566e80,~
code-source-info,0x12ea98663080,125,14411,19698,C0O14411C5O14472C10O14472C14O14592C19O14592C23O14510C29O14538C35O14563C41O14688C46O14688C50O14620C56O14630C62O14638C68O14647C74O14659C80O14670C86O14730C93O14730C97O14730C99O14773C106O14773C110O14773C112O14824C119O14824C123O14824C125O14881C163O18334C200O19661C202O19677C207O19697,,
code-creation,JS,9,134583,0x12ea98663208,15, node:internal/deps/undici/undici:452:51,0x25c70e026fe8,~
code-source-info,0x12ea98663208,125,14906,19655,C0O14931C8O14931C14O19655,,
code-creation,JS,9,134583,0x12ea98663330,164,lib/dispatcher/dispatcher.js node:internal/deps/undici/undici:379:33,0x38a74a566dc8,~
code-source-info,0x12ea98663330,125,12577,14288,C0O12577C5O12640C13O12640C18O12685C73O13730C99O13744C154O13730C156O14255C158O14271C163O14287,,
code-creation,JS,9,134625,0x12ea98663460,15, node:internal/deps/undici/undici:413:55,0x25c70e027ae0,~
code-source-info,0x12ea98663460,125,13755,14249,C0O13780C8O13780C14O14249,,
code-creation,JS,9,134625,0x12ea986634d0,20, node:internal/deps/undici/undici:413:55,0x25c70e027aa0,~
code-source-info,0x12ea986634d0,125,13755,14249,C3O13844C12O13868C19O14249,,
code-creation,JS,9,134625,0x12ea98663560,15, node:internal/deps/undici/undici:382:49,0x25c70e027900,~
code-source-info,0x12ea98663560,125,12712,13699,C0O12737C8O12737C14O13699,,
code-creation,JS,9,134667,0x12ea98663680,217,lib/dispatcher/pool.js node:internal/deps/undici/undici:8041:27,0x38a74a568d68,~
code-source-info,0x12ea98663680,125,404363,407154,C0O404363C11O404510C16O404510C20O404419C25O404435C31O404451C37O404469C43O404487C48O404548C53O404548C56O404548C58O404611C63O404611C67O404582C73O404644C78O404644C81O404644C83O404694C88O404694C92O404670C98O404676C104O404738C109O404738C112O404738C114O404776C121O404776C125O404776C127O404818C134O404818C138O404818C140O404860C147O404860C151O404860C153O404972C164O404972C169O405029C176O406722C209O407127C211O407143C216O407153,,
code-creation,JS,9,134708,0x12ea98663830,15, node:internal/deps/undici/undici:8064:39,0x25c70e0287f8,~
code-source-info,0x12ea98663830,125,405052,407121,C0O405077C8O405077C14O407121,,
code-creation,JS,9,134750,0x12ea98663a30,463,lib/dispatcher/pool-base.js node:internal/deps/undici/undici:702:32,0x38a74a5670c8,~
code-source-info,0x12ea98663a
code-creation,JS,9,134750,0x12ea98663d28,15, node:internal/deps/undici/undici:720:49,0x25c70e029280,~
code-source-info,0x12ea98663d28,125,23106,27262,C0O23131C8O23131C14O27262,,
code-creation,JS,9,134792,0x12ea98663e20,119,lib/dispatcher/fixed-queue.js node:internal/deps/undici/undici:604:34,0x38a74a566f40,~
code-source-info,0x12ea98663e20,125,19809,21280,C0O19809C5O19865C9O19865C11O19887C13O19893C16O19887C18O19928C67O19928C69O20649C113O20665C118O21279,,
code-creation,JS,9,134792,0x12ea98663f20,15,FixedQueue node:internal/deps/undici/undici:637:40,0x25c70e02a088,~
code-source-info,0x12ea98663f20,125,20684,21275,C0O20709C8O20709C14O21275,,
code-creation,JS,9,134792,0x12ea98663fa8,15, node:internal/deps/undici/undici:608:37,0x25c70e029eb0,~
code-source-info,0x12ea98663fa8,125,19934,20643,C0O19959C8O19959C14O20643,,
code-creation,JS,9,134833,0x12ea986640c0,131,lib/dispatcher/pool-stats.js node:internal/deps/undici/undici:667:33,0x38a74a567010,~
code-source-info,0x12ea986640c0,125,21388,22118,C0O21388C5O21478C10O21478C14O21420C20O21427C26O21439C32O21449C38O21458C44O21468C50O21513C57O21513C61O21513C63O21549C123O22086C125O22102C130O22117,,
code-creation,JS,9,134833,0x12ea986641e0,15, node:internal/deps/undici/undici:670:27,0x25c70e02acb8,~
code-source-info,0x12ea986641e0,125,21555,22080,C0O21580C8O21580C14O22080,,
code-creation,JS,9,134917,0x12ea986644d8,716,lib/dispatcher/client.js node:internal/deps/undici/undici:7532:29,0x38a74a568c38,~
code-source-info,0x12ea986644d
code-creation,JS,9,134958,0x12ea98664920,15, node:internal/deps/undici/undici:7599:47,0x25c70e02c4c0,~
code-source-info,0x12ea98664920,125,387843,397690,C0O387868C8O387868C14O397690,,
tick,0x192475198,135000,0,0x0,3,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,135458,0x12ea986649a8,5, node:assert:1:1,0x25c70e02f020,~
script-source,126,node:assert,// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the 'Software')\x2C to\n// deal in the Software without restriction\x2C including without limitation the\n// rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or\n// sell copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS'\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN\n// ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  NumberIsNaN\x2C\n  ObjectAssign\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_AMBIGUOUS_ARGUMENT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst AssertionError = require('internal/assert/assertion_error');\nconst { inspect } = require('internal/util/inspect');\nconst { isPromise\x2C isRegExp } = require('internal/util/types');\nconst { isError\x2C deprecate } = require('internal/util');\nconst { innerOk } = require('internal/assert/utils');\n\nconst CallTracker = require('internal/assert/calltracker');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nlet isDeepEqual;\nlet isDeepStrictEqual;\n\nfunction lazyLoadComparison() {\n  const comparison = require('internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\nlet warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nconst assert = module.exports = ok;\n\nconst NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met\x2C with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n\n  throw new AssertionError(obj);\n}\n\n/**\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @param {string} [operator]\n * @param {Function} [stackStartFn]\n */\nfunction fail(actual\x2C expected\x2C message\x2C operator\x2C stackStartFn) {\n  const argsLen = arguments.length;\n\n  let internalMessage = false;\n  if (actual == null && argsLen <= 1) {\n    internalMessage = true;\n    message = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      process.emitWarning(\n        'assert.fail() with more than one argument is deprecated. ' +\n          'Please use assert.strictEqual() instead or only pass a message.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0094'\x2C\n      );\n    }\n    if (argsLen === 2)\n      operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n\n  const errArgs = {\n    actual\x2C\n    expected\x2C\n    operator: operator === undefined ? 'fail' : operator\x2C\n    stackStartFn: stackStartFn || fail\x2C\n    message\x2C\n  };\n  const err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.generatedMessage = true;\n  }\n  throw err;\n}\n\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\n\n/**\n * Pure assertion tests whether a value is truthy\x2C as determined\n * by !!value.\n * @param {...any} args\n * @returns {void}\n */\nfunction ok(...args) {\n  innerOk(ok\x2C args.length\x2C ...args);\n}\nassert.ok = ok;\n\n/**\n * The equality assertion tests shallow\x2C coercive equality with ==.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected && (!NumberIsNaN(actual) || !NumberIsNaN(expected))) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: '=='\x2C\n      stackStartFn: equal\x2C\n    });\n  }\n};\n\n/**\n * The non-equality assertion tests for whether two objects are not\n * equal with !=.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notEqual = function notEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected || (NumberIsNaN(actual) && NumberIsNaN(expected))) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: '!='\x2C\n      stackStartFn: notEqual\x2C\n    });\n  }\n};\n\n/**\n * The deep equivalence assertion tests a deep equality relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.deepEqual = function deepEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'deepEqual'\x2C\n      stackStartFn: deepEqual\x2C\n    });\n  }\n};\n\n/**\n * The deep non-equivalence assertion tests for any deep inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notDeepEqual = function notDeepEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notDeepEqual'\x2C\n      stackStartFn: notDeepEqual\x2C\n    });\n  }\n};\n/* eslint-enable */\n\n/**\n * The deep strict equivalence assertion tests a deep strict equality\n * relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.deepStrictEqual = function deepStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'deepStrictEqual'\x2C\n      stackStartFn: deepStrictEqual\x2C\n    });\n  }\n};\n\n/**\n * The deep strict non-equivalence assertion tests for any deep strict\n * inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notDeepStrictEqual'\x2C\n      stackStartFn: notDeepStrictEqual\x2C\n    });\n  }\n}\n\n/**\n * The strict equivalence assertion tests a strict equality relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.strictEqual = function strictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (!ObjectIs(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'strictEqual'\x2C\n      stackStartFn: strictEqual\x2C\n    });\n  }\n};\n\n/**\n * The strict non-equivalence assertion tests for any strict inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notStrictEqual = function notStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (ObjectIs(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notStrictEqual'\x2C\n      stackStartFn: notStrictEqual\x2C\n    });\n  }\n};\n\nclass Comparison {\n  constructor(obj\x2C keys\x2C actual) {\n    for (const key of keys) {\n      if (key in obj) {\n        if (actual !== undefined &&\n            typeof actual[key] === 'string' &&\n            isRegExp(obj[key]) &&\n            RegExpPrototypeExec(obj[key]\x2C actual[key]) !== null) {\n          this[key] = actual[key];\n        } else {\n          this[key] = obj[key];\n        }\n      }\n    }\n  }\n}\n\nfunction compareExceptionKey(actual\x2C expected\x2C key\x2C message\x2C keys\x2C fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key]\x2C expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      const a = new Comparison(actual\x2C keys);\n      const b = new Comparison(expected\x2C keys\x2C actual);\n\n      const err = new AssertionError({\n        actual: a\x2C\n        expected: b\x2C\n        operator: 'deepStrictEqual'\x2C\n        stackStartFn: fn\x2C\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\x2C\n    });\n  }\n}\n\nfunction expectedException(actual\x2C expected\x2C message\x2C fn) {\n  let generatedMessage = false;\n  let throwError = false;\n\n  if (typeof expected !== 'function') {\n    // Handle regular expressions.\n    if (isRegExp(expected)) {\n      const str = String(actual);\n      if (RegExpPrototypeExec(expected\x2C str) !== null)\n        return;\n\n      if (!message) {\n        generatedMessage = true;\n        message = 'The input did not match the regular expression ' +\n                  `${inspect(expected)}. Input:\\n\\n${inspect(str)}\\n`;\n      }\n      throwError = true;\n      // Handle primitives properly.\n    } else if (typeof actual !== 'object' || actual === null) {\n      const err = new AssertionError({\n        actual\x2C\n        expected\x2C\n        message\x2C\n        operator: 'deepStrictEqual'\x2C\n        stackStartFn: fn\x2C\n      });\n      err.operator = fn.name;\n      throw err;\n    } else {\n      // Handle validation objects.\n      const keys = ObjectKeys(expected);\n      // Special handle errors to make sure the name and the message are\n      // compared as well.\n      if (expected instanceof Error) {\n        ArrayPrototypePush(keys\x2C 'name'\x2C 'message');\n      } else if (keys.length === 0) {\n        throw new ERR_INVALID_ARG_VALUE('error'\x2C\n                                        expected\x2C 'may not be an empty object');\n      }\n      if (isDeepEqual === undefined) lazyLoadComparison();\n      for (const key of keys) {\n        if (typeof actual[key] === 'string' &&\n            isRegExp(expected[key]) &&\n            RegExpPrototypeExec(expected[key]\x2C actual[key]) !== null) {\n          continue;\n        }\n        compareExceptionKey(actual\x2C expected\x2C key\x2C message\x2C keys\x2C fn);\n      }\n      return;\n    }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  // Check for matching Error classes.\n  } else if (expected.prototype !== undefined && actual instanceof expected) {\n    return;\n  } else if (ObjectPrototypeIsPrototypeOf(Error\x2C expected)) {\n    if (!message) {\n      generatedMessage = true;\n      message = 'The error is expected to be an instance of ' +\n        `"${expected.name}". Received `;\n      if (isError(actual)) {\n        const name = (actual.constructor?.name) ||\n                     actual.name;\n        if (expected.name === name) {\n          message += 'an error with identical name but a different prototype.';\n        } else {\n          message += `"${name}"`;\n        }\n        if (actual.message) {\n          message += `\\n\\nError message:\\n\\n${actual.message}`;\n        }\n      } else {\n        message += `"${inspect(actual\x2C { depth: -1 })}"`;\n      }\n    }\n    throwError = true;\n  } else {\n    // Check validation functions return value.\n    const res = ReflectApply(expected\x2C {}\x2C [actual]);\n    if (res !== true) {\n      if (!message) {\n        generatedMessage = true;\n        const name = expected.name ? `"${expected.name}" ` : '';\n        message = `The ${name}validation function is expected to return` +\n          ` "true". Received ${inspect(res)}`;\n\n        if (isError(actual)) {\n          message += `\\n\\nCaught error:\\n\\n${actual}`;\n        }\n      }\n      throwError = true;\n    }\n  }\n\n  if (throwError) {\n    const err = new AssertionError({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\x2C\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\nfunction getActual(fn) {\n  validateFunction(fn\x2C 'fn');\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  return isPromise(obj) ||\n    (obj !== null && typeof obj === 'object' &&\n    typeof obj.then === 'function' &&\n    typeof obj.catch === 'function');\n}\n\nasync function waitForActual(promiseFn) {\n  let resultPromise;\n  if (typeof promiseFn === 'function') {\n    // Return a rejected promise if `promiseFn` throws synchronously.\n    resultPromise = promiseFn();\n    // Fail in case no promise is returned.\n    if (!checkIsPromise(resultPromise)) {\n      throw new ERR_INVALID_RETURN_VALUE('instance of Promise'\x2C\n                                         'promiseFn'\x2C resultPromise);\n    }\n  } else if (checkIsPromise(promiseFn)) {\n    resultPromise = promiseFn;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(\n      'promiseFn'\x2C ['Function'\x2C 'Promise']\x2C promiseFn);\n  }\n\n  try {\n    await resultPromise;\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction expectsError(stackStartFn\x2C actual\x2C error\x2C message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error'\x2C\n                                     ['Object'\x2C 'Error'\x2C 'Function'\x2C 'RegExp']\x2C\n                                     error);\n    }\n    if (typeof actual === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT(\n          'error/message'\x2C\n          `The error message "${actual.message}" is identical to the message.`\x2C\n        );\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT(\n        'error/message'\x2C\n        `The error "${actual}" is identical to the message.`\x2C\n      );\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null &&\n             typeof error !== 'object' &&\n             typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error'\x2C\n                                   ['Object'\x2C 'Error'\x2C 'Function'\x2C 'RegExp']\x2C\n                                   error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    let details = '';\n    if (error?.name) {\n      details += ` (${error.name})`;\n    }\n    details += message ? `: ${message}` : '.';\n    const fnType = stackStartFn === assert.rejects ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined\x2C\n      expected: error\x2C\n      operator: stackStartFn.name\x2C\n      message: `Missing expected ${fnType}${details}`\x2C\n      stackStartFn\x2C\n    });\n  }\n\n  if (!error)\n    return;\n\n  expectedException(actual\x2C error\x2C message\x2C stackStartFn);\n}\n\nfunction hasMatchingError(actual\x2C expected) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) {\n      const str = String(actual);\n      return RegExpPrototypeExec(expected\x2C str) !== null;\n    }\n    throw new ERR_INVALID_ARG_TYPE(\n      'expected'\x2C ['Function'\x2C 'RegExp']\x2C expected\x2C\n    );\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (ObjectPrototypeIsPrototypeOf(Error\x2C expected)) {\n    return false;\n  }\n  return ReflectApply(expected\x2C {}\x2C [actual]) === true;\n}\n\nfunction expectsNoError(stackStartFn\x2C actual\x2C error\x2C message) {\n  if (actual === NO_EXCEPTION_SENTINEL)\n    return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || hasMatchingError(actual\x2C error)) {\n    const details = message ? `: ${message}` : '.';\n    const fnType = stackStartFn === assert.doesNotReject ?\n      'rejection' : 'exception';\n    innerFail({\n      actual\x2C\n      expected: error\x2C\n      operator: stackStartFn.name\x2C\n      message: `Got unwanted ${fnType}${details}\\n` +\n               `Actual message: "${actual?.message}"`\x2C\n      stackStartFn\x2C\n    });\n  }\n  throw actual;\n}\n\n/**\n * Expects the function `promiseFn` to throw an error.\n * @param {() => any} promiseFn\n * @param {...any} [args]\n * @returns {void}\n */\nassert.throws = function throws(promiseFn\x2C ...args) {\n  expectsError(throws\x2C getActual(promiseFn)\x2C ...args);\n};\n\n/**\n * Expects `promiseFn` function or its value to reject.\n * @param {() => Promise<any>} promiseFn\n * @param {...any} [args]\n * @returns {Promise<void>}\n */\nassert.rejects = async function rejects(promiseFn\x2C ...args) {\n  expectsError(rejects\x2C await waitForActual(promiseFn)\x2C ...args);\n};\n\n/**\n * Asserts that the function `fn` does not throw an error.\n * @param {() => any} fn\n * @param {...any} [args]\n * @returns {void}\n */\nassert.doesNotThrow = function doesNotThrow(fn\x2C ...args) {\n  expectsNoError(doesNotThrow\x2C getActual(fn)\x2C ...args);\n};\n\n/**\n * Expects `fn` or its value to not reject.\n * @param {() => Promise<any>} fn\n * @param {...any} [args]\n * @returns {Promise<void>}\n */\nassert.doesNotReject = async function doesNotReject(fn\x2C ...args) {\n  expectsNoError(doesNotReject\x2C await waitForActual(fn)\x2C ...args);\n};\n\n/**\n * Throws `value` if the value is not `null` or `undefined`.\n * @param {any} err\n * @returns {void}\n */\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    let message = 'ifError got unwanted exception: ';\n    if (typeof err === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    const newErr = new AssertionError({\n      actual: err\x2C\n      expected: null\x2C\n      operator: 'ifError'\x2C\n      message\x2C\n      stackStartFn: ifError\x2C\n    });\n\n    // Make sure we actually have a stack trace!\n    const origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      const origStackStart = StringPrototypeIndexOf(origStack\x2C '\\n    at');\n      if (origStackStart !== -1) {\n        const originalFrames = StringPrototypeSplit(\n          StringPrototypeSlice(origStack\x2C origStackStart + 1)\x2C\n          '\\n'\x2C\n        );\n        // Filter all frames existing in err.stack.\n        let newFrames = StringPrototypeSplit(newErr.stack\x2C '\\n');\n        for (const errFrame of originalFrames) {\n          // Find the first occurrence of the frame.\n          const pos = ArrayPrototypeIndexOf(newFrames\x2C errFrame);\n          if (pos !== -1) {\n            // Only keep new frames.\n            newFrames = ArrayPrototypeSlice(newFrames\x2C 0\x2C pos);\n            break;\n          }\n        }\n        const stackStart = ArrayPrototypeJoin(newFrames\x2C '\\n');\n        const stackEnd = ArrayPrototypeJoin(originalFrames\x2C '\\n');\n        newErr.stack = `${stackStart}\\n${stackEnd}`;\n      }\n    }\n\n    throw newErr;\n  }\n};\n\nfunction internalMatch(string\x2C regexp\x2C message\x2C fn) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'regexp'\x2C 'RegExp'\x2C regexp\x2C\n    );\n  }\n  const match = fn === assert.match;\n  if (typeof string !== 'string' ||\n      RegExpPrototypeExec(regexp\x2C string) !== null !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n\n    const generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message ||= (typeof string !== 'string' ?\n      'The "string" argument must be of type string. Received type ' +\n        `${typeof string} (${inspect(string)})` :\n      (match ?\n        'The input did not match the regular expression ' :\n        'The input was expected to not match the regular expression ') +\n          `${inspect(regexp)}. Input:\\n\\n${inspect(string)}\\n`);\n    const err = new AssertionError({\n      actual: string\x2C\n      expected: regexp\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\x2C\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n/**\n * Expects the `string` input to match the regular expression.\n * @param {string} string\n * @param {RegExp} regexp\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.match = function match(string\x2C regexp\x2C message) {\n  internalMatch(string\x2C regexp\x2C message\x2C match);\n};\n\n/**\n * Expects the `string` input not to match the regular expression.\n * @param {string} string\n * @param {RegExp} regexp\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.doesNotMatch = function doesNotMatch(string\x2C regexp\x2C message) {\n  internalMatch(string\x2C regexp\x2C message\x2C doesNotMatch);\n};\n\nassert.CallTracker = deprecate(CallTracker\x2C 'assert.CallTracker is deprecated.'\x2C 'DEP0173');\n\n/**\n * Expose a strict only variant of assert.\n * @param {...any} args\n * @returns {void}\n */\nfunction strict(...args) {\n  innerOk(strict\x2C args.length\x2C ...args);\n}\n\nassert.strict = ObjectAssign(strict\x2C assert\x2C {\n  equal: assert.strictEqual\x2C\n  deepEqual: assert.deepStrictEqual\x2C\n  notEqual: assert.notStrictEqual\x2C\n  notDeepEqual: assert.notDeepStrictEqual\x2C\n});\n\nassert.strict.strict = assert.strict;\n
code-source-info,0x12ea986649a8,126,0,22948,C0O0C4O22948,,
code-creation,JS,9,136292,0x12ea98664d00,806, node:assert:1:1,0x25c70e02f408,~
code-source-info,0x12ea98664d
tick,0x192475198,136375,0,0x0,3,0x107f890bc,0x107f88e30,0x1a7c5b2062d4,0x12ea98664509,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,136833,0x12ea986651a0,5, node:internal/assert/assertion_error:1:1,0x25c70e031ad0,~
script-source,127,node:internal/assert/assertion_error,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  String\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nconst { isError } = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\nconst colors = require('internal/util/colors');\nconst { validateObject } = require('internal/validators');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\nconst { myersDiff\x2C printMyersDiff\x2C printSimpleMyersDiff } = require('internal/assert/myers_diff');\n\nconst kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:'\x2C\n  strictEqual: 'Expected values to be strictly equal:'\x2C\n  strictEqualObject: 'Expected "actual" to be reference-equal to "expected":'\x2C\n  deepEqual: 'Expected values to be loosely deep-equal:'\x2C\n  notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:'\x2C\n  notStrictEqual: 'Expected "actual" to be strictly unequal to:'\x2C\n  notStrictEqualObject:\n    'Expected "actual" not to be reference-equal to "expected":'\x2C\n  notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:'\x2C\n  notIdentical: 'Values have same structure but are not reference-equal:'\x2C\n  notDeepEqualUnequal: 'Expected values not to be loosely deep-equal:'\x2C\n};\n\nconst kMaxShortStringLength = 12;\nconst kMaxLongStringLength = 512;\n\nfunction copyError(source) {\n  const target = ObjectAssign(\n    { __proto__: ObjectGetPrototypeOf(source) }\x2C\n    source\x2C\n  );\n  ObjectDefineProperty(target\x2C 'message'\x2C {\n    __proto__: null\x2C\n    value: source.message\x2C\n  });\n  if (ObjectPrototypeHasOwnProperty(source\x2C 'cause')) {\n    let { cause } = source;\n\n    if (isError(cause)) {\n      cause = copyError(cause);\n    }\n\n    ObjectDefineProperty(target\x2C 'cause'\x2C { __proto__: null\x2C value: cause });\n  }\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val\x2C {\n    compact: false\x2C\n    customInspect: false\x2C\n    depth: 1000\x2C\n    maxArrayLength: Infinity\x2C\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false\x2C\n    // Assert does not detect proxies currently.\n    showProxy: false\x2C\n    sorted: true\x2C\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\x2C\n  });\n}\n\nfunction getErrorMessage(operator\x2C message) {\n  return message || kReadableOperator[operator];\n}\n\nfunction checkOperator(actual\x2C expected\x2C operator) {\n  // In case both values are objects or functions explicitly mark them as not\n  // reference equal for the `strictEqual` operator.\n  if (\n    operator === 'strictEqual' &&\n    ((typeof actual === 'object' &&\n      actual !== null &&\n      typeof expected === 'object' &&\n      expected !== null) ||\n      (typeof actual === 'function' && typeof expected === 'function'))\n  ) {\n    operator = 'strictEqualObject';\n  }\n\n  return operator;\n}\n\nfunction getColoredMyersDiff(actual\x2C expected) {\n  const header = `${colors.green}actual${colors.white} ${colors.red}expected${colors.white}`;\n  const skipped = false;\n\n  const diff = myersDiff(StringPrototypeSplit(actual\x2C '')\x2C StringPrototypeSplit(expected\x2C ''));\n  let message = printSimpleMyersDiff(diff);\n\n  if (skipped) {\n    message += '...';\n  }\n\n  return { message\x2C header\x2C skipped };\n}\n\nfunction getStackedDiff(actual\x2C expected) {\n  const isStringComparison = typeof actual === 'string' && typeof expected === 'string';\n\n  let message = `\\n${colors.green}+${colors.white} ${actual}\\n${colors.red}- ${colors.white}${expected}`;\n  const stringsLen = actual.length + expected.length;\n  const maxTerminalLength = process.stderr.isTTY ? process.stderr.columns : 80;\n  const showIndicator = isStringComparison && (stringsLen <= maxTerminalLength);\n\n  if (showIndicator) {\n    let indicatorIdx = -1;\n\n    for (let i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) {\n        // Skip the indicator for the first 2 characters because the diff is immediately apparent\n        // It is 3 instead of 2 to account for the quotes\n        if (i >= 3) {\n          indicatorIdx = i;\n        }\n        break;\n      }\n    }\n\n    if (indicatorIdx !== -1) {\n      message += `\\n${StringPrototypeRepeat(' '\x2C indicatorIdx + 2)}^`;\n    }\n  }\n\n  return { message };\n}\n\nfunction getSimpleDiff(originalActual\x2C actual\x2C originalExpected\x2C expected) {\n  let stringsLen = actual.length + expected.length;\n  // Accounting for the quotes wrapping strings\n  if (typeof originalActual === 'string') {\n    stringsLen -= 2;\n  }\n  if (typeof originalExpected === 'string') {\n    stringsLen -= 2;\n  }\n  if (stringsLen <= kMaxShortStringLength && (originalActual !== 0 || originalExpected !== 0)) {\n    return { message: `${actual} !== ${expected}`\x2C header: '' };\n  }\n\n  const isStringComparison = typeof originalActual === 'string' && typeof originalExpected === 'string';\n  // colored myers diff\n  if (isStringComparison && colors.hasColors) {\n    return getColoredMyersDiff(actual\x2C expected);\n  }\n\n  return getStackedDiff(actual\x2C expected);\n}\n\nfunction isSimpleDiff(actual\x2C inspectedActual\x2C expected\x2C inspectedExpected) {\n  if (inspectedActual.length > 1 || inspectedExpected.length > 1) {\n    return false;\n  }\n\n  return typeof actual !== 'object' || actual === null || typeof expected !== 'object' || expected === null;\n}\n\nfunction createErrDiff(actual\x2C expected\x2C operator\x2C customMessage) {\n  operator = checkOperator(actual\x2C expected\x2C operator);\n\n  let skipped = false;\n  let message = '';\n  const inspectedActual = inspectValue(actual);\n  const inspectedExpected = inspectValue(expected);\n  const inspectedSplitActual = StringPrototypeSplit(inspectedActual\x2C '\\n');\n  const inspectedSplitExpected = StringPrototypeSplit(inspectedExpected\x2C '\\n');\n  const showSimpleDiff = isSimpleDiff(actual\x2C inspectedSplitActual\x2C expected\x2C inspectedSplitExpected);\n  let header = `${colors.green}+ actual${colors.white} ${colors.red}- expected${colors.white}`;\n\n  if (showSimpleDiff) {\n    const simpleDiff = getSimpleDiff(actual\x2C inspectedSplitActual[0]\x2C expected\x2C inspectedSplitExpected[0]);\n    message = simpleDiff.message;\n    if (typeof simpleDiff.header !== 'undefined') {\n      header = simpleDiff.header;\n    }\n    if (simpleDiff.skipped) {\n      skipped = true;\n    }\n  } else if (inspectedActual === inspectedExpected) {\n    // Handles the case where the objects are structurally the same but different references\n    operator = 'notIdentical';\n    if (inspectedSplitActual.length > 50) {\n      message = `${ArrayPrototypeJoin(ArrayPrototypeSlice(inspectedSplitActual\x2C 0\x2C 50)\x2C '\\n')}\\n...}`;\n      skipped = true;\n    } else {\n      message = ArrayPrototypeJoin(inspectedSplitActual\x2C '\\n');\n    }\n    header = '';\n  } else {\n    const checkCommaDisparity = actual != null && typeof actual === 'object';\n    const diff = myersDiff(inspectedSplitActual\x2C inspectedSplitExpected\x2C checkCommaDisparity);\n\n    const myersDiffMessage = printMyersDiff(diff);\n    message = myersDiffMessage.message;\n\n    if (myersDiffMessage.skipped) {\n      skipped = true;\n    }\n  }\n\n  const headerMessage = `${getErrorMessage(operator\x2C customMessage)}\\n${header}`;\n  const skippedMessage = skipped ? '\\n... Skipped lines' : '';\n\n  return `${headerMessage}${skippedMessage}\\n${message}\\n`;\n}\n\nfunction addEllipsis(string) {\n  const lines = StringPrototypeSplit(string\x2C '\\n'\x2C 11);\n  if (lines.length > 10) {\n    lines.length = 10;\n    return `${ArrayPrototypeJoin(lines\x2C '\\n')}\\n...`;\n  } else if (string.length > kMaxLongStringLength) {\n    return `${StringPrototypeSlice(string\x2C kMaxLongStringLength)}...`;\n  }\n  return string;\n}\n\nclass AssertionError extends Error {\n  constructor(options) {\n    validateObject(options\x2C 'options');\n    const {\n      message\x2C\n      operator\x2C\n      stackStartFn\x2C\n      details\x2C\n      // Compatibility with older versions.\n      stackStartFunction\x2C\n    } = options;\n    let {\n      actual\x2C\n      expected\x2C\n    } = options;\n\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        super(createErrDiff(actual\x2C expected\x2C operator\x2C message));\n      } else {\n        super(String(message));\n      }\n    } else {\n      // Reset colors on each call to make sure we handle dynamically set environment\n      // variables correct.\n      colors.refresh();\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (typeof actual === 'object' && actual !== null &&\n          typeof expected === 'object' && expected !== null &&\n          'stack' in actual && actual instanceof Error &&\n          'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        super(createErrDiff(actual\x2C expected\x2C operator\x2C message));\n      } else if (operator === 'notDeepStrictEqual' ||\n        operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal\x2C show\n        // the first object and say A equals B\n        let base = kReadableOperator[operator];\n        const res = StringPrototypeSplit(inspectValue(actual)\x2C '\\n');\n\n        // In case "actual" is an object or a function\x2C it should not be\n        // reference equal.\n        if (operator === 'notStrictEqual' &&\n            ((typeof actual === 'object' && actual !== null) ||\n             typeof actual === 'function')) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 50) {\n          res[46] = `${colors.blue}...${colors.white}`;\n          while (res.length > 47) {\n            ArrayPrototypePop(res);\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          super(`${base}${res[0].length > 5 ? '\\n\\n' : ' '}${res[0]}`);\n        } else {\n          super(`${base}\\n\\n${ArrayPrototypeJoin(res\x2C '\\n')}\\n`);\n        }\n      } else {\n        let res = inspectValue(actual);\n        let other = inspectValue(expected);\n        const knownOperator = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' && res === other) {\n          res = `${knownOperator}\\n\\n${res}`;\n          if (res.length > 1024) {\n            res = `${StringPrototypeSlice(res\x2C 0\x2C 1021)}...`;\n          }\n          super(res);\n        } else {\n          if (res.length > kMaxLongStringLength) {\n            res = `${StringPrototypeSlice(res\x2C 0\x2C 509)}...`;\n          }\n          if (other.length > kMaxLongStringLength) {\n            other = `${StringPrototypeSlice(other\x2C 0\x2C 509)}...`;\n          }\n          if (operator === 'deepEqual') {\n            res = `${knownOperator}\\n\\n${res}\\n\\nshould loosely deep-equal\\n\\n`;\n          } else {\n            const newOp = kReadableOperator[`${operator}Unequal`];\n            if (newOp) {\n              res = `${newOp}\\n\\n${res}\\n\\nshould not loosely deep-equal\\n\\n`;\n            } else {\n              other = ` ${operator} ${other}`;\n            }\n          }\n          super(`${res}${other}`);\n        }\n      }\n    }\n\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n\n    this.generatedMessage = !message;\n    ObjectDefineProperty(this\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: 'AssertionError [ERR_ASSERTION]'\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    });\n    this.code = 'ERR_ASSERTION';\n    if (details) {\n      this.actual = undefined;\n      this.expected = undefined;\n      this.operator = undefined;\n      for (let i = 0; i < details.length; i++) {\n        this['message ' + i] = details[i].message;\n        this['actual ' + i] = details[i].actual;\n        this['expected ' + i] = details[i].expected;\n        this['operator ' + i] = details[i].operator;\n        this['stack trace ' + i] = details[i].stack;\n      }\n    } else {\n      this.actual = actual;\n      this.expected = expected;\n      this.operator = operator;\n    }\n    ErrorCaptureStackTrace(this\x2C stackStartFn || stackStartFunction);\n    // Create error message including the error code in the name.\n    this.stack; // eslint-disable-line no-unused-expressions\n    // Reset the name.\n    this.name = 'AssertionError';\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    // Long strings should not be fully inspected.\n    const tmpActual = this.actual;\n    const tmpExpected = this.expected;\n\n    if (typeof this.actual === 'string') {\n      this.actual = addEllipsis(this.actual);\n    }\n    if (typeof this.expected === 'string') {\n      this.expected = addEllipsis(this.expected);\n    }\n\n    // This limits the `actual` and `expected` property default inspection to\n    // the minimum depth. Otherwise those values would be too verbose compared\n    // to the actual error message which contains a combined view of these two\n    // input values.\n    const result = inspect(this\x2C {\n      ...ctx\x2C\n      customInspect: false\x2C\n      depth: 0\x2C\n    });\n\n    // Reset the properties after inspection.\n    this.actual = tmpActual;\n    this.expected = tmpExpected;\n\n    return result;\n  }\n}\n\nmodule.exports = AssertionError;\n
code-source-info,0x12ea986651a0,127,0,13761,C0O0C4O13761,,
code-creation,JS,9,137333,0x12ea98665370,375, node:internal/assert/assertion_error:1:1,0x25c70e031dc8,~
code-source-info,0x12ea98665370,127,0,13761,C0O0C141O25C147O47C153O68C159O91C165O100C171O126C177O142C183O166C189O190C195O223C201O233C207O258C213O282C219O342C222O342C227O330C233O389C236O389C241O377C247O438C250O438C254O438C256O498C259O498C264O479C270O573C273O573C278O538C284O661C287O661C292O609C298O620C304O636C310O727C314O727C316O1471C318O1471C320O1504C324O1504C329O7875C342O12882C345O12882C367O13728C369O13743C374O13760,,
tick,0x1012a4c24,137458,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea9866546a,0x107f89188,0x107f88e30,0x12ea98664e5d,0x107f89188,0x107f88e30,0x1a7c5b2062d4,0x12ea98664509,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,137667,0x12ea986655c0,5, node:internal/util/colors:1:1,0x25c70e032a00,~
script-source,128,node:internal/util/colors,'use strict';\n\nlet internalTTy;\nfunction lazyInternalTTY() {\n  internalTTy ??= require('internal/tty');\n  return internalTTy;\n}\n\nmodule.exports = {\n  blue: ''\x2C\n  green: ''\x2C\n  white: ''\x2C\n  red: ''\x2C\n  gray: ''\x2C\n  clear: ''\x2C\n  reset: ''\x2C\n  hasColors: false\x2C\n  shouldColorize(stream) {\n    if (process.env.FORCE_COLOR !== undefined) {\n      return lazyInternalTTY().getColorDepth() > 2;\n    }\n    return stream?.isTTY && (\n      typeof stream.getColorDepth === 'function' ?\n        stream.getColorDepth() > 2 : true);\n  }\x2C\n  refresh() {\n    if (process.stderr.isTTY) {\n      const hasColors = module.exports.shouldColorize(process.stderr);\n      module.exports.blue = hasColors ? '\\u001b[34m' : '';\n      module.exports.green = hasColors ? '\\u001b[32m' : '';\n      module.exports.white = hasColors ? '\\u001b[39m' : '';\n      module.exports.yellow = hasColors ? '\\u001b[33m' : '';\n      module.exports.red = hasColors ? '\\u001b[31m' : '';\n      module.exports.gray = hasColors ? '\\u001b[90m' : '';\n      module.exports.clear = hasColors ? '\\u001bc' : '';\n      module.exports.reset = hasColors ? '\\u001b[0m' : '';\n      module.exports.hasColors = hasColors;\n    }\n  }\x2C\n};\n\nmodule.exports.refresh();\n
code-source-info,0x12ea986655c0,128,0,1194,C0O0C4O1194,,
code-creation,JS,9,137708,0x12ea98665670,78, node:internal/util/colors:1:1,0x25c70e032b18,~
code-source-info,0x12ea98665670,128,0,1194,C0O0C26O19C27O19C29O129C37O257C45O521C55O144C59O1168C62O1175C67O1183C72O1183C77O1193,,
code-creation,JS,9,137792,0x12ea986657f0,233,refresh node:internal/util/colors:26:10,0x25c70e032c30,~
code-source-info,0x12ea986657f0,128,528,1162,C0O537C3O549C8O556C14O589C17O596C22O604C30O627C35O604C41O642C44O649C51O664C59O662C63O701C66O708C73O724C81O722C85O761C88O768C95O784C103O782C107O821C110O828C117O845C125O843C129O882C132O889C139O903C147O901C151O940C154O947C161O962C169O960C173O999C176O1006C183O1022C191O1020C195O1056C198O1063C205O1079C213O1077C217O1115C220O1122C227O1140C232O1161,,
code-creation,Eval,9,137917,0x12ea986659b0,5, node:tty:1:1,0x25c70e033bc8,~
script-source,129,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  NumberIsInteger\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst net = require('net');\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_INVALID_FD\x2C\n    ERR_TTY_INIT_FAILED\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  getColorDepth\x2C\n  hasColors\x2C\n} = require('internal/tty');\n\n// Lazy loaded for startup performance.\nlet readline;\n\nfunction isatty(fd) {\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\n         isTTY(fd);\n}\n\nfunction ReadStream(fd\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(fd\x2C options);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\x2C\n    ...options\x2C\n  });\n\n  this.isRaw = false;\n  this.isTTY = true;\n}\n\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\n\nReadStream.prototype.setRawMode = function(flag) {\n  flag = !!flag;\n  const err = this._handle?.setRawMode(flag);\n  if (err) {\n    this.emit('error'\x2C new ErrnoException(err\x2C 'setRawMode'));\n    return this;\n  }\n  this.isRaw = flag;\n  return this;\n};\n\nfunction WriteStream(fd) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(fd);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\x2C\n  });\n\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\n  // this behavior has become expected due historical functionality on OS X\x2C\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\n  this._handle.setBlocking(true);\n\n  const winSize = [0\x2C 0];\n  const err = this._handle.getWindowSize(winSize);\n  if (!err) {\n    this.columns = winSize[0];\n    this.rows = winSize[1];\n  }\n}\n\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\n\nWriteStream.prototype.isTTY = true;\n\nWriteStream.prototype.getColorDepth = getColorDepth;\n\nWriteStream.prototype.hasColors = hasColors;\n\nWriteStream.prototype._refreshSize = function() {\n  const oldCols = this.columns;\n  const oldRows = this.rows;\n  const winSize = [0\x2C 0];\n  const err = this._handle.getWindowSize(winSize);\n  if (err) {\n    this.emit('error'\x2C new ErrnoException(err\x2C 'getWindowSize'));\n    return;\n  }\n  const { 0: newCols\x2C 1: newRows } = winSize;\n  if (oldCols !== newCols || oldRows !== newRows) {\n    this.columns = newCols;\n    this.rows = newRows;\n    this.emit('resize');\n  }\n};\n\n// Backwards-compat\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\n};\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\n};\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearLine(this\x2C dir\x2C callback);\n};\nWriteStream.prototype.clearScreenDown = function(callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearScreenDown(this\x2C callback);\n};\nWriteStream.prototype.getWindowSize = function() {\n  return [this.columns\x2C this.rows];\n};\n\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\n
code-source-info,0x12ea986659b0,129,0,5045,C0O0C4O5045,,
code-creation,JS,9,138083,0x12ea98665b58,419, node:tty:1:1,0x25c70e033d40,~
code-source-info,0x12ea98665b
code-creation,Eval,9,138375,0x12ea98665e20,5, node:internal/tty:1:1,0x25c70e0356a0,~
script-source,130,node:internal/tty,// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the "Software")\x2C to deal\n// in the Software without restriction\x2C including without limitation the rights\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\n// copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  RegExpPrototypeExec\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\n\nlet OSRelease;\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\n\n// Some entries were taken from `dircolors`\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\n// support more than 16 colors\x2C but this was not tested for.\n//\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\n// distribution of this file\x2C with or without modification\x2C are permitted\n// provided the copyright notice and this notice are preserved.\nconst TERM_ENVS = {\n  'eterm': COLORS_16\x2C\n  'cons25': COLORS_16\x2C\n  'console': COLORS_16\x2C\n  'cygwin': COLORS_16\x2C\n  'dtterm': COLORS_16\x2C\n  'gnome': COLORS_16\x2C\n  'hurd': COLORS_16\x2C\n  'jfbterm': COLORS_16\x2C\n  'konsole': COLORS_16\x2C\n  'kterm': COLORS_16\x2C\n  'mlterm': COLORS_16\x2C\n  'mosh': COLORS_16m\x2C\n  'putty': COLORS_16\x2C\n  'st': COLORS_16\x2C\n  // http://lists.schmorp.de/pipermail/rxvt-unicode/2016q2/002261.html\n  'rxvt-unicode-24bit': COLORS_16m\x2C\n  // https://bugs.launchpad.net/terminator/+bug/1030562\n  'terminator': COLORS_16m\x2C\n};\n\nconst TERM_ENVS_REG_EXP = [\n  /ansi/\x2C\n  /color/\x2C\n  /linux/\x2C\n  /^con[0-9]*x[0-9]/\x2C\n  /^rxvt/\x2C\n  /^screen/\x2C\n  /^xterm/\x2C\n  /^vt100/\x2C\n];\n\nlet warned = false;\nfunction warnOnDeactivatedColors(env) {\n  if (warned)\n    return;\n  let name = '';\n  if (env.NODE_DISABLE_COLORS !== undefined)\n    name = 'NODE_DISABLE_COLORS';\n  if (env.NO_COLOR !== undefined) {\n    if (name !== '') {\n      name += "' and '";\n    }\n    name += 'NO_COLOR';\n  }\n\n  if (name !== '') {\n    process.emitWarning(\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\n      'Warning'\x2C\n    );\n    warned = true;\n  }\n}\n\n// The `getColorDepth` API got inspired by multiple sources such as\n// https://github.com/chalk/supports-color\x2C\n// https://github.com/isaacs/color-support.\nfunction getColorDepth(env = process.env) {\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\n  // consistency throughout the ecosystem.\n  if (env.FORCE_COLOR !== undefined) {\n    switch (env.FORCE_COLOR) {\n      case '':\n      case '1':\n      case 'true':\n        warnOnDeactivatedColors(env);\n        return COLORS_16;\n      case '2':\n        warnOnDeactivatedColors(env);\n        return COLORS_256;\n      case '3':\n        warnOnDeactivatedColors(env);\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n\n  if (env.NODE_DISABLE_COLORS !== undefined ||\n      // See https://no-color.org/\n      env.NO_COLOR !== undefined ||\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\n      // ANSI color control codes.\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n      env.TERM === 'dumb') {\n    return COLORS_2;\n  }\n\n  if (process.platform === 'win32') {\n    // Lazy load for startup performance.\n    if (OSRelease === undefined) {\n      const { release } = require('os');\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\n    }\n    // Windows 10 build 10586 is the first Windows release that supports 256\n    // colors. Windows 10 build 14931 is the first release that supports\n    // 16m/TrueColor.\n    if (+OSRelease[0] >= 10) {\n      const build = +OSRelease[2];\n      if (build >= 14931)\n        return COLORS_16m;\n      if (build >= 10586)\n        return COLORS_256;\n    }\n\n    return COLORS_16;\n  }\n\n  if (env.TMUX) {\n    return COLORS_256;\n  }\n\n  if (env.CI) {\n    if ([\n      'APPVEYOR'\x2C\n      'BUILDKITE'\x2C\n      'CIRCLECI'\x2C\n      'DRONE'\x2C\n      'GITHUB_ACTIONS'\x2C\n      'GITLAB_CI'\x2C\n      'TRAVIS'\x2C\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\n      COLORS_16 : COLORS_2;\n  }\n\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      if (!env.TERM_PROGRAM_VERSION ||\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\n      ) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case 'HyperTerm':\n    case 'MacTerm':\n      return COLORS_16m;\n    case 'Apple_Terminal':\n      return COLORS_256;\n  }\n\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\n    return COLORS_16m;\n  }\n\n  if (env.TERM) {\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\n      return COLORS_256;\n    }\n\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\n\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\n      return COLORS_16;\n    }\n  }\n  // Move 16 color COLORTERM below 16m and 256\n  if (env.COLORTERM) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nfunction hasColors(count\x2C env) {\n  if (env === undefined &&\n      (count === undefined || (typeof count === 'object' && count !== null))) {\n    env = count;\n    count = 16;\n  } else {\n    validateInteger(count\x2C 'count'\x2C 2);\n  }\n\n  return count <= 2 ** getColorDepth(env);\n}\n\nmodule.exports = {\n  getColorDepth\x2C\n  hasColors\x2C\n};\n
code-source-info,0x12ea98665e20,130,0,6478,C0O0C4O6478,,
code-creation,JS,9,138625,0x12ea98665fd0,366, node:internal/tty:1:1,0x25c70e035878,~
code-source-info,0x12ea98665fd0,130,0,6478,C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2288C226O2372C232O1877C234O2414C336O2414C338O2535C339O2535C341O6426C348O6447C354O6464C360O6441C365O6477,,
tick,0x1011513a8,138750,0,0x0,0,0x12ea986660cd,0x107f89188,0x107f88e30,0x12ea98665bdd,0x107f89188,0x107f88e30,0x3a8f561369e0,0x3a8f56137257,0x12ea986657f3,0x12ea986656b8,0x107f89188,0x107f88e30,0x12ea9866546a,0x107f89188,0x107f88e30,0x12ea98664e5d,0x107f89188,0x107f88e30,0x1a7c5b2062d4,0x12ea98664509,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,138792,0x12ea98666288,181,WriteStream node:tty:88:21,0x25c70e033e58,~
code-source-info,0x12ea98666288,129,2503,3449,C0O2512C2O2523C7O2552C12O2559C17O2579C18O2582C20O2589C26O2594C32O2607C37O2616C44O2622C49O2616C50O2661C52O2679C65O2679C71O2707C77O2733C84O2739C89O2733C90O2776C95O2780C100O2787C112O2842C116O2787C122O3266C127O3274C134O3274C139O3312C144O3339C149O3347C154O3347C160O3373C162O3389C163O3411C166O3402C170O3420C172O3439C175O3430C180O3448,,
code-creation,JS,9,138917,0x12ea98666638,926,Socket node:net:366:16,0x15988e449558,~
code-source-info,0x12ea
code-creation,JS,9,139000,0x12ea98666d48,504,Duplex node:internal/streams/duplex:64:16,0x15988e459ef0,~
code-source-info,0x12ea98666d
code-creation,JS,9,139083,0x12ea98667118,254,Readable node:internal/streams/readable:320:18,0x15988e460dd8,~
code-source-info,0x12ea98667118,106,10109,11126,C0O10109C9O10123C16O10134C21O10160C28O10167C33O10189C34O10193C51O10223C56O10245C61O10266C66O10286C71O10311C77O10206C81O10548C99O10570C104O10568C108O10614C112O10652C120O10679C123O10700C127O10690C131O10730C139O10760C142O10784C146O10774C150O10817C158O10849C161O10875C165O10865C169O10903C175O10917C182O10940C190O10917C195O10962C202O10969C210O10969C216O10993C219O11002C226O11028C233O11040C246O11040C253O11125,,
code-creation,JS,9,139083,0x12ea986672f0,18,Stream node:internal/streams/legacy:11:16,0x15988e45ac18,~
code-source-info,0x12ea986672f0,105,145,178,C0O156C5O159C10O159C17O177,,
tick,0x1925329b8,139958,1,0x100bb1a68,6,0x0,0x12ea986662c9,0x3a8f561369ec,0x3a8f56137257,0x12ea986657f3,0x12ea986656b8,0x107f89188,0x107f88e30,0x12ea9866546a,0x107f89188,0x107f88e30,0x12ea98664e5d,0x107f89188,0x107f88e30,0x1a7c5b2062d4,0x12ea98664509,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,140125,0x12ea98667460,383,ReadableState node:internal/streams/readable:262:23,0x15988e460d80,~
code-source-info,0x12ea98667460,106,7984,9928,C0O8133C2O8138C7O8148C12O8161C14O8159C20O8176C22O8174C28O8191C30O8189C33O8146C37O8323C44O8334C53O8352C56O8357C62O8368C67O8365C71O8384C82O8407C91O8433C94O8438C100O8449C105O8446C109O8607C114O8628C118O8642C133O8642C142O8715C147O8715C151O8626C155O8750C157O8762C161O8770C162O8787C166O8794C167O8806C171O8813C173O8824C177O8892C181O8915C191O8936C194O8941C200O8952C205O8949C209O9041C213O9064C223O9087C226O9092C232O9103C237O9100C241O9340C248O9347C256O9368C261O9415C268O9445C273O9464C276O9469C282O9480C287O9477C293O9511C298O9522C303O9522C310O9557C312O9578C318O9612C325O9618C330O9612C331O9770C332O9793C336O9804C343O9815C352O9833C354O9852C357O9874C364O9848C369O9846C373O9913C377O9903C382O9927,,
code-creation,JS,9,140167,0x12ea98667720,98,getHighWaterMark node:internal/streams/state:33:26,0x15988e4658b8,~
code-source-info,0x12ea98667720,108,934,1342,C0O988C12O988C18O1039C21O1062C26O1067C33O1095C38O1121C47O1143C56O1188C69O1194C74O1188C75O1242C80O1249C84O1264C85O1291C88O1328C93O1298C97O1340,,
code-creation,JS,9,140208,0x12ea98667820,26,highWaterMarkFrom node:internal/streams/state:15:27,0x15988e4657b0,~
code-source-info,0x12ea98667820,108,421,562,C0O471C7O503C15O523C19O541C25O560,,
code-creation,JS,9,140250,0x12ea986679a0,412,WritableState node:internal/streams/writable:304:23,0x15988e46fdc8,~
code-source-info,0x12ea986679a
code-creation,JS,9,140292,0x12ea98667c70,22,get node:internal/streams/writable:131:8,0x15988e473160,~
code-source-info,0x12ea98667c70,110,3930,3971,C0O3935C4O3948C6O3947C12O3956C17O3963C21O3969,,
code-creation,JS,9,140333,0x12ea98667d08,15,getDefaultHighWaterMark node:internal/streams/state:20:33,0x15988e465808,~
code-source-info,0x12ea98667d08,108,596,694,C0O613C6O633C12O666C14O692,,
code-creation,JS,9,140333,0x12ea98667db8,65,resetBuffer node:internal/streams/writable:364:21,0x15988e46fe20,~
code-source-info,0x12ea98667db8,110,11666,11810,C0O11678C2O11684C6O11700C10O11710C11O11730C15O11737C17O11743C26O11754C31O11768C33O11766C39O11751C43O11780C46O11786C52O11798C54O11797C59O11794C64O11809,,
code-creation,JS,9,140375,0x12ea98667e90,14,set node:net:2411:6,0x15988e44bb78,~
code-source-info,0x12ea98667e90,96,67275,67308,C0O67281C2O67293C7O67302C13O67306,,
code-creation,JS,9,140375,0x12ea98667f18,8,get node:net:2410:6,0x15988e44bb20,~
code-source-info,0x12ea98667f18,96,67240,67268,C0O67245C2O67257C4O67256C7O67266,,
code-creation,JS,9,140417,0x12ea98667fa0,32,getNewAsyncId node:net:197:23,0x15988e449190,~
code-source-info,0x12ea98667fa0,96,5325,5441,C0O5338C4O5371C14O5404C17O5404C22O5426C27O5426C31O5439,,
code-creation,JS,9,140458,0x12ea986680e8,315,Readable.on node:internal/streams/readable:1127:33,0x15988e462310,~
code-source-info,0x12ea986680e
code-creation,JS,9,140500,0x12ea98668378,133,initSocketHandle node:net:322:26,0x15988e4494a8,~
code-source-info,0x12ea98668378,96,8262,8840,C0O8278C5O8278C9O8294C10O8309C14O8395C20O8415C27O8423C32O8437C36O8454C43O8471C45O8469C49O8489C51O8494C57O8532C62O8513C66O8511C70O8561C72O8566C74O8565C78O8580C80O8616C82O8621C84O8620C88O8640C90O8681C94O8699C99O8704C105O8737C106O8744C107O8753C112O8767C116O8797C121O8805C126O8805C132O8839,,
code-creation,JS,9,140542,0x12ea98668540,155,undestroy node:internal/streams/destroy:173:19,0x15988e458d68,~
code-source-info,0x12ea98668540,103,3192,3864,C0O3214C5O3247C10O3266C14O3279C15O3293C19O3305C20O3314C24O3327C25O3342C29O3355C30O3367C34O3380C35O3390C39O3402C40O3417C44O3430C45O3440C49O3465C57O3461C61O3506C69O3502C73O3533C77O3546C78O3560C82O3572C83O3584C87O3597C88O3606C92O3619C93O3634C97O3647C98O3657C102O3669C103O3684C107O3697C108O3711C112O3724C113O3738C117O3763C125O3759C129O3800C137O3796C141O3839C149O3835C154O3863,,
code-creation,JS,9,140583,0x12ea986686b0,50,set node:internal/streams/readable:133:8,0x15988e467018,~
code-source-info,0x12ea986686b0,106,3899,3985,C0O3915C4O3926C8O3931C17O3942C20O3939C26O3958C30O3963C39O3974C44O3971C49O3984,,
code-creation,JS,9,140583,0x12ea98668778,61,set node:internal/streams/readable:186:8,0x15988e4618d8,~
code-source-info,0x12ea98668778,106,6264,6427,C0O6280C4O6301C6O6306C11O6321C15O6338C17O6343C26O6354C31O6351C37O6387C39O6392C48O6404C50O6403C55O6400C60O6426,,
code-creation,JS,9,140583,0x12ea98668848,50,set node:internal/streams/writable:132:8,0x15988e4731b8,~
code-source-info,0x12ea98668848,110,3980,4066,C0O3996C4O4007C8O4012C17O4023C20O4020C26O4039C30O4044C39O4055C44O4052C49O4065,,
code-creation,JS,9,140625,0x12ea98668910,61,set node:internal/streams/writable:217:8,0x15988e4704a8,~
code-source-info,0x12ea98668910,110,7125,7288,C0O7141C4O7162C6O7167C11O7182C15O7199C17O7204C26O7215C31O7212C37O7248C39O7253C48O7265C50O7264C55O7261C60O7287,,
code-creation,JS,9,140625,0x12ea986689f0,45,get node:internal/streams/writable:230:8,0x15988e470500,~
code-source-info,0x12ea986689f0,110,7361,7458,C0O7366C2O7379C4O7378C10O7389C12O7387C17O7403C24O7416C30O7427C32O7425C37O7438C44O7456,,
code-creation,JS,9,140708,0x12ea98668ac0,80,shouldColorize node:internal/util/colors:18:17,0x25c70e032bd8,~
code-source-info,0x12ea98668ac0,128,271,517,C0O286C3O298C8O302C14O337C17O344C21O361C26O362C33O378C36O382C37O393C44O406C53O439C61O485C66O485C73O501C79O513,,
code-creation,JS,9,140792,0x12ea98668d28,750,getColorDepth node:internal/tty:106:23,0x25c70e035938,~
code-source-info,0x12ea98668d
code-creation,Eval,9,140958,0x12ea986691a0,5, node:internal/assert/myers_diff:1:1,0x25c70e03cd48,~
script-source,131,node:internal/assert/myers_diff,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeFill\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  StringPrototypeEndsWith\x2C\n} = primordials;\n\nconst colors = require('internal/util/colors');\n\nconst kNopLinesToCollapse = 5;\n\nfunction areLinesEqual(actual\x2C expected\x2C checkCommaDisparity) {\n  if (actual === expected) {\n    return true;\n  }\n  if (checkCommaDisparity) {\n    return `${actual}\x2C` === expected || actual === `${expected}\x2C`;\n  }\n  return false;\n}\n\nfunction myersDiff(actual\x2C expected\x2C checkCommaDisparity = false) {\n  const actualLength = actual.length;\n  const expectedLength = expected.length;\n  const max = actualLength + expectedLength;\n  const v = ArrayPrototypeFill(Array(2 * max + 1)\x2C 0);\n\n  const trace = [];\n\n  for (let diffLevel = 0; diffLevel <= max; diffLevel++) {\n    const newTrace = ArrayPrototypeSlice(v);\n    ArrayPrototypePush(trace\x2C newTrace);\n\n    for (let diagonalIndex = -diffLevel; diagonalIndex <= diffLevel; diagonalIndex += 2) {\n      let x;\n      if (diagonalIndex === -diffLevel ||\n        (diagonalIndex !== diffLevel && v[diagonalIndex - 1 + max] < v[diagonalIndex + 1 + max])) {\n        x = v[diagonalIndex + 1 + max];\n      } else {\n        x = v[diagonalIndex - 1 + max] + 1;\n      }\n\n      let y = x - diagonalIndex;\n\n      while (x < actualLength && y < expectedLength && areLinesEqual(actual[x]\x2C expected[y]\x2C checkCommaDisparity)) {\n        x++;\n        y++;\n      }\n\n      v[diagonalIndex + max] = x;\n\n      if (x >= actualLength && y >= expectedLength) {\n        return backtrack(trace\x2C actual\x2C expected\x2C checkCommaDisparity);\n      }\n    }\n  }\n}\n\nfunction backtrack(trace\x2C actual\x2C expected\x2C checkCommaDisparity) {\n  const actualLength = actual.length;\n  const expectedLength = expected.length;\n  const max = actualLength + expectedLength;\n\n  let x = actualLength;\n  let y = expectedLength;\n  const result = [];\n\n  for (let diffLevel = trace.length - 1; diffLevel >= 0; diffLevel--) {\n    const v = trace[diffLevel];\n    const diagonalIndex = x - y;\n    let prevDiagonalIndex;\n\n    if (diagonalIndex === -diffLevel ||\n      (diagonalIndex !== diffLevel && v[diagonalIndex - 1 + max] < v[diagonalIndex + 1 + max])) {\n      prevDiagonalIndex = diagonalIndex + 1;\n    } else {\n      prevDiagonalIndex = diagonalIndex - 1;\n    }\n\n    const prevX = v[prevDiagonalIndex + max];\n    const prevY = prevX - prevDiagonalIndex;\n\n    while (x > prevX && y > prevY) {\n      const value = !checkCommaDisparity ||\n        StringPrototypeEndsWith(actual[x - 1]\x2C '\x2C') ? actual[x - 1] : expected[y - 1];\n      ArrayPrototypePush(result\x2C { __proto__: null\x2C type: 'nop'\x2C value });\n      x--;\n      y--;\n    }\n\n    if (diffLevel > 0) {\n      if (x > prevX) {\n        ArrayPrototypePush(result\x2C { __proto__: null\x2C type: 'insert'\x2C value: actual[x - 1] });\n        x--;\n      } else {\n        ArrayPrototypePush(result\x2C { __proto__: null\x2C type: 'delete'\x2C value: expected[y - 1] });\n        y--;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction printSimpleMyersDiff(diff) {\n  let message = '';\n\n  for (let diffIdx = diff.length - 1; diffIdx >= 0; diffIdx--) {\n    const { type\x2C value } = diff[diffIdx];\n    if (type === 'insert') {\n      message += `${colors.green}${value}${colors.white}`;\n    } else if (type === 'delete') {\n      message += `${colors.red}${value}${colors.white}`;\n    } else {\n      message += `${colors.white}${value}${colors.white}`;\n    }\n  }\n\n  return `\\n${message}`;\n}\n\nfunction printMyersDiff(diff\x2C simple = false) {\n  let message = '';\n  let skipped = false;\n  let nopCount = 0;\n\n  for (let diffIdx = diff.length - 1; diffIdx >= 0; diffIdx--) {\n    const { type\x2C value } = diff[diffIdx];\n    const previousType = (diffIdx < (diff.length - 1)) ? diff[diffIdx + 1].type : null;\n    const typeChanged = previousType && (type !== previousType);\n\n    if (typeChanged && previousType === 'nop') {\n      // Avoid grouping if only one line would have been grouped otherwise\n      if (nopCount === kNopLinesToCollapse + 1) {\n        message += `${colors.white}  ${diff[diffIdx + 1].value}\\n`;\n      } else if (nopCount === kNopLinesToCollapse + 2) {\n        message += `${colors.white}  ${diff[diffIdx + 2].value}\\n`;\n        message += `${colors.white}  ${diff[diffIdx + 1].value}\\n`;\n      } if (nopCount >= (kNopLinesToCollapse + 3)) {\n        message += `${colors.blue}...${colors.white}\\n`;\n        message += `${colors.white}  ${diff[diffIdx + 1].value}\\n`;\n        skipped = true;\n      }\n      nopCount = 0;\n    }\n\n    if (type === 'insert') {\n      message += `${colors.green}+${colors.white} ${value}\\n`;\n    } else if (type === 'delete') {\n      message += `${colors.red}-${colors.white} ${value}\\n`;\n    } else if (type === 'nop') {\n      if (nopCount < kNopLinesToCollapse) {\n        message += `${colors.white}  ${value}\\n`;\n      }\n      nopCount++;\n    }\n  }\n\n  message = message.trimEnd();\n\n  return { message: `\\n${message}`\x2C skipped };\n}\n\nmodule.exports = { myersDiff\x2C printMyersDiff\x2C printSimpleMyersDiff };\n
code-source-info,0x12ea986691a0,131,0,4968,C0O0C4O4968,,
code-creation,JS,9,141125,0x12ea98669298,127, node:internal/assert/myers_diff:1:1,0x25c70e03cea0,~
code-source-info,0x12ea98669298,131,0,4968,C0O0C53O25C59O34C65O56C71O78C77O101C83O159C86O159C90O159C92O221C94O221C96O4898C103O4917C109O4928C115O4944C121O4913C126O4967,,
tick,0x1011fc834,141250,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea98664ea7,0x107f89188,0x107f88e30,0x1a7c5b2062d4,0x12ea98664509,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,141333,0x12ea986693b0,5, node:internal/assert/utils:1:1,0x25c70e03e560,~
script-source,132,node:internal/assert/utils,'use strict';\n\nconst {\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  isErrorStackTraceLimitWritable\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst AssertionError = require('internal/assert/assertion_error');\nconst { openSync\x2C closeSync\x2C readSync } = require('fs');\nconst { EOL } = require('internal/constants');\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst { isError } = require('internal/util');\n\nconst errorCache = new SafeMap();\nconst { fileURLToPath } = require('internal/url');\n\nlet parseExpressionAt;\nlet findNodeAround;\nlet tokenizer;\nlet decoder;\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nconst escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nconst meta = [\n  '\\\\u0000'\x2C '\\\\u0001'\x2C '\\\\u0002'\x2C '\\\\u0003'\x2C '\\\\u0004'\x2C\n  '\\\\u0005'\x2C '\\\\u0006'\x2C '\\\\u0007'\x2C '\\\\b'\x2C ''\x2C\n  ''\x2C '\\\\u000b'\x2C '\\\\f'\x2C ''\x2C '\\\\u000e'\x2C\n  '\\\\u000f'\x2C '\\\\u0010'\x2C '\\\\u0011'\x2C '\\\\u0012'\x2C '\\\\u0013'\x2C\n  '\\\\u0014'\x2C '\\\\u0015'\x2C '\\\\u0016'\x2C '\\\\u0017'\x2C '\\\\u0018'\x2C\n  '\\\\u0019'\x2C '\\\\u001a'\x2C '\\\\u001b'\x2C '\\\\u001c'\x2C '\\\\u001d'\x2C\n  '\\\\u001e'\x2C '\\\\u001f'\x2C\n];\n\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str\x2C 0)];\n\nfunction findColumn(fd\x2C column\x2C code) {\n  if (code.length > column + 100) {\n    try {\n      return parseCode(code\x2C column);\n    } catch {\n      // End recursion in case no code could be parsed. The expression should\n      // have been found after 2500 characters\x2C so stop trying.\n      if (code.length - column > 2500) {\n        // eslint-disable-next-line no-throw-literal\n        throw null;\n      }\n    }\n  }\n  // Read up to 2500 bytes more than necessary in columns. That way we address\n  // multi byte characters and read enough data to parse the code.\n  const bytesToRead = column - code.length + 2500;\n  const buffer = Buffer.allocUnsafe(bytesToRead);\n  const bytesRead = readSync(fd\x2C buffer\x2C 0\x2C bytesToRead);\n  code += decoder.write(buffer.slice(0\x2C bytesRead));\n  // EOF: fast path.\n  if (bytesRead < bytesToRead) {\n    return parseCode(code\x2C column);\n  }\n  // Read potentially missing code.\n  return findColumn(fd\x2C column\x2C code);\n}\n\nfunction getCode(fd\x2C line\x2C column) {\n  let bytesRead = 0;\n  if (line === 0) {\n    // Special handle line number one. This is more efficient and simplifies the\n    // rest of the algorithm. Read more than the regular column number in bytes\n    // to prevent multiple reads in case multi byte characters are used.\n    return findColumn(fd\x2C column\x2C '');\n  }\n  let lines = 0;\n  // Prevent blocking the event loop by limiting the maximum amount of\n  // data that may be read.\n  let maxReads = 32; // bytesPerRead * maxReads = 512 KiB\n  const bytesPerRead = 16384;\n  // Use a single buffer up front that is reused until the call site is found.\n  let buffer = Buffer.allocUnsafe(bytesPerRead);\n  while (maxReads-- !== 0) {\n    // Only allocate a new buffer in case the needed line is found. All data\n    // before that can be discarded.\n    buffer = lines < line ? buffer : Buffer.allocUnsafe(bytesPerRead);\n    bytesRead = readSync(fd\x2C buffer\x2C 0\x2C bytesPerRead);\n    // Read the buffer until the required code line is found.\n    for (let i = 0; i < bytesRead; i++) {\n      if (buffer[i] === 10 && ++lines === line) {\n        // If the end of file is reached\x2C directly parse the code and return.\n        if (bytesRead < bytesPerRead) {\n          return parseCode(buffer.toString('utf8'\x2C i + 1\x2C bytesRead)\x2C column);\n        }\n        // Check if the read code is sufficient or read more until the whole\n        // expression is read. Make sure multi byte characters are preserved\n        // properly by using the decoder.\n        const code = decoder.write(buffer.slice(i + 1\x2C bytesRead));\n        return findColumn(fd\x2C column\x2C code);\n      }\n    }\n  }\n}\n\nfunction parseCode(code\x2C offset) {\n  // Lazy load acorn.\n  if (parseExpressionAt === undefined) {\n    const Parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n    ({ findNodeAround } = require('internal/deps/acorn/acorn-walk/dist/walk'));\n\n    parseExpressionAt = FunctionPrototypeBind(Parser.parseExpressionAt\x2C Parser);\n    tokenizer = FunctionPrototypeBind(Parser.tokenizer\x2C Parser);\n  }\n  let node;\n  let start;\n  // Parse the read code until the correct expression is found.\n  for (const token of tokenizer(code\x2C { ecmaVersion: 'latest' })) {\n    start = token.start;\n    if (start > offset) {\n      // No matching expression found. This could happen if the assert\n      // expression is bigger than the provided buffer.\n      break;\n    }\n    try {\n      node = parseExpressionAt(code\x2C start\x2C { ecmaVersion: 'latest' });\n      // Find the CallExpression in the tree.\n      node = findNodeAround(node\x2C offset\x2C 'CallExpression');\n      if (node?.node.end >= offset) {\n        return [\n          node.node.start\x2C\n          StringPrototypeReplace(StringPrototypeSlice(code\x2C\n                                                      node.node.start\x2C node.node.end)\x2C\n                                 escapeSequencesRegExp\x2C escapeFn)\x2C\n        ];\n      }\n    // eslint-disable-next-line no-unused-vars\n    } catch (err) {\n      continue;\n    }\n  }\n  // eslint-disable-next-line no-throw-literal\n  throw null;\n}\n\nfunction getErrMessage(message\x2C fn) {\n  const tmpLimit = Error.stackTraceLimit;\n  const errorStackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n  // Make sure the limit is set to 1. Otherwise it could fail (<= 0) or it\n  // does to much work.\n  if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = 1;\n  // We only need the stack trace. To minimize the overhead use an object\n  // instead of an error.\n  const err = {};\n  ErrorCaptureStackTrace(err\x2C fn);\n  if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = tmpLimit;\n\n  overrideStackTrace.set(err\x2C (_\x2C stack) => stack);\n  const call = err.stack[0];\n\n  let filename = call.getFileName();\n  const line = call.getLineNumber() - 1;\n  let column = call.getColumnNumber() - 1;\n  let identifier;\n  let code;\n\n  if (filename) {\n    identifier = `${filename}${line}${column}`;\n\n    // Skip Node.js modules!\n    if (StringPrototypeStartsWith(filename\x2C 'node:') &&\n        BuiltinModule.exists(StringPrototypeSlice(filename\x2C 5))) {\n      errorCache.set(identifier\x2C undefined);\n      return;\n    }\n  } else {\n    return message;\n  }\n\n  if (errorCache.has(identifier)) {\n    return errorCache.get(identifier);\n  }\n\n  let fd;\n  try {\n    // Set the stack trace limit to zero. This makes sure unexpected token\n    // errors are handled faster.\n    if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = 0;\n\n    if (filename) {\n      if (decoder === undefined) {\n        const { StringDecoder } = require('string_decoder');\n        decoder = new StringDecoder('utf8');\n      }\n\n      // ESM file prop is a file proto. Convert that to path.\n      // This ensure opensync will not throw ENOENT for ESM files.\n      const fileProtoPrefix = 'file://';\n      if (StringPrototypeStartsWith(filename\x2C fileProtoPrefix)) {\n        filename = fileURLToPath(filename);\n      }\n\n      fd = openSync(filename\x2C 'r'\x2C 0o666);\n      // Reset column and message.\n      ({ 0: column\x2C 1: message } = getCode(fd\x2C line\x2C column));\n      // Flush unfinished multi byte characters.\n      decoder.end();\n    } else {\n      for (let i = 0; i < line; i++) {\n        code = StringPrototypeSlice(code\x2C\n                                    StringPrototypeIndexOf(code\x2C '\\n') + 1);\n      }\n      ({ 0: column\x2C 1: message } = parseCode(code\x2C column));\n    }\n    // Always normalize indentation\x2C otherwise the message could look weird.\n    if (StringPrototypeIncludes(message\x2C '\\n')) {\n      if (EOL === '\\r\\n') {\n        message = RegExpPrototypeSymbolReplace(/\\r\\n/g\x2C message\x2C '\\n');\n      }\n      const frames = StringPrototypeSplit(message\x2C '\\n');\n      message = ArrayPrototypeShift(frames);\n      for (const frame of frames) {\n        let pos = 0;\n        while (pos < column && (frame[pos] === ' ' || frame[pos] === '\\t')) {\n          pos++;\n        }\n        message += `\\n  ${StringPrototypeSlice(frame\x2C pos)}`;\n      }\n    }\n    message = `The expression evaluated to a falsy value:\\n\\n  ${message}\\n`;\n    // Make sure to always set the cache! No matter if the message is\n    // undefined or not\n    errorCache.set(identifier\x2C message);\n\n    return message;\n  } catch {\n    // Invalidate cache to prevent trying to read this part again.\n    errorCache.set(identifier\x2C undefined);\n  } finally {\n    // Reset limit.\n    if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = tmpLimit;\n    if (fd !== undefined)\n      closeSync(fd);\n  }\n}\n\nfunction innerOk(fn\x2C argLen\x2C value\x2C message) {\n  if (!value) {\n    let generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message == null) {\n      generatedMessage = true;\n      message = getErrMessage(message\x2C fn);\n    } else if (isError(message)) {\n      throw message;\n    }\n\n    const err = new AssertionError({\n      actual: value\x2C\n      expected: true\x2C\n      message\x2C\n      operator: '=='\x2C\n      stackStartFn: fn\x2C\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\nmodule.exports = {\n  innerOk\x2C\n};\n
code-source-info,0x12ea986693b0,132,0,9582,C0O0C4O9582,,
code-creation,JS,9,141667,0x12ea98669578,416, node:internal/assert/utils:1:1,0x25c70e03e868,~
code-source-info,0x12ea98669578,132,0,9582,C0O0C131O25C137O48C143O57C149O83C155O108C161O140C166O151C172O180C178O207C184O233C190O259C196O283C202O307C208O371C214O371C219O360C225O458C231O458C236O400C242O434C248O509C254O509C258O509C260O595C266O595C271O561C277O571C283O582C289O626C295O626C300O618C306O683C312O683C317O665C323O740C329O740C334O728C340O786C342O786C347O786C349O827C355O827C360O809C366O857C367O857C369O880C370O880C372O900C373O900C375O915C376O915C378O1098C383O1098C385O1144C389O1144C391O1504C395O1504C397O9549C404O9570C410O9564C415O9581,,
code-creation,Eval,9,141792,0x12ea98669818,5, node:internal/assert/calltracker:1:1,0x25c70e03f590,~
script-source,133,node:internal/assert/calltracker,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototype\x2C\n  ObjectFreeze\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_UNAVAILABLE_DURING_EXIT\x2C\n  }\x2C\n} = require('internal/errors');\nconst AssertionError = require('internal/assert/assertion_error');\nconst {\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst noop = FunctionPrototype;\n\nclass CallTrackerContext {\n  #expected;\n  #calls;\n  #name;\n  #stackTrace;\n  constructor({ expected\x2C stackTrace\x2C name }) {\n    this.#calls = [];\n    this.#expected = expected;\n    this.#stackTrace = stackTrace;\n    this.#name = name;\n  }\n\n  track(thisArg\x2C args) {\n    const argsClone = ObjectFreeze(ArrayPrototypeSlice(args));\n    ArrayPrototypePush(this.#calls\x2C ObjectFreeze({ thisArg\x2C arguments: argsClone }));\n  }\n\n  get delta() {\n    return this.#calls.length - this.#expected;\n  }\n\n  reset() {\n    this.#calls = [];\n  }\n  getCalls() {\n    return ObjectFreeze(ArrayPrototypeSlice(this.#calls));\n  }\n\n  report() {\n    if (this.delta !== 0) {\n      const message = `Expected the ${this.#name} function to be ` +\n                      `executed ${this.#expected} time(s) but was ` +\n                      `executed ${this.#calls.length} time(s).`;\n      return {\n        message\x2C\n        actual: this.#calls.length\x2C\n        expected: this.#expected\x2C\n        operator: this.#name\x2C\n        stack: this.#stackTrace\x2C\n      };\n    }\n  }\n}\n\nclass CallTracker {\n\n  #callChecks = new SafeSet();\n  #trackedFunctions = new SafeWeakMap();\n\n  #getTrackedFunction(tracked) {\n    if (!this.#trackedFunctions.has(tracked)) {\n      throw new ERR_INVALID_ARG_VALUE('tracked'\x2C tracked\x2C 'is not a tracked function');\n    }\n    return this.#trackedFunctions.get(tracked);\n  }\n\n  reset(tracked) {\n    if (tracked === undefined) {\n      this.#callChecks.forEach((check) => check.reset());\n      return;\n    }\n\n    this.#getTrackedFunction(tracked).reset();\n  }\n\n  getCalls(tracked) {\n    return this.#getTrackedFunction(tracked).getCalls();\n  }\n\n  calls(fn\x2C expected = 1) {\n    if (process._exiting)\n      throw new ERR_UNAVAILABLE_DURING_EXIT();\n    if (typeof fn === 'number') {\n      expected = fn;\n      fn = noop;\n    } else if (fn === undefined) {\n      fn = noop;\n    }\n\n    validateUint32(expected\x2C 'expected'\x2C true);\n\n    const context = new CallTrackerContext({\n      expected\x2C\n      // eslint-disable-next-line no-restricted-syntax\n      stackTrace: new Error()\x2C\n      name: fn.name || 'calls'\x2C\n    });\n    const tracked = new Proxy(fn\x2C {\n      __proto__: null\x2C\n      apply(fn\x2C thisArg\x2C argList) {\n        context.track(thisArg\x2C argList);\n        return ReflectApply(fn\x2C thisArg\x2C argList);\n      }\x2C\n    });\n    this.#callChecks.add(context);\n    this.#trackedFunctions.set(tracked\x2C context);\n    return tracked;\n  }\n\n  report() {\n    const errors = [];\n    for (const context of this.#callChecks) {\n      const message = context.report();\n      if (message !== undefined) {\n        ArrayPrototypePush(errors\x2C message);\n      }\n    }\n    return errors;\n  }\n\n  verify() {\n    const errors = this.report();\n    if (errors.length === 0) {\n      return;\n    }\n    const message = errors.length === 1 ?\n      errors[0].message :\n      'Functions were not called the expected number of times';\n    throw new AssertionError({\n      message\x2C\n      details: errors\x2C\n    });\n  }\n}\n\nmodule.exports = CallTracker;\n
code-source-info,0x12ea98669818,133,0,3452,C0O0C4O3452,,
code-creation,JS,9,141917,0x12ea986699f0,379, node:internal/assert/calltracker:1:1,0x25c70e03f8d8,~
code-source-info,0x12ea986699f0,133,0,3452,C0O0C51O25C57O47C63O70C69O79C74O100C80O116C86O125C92O141C98O152C104O271C107O271C112O200C117O206C123O233C129O322C132O322C136O322C138O396C141O396C146O376C152O442C154O442C267O462C371O3422C373O3437C378O3451,,
code-creation,JS,9,141958,0x12ea98669c20,42,CallTracker node:internal/assert/calltracker:72:19,0x25c70e03fe40,~
code-source-info,0x12ea98669c20,133,1515,3420,C3O1534C10O1534C23O1571C30O1571C41O3420,,
code-creation,JS,9,141958,0x12ea98669cb0,38,CallTrackerContext node:internal/assert/calltracker:28:26,0x25c70e03fb70,~
code-source-info,0x12ea98669cb0,133,487,1495,C4O491C13O504C22O514C31O523C37O1495,,
code-creation,JS,9,142167,0x12ea9866a1b8,1875,lib/core/util.js node:internal/deps/undici/undici:1121:21,0x38a74a5672f8,~
code-source-info,0x12ea9866a1b
code-creation,JS,9,142208,0x12ea9866ab68,15, node:internal/deps/undici/undici:1136:35,0x38a74a56df58,~
code-source-info,0x12ea9866ab68,125,35091,35414,C0O35116C8O35116C14O35414,,
code-creation,JS,9,142292,0x12ea9866ac30,97,lib/core/constants.js node:internal/deps/undici/undici:860:26,0x38a74a5671f0,~
code-source-info,0x12ea9866ac30,125,27501,30369,C0O27578C2O27613C7O29975C9O30003C13O29980C18O30036C20O30056C24O30093C29O30093C34O30114C36O30190C42O30146C46O30013C51O29962C55O30217C59O30224C66O30224C72O30278C79O30304C85O30332C91O30294C96O30368,,
code-creation,JS,9,142375,0x12ea9866adf0,207,lib/core/tree.js node:internal/deps/undici/undici:975:21,0x38a74a567248,~
code-source-info,0x12ea9866adf0,125,30447,34258,C0O30447C5O30566C10O30566C14O30503C19O30531C28O30605C84O30605C86O33426C134O33997C136O33997C142O34039C144O34067C148O34044C153O34100C155O34147C158O34126C162O34164C167O34164C173O34077C178O34026C182O34192C189O34218C195O34243C201O34208C206O34257,,
code-creation,JS,9,142417,0x12ea9866af70,15, node:internal/deps/undici/undici:1082:35,0x38a74a571560,~
code-source-info,0x12ea9866af70,125,33432,33980,C0O33457C8O33457C14O33980,,
code-creation,JS,9,142417,0x12ea9866aff8,7, node:internal/deps/undici/undici:1082:35,0x38a74a571520,~
code-source-info,0x12ea9866aff8,125,33432,33980,C0O33549C6O33980,,
code-creation,JS,9,142417,0x12ea9866b078,15,_TstNode node:internal/deps/undici/undici:981:34,0x38a74a5713d8,~
code-source-info,0x12ea9866b078,125,30620,33396,C0O30645C8O30645C14O33396,,
code-creation,JS,9,142417,0x12ea9866b120,27,_TstNode node:internal/deps/undici/undici:981:34,0x38a74a571398,~
code-source-info,0x12ea9866b120,125,30620,33396,C0O30717C5O30772C10O30829C15O30885C21O30925C26O33396,,
code-creation,JS,9,142458,0x12ea9866b1c0,16,TernarySearchTree node:internal/deps/undici/undici:1082:29,0x38a74a571418,~
code-source-info,0x12ea9866b1c0,125,33426,33426,C0O33426C15O33426,,
code-creation,JS,9,142458,0x12ea9866b248,48,insert node:internal/deps/undici/undici:1092:13,0x38a74a571470,~
code-source-info,0x12ea9866b248,125,33646,33816,C0O33678C6O33705C19O33717C24O33715C30O33777C35O33782C40O33782C47O33815,,
tick,0x1011ce2d8,142500,0,0x0,2,0x12ea9866b25b,0x12ea9866ae97,0x12ea98660beb,0x12ea9866a382,0x12ea98660beb,0x12ea98664530,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,142500,0x12ea9866b340,133,_TstNode node:internal/deps/undici/undici:1000:18,0x38a74a571290,~
code-source-info,0x12ea9866b340,125,31056,31499,C0O31056C14O31086C18O31123C22O31116C27O31143C36O31149C41O31143C42O31226C47O31226C53O31220C60O31253C62O31262C67O31281C76O31287C81O31281C82O31356C93O31363C98O31388C100O31406C114O31402C119O31400C125O31462C127O31473C132O31498,,
code-creation,JS,9,142542,0x12ea9866b4c0,238,add node:internal/deps/undici/undici:1018:10,0x38a74a5712e8,~
code-source-info,0x12ea9866b4c0,125,31586,32691,C0O31628C5O31644C6O31655C11O31674C20O31680C25O31674C26O31740C28O31762C33O31818C38O31818C44O31847C46O31856C51O31877C60O31883C65O31877C66O31957C73O31962C78O31986C83O31997C88O32026C90O32037C94O32060C96O32095C102O32140C109O32183C111O32201C125O32197C130O32195C134O32244C138O32291C145O32296C150O32327C156O32370C163O32411C165O32427C179O32423C184O32421C188O32470C192O32517C198O32559C205O32597C207O32614C221O32610C226O32608C230O32655C232O31776C237O32690,,
code-creation,JS,10,142625,0x107f91320,1752,add node:internal/deps/undici/undici:1018:10,0x38a74a5712e8,^
code-source-info,0x107f91320,125,31586,32691,,,
code-creation,JS,10,142625,0x107f91a20,264,__commonJS node:internal/deps/undici/undici:5:18,0x38a74a566bb8,^
code-source-info,0x107f91a20,125,212,351,,,
code-creation,JS,10,142625,0x107f91b60,216,__name node:internal/deps/undici/undici:4:14,0x38a74a566b60,^
code-source-info,0x107f91b60,125,118,193,,,
code-creation,JS,10,142667,0x107f91c60,448,__require node:internal/deps/undici/undici:5:49,0x38a74a56b4d8,^
code-source-info,0x107f91c60,125,243,351,,,
code-creation,JS,10,142667,0x107f91e40,384,set node:internal/streams/writable:132:8,0x15988e4731b8,^
code-source-info,0x107f91e40,110,3980,4066,,,
code-creation,JS,10,142667,0x107f91fe0,608,requireWithFallbackInDeps node:internal/bootstrap/realm:435:35,0x22b216cc5148,^
code-source-info,0x107f91fe0,6,14041,14283,,,
code-creation,JS,10,142708,0x107f92260,816,lib/core/constants.js node:internal/deps/undici/undici:860:26,0x38a74a5671f0,^
code-source-info,0x107f92260,125,27501,30369,,,
code-creation,JS,10,142708,0x107f925c0,224,_TstNode node:internal/deps/undici/undici:981:34,0x38a74a571398,^
code-source-info,0x107f925c0,125,30620,33396,,,
code-creation,JS,10,142708,0x107f926c0,912,_TstNode node:internal/deps/undici/undici:1000:18,0x38a74a571290,^
code-source-info,0x107f926c0,125,31056,31499,,,
code-creation,JS,9,142875,0x12ea9866bb98,9, node:internal/deps/undici/undici:1135:71,0x38a74a56de50,~
code-source-info,0x12ea9866bb98,125,35038,35054,C0O35045C4O35045C8O35054,,
code-creation,JS,9,143042,0x12ea9866be00,880,lib/core/diagnostics.js node:internal/deps/undici/undici:1673:28,0x38a74a567568,~
code-source-info,0x12ea9866be
code-creation,JS,9,143125,0x12ea9866c430,287,lib/core/request.js node:internal/deps/undici/undici:1858:24,0x38a74a5675c0,~
code-source-info,0x12ea9866c430,125,60603,72287,C0O60603C11O60713C16O60713C20O60659C26O60687C32O60748C40O60748C44O60748C46O61035C51O61035C55O60788C61O60812C67O60838C73O60854C79O60869C85O60885C91O60907C97O60925C103O60943C109O60959C115O60982C121O61003C127O61074C132O61074C136O61061C142O61138C147O61138C151O61107C157O61186C162O61186C164O61225C171O61225C175O61225C177O61262C263O72213C274O72213C279O72257C281O72273C286O72286,,
code-creation,JS,9,143167,0x12ea9866c618,15, node:internal/deps/undici/undici:1883:25,0x38a74a5766a0,~
code-source-info,0x12ea9866c618,125,61268,69466,C0O61293C8O61293C14O69466,,
code-creation,JS,9,143208,0x12ea9866c790,299,lib/core/connect.js node:internal/deps/undici/undici:2422:24,0x38a74a5677d8,~
code-source-info,0x12ea9866c790,125,79496,86355,C0O79496C22O79550C30O79550C34O79550C36O79588C44O79588C48O79588C50O79627C55O79627C58O79627C60O79699C65O79699C69O79653C75O79675C81O79734C86O79734C89O79734C91O79784C102O79784C107O79845C111O79856C122O79890C127O79894C138O79922C143O79926C149O79949C188O79962C192O81013C231O81026C233O84769C241O84769C246O84841C251O84849C258O84858C273O84841C275O86268C286O86268C291O86318C293O86334C298O86354,,
code-creation,JS,9,143250,0x12ea9866c990,15,SimpleSessionCache node:internal/deps/undici/undici:2465:47,0x38a74a5771d0,~
code-source-info,0x12ea9866c990,125,81053,81772,C0O81082C8O81082C14O81772,,
code-creation,JS,9,143250,0x12ea9866ca18,15,WeakSessionCache node:internal/deps/undici/undici:2435:45,0x38a74a577088,~
code-source-info,0x12ea9866ca18,125,79987,80992,C0O80016C8O80016C14O80992,,
code-creation,JS,9,143292,0x12ea9866cb90,241,lib/util/timers.js node:internal/deps/undici/undici:2186:23,0x38a74a5676e8,~
code-source-info,0x12ea9866cb90,125,72371,79409,C0O72371C17O72429C18O72429C20O72456C24O72456C26O72479C28O72494C31O72500C34O72479C36O72550C43O72550C47O72550C49O72593C51O72593C53O72619C55O72619C57O72647C59O72647C61O72669C62O72669C64O72689C66O72689C68O73544C79O73544C84O73869C95O73869C104O73931C117O74004C164O73931C166O76334C171O76888C179O77244C187O77926C195O78219C203O78419C211O78781C219O79082C229O79388C235O76350C240O79408,,
code-creation,JS,9,143292,0x12ea9866cd58,15, node:internal/deps/undici/undici:2239:27,0x38a74a577c20,~
code-source-info,0x12ea9866cd58,125,73937,76328,C0O73962C8O73962C14O76328,,
code-creation,JS,9,143292,0x12ea9866ce00,41, node:internal/deps/undici/undici:2239:27,0x38a74a577be0,~
code-source-info,0x12ea9866ce00,125,73937,76328,C3O74018C9O74284C17O74462C23O74710C30O74845C35O75004C40O76328,,
code-creation,JS,9,143375,0x12ea9866d1a8,813,lib/dispatcher/client-h1.js node:internal/deps/undici/undici:5757:32,0x38a74a5685e0,~
code-source-info,0x12ea9866d1a
code-creation,JS,9,143417,0x12ea9866d670,15, node:internal/deps/undici/undici:6678:29,0x38a74a579790,~
code-source-info,0x12ea9866d670,125,357314,360782,C0O357339C8O357339C14O360782,,
code-creation,JS,9,143458,0x12ea9866d6f8,15, node:internal/deps/undici/undici:5877:24,0x38a74a5795f0,~
code-source-info,0x12ea9866d6f8,125,328390,341249,C0O328415C8O328415C14O341249,,
code-creation,JS,9,143625,0x12ea9866db58,1875,lib/llhttp/constants.js node:internal/deps/undici/undici:2632:28,0x38a74a5679a0,~
code-source-info,0x12ea9866db
code-creation,JS,9,143708,0x12ea9866e5a8,118, node:internal/deps/undici/undici:2930:14,0x38a74a57b070,~
code-source-info,0x12ea9866e5a8,125,97325,98059,C0O97349C2O97388C8O97393C12O97412C15O97454C21O97459C25O97481C28O97527C34O97532C38O97558C41O97607C47O97612C51O97641C54O97680C60O97685C64O97704C67O97757C73O97762C77O97795C80O97843C86O97848C90O97876C93O97926C99O97931C103O97961C106O98018C112O98023C117O98058,,
code-creation,JS,9,143708,0x12ea9866e6e0,40, node:internal/deps/undici/undici:2804:14,0x38a74a57afd8,~
code-source-info,0x12ea9866e6e0,125,94774,94946,C0O94792C2O94816C8O94821C12O94837C15O94869C21O94874C25O94898C28O94924C34O94929C39O94945,,
code-creation,JS,9,143750,0x12ea9866e8f8,599, node:internal/deps/undici/undici:2690:14,0x38a74a57af40,~
code-source-info,0x12ea9866e8f
code-creation,JS,9,143792,0x12ea9866ece8,41, node:internal/deps/undici/undici:2684:14,0x38a74a57af00,~
code-source-info,0x12ea9866ece8,125,90373,90612,C0O90398C3O90439C9O90444C13O90463C16O90511C22O90516C26O90542C29O90586C35O90591C40O90611,,
code-creation,JS,9,143792,0x12ea9866ede0,123, node:internal/deps/undici/undici:2672:14,0x38a74a57aec0,~
code-source-info,0x12ea9866ede0,125,89715,90285,C0O89732C3O89771C9O89776C13O89809C16O89843C22O89848C26O89876C29O89912C35O89917C39O89947C42O89972C48O89977C52O89996C55O90021C61O90027C65O90046C68O90078C74O90084C78O90110C81O90136C87O90142C91O90162C96O90188C102O90195C106O90215C111O90250C117O90257C122O90284,,
tick,0x19240bc1c,143833,0,0x0,3,0x107f91dc4,0x12ea9866d325,0x107f91dc4,0x12ea98664675,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,143833,0x12ea9866ef20,40, node:internal/deps/undici/undici:2666:14,0x38a74a57ae80,~
code-source-info,0x12ea9866ef20,125,89486,89638,C0O89502C2O89522C8O89527C12O89543C15O89566C21O89571C25O89590C28O89614C34O89619C39O89637,,
code-creation,JS,9,143833,0x12ea9866f088,326, node:internal/deps/undici/undici:2638:14,0x38a74a57ae40,~
code-source-info,0x12ea9866f088,125,87765,89407,C0O87782C2O87802C8O87807C12O87821C15O87847C21O87852C25O87872C28O87896C34O87901C38O87919C41O87948C47O87953C51O87976C54O88019C60O88024C64O88061C67O88096C73O88101C77O88130C80O88162C86O88167C90O88193C93O88222C99O88227C103O88250C106O88284C112O88289C116O88317C119O88350C125O88355C129O88382C132O88420C138O88426C142O88458C145O88498C151O88504C155O88538C158O88574C164O88580C168O88610C171O88642C177O88648C181O88674C184O88709C190O88715C194O88744C197O88787C203O88793C207O88830C210O88864C216O88870C220O88898C223O88935C229O88941C233O88972C236O89009C242O89015C246O89046C249O89079C255O89085C259O89112C262O89147C268O89153C272O89182C275O89206C281O89212C285O89230C288O89262C294O89268C298O89294C301O89329C307O89335C311O89364C314O89386C320O89392C325O89406,,
code-creation,JS,9,143875,0x12ea9866f318,54,lib/llhttp/utils.js node:internal/deps/undici/undici:2611:24,0x38a74a567920,~
code-source-info,0x12ea9866f318,125,86440,86886,C0O86440C5O86475C9O86482C17O86497C25O86482C30O86543C31O86562C35O86815C41O86815C46O86851C48O86870C53O86885,,
code-creation,JS,9,143958,0x12ea9866f3f8,51,enumToMap node:internal/deps/undici/undici:2615:23,0x38a74a57c720,~
code-source-info,0x12ea9866f3f8,125,86594,86810,C0O86594C12O86620C13O86620C15O86630C19O86637C27O86637C33O86646C43O86647C48O86793C50O86804,,
code-creation,JS,9,144000,0x12ea9866f4b8,26, node:internal/deps/undici/undici:2617:32,0x38a74a57e118,~
code-source-info,0x12ea9866f4b8,125,86655,86784,C0O86688C5O86691C9O86706C13O86749C20O86758C25O86783,,
code-creation,JS,9,144000,0x12ea9866f570,45, node:internal/deps/undici/undici:2798:46,0x38a74a57af80,~
code-source-info,0x12ea9866f570,125,94627,94742,C0O94644C6O94653C11O94653C18O94674C21O94683C29O94712C36O94722C39O94701C44O94741,,
code-creation,RegExp,3,144083,0x107f92a80,952,^H
code-creation,JS,10,144500,0x107f92e60,10376,lib/llhttp/constants.js node:internal/deps/undici/undici:2632:28,0x38a74a5679a0,^
code-source-info,0x107f92e60,125,86984,98421,,,
code-creation,JS,10,144500,0x107f95720,336,insert node:internal/deps/undici/undici:1092:13,0x38a74a571470,^
code-source-info,0x107f95720,125,33646,33816,,,
code-creation,JS,10,144542,0x107f958a0,1736,lib/core/tree.js node:internal/deps/undici/undici:975:21,0x38a74a567248,^
code-source-info,0x107f958a0,125,30447,34258,,,
code-creation,JS,10,144542,0x107f95fa0,248, node:internal/deps/undici/undici:2617:32,0x38a74a57e118,^
code-source-info,0x107f95fa0,125,86655,86784,,,
code-creation,JS,10,144542,0x107f960c0,312, node:internal/deps/undici/undici:2798:46,0x38a74a57af80,^
code-source-info,0x107f960c0,125,94627,94742,,,
code-creation,JS,9,144583,0x12ea9866fb90,7, node:internal/deps/undici/undici:2926:68,0x38a74a57b018,~
code-source-info,0x12ea9866fb90,125,97196,97211,C0O97205C2O97205C6O97211,,
code-creation,JS,9,144667,0x12ea9866fd18,347,lazyllhttp node:internal/deps/undici/undici:5814:30,0x38a74a578d40,~
code-source-info,0x12ea9866fd18,125,325642,327907,C10O325642C18O325676C23O325684C28O325688C39O325705C46O325747C51O325772C55O325796C65O325804C69O325796C82O325778C113O325776C123O325861C127O325885C134O325893C141O325911C145O325885C158O325867C188O325949C192O325974C197O325986C202O326006C207O326072C215O326151C223O326440C231O326595C239O326888C247O327185C255O327427C263O327717C277O325974C291O325956C324O327901,,
code-creation,JS,9,144875,0x12ea9866ff60,39,lib/llhttp/llhttp_simd-wasm.js node:internal/deps/undici/undici:2962:35,0x38a74a567a50,~
code-source-info,0x12ea9866ff60,125,163609,228616,C0O163679C6O163679C11O163667C16O163733C27O163733C33O163723C38O228615,,
tick,0x101531c98,145000,0,0x0,0,0x12ea9866fd5d,0x12ea9866d36f,0x107f91dc4,0x12ea98664675,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,145250,0x12ea98670220,575,lib/dispatcher/client-h2.js node:internal/deps/undici/undici:6794:32,0x38a74a568858,~
code-source-info,0x12ea
code-creation,Eval,9,145458,0x12ea98670598,5, node:http2:1:1,0x2858598be388,~
script-source,134,node:http2,'use strict';\n\nconst {\n  connect\x2C\n  constants\x2C\n  createServer\x2C\n  createSecureServer\x2C\n  getDefaultSettings\x2C\n  getPackedSettings\x2C\n  getUnpackedSettings\x2C\n  performServerHandshake\x2C\n  sensitiveHeaders\x2C\n  Http2ServerRequest\x2C\n  Http2ServerResponse\x2C\n} = require('internal/http2/core');\n\nmodule.exports = {\n  connect\x2C\n  constants\x2C\n  createServer\x2C\n  createSecureServer\x2C\n  getDefaultSettings\x2C\n  getPackedSettings\x2C\n  getUnpackedSettings\x2C\n  performServerHandshake\x2C\n  sensitiveHeaders\x2C\n  Http2ServerRequest\x2C\n  Http2ServerResponse\x2C\n};\n
code-source-info,0x12ea98670598,134,0,520,C0O0C4O520,,
code-creation,JS,9,145458,0x12ea98670678,142, node:http2:1:1,0x2858598be450,~
code-source-info,0x12ea98670678,134,0,520,C0O246C3O246C8O25C13O36C18O49C23O65C28O87C33O109C38O130C43O153C48O179C53O199C58O221C63O279C70O300C76O311C82O324C88O340C94O362C100O384C106O405C112O428C118O454C124O474C130O496C136O294C141O519,,
new,MemoryChunk,0x31c3bc40000,262144
tick,0x1011fc764,146292,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,147000,0x12ea986707b0,5, node:internal/http2/core:1:1,0x31c3bc4aa88,~
script-source,135,node:internal/http2/core,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  MathMin\x2C\n  Number\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectEntries\x2C\n  ObjectHasOwn\x2C\n  ObjectKeys\x2C\n  Promise\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectGet\x2C\n  ReflectGetPrototypeOf\x2C\n  ReflectSet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\n\nassertCrypto();\n\nconst assert = require('assert');\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst fs = require('fs');\nconst http = require('http');\nconst { readUInt16BE\x2C readUInt32BE } = require('internal/buffer');\nconst { URL\x2C getURLOrigin } = require('internal/url');\nconst net = require('net');\nconst { Duplex } = require('stream');\nconst tls = require('tls');\nconst { setImmediate\x2C setTimeout\x2C clearTimeout } = require('timers');\n\nconst {\n  kIncomingMessage\x2C\n  _checkIsHttpToken: checkIsHttpToken\x2C\n} = require('_http_common');\nconst { kServerResponse\x2C Server: HttpServer\x2C httpServerPreClose\x2C setupConnectionsTracking } = require('_http_server');\nconst JSStreamSocket = require('internal/js_stream_socket');\n\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: {\n    async_id_symbol\x2C\n    owner_symbol\x2C\n  }\x2C\n} = require('internal/async_hooks');\nconst { AsyncResource } = require('async_hooks');\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_HTTP2_ALTSVC_INVALID_ORIGIN\x2C\n    ERR_HTTP2_ALTSVC_LENGTH\x2C\n    ERR_HTTP2_CONNECT_AUTHORITY\x2C\n    ERR_HTTP2_CONNECT_PATH\x2C\n    ERR_HTTP2_CONNECT_SCHEME\x2C\n    ERR_HTTP2_GOAWAY_SESSION\x2C\n    ERR_HTTP2_HEADERS_AFTER_RESPOND\x2C\n    ERR_HTTP2_HEADERS_SENT\x2C\n    ERR_HTTP2_INVALID_INFO_STATUS\x2C\n    ERR_HTTP2_INVALID_ORIGIN\x2C\n    ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH\x2C\n    ERR_HTTP2_INVALID_SESSION\x2C\n    ERR_HTTP2_INVALID_SETTING_VALUE\x2C\n    ERR_HTTP2_INVALID_STREAM\x2C\n    ERR_HTTP2_MAX_PENDING_SETTINGS_ACK\x2C\n    ERR_HTTP2_NESTED_PUSH\x2C\n    ERR_HTTP2_NO_MEM\x2C\n    ERR_HTTP2_NO_SOCKET_MANIPULATION\x2C\n    ERR_HTTP2_ORIGIN_LENGTH\x2C\n    ERR_HTTP2_OUT_OF_STREAMS\x2C\n    ERR_HTTP2_PAYLOAD_FORBIDDEN\x2C\n    ERR_HTTP2_PING_CANCEL\x2C\n    ERR_HTTP2_PING_LENGTH\x2C\n    ERR_HTTP2_PUSH_DISABLED\x2C\n    ERR_HTTP2_SEND_FILE\x2C\n    ERR_HTTP2_SEND_FILE_NOSEEK\x2C\n    ERR_HTTP2_SESSION_ERROR\x2C\n    ERR_HTTP2_SETTINGS_CANCEL\x2C\n    ERR_HTTP2_SOCKET_BOUND\x2C\n    ERR_HTTP2_SOCKET_UNBOUND\x2C\n    ERR_HTTP2_STATUS_101\x2C\n    ERR_HTTP2_STATUS_INVALID\x2C\n    ERR_HTTP2_STREAM_CANCEL\x2C\n    ERR_HTTP2_STREAM_ERROR\x2C\n    ERR_HTTP2_STREAM_SELF_DEPENDENCY\x2C\n    ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS\x2C\n    ERR_HTTP2_TRAILERS_ALREADY_SENT\x2C\n    ERR_HTTP2_TRAILERS_NOT_READY\x2C\n    ERR_HTTP2_UNSUPPORTED_PROTOCOL\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_SOCKET_CLOSED\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  isUint32\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst fsPromisesInternal = require('internal/fs/promises');\nconst { utcDate } = require('internal/http');\nconst {\n  Http2ServerRequest\x2C\n  Http2ServerResponse\x2C\n  onServerStream\x2C\n} = require('internal/http2/compat');\n\nconst {\n  assertIsObject\x2C\n  assertIsArray\x2C\n  assertValidPseudoHeader\x2C\n  assertValidPseudoHeaderResponse\x2C\n  assertValidPseudoHeaderTrailer\x2C\n  assertWithinRange\x2C\n  getAuthority\x2C\n  getDefaultSettings\x2C\n  getSessionState\x2C\n  getSettings\x2C\n  getStreamState\x2C\n  isPayloadMeaningless\x2C\n  kSensitiveHeaders\x2C\n  kSocket\x2C\n  kRequest\x2C\n  kProxySocket\x2C\n  mapToHeaders\x2C\n  MAX_ADDITIONAL_SETTINGS\x2C\n  NghttpError\x2C\n  remoteCustomSettingsToBuffer\x2C\n  sessionName\x2C\n  toHeaderObject\x2C\n  updateOptionsBuffer\x2C\n  updateSettingsBuffer\x2C\n} = require('internal/http2/util');\nconst {\n  writeGeneric\x2C\n  writevGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  kBoundSession\x2C\n  setStreamTimeout\x2C\n} = require('internal/stream_base_commons');\nconst { kTimeout } = require('internal/timers');\nconst { isArrayBufferView } = require('internal/util/types');\nconst { format } = require('internal/util/inspect');\n\nconst { FileHandle } = internalBinding('fs');\nconst binding = internalBinding('http2');\nconst {\n  ShutdownWrap\x2C\n  kReadBytesOrError\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\n\nconst { StreamPipe } = internalBinding('stream_pipe');\nconst { _connectionListener: httpConnectionListener } = http;\nlet debug = require('internal/util/debuglog').debuglog('http2'\x2C (fn) => {\n  debug = fn;\n});\nconst debugEnabled = debug.enabled;\n\nfunction debugStream(id\x2C sessionType\x2C message\x2C ...args) {\n  if (!debugEnabled) {\n    return;\n  }\n  debug('Http2Stream %s [Http2Session %s]: ' + message\x2C\n        id\x2C sessionName(sessionType)\x2C ...args);\n}\n\nfunction debugStreamObj(stream\x2C message\x2C ...args) {\n  const session = stream[kSession];\n  const type = session ? session[kType] : undefined;\n  debugStream(stream[kID]\x2C type\x2C message\x2C ...args);\n}\n\nfunction debugSession(sessionType\x2C message\x2C ...args) {\n  debug('Http2Session %s: ' + message\x2C sessionName(sessionType)\x2C\n        ...args);\n}\n\nfunction debugSessionObj(session\x2C message\x2C ...args) {\n  debugSession(session[kType]\x2C message\x2C ...args);\n}\n\nconst kMaxFrameSize = (2 ** 24) - 1;\nconst kMaxInt = (2 ** 32) - 1;\nconst kMaxStreams = (2 ** 32) - 1;\nconst kMaxALTSVC = (2 ** 14) - 2;\n\n// eslint-disable-next-line no-control-regex\nconst kQuotedString = /^[\\x09\\x20-\\x5b\\x5d-\\x7e\\x80-\\xff]*$/;\n\nconst { constants\x2C nameForErrorCode } = binding;\n\nconst NETServer = net.Server;\nconst TLSServer = tls.Server;\n\nconst kAlpnProtocol = Symbol('alpnProtocol');\nconst kAuthority = Symbol('authority');\nconst kEncrypted = Symbol('encrypted');\nconst kID = Symbol('id');\nconst kInit = Symbol('init');\nconst kInfoHeaders = Symbol('sent-info-headers');\nconst kLocalSettings = Symbol('local-settings');\nconst kNativeFields = Symbol('kNativeFields');\nconst kOptions = Symbol('options');\nconst kOwner = owner_symbol;\nconst kOrigin = Symbol('origin');\nconst kPendingRequestCalls = Symbol('kPendingRequestCalls');\nconst kProceed = Symbol('proceed');\nconst kProtocol = Symbol('protocol');\nconst kRemoteSettings = Symbol('remote-settings');\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\nconst kSelectPadding = Symbol('select-padding');\nconst kSentHeaders = Symbol('sent-headers');\nconst kSentTrailers = Symbol('sent-trailers');\nconst kServer = Symbol('server');\nconst kState = Symbol('state');\nconst kType = Symbol('type');\nconst kWriteGeneric = Symbol('write-generic');\n\nconst {\n  kBitfield\x2C\n  kSessionPriorityListenerCount\x2C\n  kSessionFrameErrorListenerCount\x2C\n  kSessionMaxInvalidFrames\x2C\n  kSessionMaxRejectedStreams\x2C\n  kSessionUint8FieldCount\x2C\n  kSessionHasRemoteSettingsListeners\x2C\n  kSessionRemoteSettingsIsUpToDate\x2C\n  kSessionHasPingListeners\x2C\n  kSessionHasAltsvcListeners\x2C\n} = binding;\n\nconst {\n  NGHTTP2_CANCEL\x2C\n  NGHTTP2_REFUSED_STREAM\x2C\n  NGHTTP2_DEFAULT_WEIGHT\x2C\n  NGHTTP2_FLAG_END_STREAM\x2C\n  NGHTTP2_HCAT_PUSH_RESPONSE\x2C\n  NGHTTP2_HCAT_RESPONSE\x2C\n  NGHTTP2_INTERNAL_ERROR\x2C\n  NGHTTP2_NO_ERROR\x2C\n  NGHTTP2_SESSION_CLIENT\x2C\n  NGHTTP2_SESSION_SERVER\x2C\n  NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE\x2C\n  NGHTTP2_ERR_INVALID_ARGUMENT\x2C\n  NGHTTP2_ERR_STREAM_CLOSED\x2C\n  NGHTTP2_ERR_NOMEM\x2C\n\n  HTTP2_HEADER_AUTHORITY\x2C\n  HTTP2_HEADER_DATE\x2C\n  HTTP2_HEADER_METHOD\x2C\n  HTTP2_HEADER_PATH\x2C\n  HTTP2_HEADER_PROTOCOL\x2C\n  HTTP2_HEADER_SCHEME\x2C\n  HTTP2_HEADER_STATUS\x2C\n  HTTP2_HEADER_CONTENT_LENGTH\x2C\n\n  NGHTTP2_SETTINGS_HEADER_TABLE_SIZE\x2C\n  NGHTTP2_SETTINGS_ENABLE_PUSH\x2C\n  NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS\x2C\n  NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE\x2C\n  NGHTTP2_SETTINGS_MAX_FRAME_SIZE\x2C\n  NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE\x2C\n  NGHTTP2_SETTINGS_ENABLE_CONNECT_PROTOCOL\x2C\n\n  HTTP2_METHOD_GET\x2C\n  HTTP2_METHOD_HEAD\x2C\n  HTTP2_METHOD_CONNECT\x2C\n\n  HTTP_STATUS_CONTINUE\x2C\n  HTTP_STATUS_RESET_CONTENT\x2C\n  HTTP_STATUS_OK\x2C\n  HTTP_STATUS_NO_CONTENT\x2C\n  HTTP_STATUS_NOT_MODIFIED\x2C\n  HTTP_STATUS_SWITCHING_PROTOCOLS\x2C\n  HTTP_STATUS_MISDIRECTED_REQUEST\x2C\n\n  STREAM_OPTION_EMPTY_PAYLOAD\x2C\n  STREAM_OPTION_GET_TRAILERS\x2C\n} = constants;\n\nconst STREAM_FLAGS_PENDING = 0x0;\nconst STREAM_FLAGS_READY = 0x1;\nconst STREAM_FLAGS_CLOSED = 0x2;\nconst STREAM_FLAGS_HEADERS_SENT = 0x4;\nconst STREAM_FLAGS_HEAD_REQUEST = 0x8;\nconst STREAM_FLAGS_ABORTED = 0x10;\nconst STREAM_FLAGS_HAS_TRAILERS = 0x20;\n\nconst SESSION_FLAGS_PENDING = 0x0;\nconst SESSION_FLAGS_READY = 0x1;\nconst SESSION_FLAGS_CLOSED = 0x2;\nconst SESSION_FLAGS_DESTROYED = 0x4;\n\n// Top level to avoid creating a closure\nfunction emit(self\x2C ...args) {\n  ReflectApply(self.emit\x2C self\x2C args);\n}\n\n// Called when a new block of headers has been received for a given\n// stream. The stream may or may not be new. If the stream is new\x2C\n// create the associated Http2Stream instance and emit the 'stream'\n// event. If the stream is not new\x2C emit the 'headers' event to pass\n// the block of headers on.\nfunction onSessionHeaders(handle\x2C id\x2C cat\x2C flags\x2C headers\x2C sensitiveHeaders) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n\n  const type = session[kType];\n  session[kUpdateTimer]();\n  debugStream(id\x2C type\x2C 'headers received');\n  const streams = session[kState].streams;\n\n  const endOfStream = !!(flags & NGHTTP2_FLAG_END_STREAM);\n  let stream = streams.get(id);\n\n  // Convert the array of header name value pairs into an object\n  const obj = toHeaderObject(headers\x2C sensitiveHeaders);\n\n  if (stream === undefined) {\n    if (session.closed) {\n      // We are not accepting any new streams at this point. This callback\n      // should not be invoked at this point in time\x2C but just in case it is\x2C\n      // refuse the stream using an RST_STREAM and destroy the handle.\n      handle.rstStream(NGHTTP2_REFUSED_STREAM);\n      handle.destroy();\n      return;\n    }\n    // session[kType] can be only one of two possible values\n    if (type === NGHTTP2_SESSION_SERVER) {\n      // eslint-disable-next-line no-use-before-define\n      stream = new ServerHttp2Stream(session\x2C handle\x2C id\x2C {}\x2C obj);\n      if (endOfStream) {\n        stream.push(null);\n      }\n      if (obj[HTTP2_HEADER_METHOD] === HTTP2_METHOD_HEAD) {\n        // For head requests\x2C there must not be a body...\n        // end the writable side immediately.\n        stream.end();\n        stream[kState].flags |= STREAM_FLAGS_HEAD_REQUEST;\n      }\n    } else {\n      // eslint-disable-next-line no-use-before-define\n      stream = new ClientHttp2Stream(session\x2C handle\x2C id\x2C {});\n      if (endOfStream) {\n        stream.push(null);\n      }\n      stream.end();\n    }\n    if (endOfStream)\n      stream[kState].endAfterHeaders = true;\n    process.nextTick(emit\x2C session\x2C 'stream'\x2C stream\x2C obj\x2C flags\x2C headers);\n  } else {\n    let event;\n    const status = obj[HTTP2_HEADER_STATUS];\n    if (cat === NGHTTP2_HCAT_RESPONSE) {\n      if (!endOfStream &&\n          status !== undefined &&\n          status >= 100 &&\n          status < 200) {\n        event = 'headers';\n      } else {\n        event = 'response';\n      }\n    } else if (cat === NGHTTP2_HCAT_PUSH_RESPONSE) {\n      event = 'push';\n    } else if (status !== undefined && status >= 200) {\n      event = 'response';\n    } else {\n      event = endOfStream ? 'trailers' : 'headers';\n    }\n    const session = stream.session;\n    if (status === HTTP_STATUS_MISDIRECTED_REQUEST) {\n      const originSet = session[kState].originSet = initOriginSet(session);\n      originSet.delete(stream[kOrigin]);\n    }\n    debugStream(id\x2C type\x2C "emitting stream '%s' event"\x2C event);\n    const reqAsync = stream[kRequestAsyncResource];\n    if (reqAsync)\n      reqAsync.runInAsyncScope(process.nextTick\x2C null\x2C emit\x2C stream\x2C event\x2C obj\x2C flags\x2C headers);\n    else\n      process.nextTick(emit\x2C stream\x2C event\x2C obj\x2C flags\x2C headers);\n  }\n  if (endOfStream) {\n    stream.push(null);\n  }\n}\n\nfunction tryClose(fd) {\n  // Try to close the file descriptor. If closing fails\x2C assert because\n  // an error really should not happen at this point.\n  fs.close(fd\x2C assert.ifError);\n}\n\n// Called when the Http2Stream has finished sending data and is ready for\n// trailers to be sent. This will only be called if the { hasOptions: true }\n// option is set.\nfunction onStreamTrailers() {\n  const stream = this[kOwner];\n  stream[kState].trailersReady = true;\n  if (stream.destroyed || stream.closed)\n    return;\n  if (!stream.emit('wantTrailers')) {\n    // There are no listeners\x2C send empty trailing HEADERS frame and close.\n    stream.sendTrailers({});\n  }\n}\n\n// Submit an RST-STREAM frame to be sent to the remote peer.\n// This will cause the Http2Stream to be closed.\nfunction submitRstStream(code) {\n  if (this[kHandle] !== undefined) {\n    this[kHandle].rstStream(code);\n  }\n}\n\n// Keep track of the number/presence of JS event listeners. Knowing that there\n// are no listeners allows the C++ code to skip calling into JS for an event.\nfunction sessionListenerAdded(name) {\n  switch (name) {\n    case 'ping':\n      this[kNativeFields][kBitfield] |= 1 << kSessionHasPingListeners;\n      break;\n    case 'altsvc':\n      this[kNativeFields][kBitfield] |= 1 << kSessionHasAltsvcListeners;\n      break;\n    case 'remoteSettings':\n      this[kNativeFields][kBitfield] |= 1 << kSessionHasRemoteSettingsListeners;\n      break;\n    case 'priority':\n      this[kNativeFields][kSessionPriorityListenerCount]++;\n      break;\n    case 'frameError':\n      this[kNativeFields][kSessionFrameErrorListenerCount]++;\n      break;\n  }\n}\n\nfunction sessionListenerRemoved(name) {\n  switch (name) {\n    case 'ping':\n      if (this.listenerCount(name) > 0) return;\n      this[kNativeFields][kBitfield] &= ~(1 << kSessionHasPingListeners);\n      break;\n    case 'altsvc':\n      if (this.listenerCount(name) > 0) return;\n      this[kNativeFields][kBitfield] &= ~(1 << kSessionHasAltsvcListeners);\n      break;\n    case 'remoteSettings':\n      if (this.listenerCount(name) > 0) return;\n      this[kNativeFields][kBitfield] &=\n          ~(1 << kSessionHasRemoteSettingsListeners);\n      break;\n    case 'priority':\n      this[kNativeFields][kSessionPriorityListenerCount]--;\n      break;\n    case 'frameError':\n      this[kNativeFields][kSessionFrameErrorListenerCount]--;\n      break;\n  }\n}\n\n// Also keep track of listeners for the Http2Stream instances\x2C as some events\n// are emitted on those objects.\nfunction streamListenerAdded(name) {\n  const session = this[kSession];\n  if (!session) return;\n  switch (name) {\n    case 'priority':\n      session[kNativeFields][kSessionPriorityListenerCount]++;\n      break;\n    case 'frameError':\n      session[kNativeFields][kSessionFrameErrorListenerCount]++;\n      break;\n  }\n}\n\nfunction streamListenerRemoved(name) {\n  const session = this[kSession];\n  if (!session) return;\n  switch (name) {\n    case 'priority':\n      session[kNativeFields][kSessionPriorityListenerCount]--;\n      break;\n    case 'frameError':\n      session[kNativeFields][kSessionFrameErrorListenerCount]--;\n      break;\n  }\n}\n\nfunction onPing(payload) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  session[kUpdateTimer]();\n  debugSessionObj(session\x2C 'new ping received');\n  session.emit('ping'\x2C payload);\n}\n\n// Called when the stream is closed either by sending or receiving an\n// RST_STREAM frame\x2C or through a natural end-of-stream.\n// If the writable and readable sides of the stream are still open at this\n// point\x2C close them. If there is an open fd for file send\x2C close that also.\n// At this point the underlying node::http2:Http2Stream handle is no\n// longer usable so destroy it also.\nfunction onStreamClose(code) {\n  const stream = this[kOwner];\n  if (!stream || stream.destroyed)\n    return false;\n\n  debugStreamObj(\n    stream\x2C 'closed with code %d\x2C closed %s\x2C readable %s'\x2C\n    code\x2C stream.closed\x2C stream.readable\x2C\n  );\n\n  if (!stream.closed)\n    closeStream(stream\x2C code\x2C kNoRstStream);\n\n  stream[kState].fd = -1;\n  // Defer destroy we actually emit end.\n  if (!stream.readable || code !== NGHTTP2_NO_ERROR) {\n    // If errored or ended\x2C we can destroy immediately.\n    stream.destroy();\n  } else {\n    // Wait for end to destroy.\n    stream.on('end'\x2C stream[kMaybeDestroy]);\n    // Push a null so the stream can end whenever the client consumes\n    // it completely.\n    stream.push(null);\n\n    // If the user hasn't tried to consume the stream (and this is a server\n    // session) then just dump the incoming data so that the stream can\n    // be destroyed.\n    if (stream[kSession][kType] === NGHTTP2_SESSION_SERVER &&\n        !stream[kState].didRead &&\n        stream.readableFlowing === null)\n      stream.resume();\n    else\n      stream.read(0);\n  }\n  return true;\n}\n\n// Called when the remote peer settings have been updated.\n// Resets the cached settings.\nfunction onSettings() {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  session[kUpdateTimer]();\n  debugSessionObj(session\x2C 'new settings received');\n  session[kRemoteSettings] = undefined;\n  session.emit('remoteSettings'\x2C session.remoteSettings);\n}\n\n// If the stream exists\x2C an attempt will be made to emit an event\n// on the stream object itself. Otherwise\x2C forward it on to the\n// session (which may\x2C in turn\x2C forward it on to the server)\nfunction onPriority(id\x2C parent\x2C weight\x2C exclusive) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  debugStream(id\x2C session[kType]\x2C\n              'priority [parent: %d\x2C weight: %d\x2C exclusive: %s]'\x2C\n              parent\x2C weight\x2C exclusive);\n  const emitter = session[kState].streams.get(id) || session;\n  if (!emitter.destroyed) {\n    emitter[kUpdateTimer]();\n    emitter.emit('priority'\x2C id\x2C parent\x2C weight\x2C exclusive);\n  }\n}\n\n// Called by the native layer when an error has occurred sending a\n// frame. This should be exceedingly rare.\nfunction onFrameError(id\x2C type\x2C code) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  debugSessionObj(session\x2C 'error sending frame type %d on stream %d\x2C code: %d'\x2C\n                  type\x2C id\x2C code);\n  const emitter = session[kState].streams.get(id) || session;\n  emitter[kUpdateTimer]();\n  emitter.emit('frameError'\x2C type\x2C code\x2C id);\n  session[kState].streams.get(id).close(code);\n  session.close();\n}\n\nfunction onAltSvc(stream\x2C origin\x2C alt) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  debugSessionObj(session\x2C 'altsvc received: stream: %d\x2C origin: %s\x2C alt: %s'\x2C\n                  stream\x2C origin\x2C alt);\n  session[kUpdateTimer]();\n  session.emit('altsvc'\x2C alt\x2C origin\x2C stream);\n}\n\nfunction initOriginSet(session) {\n  let originSet = session[kState].originSet;\n  if (originSet === undefined) {\n    const socket = session[kSocket];\n    session[kState].originSet = originSet = new SafeSet();\n    if (socket.servername != null) {\n      let originString = `https://${socket.servername}`;\n      if (socket.remotePort != null)\n        originString += `:${socket.remotePort}`;\n      // We have to ensure that it is a properly serialized\n      // ASCII origin string. The socket.servername might not\n      // be properly ASCII encoded.\n      originSet.add(getURLOrigin(originString));\n    }\n  }\n  return originSet;\n}\n\nfunction onOrigin(origins) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  debugSessionObj(session\x2C 'origin received: %j'\x2C origins);\n  session[kUpdateTimer]();\n  if (!session.encrypted || session.destroyed)\n    return undefined;\n  const originSet = initOriginSet(session);\n  for (let n = 0; n < origins.length; n++)\n    originSet.add(origins[n]);\n  session.emit('origin'\x2C origins);\n}\n\n// Receiving a GOAWAY frame from the connected peer is a signal that no\n// new streams should be created. If the code === NGHTTP2_NO_ERROR\x2C we\n// are going to send our close\x2C but allow existing frames to close\n// normally. If code !== NGHTTP2_NO_ERROR\x2C we are going to send our own\n// close using the same code then destroy the session with an error.\n// The goaway event will be emitted on next tick.\nfunction onGoawayData(code\x2C lastStreamID\x2C buf) {\n  const session = this[kOwner];\n  if (session.destroyed)\n    return;\n  debugSessionObj(session\x2C 'goaway %d received [last stream id: %d]'\x2C\n                  code\x2C lastStreamID);\n\n  const state = session[kState];\n  state.goawayCode = code;\n  state.goawayLastStreamID = lastStreamID;\n\n  session.emit('goaway'\x2C code\x2C lastStreamID\x2C buf);\n  if (code === NGHTTP2_NO_ERROR) {\n    // If this is a no error goaway\x2C begin shutting down.\n    // No new streams permitted\x2C but existing streams may\n    // close naturally on their own.\n    session.close();\n  } else {\n    // However\x2C if the code is not NGHTTP_NO_ERROR\x2C destroy the\n    // session immediately. We destroy with an error but send a\n    // goaway using NGHTTP2_NO_ERROR because there was no error\n    // condition on this side of the session that caused the\n    // shutdown.\n    session.destroy(new ERR_HTTP2_SESSION_ERROR(code)\x2C NGHTTP2_NO_ERROR);\n  }\n}\n\n// When a ClientHttp2Session is first created\x2C the socket may not yet be\n// connected. If request() is called during this time\x2C the actual request\n// will be deferred until the socket is ready to go.\nfunction requestOnConnect(headers\x2C options) {\n  const session = this[kSession];\n\n  // At this point\x2C the stream should have already been destroyed during\n  // the session.destroy() method. Do nothing else.\n  if (session === undefined || session.destroyed)\n    return;\n\n  // If the session was closed while waiting for the connect\x2C destroy\n  // the stream and do not continue with the request.\n  if (session.closed) {\n    const err = new ERR_HTTP2_GOAWAY_SESSION();\n    this.destroy(err);\n    return;\n  }\n\n  debugSessionObj(session\x2C 'connected\x2C initializing request');\n\n  let streamOptions = 0;\n  if (options.endStream)\n    streamOptions |= STREAM_OPTION_EMPTY_PAYLOAD;\n\n  if (options.waitForTrailers)\n    streamOptions |= STREAM_OPTION_GET_TRAILERS;\n\n  // `ret` will be either the reserved stream ID (if positive)\n  // or an error code (if negative)\n  const ret = session[kHandle].request(headers\x2C\n                                       streamOptions\x2C\n                                       options.parent | 0\x2C\n                                       options.weight | 0\x2C\n                                       !!options.exclusive);\n\n  // In an error condition\x2C one of three possible response codes will be\n  // possible:\n  // * NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE - Maximum stream ID is reached\x2C this\n  //   is fatal for the session\n  // * NGHTTP2_ERR_INVALID_ARGUMENT - Stream was made dependent on itself\x2C this\n  //   impacts on this stream.\n  // For the first two\x2C emit the error on the session\x2C\n  // For the third\x2C emit the error on the stream\x2C it will bubble up to the\n  // session if not handled.\n  if (typeof ret === 'number') {\n    let err;\n    switch (ret) {\n      case NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE:\n        err = new ERR_HTTP2_OUT_OF_STREAMS();\n        this.destroy(err);\n        break;\n      case NGHTTP2_ERR_INVALID_ARGUMENT:\n        err = new ERR_HTTP2_STREAM_SELF_DEPENDENCY();\n        this.destroy(err);\n        break;\n      default:\n        session.destroy(new NghttpError(ret));\n    }\n    return;\n  }\n  this[kInit](ret.id()\x2C ret);\n}\n\n// Validates that priority options are correct\x2C specifically:\n// 1. options.weight must be a number\n// 2. options.parent must be a positive number\n// 3. options.exclusive must be a boolean\n// 4. if specified\x2C options.silent must be a boolean\n//\n// Also sets the default priority options if they are not set.\nconst setAndValidatePriorityOptions = hideStackFrames((options) => {\n  if (options.weight === undefined) {\n    options.weight = NGHTTP2_DEFAULT_WEIGHT;\n  } else {\n    validateNumber.withoutStackTrace(options.weight\x2C 'options.weight');\n  }\n\n  if (options.parent === undefined) {\n    options.parent = 0;\n  } else {\n    validateNumber.withoutStackTrace(options.parent\x2C 'options.parent'\x2C 0);\n  }\n\n  if (options.exclusive === undefined) {\n    options.exclusive = false;\n  } else {\n    validateBoolean.withoutStackTrace(options.exclusive\x2C 'options.exclusive');\n  }\n\n  if (options.silent === undefined) {\n    options.silent = false;\n  } else {\n    validateBoolean.withoutStackTrace(options.silent\x2C 'options.silent');\n  }\n});\n\n// When an error occurs internally at the binding level\x2C immediately\n// destroy the session.\nfunction onSessionInternalError(integerCode\x2C customErrorCode) {\n  if (this[kOwner] !== undefined)\n    this[kOwner].destroy(new NghttpError(integerCode\x2C customErrorCode));\n}\n\nfunction settingsCallback(cb\x2C ack\x2C duration) {\n  this[kState].pendingAck--;\n  this[kLocalSettings] = undefined;\n  if (ack) {\n    debugSessionObj(this\x2C 'settings received');\n    const settings = this.localSettings;\n    if (typeof cb === 'function')\n      cb(null\x2C settings\x2C duration);\n    this.emit('localSettings'\x2C settings);\n  } else {\n    debugSessionObj(this\x2C 'settings canceled');\n    if (typeof cb === 'function')\n      cb(new ERR_HTTP2_SETTINGS_CANCEL());\n  }\n}\n\n// Submits a SETTINGS frame to be sent to the remote peer.\nfunction submitSettings(settings\x2C callback) {\n  if (this.destroyed)\n    return;\n  debugSessionObj(this\x2C 'submitting settings');\n  this[kUpdateTimer]();\n  updateSettingsBuffer(settings);\n  if (!this[kHandle].settings(settingsCallback.bind(this\x2C callback))) {\n    this.destroy(new ERR_HTTP2_MAX_PENDING_SETTINGS_ACK());\n  }\n}\n\n// Submits a PRIORITY frame to be sent to the remote peer\n// Note: If the silent option is true\x2C the change will be made\n// locally with no PRIORITY frame sent.\nfunction submitPriority(options) {\n  if (this.destroyed)\n    return;\n  this[kUpdateTimer]();\n\n  // If the parent is the id\x2C do nothing because a\n  // stream cannot be made to depend on itself.\n  if (options.parent === this[kID])\n    return;\n\n  this[kHandle].priority(options.parent | 0\x2C\n                         options.weight | 0\x2C\n                         !!options.exclusive\x2C\n                         !!options.silent);\n}\n\n// Submit a GOAWAY frame to be sent to the remote peer.\n// If the lastStreamID is set to <= 0\x2C then the lastProcStreamID will\n// be used. The opaqueData must either be a typed array or undefined\n// (which will be checked elsewhere).\nfunction submitGoaway(code\x2C lastStreamID\x2C opaqueData) {\n  if (this.destroyed)\n    return;\n  debugSessionObj(this\x2C 'submitting goaway');\n  this[kUpdateTimer]();\n  this[kHandle].goaway(code\x2C lastStreamID\x2C opaqueData);\n}\n\nconst proxySocketHandler = {\n  get(session\x2C prop) {\n    switch (prop) {\n      case 'setTimeout':\n      case 'ref':\n      case 'unref':\n        return session[prop].bind(session);\n      case 'destroy':\n      case 'emit':\n      case 'end':\n      case 'pause':\n      case 'read':\n      case 'resume':\n      case 'write':\n      case 'setEncoding':\n      case 'setKeepAlive':\n      case 'setNoDelay':\n        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n      default: {\n        const socket = session[kSocket];\n        if (socket === undefined)\n          throw new ERR_HTTP2_SOCKET_UNBOUND();\n        const value = socket[prop];\n        return typeof value === 'function' ?\n          value.bind(socket) :\n          value;\n      }\n    }\n  }\x2C\n  getPrototypeOf(session) {\n    const socket = session[kSocket];\n    if (socket === undefined)\n      throw new ERR_HTTP2_SOCKET_UNBOUND();\n    return ReflectGetPrototypeOf(socket);\n  }\x2C\n  set(session\x2C prop\x2C value) {\n    switch (prop) {\n      case 'setTimeout':\n      case 'ref':\n      case 'unref':\n        session[prop] = value;\n        return true;\n      case 'destroy':\n      case 'emit':\n      case 'end':\n      case 'pause':\n      case 'read':\n      case 'resume':\n      case 'write':\n      case 'setEncoding':\n      case 'setKeepAlive':\n      case 'setNoDelay':\n        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n      default: {\n        const socket = session[kSocket];\n        if (socket === undefined)\n          throw new ERR_HTTP2_SOCKET_UNBOUND();\n        socket[prop] = value;\n        return true;\n      }\n    }\n  }\x2C\n};\n\n// pingCallback() returns a function that is invoked when an HTTP2 PING\n// frame acknowledgement is received. The ack is either true or false to\n// indicate if the ping was successful or not. The duration indicates the\n// number of milliseconds elapsed since the ping was sent and the ack\n// received. The payload is a Buffer containing the 8 bytes of payload\n// data received on the PING acknowledgement.\nfunction pingCallback(cb) {\n  return function pingCallback(ack\x2C duration\x2C payload) {\n    if (ack) {\n      cb(null\x2C duration\x2C payload);\n    } else {\n      cb(new ERR_HTTP2_PING_CANCEL());\n    }\n  };\n}\n\n// Validates the values in a settings object. Specifically:\n// 1. headerTableSize must be a number in the range 0 <= n <= kMaxInt\n// 2. initialWindowSize must be a number in the range 0 <= n <= kMaxInt\n// 3. maxFrameSize must be a number in the range 16384 <= n <= kMaxFrameSize\n// 4. maxConcurrentStreams must be a number in the range 0 <= n <= kMaxStreams\n// 5. maxHeaderListSize must be a number in the range 0 <= n <= kMaxInt\n// 6. enablePush must be a boolean\n// 7. enableConnectProtocol must be a boolean\n// All settings are optional and may be left undefined\nconst validateSettings = hideStackFrames((settings) => {\n  if (settings === undefined) return;\n  assertIsObject.withoutStackTrace(settings.customSettings\x2C 'customSettings'\x2C 'Number');\n  if (settings.customSettings) {\n    const entries = ObjectEntries(settings.customSettings);\n    if (entries.length > MAX_ADDITIONAL_SETTINGS)\n      throw new ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS();\n    for (const { 0: key\x2C 1: value } of entries) {\n      assertWithinRange.withoutStackTrace('customSettings:id'\x2C Number(key)\x2C 0\x2C 0xffff);\n      assertWithinRange.withoutStackTrace('customSettings:value'\x2C Number(value)\x2C 0\x2C kMaxInt);\n    }\n  }\n\n  assertWithinRange.withoutStackTrace('headerTableSize'\x2C\n                                      settings.headerTableSize\x2C\n                                      0\x2C kMaxInt);\n  assertWithinRange.withoutStackTrace('initialWindowSize'\x2C\n                                      settings.initialWindowSize\x2C\n                                      0\x2C kMaxInt);\n  assertWithinRange.withoutStackTrace('maxFrameSize'\x2C\n                                      settings.maxFrameSize\x2C\n                                      16384\x2C kMaxFrameSize);\n  assertWithinRange.withoutStackTrace('maxConcurrentStreams'\x2C\n                                      settings.maxConcurrentStreams\x2C\n                                      0\x2C kMaxStreams);\n  assertWithinRange.withoutStackTrace('maxHeaderListSize'\x2C\n                                      settings.maxHeaderListSize\x2C\n                                      0\x2C kMaxInt);\n  assertWithinRange.withoutStackTrace('maxHeaderSize'\x2C\n                                      settings.maxHeaderSize\x2C\n                                      0\x2C kMaxInt);\n  if (settings.enablePush !== undefined &&\n      typeof settings.enablePush !== 'boolean') {\n    throw new ERR_HTTP2_INVALID_SETTING_VALUE.HideStackFramesError('enablePush'\x2C\n                                                                   settings.enablePush);\n  }\n  if (settings.enableConnectProtocol !== undefined &&\n      typeof settings.enableConnectProtocol !== 'boolean') {\n    throw new ERR_HTTP2_INVALID_SETTING_VALUE.HideStackFramesError('enableConnectProtocol'\x2C\n                                                                   settings.enableConnectProtocol);\n  }\n});\n\n// Wrap a typed array in a proxy\x2C and allow selectively copying the entries\n// that have explicitly been set to another typed array.\nfunction trackAssignmentsTypedArray(typedArray) {\n  const typedArrayLength = typedArray.length;\n  const modifiedEntries = new Uint8Array(typedArrayLength);\n\n  function copyAssigned(target) {\n    for (let i = 0; i < typedArrayLength; i++) {\n      if (modifiedEntries[i]) {\n        target[i] = typedArray[i];\n      }\n    }\n  }\n\n  return new Proxy(typedArray\x2C {\n    __proto__: null\x2C\n    get(obj\x2C prop\x2C receiver) {\n      if (prop === 'copyAssigned') {\n        return copyAssigned;\n      }\n      return ReflectGet(obj\x2C prop\x2C receiver);\n    }\x2C\n    set(obj\x2C prop\x2C value) {\n      if (`${+prop}` === prop) {\n        modifiedEntries[prop] = 1;\n      }\n      return ReflectSet(obj\x2C prop\x2C value);\n    }\x2C\n  });\n}\n\n// Creates the internal binding.Http2Session handle for an Http2Session\n// instance. This occurs only after the socket connection has been\n// established. Note: the binding.Http2Session will take over ownership\n// of the socket. No other code should read from or write to the socket.\nfunction setupHandle(socket\x2C type\x2C options) {\n  // If the session has been destroyed\x2C go ahead and emit 'connect'\x2C\n  // but do nothing else. The various on('connect') handlers set by\n  // core will check for session.destroyed before progressing\x2C this\n  // ensures that those at least get cleared out.\n  if (this.destroyed) {\n    process.nextTick(emit\x2C this\x2C 'connect'\x2C this\x2C socket);\n    return;\n  }\n\n  assert(socket._handle !== undefined\x2C\n         'Internal HTTP/2 Failure. The socket is not connected. Please ' +\n         'report this as a bug in Node.js');\n\n  debugSession(type\x2C 'setting up session handle');\n  this[kState].flags |= SESSION_FLAGS_READY;\n\n  updateOptionsBuffer(options);\n  if (options.remoteCustomSettings) {\n    remoteCustomSettingsToBuffer(options.remoteCustomSettings);\n  }\n  const handle = new binding.Http2Session(type);\n  handle[kOwner] = this;\n\n  if (typeof options.selectPadding === 'function')\n    this[kSelectPadding] = options.selectPadding;\n  handle.consume(socket._handle);\n\n  this[kHandle] = handle;\n  if (this[kNativeFields]) {\n    // If some options have already been set before the handle existed\x2C copy\n    // those (and only those) that have manually been set over.\n    this[kNativeFields].copyAssigned(handle.fields);\n  }\n\n  this[kNativeFields] = handle.fields;\n\n  if (socket.encrypted) {\n    this[kAlpnProtocol] = socket.alpnProtocol;\n    this[kEncrypted] = true;\n  } else {\n    // 'h2c' is the protocol identifier for HTTP/2 over plain-text. We use\n    // it here to identify any session that is not explicitly using an\n    // encrypted socket.\n    this[kAlpnProtocol] = 'h2c';\n    this[kEncrypted] = false;\n  }\n\n  if (isUint32(options.maxSessionInvalidFrames)) {\n    const uint32 = new Uint32Array(\n      this[kNativeFields].buffer\x2C kSessionMaxInvalidFrames\x2C 1);\n    uint32[0] = options.maxSessionInvalidFrames;\n  }\n\n  if (isUint32(options.maxSessionRejectedStreams)) {\n    const uint32 = new Uint32Array(\n      this[kNativeFields].buffer\x2C kSessionMaxRejectedStreams\x2C 1);\n    uint32[0] = options.maxSessionRejectedStreams;\n  }\n\n  const settings = typeof options.settings === 'object' ?\n    options.settings : {};\n\n  this.settings(settings);\n\n  if (type === NGHTTP2_SESSION_SERVER &&\n      ArrayIsArray(options.origins)) {\n    ReflectApply(this.origin\x2C this\x2C options.origins);\n  }\n\n  process.nextTick(emit\x2C this\x2C 'connect'\x2C this\x2C socket);\n}\n\n// Emits a close event followed by an error event if err is truthy. Used\n// by Http2Session.prototype.destroy()\nfunction emitClose(self\x2C error) {\n  if (error)\n    self.emit('error'\x2C error);\n  self.emit('close');\n}\n\nfunction cleanupSession(session) {\n  const socket = session[kSocket];\n  const handle = session[kHandle];\n  session[kProxySocket] = undefined;\n  session[kSocket] = undefined;\n  session[kHandle] = undefined;\n  session[kNativeFields] = trackAssignmentsTypedArray(\n    new Uint8Array(kSessionUint8FieldCount));\n  if (handle)\n    handle.ondone = null;\n  if (socket) {\n    socket[kBoundSession] = undefined;\n    socket[kServer] = undefined;\n  }\n}\n\nfunction finishSessionClose(session\x2C error) {\n  debugSessionObj(session\x2C 'finishSessionClose');\n\n  const socket = session[kSocket];\n  cleanupSession(session);\n\n  if (socket && !socket.destroyed) {\n    socket.on('close'\x2C () => {\n      emitClose(session\x2C error);\n    });\n    if (session.closed) {\n      // If we're gracefully closing the socket\x2C call resume() so we can detect\n      // the peer closing in case binding.Http2Session is already gone.\n      socket.resume();\n    }\n\n    // Always wait for writable side to finish.\n    socket.end((err) => {\n      debugSessionObj(session\x2C 'finishSessionClose socket end'\x2C err\x2C error);\n      // If session.destroy() was called\x2C destroy the underlying socket. Delay\n      // it a bit to try to avoid ECONNRESET on Windows.\n      if (!session.closed) {\n        setImmediate(() => {\n          socket.destroy(error);\n        });\n      }\n    });\n  } else {\n    process.nextTick(emitClose\x2C session\x2C error);\n  }\n}\n\nfunction closeSession(session\x2C code\x2C error) {\n  debugSessionObj(session\x2C 'start closing/destroying'\x2C error);\n\n  const state = session[kState];\n  state.flags |= SESSION_FLAGS_DESTROYED;\n  state.destroyCode = code;\n\n  // Clear timeout and remove timeout listeners.\n  session.setTimeout(0);\n  session.removeAllListeners('timeout');\n\n  // Destroy any pending and open streams\n  if (state.pendingStreams.size > 0 || state.streams.size > 0) {\n    const cancel = new ERR_HTTP2_STREAM_CANCEL(error);\n    state.pendingStreams.forEach((stream) => stream.destroy(cancel));\n    state.streams.forEach((stream) => stream.destroy(error));\n  }\n\n  // Disassociate from the socket and server.\n  const socket = session[kSocket];\n  const handle = session[kHandle];\n\n  // Destroy the handle if it exists at this point.\n  if (handle !== undefined) {\n    handle.ondone = finishSessionClose.bind(null\x2C session\x2C error);\n    handle.destroy(code\x2C socket.destroyed);\n  } else {\n    finishSessionClose(session\x2C error);\n  }\n}\n\n// Upon creation\x2C the Http2Session takes ownership of the socket. The session\n// may not be ready to use immediately if the socket is not yet fully connected.\n// In that case\x2C the Http2Session will wait for the socket to connect. Once\n// the Http2Session is ready\x2C it will emit its own 'connect' event.\n//\n// The Http2Session.goaway() method will send a GOAWAY frame\x2C signalling\n// to the connected peer that a shutdown is in progress. Sending a goaway\n// frame has no other effect\x2C however.\n//\n// Receiving a GOAWAY frame will cause the Http2Session to first emit a 'goaway'\n// event notifying the user that a shutdown is in progress. If the goaway\n// error code equals 0 (NGHTTP2_NO_ERROR)\x2C session.close() will be called\x2C\n// causing the Http2Session to send its own GOAWAY frame and switch itself\n// into a graceful closing state. In this state\x2C new inbound or outbound\n// Http2Streams will be rejected. Existing *pending* streams (those created\n// but without an assigned stream ID or handle) will be destroyed with a\n// cancel error. Existing open streams will be permitted to complete on their\n// own. Once all existing streams close\x2C session.destroy() will be called\n// automatically.\n//\n// Calling session.destroy() will tear down the Http2Session immediately\x2C\n// making it no longer usable. Pending and existing streams will be destroyed.\n// The bound socket will be destroyed. Once all resources have been freed up\x2C\n// the 'close' event will be emitted. Note that pending streams will be\n// destroyed using a specific "ERR_HTTP2_STREAM_CANCEL" error. Existing open\n// streams will be destroyed using the same error passed to session.destroy()\n//\n// If destroy is called with an error\x2C an 'error' event will be emitted\n// immediately following the 'close' event.\n//\n// The socket and Http2Session lifecycles are tightly bound. Once one is\n// destroyed\x2C the other should also be destroyed. When the socket is destroyed\n// with an error\x2C session.destroy() will be called with that same error.\n// Likewise\x2C when session.destroy() is called with an error\x2C the same error\n// will be sent to the socket.\nclass Http2Session extends EventEmitter {\n  constructor(type\x2C options\x2C socket) {\n    super();\n\n    // No validation is performed on the input parameters because this\n    // constructor is not exported directly for users.\n\n    // If the session property already exists on the socket\x2C\n    // then it has already been bound to an Http2Session instance\n    // and cannot be attached again.\n    if (socket[kBoundSession] !== undefined)\n      throw new ERR_HTTP2_SOCKET_BOUND();\n\n    socket[kBoundSession] = this;\n\n    if (!socket._handle || !socket._handle.isStreamBase) {\n      socket = new JSStreamSocket(socket);\n    }\n    socket.on('error'\x2C socketOnError);\n    socket.on('close'\x2C socketOnClose);\n\n    this[kState] = {\n      destroyCode: NGHTTP2_NO_ERROR\x2C\n      flags: SESSION_FLAGS_PENDING\x2C\n      goawayCode: null\x2C\n      goawayLastStreamID: null\x2C\n      streams: new SafeMap()\x2C\n      pendingStreams: new SafeSet()\x2C\n      pendingAck: 0\x2C\n      shutdownWritableCalled: false\x2C\n      writeQueueSize: 0\x2C\n      originSet: undefined\x2C\n    };\n\n    this[kEncrypted] = undefined;\n    this[kAlpnProtocol] = undefined;\n    this[kType] = type;\n    this[kProxySocket] = null;\n    this[kSocket] = socket;\n    this[kTimeout] = null;\n    this[kHandle] = undefined;\n\n    // Do not use nagle's algorithm\n    if (typeof socket.setNoDelay === 'function')\n      socket.setNoDelay();\n\n    // Disable TLS renegotiation on the socket\n    if (typeof socket.disableRenegotiation === 'function')\n      socket.disableRenegotiation();\n\n    const setupFn = setupHandle.bind(this\x2C socket\x2C type\x2C options);\n    if (socket.connecting || socket.secureConnecting) {\n      const connectEvent =\n        socket instanceof tls.TLSSocket ? 'secureConnect' : 'connect';\n      socket.once(connectEvent\x2C () => {\n        try {\n          setupFn();\n        } catch (error) {\n          socket.destroy(error);\n        }\n      });\n    } else {\n      setupFn();\n    }\n\n    this[kNativeFields] ||= trackAssignmentsTypedArray(new Uint8Array(kSessionUint8FieldCount));\n    this.on('newListener'\x2C sessionListenerAdded);\n    this.on('removeListener'\x2C sessionListenerRemoved);\n\n    // Process data on the next tick - a remoteSettings handler may be attached.\n    // https://github.com/nodejs/node/issues/35981\n    process.nextTick(() => {\n      // Socket already has some buffered data - emulate receiving it\n      // https://github.com/nodejs/node/issues/35475\n      // https://github.com/nodejs/node/issues/34532\n      if (socket.readableLength) {\n        let buf;\n        while ((buf = socket.read()) !== null) {\n          debugSession(type\x2C `${buf.length} bytes already in buffer`);\n          this[kHandle].receive(buf);\n        }\n      }\n    });\n\n    debugSession(type\x2C 'created');\n  }\n\n  // Returns undefined if the socket is not yet connected\x2C true if the\n  // socket is a TLSSocket\x2C and false if it is not.\n  get encrypted() {\n    return this[kEncrypted];\n  }\n\n  // Returns undefined if the socket is not yet connected\x2C `h2` if the\n  // socket is a TLSSocket and the alpnProtocol is `h2`\x2C or `h2c` if the\n  // socket is not a TLSSocket.\n  get alpnProtocol() {\n    return this[kAlpnProtocol];\n  }\n\n  // TODO(jasnell): originSet is being added in preparation for ORIGIN frame\n  // support. At the current time\x2C the ORIGIN frame specification is awaiting\n  // publication as an RFC and is awaiting implementation in nghttp2. Once\n  // added\x2C an ORIGIN frame will add to the origins included in the origin\n  // set. 421 responses will remove origins from the set.\n  get originSet() {\n    if (!this.encrypted || this.destroyed)\n      return undefined;\n    return ArrayFrom(initOriginSet(this));\n  }\n\n  // True if the Http2Session is still waiting for the socket to connect\n  get connecting() {\n    return (this[kState].flags & SESSION_FLAGS_READY) === 0;\n  }\n\n  // True if Http2Session.prototype.close() has been called\n  get closed() {\n    return !!(this[kState].flags & SESSION_FLAGS_CLOSED);\n  }\n\n  // True if Http2Session.prototype.destroy() has been called\n  get destroyed() {\n    return !!(this[kState].flags & SESSION_FLAGS_DESTROYED);\n  }\n\n  // Resets the timeout counter\n  [kUpdateTimer]() {\n    if (this.destroyed)\n      return;\n    if (this[kTimeout]) this[kTimeout].refresh();\n  }\n\n  // Sets the id of the next stream to be created by this Http2Session.\n  // The value must be a number in the range 0 <= n <= kMaxStreams. The\n  // value also needs to be larger than the current next stream ID.\n  setNextStreamID(id) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    validateNumber(id\x2C 'id');\n    if (id <= 0 || id > kMaxStreams)\n      throw new ERR_OUT_OF_RANGE('id'\x2C `> 0 and <= ${kMaxStreams}`\x2C id);\n    this[kHandle].setNextStreamID(id);\n  }\n\n  // Sets the local window size (local endpoints's window size)\n  // Returns 0 if success or throw an exception if NGHTTP2_ERR_NOMEM\n  // if the window allocation fails\n  setLocalWindowSize(windowSize) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    validateInt32(windowSize\x2C 'windowSize'\x2C 0);\n    const ret = this[kHandle].setLocalWindowSize(windowSize);\n\n    if (ret === NGHTTP2_ERR_NOMEM) {\n      this.destroy(new ERR_HTTP2_NO_MEM());\n    }\n  }\n\n  // If ping is called while we are still connecting\x2C or after close() has\n  // been called\x2C the ping callback will be invoked immediately with a ping\n  // cancelled error and a duration of 0.0.\n  ping(payload\x2C callback) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    if (typeof payload === 'function') {\n      callback = payload;\n      payload = undefined;\n    }\n    if (payload) {\n      validateBuffer(payload\x2C 'payload');\n    }\n    if (payload && payload.length !== 8) {\n      throw new ERR_HTTP2_PING_LENGTH();\n    }\n    validateFunction(callback\x2C 'callback');\n\n    const cb = pingCallback(callback);\n    if (this.connecting || this.closed) {\n      process.nextTick(cb\x2C false\x2C 0.0\x2C payload);\n      return;\n    }\n\n    return this[kHandle].ping(payload\x2C cb);\n  }\n\n  [kInspect](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const obj = {\n      type: this[kType]\x2C\n      closed: this.closed\x2C\n      destroyed: this.destroyed\x2C\n      state: this.state\x2C\n      localSettings: this.localSettings\x2C\n      remoteSettings: this.remoteSettings\x2C\n    };\n    return `Http2Session ${format(obj)}`;\n  }\n\n  // The socket owned by this session\n  get socket() {\n    const proxySocket = this[kProxySocket];\n    if (proxySocket === null)\n      return this[kProxySocket] = new Proxy(this\x2C proxySocketHandler);\n    return proxySocket;\n  }\n\n  // The session type\n  get type() {\n    return this[kType];\n  }\n\n  // If a GOAWAY frame has been received\x2C gives the error code specified\n  get goawayCode() {\n    return this[kState].goawayCode || NGHTTP2_NO_ERROR;\n  }\n\n  // If a GOAWAY frame has been received\x2C gives the last stream ID reported\n  get goawayLastStreamID() {\n    return this[kState].goawayLastStreamID || 0;\n  }\n\n  // True if the Http2Session is waiting for a settings acknowledgement\n  get pendingSettingsAck() {\n    return this[kState].pendingAck > 0;\n  }\n\n  // Retrieves state information for the Http2Session\n  get state() {\n    return this.connecting || this.destroyed ?\n      {} : getSessionState(this[kHandle]);\n  }\n\n  // The settings currently in effect for the local peer. These will\n  // be updated only when a settings acknowledgement has been received.\n  get localSettings() {\n    const settings = this[kLocalSettings];\n    if (settings !== undefined)\n      return settings;\n\n    if (this.destroyed || this.connecting)\n      return {};\n\n    return this[kLocalSettings] = getSettings(this[kHandle]\x2C false); // Local\n  }\n\n  // The settings currently in effect for the remote peer.\n  get remoteSettings() {\n    if (this[kNativeFields][kBitfield] &\n        (1 << kSessionRemoteSettingsIsUpToDate)) {\n      const settings = this[kRemoteSettings];\n      if (settings !== undefined) {\n        return settings;\n      }\n    }\n\n    if (this.destroyed || this.connecting)\n      return {};\n\n    this[kNativeFields][kBitfield] |= (1 << kSessionRemoteSettingsIsUpToDate);\n    return this[kRemoteSettings] = getSettings(this[kHandle]\x2C true); // Remote\n  }\n\n  // Submits a SETTINGS frame to be sent to the remote peer.\n  settings(settings\x2C callback) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n    assertIsObject(settings\x2C 'settings');\n    validateSettings(settings);\n\n    if (callback) {\n      validateFunction(callback\x2C 'callback');\n    }\n    debugSessionObj(this\x2C 'sending settings');\n\n    this[kState].pendingAck++;\n\n    const settingsFn = submitSettings.bind(this\x2C { ...settings }\x2C callback);\n    if (this.connecting) {\n      this.once('connect'\x2C settingsFn);\n      return;\n    }\n    settingsFn();\n  }\n\n  // Submits a GOAWAY frame to be sent to the remote peer. Note that this\n  // is only a notification\x2C and does not affect the usable state of the\n  // session with the notable exception that new incoming streams will\n  // be rejected automatically.\n  goaway(code = NGHTTP2_NO_ERROR\x2C lastStreamID = 0\x2C opaqueData) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    if (opaqueData !== undefined) {\n      validateBuffer(opaqueData\x2C 'opaqueData');\n    }\n    validateNumber(code\x2C 'code');\n    validateNumber(lastStreamID\x2C 'lastStreamID');\n\n    const goawayFn = submitGoaway.bind(this\x2C code\x2C lastStreamID\x2C opaqueData);\n    if (this.connecting) {\n      this.once('connect'\x2C goawayFn);\n      return;\n    }\n    goawayFn();\n  }\n\n  // Destroy the Http2Session\x2C making it no longer usable and cancelling\n  // any pending activity.\n  destroy(error = NGHTTP2_NO_ERROR\x2C code) {\n    if (this.destroyed)\n      return;\n\n    debugSessionObj(this\x2C 'destroying');\n\n    if (typeof error === 'number') {\n      code = error;\n      error =\n        code !== NGHTTP2_NO_ERROR ?\n          new ERR_HTTP2_SESSION_ERROR(code) : undefined;\n    }\n    if (code === undefined && error != null)\n      code = NGHTTP2_INTERNAL_ERROR;\n\n    closeSession(this\x2C code\x2C error);\n  }\n\n  // Closing the session will:\n  // 1. Send a goaway frame\n  // 2. Mark the session as closed\n  // 3. Prevent new inbound or outbound streams from being opened\n  // 4. Optionally register a 'close' event handler\n  // 5. Will cause the session to automatically destroy after the\n  //    last currently open Http2Stream closes.\n  //\n  // Close always assumes a good\x2C non-error shutdown (NGHTTP_NO_ERROR)\n  //\n  // If the session has not connected yet\x2C the closed flag will still be\n  // set but the goaway will not be sent until after the connect event\n  // is emitted.\n  close(callback) {\n    if (this.closed || this.destroyed)\n      return;\n    debugSessionObj(this\x2C 'marking session closed');\n    this[kState].flags |= SESSION_FLAGS_CLOSED;\n    if (typeof callback === 'function')\n      this.once('close'\x2C callback);\n    this.goaway();\n    this[kMaybeDestroy]();\n  }\n\n  [EventEmitter.captureRejectionSymbol](err\x2C event\x2C ...args) {\n    switch (event) {\n      case 'stream': {\n        const stream = args[0];\n        stream.destroy(err);\n        break;\n      }\n      default:\n        this.destroy(err);\n    }\n  }\n\n  // Destroy the session if:\n  // * error is not undefined/null\n  // * session is closed and there are no more pending or open streams\n  [kMaybeDestroy](error) {\n    if (error == null) {\n      const state = this[kState];\n      // Do not destroy if we're not closed and there are pending/open streams\n      if (!this.closed ||\n          state.streams.size > 0 ||\n          state.pendingStreams.size > 0) {\n        return;\n      }\n    }\n    this.destroy(error);\n  }\n\n  _onTimeout() {\n    callTimeout(this\x2C this);\n  }\n\n  ref() {\n    if (this[kSocket]) {\n      this[kSocket].ref();\n    }\n  }\n\n  unref() {\n    if (this[kSocket]) {\n      this[kSocket].unref();\n    }\n  }\n}\n\n// ServerHttp2Session instances should never have to wait for the socket\n// to connect as they are always created after the socket has already been\n// established.\nclass ServerHttp2Session extends Http2Session {\n  constructor(options\x2C socket\x2C server) {\n    super(NGHTTP2_SESSION_SERVER\x2C options\x2C socket);\n    this[kServer] = server;\n    // This is a bit inaccurate because it does not reflect changes to\n    // number of listeners made after the session was created. This should\n    // not be an issue in practice. Additionally\x2C the 'priority' event on\n    // server instances (or any other object) is fully undocumented.\n    this[kNativeFields][kSessionPriorityListenerCount] =\n      server ? server.listenerCount('priority') : 0;\n  }\n\n  get server() {\n    return this[kServer];\n  }\n\n  // Submits an altsvc frame to be sent to the client. `stream` is a\n  // numeric Stream ID. origin is a URL string that will be used to get\n  // the origin. alt is a string containing the altsvc details. No fancy\n  // API is provided for that.\n  altsvc(alt\x2C originOrStream) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    let stream = 0;\n    let origin;\n\n    if (typeof originOrStream === 'string') {\n      origin = getURLOrigin(originOrStream);\n      if (origin === 'null')\n        throw new ERR_HTTP2_ALTSVC_INVALID_ORIGIN();\n    } else if (typeof originOrStream === 'number') {\n      if (originOrStream >>> 0 !== originOrStream || originOrStream === 0) {\n        throw new ERR_OUT_OF_RANGE('originOrStream'\x2C\n                                   `> 0 && < ${2 ** 32}`\x2C originOrStream);\n      }\n      stream = originOrStream;\n    } else if (originOrStream !== undefined) {\n      // Allow origin to be passed a URL or object with origin property\n      if (originOrStream !== null && typeof originOrStream === 'object')\n        origin = originOrStream.origin;\n      // Note: if originOrStream is an object with an origin property other\n      // than a URL\x2C then it is possible that origin will be malformed.\n      // We do not verify that here. Users who go that route need to\n      // ensure they are doing the right thing or the payload data will\n      // be invalid.\n      if (typeof origin !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE('originOrStream'\x2C\n                                       ['string'\x2C 'number'\x2C 'URL'\x2C 'object']\x2C\n                                       originOrStream);\n      } else if (origin === 'null' || origin.length === 0) {\n        throw new ERR_HTTP2_ALTSVC_INVALID_ORIGIN();\n      }\n    }\n\n    validateString(alt\x2C 'alt');\n    if (!kQuotedString.test(alt))\n      throw new ERR_INVALID_CHAR('alt');\n\n    // Max length permitted for ALTSVC\n    if ((alt.length + (origin !== undefined ? origin.length : 0)) > kMaxALTSVC)\n      throw new ERR_HTTP2_ALTSVC_LENGTH();\n\n    this[kHandle].altsvc(stream\x2C origin || ''\x2C alt);\n  }\n\n  // Submits an origin frame to be sent.\n  origin(...origins) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    if (origins.length === 0)\n      return;\n\n    let arr = '';\n    let len = 0;\n    const count = origins.length;\n    for (let i = 0; i < count; i++) {\n      let origin = origins[i];\n      if (typeof origin === 'string') {\n        origin = getURLOrigin(origin);\n      } else if (origin != null && typeof origin === 'object') {\n        origin = origin.origin;\n      }\n      validateString(origin\x2C 'origin');\n      if (origin === 'null')\n        throw new ERR_HTTP2_INVALID_ORIGIN();\n\n      arr += `${origin}\\0`;\n      len += origin.length;\n    }\n\n    if (len > kMaxALTSVC)\n      throw new ERR_HTTP2_ORIGIN_LENGTH();\n\n    this[kHandle].origin(arr\x2C count);\n  }\n\n}\n\n// ClientHttp2Session instances have to wait for the socket to connect after\n// they have been created. Various operations such as request() may be used\x2C\n// but the actual protocol communication will only occur after the socket\n// has been connected.\nclass ClientHttp2Session extends Http2Session {\n  constructor(options\x2C socket) {\n    super(NGHTTP2_SESSION_CLIENT\x2C options\x2C socket);\n    this[kPendingRequestCalls] = null;\n  }\n\n  // Submits a new HTTP2 request to the connected peer. Returns the\n  // associated Http2Stream instance.\n  request(headers\x2C options) {\n    debugSessionObj(this\x2C 'initiating request');\n\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_SESSION();\n\n    if (this.closed)\n      throw new ERR_HTTP2_GOAWAY_SESSION();\n\n    this[kUpdateTimer]();\n\n    if (headers !== null && headers !== undefined) {\n      const keys = ObjectKeys(headers);\n      for (let i = 0; i < keys.length; i++) {\n        const header = keys[i];\n        if (header[0] === ':') {\n          assertValidPseudoHeader(header);\n        } else if (header && !checkIsHttpToken(header))\n          this.destroy(new ERR_INVALID_HTTP_TOKEN('Header name'\x2C header));\n      }\n    }\n\n    assertIsObject(headers\x2C 'headers');\n    assertIsObject(options\x2C 'options');\n\n    headers = ObjectAssign({ __proto__: null }\x2C headers);\n    options = { ...options };\n\n    if (headers[HTTP2_HEADER_METHOD] === undefined)\n      headers[HTTP2_HEADER_METHOD] = HTTP2_METHOD_GET;\n\n    const connect = headers[HTTP2_HEADER_METHOD] === HTTP2_METHOD_CONNECT;\n\n    if (!connect || headers[HTTP2_HEADER_PROTOCOL] !== undefined) {\n      if (getAuthority(headers) === undefined)\n        headers[HTTP2_HEADER_AUTHORITY] = this[kAuthority];\n      if (headers[HTTP2_HEADER_SCHEME] === undefined)\n        headers[HTTP2_HEADER_SCHEME] = this[kProtocol].slice(0\x2C -1);\n      if (headers[HTTP2_HEADER_PATH] === undefined)\n        headers[HTTP2_HEADER_PATH] = '/';\n    } else {\n      if (headers[HTTP2_HEADER_AUTHORITY] === undefined)\n        throw new ERR_HTTP2_CONNECT_AUTHORITY();\n      if (headers[HTTP2_HEADER_SCHEME] !== undefined)\n        throw new ERR_HTTP2_CONNECT_SCHEME();\n      if (headers[HTTP2_HEADER_PATH] !== undefined)\n        throw new ERR_HTTP2_CONNECT_PATH();\n    }\n\n    setAndValidatePriorityOptions(options);\n\n    if (options.endStream === undefined) {\n      // For some methods\x2C we know that a payload is meaningless\x2C so end the\n      // stream by default if the user has not specifically indicated a\n      // preference.\n      options.endStream = isPayloadMeaningless(headers[HTTP2_HEADER_METHOD]);\n    } else {\n      validateBoolean(options.endStream\x2C 'options.endStream');\n    }\n\n    const headersList = mapToHeaders(headers);\n\n    // eslint-disable-next-line no-use-before-define\n    const stream = new ClientHttp2Stream(this\x2C undefined\x2C undefined\x2C {});\n    stream[kSentHeaders] = headers;\n    stream[kOrigin] = `${headers[HTTP2_HEADER_SCHEME]}://` +\n                      `${getAuthority(headers)}`;\n    const reqAsync = new AsyncResource('PendingRequest');\n    stream[kRequestAsyncResource] = reqAsync;\n\n    // Close the writable side of the stream if options.endStream is set.\n    if (options.endStream)\n      stream.end();\n\n    if (options.waitForTrailers)\n      stream[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;\n\n    const { signal } = options;\n    if (signal) {\n      validateAbortSignal(signal\x2C 'options.signal');\n      const aborter = () => {\n        stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\n      };\n      if (signal.aborted) {\n        aborter();\n      } else {\n        const disposable = addAbortListener(signal\x2C aborter);\n        stream.once('close'\x2C disposable[SymbolDispose]);\n      }\n    }\n\n    const onConnect = reqAsync.bind(requestOnConnect.bind(stream\x2C headersList\x2C options));\n    if (this.connecting) {\n      if (this[kPendingRequestCalls] !== null) {\n        this[kPendingRequestCalls].push(onConnect);\n      } else {\n        this[kPendingRequestCalls] = [onConnect];\n        this.once('connect'\x2C () => {\n          this[kPendingRequestCalls].forEach((f) => f());\n          this[kPendingRequestCalls] = null;\n        });\n      }\n    } else {\n      onConnect();\n    }\n    return stream;\n  }\n}\n\nfunction trackWriteState(stream\x2C bytes) {\n  const session = stream[kSession];\n  stream[kState].writeQueueSize += bytes;\n  session[kState].writeQueueSize += bytes;\n  session[kHandle].chunksSentSinceLastWrite = 0;\n}\n\nfunction streamOnResume() {\n  if (!this.destroyed)\n    this[kHandle].readStart();\n}\n\nfunction streamOnPause() {\n  if (!this.destroyed && !this.pending)\n    this[kHandle].readStop();\n}\n\nfunction afterShutdown(status) {\n  const stream = this.handle[kOwner];\n  if (stream) {\n    stream.on('finish'\x2C () => {\n      stream[kMaybeDestroy]();\n    });\n  }\n  // Currently this status value is unused\n  this.callback();\n}\n\nfunction shutdownWritable(callback) {\n  const handle = this[kHandle];\n  if (!handle) return callback();\n  const state = this[kState];\n  if (state.shutdownWritableCalled) {\n    debugStreamObj(this\x2C 'shutdownWritable() already called');\n    return callback();\n  }\n  state.shutdownWritableCalled = true;\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.callback = callback;\n  req.handle = handle;\n  const err = handle.shutdown(req);\n  if (err === 1)  // synchronous finish\n    return ReflectApply(afterShutdown\x2C req\x2C [0]);\n}\n\nfunction finishSendTrailers(stream\x2C headersList) {\n  // The stream might be destroyed and in that case\n  // there is nothing to do.\n  // This can happen because finishSendTrailers is\n  // scheduled via setImmediate.\n  if (stream.destroyed) {\n    return;\n  }\n\n  stream[kState].flags &= ~STREAM_FLAGS_HAS_TRAILERS;\n\n  const ret = stream[kHandle].trailers(headersList);\n  if (ret < 0)\n    stream.destroy(new NghttpError(ret));\n  else\n    stream[kMaybeDestroy]();\n}\n\nconst kNoRstStream = 0;\nconst kSubmitRstStream = 1;\nconst kForceRstStream = 2;\n\nfunction closeStream(stream\x2C code\x2C rstStreamStatus = kSubmitRstStream) {\n  const state = stream[kState];\n  state.flags |= STREAM_FLAGS_CLOSED;\n  state.rstCode = code;\n\n  // Clear timeout and remove timeout listeners\n  stream.setTimeout(0);\n  stream.removeAllListeners('timeout');\n\n  const { ending } = stream._writableState;\n\n  if (!ending) {\n    // If the writable side of the Http2Stream is still open\x2C emit the\n    // 'aborted' event and set the aborted flag.\n    if (!stream.aborted) {\n      state.flags |= STREAM_FLAGS_ABORTED;\n      stream.emit('aborted');\n    }\n\n    // Close the writable side.\n    stream.end();\n  }\n\n  if (rstStreamStatus !== kNoRstStream) {\n    const finishFn = finishCloseStream.bind(stream\x2C code);\n    if (!ending || stream.writableFinished || code !== NGHTTP2_NO_ERROR ||\n        rstStreamStatus === kForceRstStream)\n      finishFn();\n    else\n      stream.once('finish'\x2C finishFn);\n  }\n}\n\nfunction finishCloseStream(code) {\n  const rstStreamFn = submitRstStream.bind(this\x2C code);\n  // If the handle has not yet been assigned\x2C queue up the request to\n  // ensure that the RST_STREAM frame is sent after the stream ID has\n  // been determined.\n  if (this.pending) {\n    this.push(null);\n    this.once('ready'\x2C rstStreamFn);\n    return;\n  }\n  rstStreamFn();\n}\n\n// An Http2Stream is a Duplex stream that is backed by a\n// node::http2::Http2Stream handle implementing StreamBase.\nclass Http2Stream extends Duplex {\n  constructor(session\x2C options) {\n    options.allowHalfOpen = true;\n    options.decodeStrings = false;\n    options.autoDestroy = false;\n    super(options);\n    this[async_id_symbol] = -1;\n\n    // Corking the stream automatically allows writes to happen\n    // but ensures that those are buffered until the handle has\n    // been assigned.\n    this.cork();\n    this[kSession] = session;\n    session[kState].pendingStreams.add(this);\n\n    // Allow our logic for determining whether any reads have happened to\n    // work in all situations. This is similar to what we do in _http_incoming.\n    this._readableState.readingMore = true;\n\n    this[kTimeout] = null;\n\n    this[kState] = {\n      didRead: false\x2C\n      flags: STREAM_FLAGS_PENDING\x2C\n      rstCode: NGHTTP2_NO_ERROR\x2C\n      writeQueueSize: 0\x2C\n      trailersReady: false\x2C\n      endAfterHeaders: false\x2C\n    };\n\n    // Fields used by the compat API to avoid megamorphisms.\n    this[kRequest] = null;\n    this[kProxySocket] = null;\n\n    this.on('pause'\x2C streamOnPause);\n\n    this.on('newListener'\x2C streamListenerAdded);\n    this.on('removeListener'\x2C streamListenerRemoved);\n  }\n\n  [kUpdateTimer]() {\n    if (this.destroyed)\n      return;\n    if (this[kTimeout])\n      this[kTimeout].refresh();\n    if (this[kSession])\n      this[kSession][kUpdateTimer]();\n  }\n\n  [kInit](id\x2C handle) {\n    const state = this[kState];\n    state.flags |= STREAM_FLAGS_READY;\n\n    const session = this[kSession];\n    session[kState].pendingStreams.delete(this);\n    session[kState].streams.set(id\x2C this);\n\n    this[kID] = id;\n    this[async_id_symbol] = handle.getAsyncId();\n    handle[kOwner] = this;\n    this[kHandle] = handle;\n    handle.onread = onStreamRead;\n    this.uncork();\n    this.emit('ready');\n  }\n\n  [kInspect](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const obj = {\n      id: this[kID] || '<pending>'\x2C\n      closed: this.closed\x2C\n      destroyed: this.destroyed\x2C\n      state: this.state\x2C\n      readableState: this._readableState\x2C\n      writableState: this._writableState\x2C\n    };\n    return `Http2Stream ${format(obj)}`;\n  }\n\n  get bufferSize() {\n    // `bufferSize` properties of `net.Socket` are `undefined` when\n    // their `_handle` are falsy. Here we avoid the behavior.\n    return this[kState].writeQueueSize + this.writableLength;\n  }\n\n  get endAfterHeaders() {\n    return this[kState].endAfterHeaders;\n  }\n\n  get sentHeaders() {\n    return this[kSentHeaders];\n  }\n\n  get sentTrailers() {\n    return this[kSentTrailers];\n  }\n\n  get sentInfoHeaders() {\n    return this[kInfoHeaders];\n  }\n\n  get pending() {\n    return this[kID] === undefined;\n  }\n\n  // The id of the Http2Stream\x2C will be undefined if the socket is not\n  // yet connected.\n  get id() {\n    return this[kID];\n  }\n\n  // The Http2Session that owns this Http2Stream.\n  get session() {\n    return this[kSession];\n  }\n\n  _onTimeout() {\n    callTimeout(this\x2C this[kSession]);\n  }\n\n  // True if the HEADERS frame has been sent\n  get headersSent() {\n    return !!(this[kState].flags & STREAM_FLAGS_HEADERS_SENT);\n  }\n\n  // True if the Http2Stream was aborted abnormally.\n  get aborted() {\n    return !!(this[kState].flags & STREAM_FLAGS_ABORTED);\n  }\n\n  // True if dealing with a HEAD request\n  get headRequest() {\n    return !!(this[kState].flags & STREAM_FLAGS_HEAD_REQUEST);\n  }\n\n  // The error code reported when this Http2Stream was closed.\n  get rstCode() {\n    return this[kState].rstCode;\n  }\n\n  // State information for the Http2Stream\n  get state() {\n    const id = this[kID];\n    if (this.destroyed || id === undefined)\n      return {};\n    return getStreamState(this[kHandle]\x2C id);\n  }\n\n  [kProceed]() {\n    assert.fail('Implementers MUST implement this. Please report this as a ' +\n                'bug in Node.js');\n  }\n\n  [kAfterAsyncWrite]({ bytes }) {\n    this[kState].writeQueueSize -= bytes;\n\n    if (this.session !== undefined)\n      this.session[kState].writeQueueSize -= bytes;\n  }\n\n  [kWriteGeneric](writev\x2C data\x2C encoding\x2C cb) {\n    // When the Http2Stream is first created\x2C it is corked until the\n    // handle and the stream ID is assigned. However\x2C if the user calls\n    // uncork() before that happens\x2C the Duplex will attempt to pass\n    // writes through. Those need to be queued up here.\n    if (this.pending) {\n      this.once(\n        'ready'\x2C\n        this[kWriteGeneric].bind(this\x2C writev\x2C data\x2C encoding\x2C cb)\x2C\n      );\n      return;\n    }\n\n    // If the stream has been destroyed\x2C there's nothing else we can do\n    // because the handle has been destroyed. This should only be an\n    // issue if a write occurs before the 'ready' event in the case where\n    // the duplex is uncorked before the stream is ready to go. In that\n    // case\x2C drop the data on the floor. An error should have already been\n    // emitted.\n    if (this.destroyed)\n      return;\n\n    this[kUpdateTimer]();\n    if (!this.headersSent)\n      this[kProceed]();\n\n    let req;\n\n    let waitingForWriteCallback = true;\n    let waitingForEndCheck = true;\n    let writeCallbackErr;\n    let endCheckCallbackErr;\n    const done = () => {\n      if (waitingForEndCheck || waitingForWriteCallback) return;\n      const err = aggregateTwoErrors(endCheckCallbackErr\x2C writeCallbackErr);\n      // writeGeneric does not destroy on error and\n      // we cannot enable autoDestroy\x2C\n      // so make sure to destroy on error.\n      if (err) {\n        this.destroy(err);\n      }\n      cb(err);\n    };\n    const writeCallback = (err) => {\n      waitingForWriteCallback = false;\n      writeCallbackErr = err;\n      done();\n    };\n    const endCheckCallback = (err) => {\n      waitingForEndCheck = false;\n      endCheckCallbackErr = err;\n      done();\n    };\n    // Shutdown write stream right after last chunk is sent\n    // so final DATA frame can include END_STREAM flag\n    process.nextTick(() => {\n      if (writeCallbackErr ||\n        !this._writableState.ending ||\n        this._writableState.buffered.length ||\n        (this[kState].flags & STREAM_FLAGS_HAS_TRAILERS))\n        return endCheckCallback();\n      debugStreamObj(this\x2C 'shutting down writable on last write');\n      shutdownWritable.call(this\x2C endCheckCallback);\n    });\n\n    if (writev)\n      req = writevGeneric(this\x2C data\x2C writeCallback);\n    else\n      req = writeGeneric(this\x2C data\x2C encoding\x2C writeCallback);\n\n    trackWriteState(this\x2C req.bytes);\n  }\n\n  _write(data\x2C encoding\x2C cb) {\n    this[kWriteGeneric](false\x2C data\x2C encoding\x2C cb);\n  }\n\n  _writev(data\x2C cb) {\n    this[kWriteGeneric](true\x2C data\x2C ''\x2C cb);\n  }\n\n  _final(cb) {\n    if (this.pending) {\n      this.once('ready'\x2C () => this._final(cb));\n      return;\n    }\n    debugStreamObj(this\x2C 'shutting down writable on _final');\n    ReflectApply(shutdownWritable\x2C this\x2C [cb]);\n  }\n\n  _read(nread) {\n    if (this.destroyed) {\n      this.push(null);\n      return;\n    }\n    if (!this[kState].didRead) {\n      this._readableState.readingMore = false;\n      this[kState].didRead = true;\n    }\n    if (!this.pending) {\n      streamOnResume.call(this);\n    } else {\n      this.once('ready'\x2C streamOnResume);\n    }\n  }\n\n  priority(options) {\n    if (this.destroyed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n\n    assertIsObject(options\x2C 'options');\n    options = { ...options };\n    setAndValidatePriorityOptions(options);\n\n    const priorityFn = submitPriority.bind(this\x2C options);\n\n    // If the handle has not yet been assigned\x2C queue up the priority\n    // frame to be sent as soon as the ready event is emitted.\n    if (this.pending) {\n      this.once('ready'\x2C priorityFn);\n      return;\n    }\n    priorityFn();\n  }\n\n  sendTrailers(headers) {\n    if (this.destroyed || this.closed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n    if (this[kSentTrailers])\n      throw new ERR_HTTP2_TRAILERS_ALREADY_SENT();\n    if (!this[kState].trailersReady)\n      throw new ERR_HTTP2_TRAILERS_NOT_READY();\n\n    assertIsObject(headers\x2C 'headers');\n    headers = ObjectAssign({ __proto__: null }\x2C headers);\n\n    debugStreamObj(this\x2C 'sending trailers');\n\n    this[kUpdateTimer]();\n\n    const headersList = mapToHeaders(headers\x2C assertValidPseudoHeaderTrailer);\n    this[kSentTrailers] = headers;\n\n    // Send the trailers in setImmediate so we don't do it on nghttp2 stack.\n    setImmediate(finishSendTrailers\x2C this\x2C headersList);\n  }\n\n  get closed() {\n    return !!(this[kState].flags & STREAM_FLAGS_CLOSED);\n  }\n\n  // Close initiates closing the Http2Stream instance by sending an RST_STREAM\n  // frame to the connected peer. The readable and writable sides of the\n  // Http2Stream duplex are closed and the timeout timer is cleared. If\n  // a callback is passed\x2C it is registered to listen for the 'close' event.\n  //\n  // If the handle and stream ID have not been assigned yet\x2C the close\n  // will be queued up to wait for the ready event. As soon as the stream ID\n  // is determined\x2C the close will proceed.\n  //\n  // Submitting the RST_STREAM frame to the underlying handle will cause\n  // the Http2Stream to be closed and ultimately destroyed. After calling\n  // close\x2C it is still possible to queue up PRIORITY and RST_STREAM frames\x2C\n  // but no DATA and HEADERS frames may be sent.\n  close(code = NGHTTP2_NO_ERROR\x2C callback) {\n    validateInteger(code\x2C 'code'\x2C 0\x2C kMaxInt);\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n    }\n\n    if (this.closed)\n      return;\n\n    if (callback !== undefined)\n      this.once('close'\x2C callback);\n\n    closeStream(this\x2C code);\n  }\n\n  // Called by this.destroy().\n  // * Will submit an RST stream to shutdown the stream if necessary.\n  //   This will cause the internal resources to be released.\n  // * Then cleans up the resources on the js side\n  _destroy(err\x2C callback) {\n    const session = this[kSession];\n    const handle = this[kHandle];\n    const id = this[kID];\n\n    debugStream(this[kID] || 'pending'\x2C session[kType]\x2C 'destroying stream');\n\n    const state = this[kState];\n    const sessionState = session[kState];\n    const sessionCode = sessionState.goawayCode || sessionState.destroyCode;\n\n    // If a stream has already closed successfully\x2C there is no error\n    // to report from this stream\x2C even if the session has errored.\n    // This can happen if the stream was already in process of destroying\n    // after a successful close\x2C but the session had a error between\n    // this stream's close and destroy operations.\n    // Previously\x2C this always overrode a successful close operation code\n    // NGHTTP2_NO_ERROR (0) with sessionCode because the use of the || operator.\n    let code = this.closed ? this.rstCode : sessionCode;\n    if (err != null) {\n      if (sessionCode) {\n        code = sessionCode;\n      } else if (err instanceof AbortError) {\n        // Enables using AbortController to cancel requests with RST code 8.\n        code = NGHTTP2_CANCEL;\n      } else {\n        code = NGHTTP2_INTERNAL_ERROR;\n      }\n    }\n    const hasHandle = handle !== undefined;\n\n    if (!this.closed)\n      closeStream(this\x2C code\x2C hasHandle ? kForceRstStream : kNoRstStream);\n    this.push(null);\n\n    if (hasHandle) {\n      handle.destroy();\n      sessionState.streams.delete(id);\n    } else {\n      sessionState.pendingStreams.delete(this);\n    }\n\n    // Adjust the write queue size for accounting\n    sessionState.writeQueueSize -= state.writeQueueSize;\n    state.writeQueueSize = 0;\n\n    // RST code 8 not emitted as an error as its used by clients to signify\n    // abort and is already covered by aborted event\x2C also allows more\n    // seamless compatibility with http1\n    if (err == null && code !== NGHTTP2_NO_ERROR && code !== NGHTTP2_CANCEL)\n      err = new ERR_HTTP2_STREAM_ERROR(nameForErrorCode[code] || code);\n\n    this[kSession] = undefined;\n    this[kHandle] = undefined;\n\n    // This notifies the session that this stream has been destroyed and\n    // gives the session the opportunity to clean itself up. The session\n    // will destroy if it has been closed and there are no other open or\n    // pending streams. Delay with setImmediate so we don't do it on the\n    // nghttp2 stack.\n    setImmediate(() => {\n      session[kMaybeDestroy]();\n    });\n    callback(err);\n  }\n  // The Http2Stream can be destroyed if it has closed and if the readable\n  // side has received the final chunk.\n  [kMaybeDestroy](code = NGHTTP2_NO_ERROR) {\n    if (code !== NGHTTP2_NO_ERROR) {\n      this.destroy();\n      return;\n    }\n\n    if (this.writableFinished) {\n      if (!this.readable && this.closed) {\n        this.destroy();\n        return;\n      }\n\n      // We've submitted a response from our server session\x2C have not attempted\n      // to process any incoming data\x2C and have no trailers. This means we can\n      // attempt to gracefully close the session.\n      const state = this[kState];\n      if (this.headersSent &&\n          this[kSession] &&\n          this[kSession][kType] === NGHTTP2_SESSION_SERVER &&\n          !(state.flags & STREAM_FLAGS_HAS_TRAILERS) &&\n          !state.didRead &&\n          this.readableFlowing === null) {\n        // By using setImmediate we allow pushStreams to make it through\n        // before the stream is officially closed. This prevents a bug\n        // in most browsers where those pushStreams would be rejected.\n        setImmediate(callStreamClose\x2C this);\n      }\n    }\n  }\n}\n\nfunction callTimeout(self\x2C session) {\n  // If the session is destroyed\x2C this should never actually be invoked\x2C\n  // but just in case...\n  if (self.destroyed)\n    return;\n  // This checks whether a write is currently in progress and also whether\n  // that write is actually sending data across the write. The kHandle\n  // stored `chunksSentSinceLastWrite` is only updated when a timeout event\n  // happens\x2C meaning that if a write is ongoing it should never equal the\n  // newly fetched\x2C updated value.\n  if (self[kState].writeQueueSize > 0) {\n    const handle = session[kHandle];\n    const chunksSentSinceLastWrite = handle !== undefined ?\n      handle.chunksSentSinceLastWrite : null;\n    if (chunksSentSinceLastWrite !== null &&\n      chunksSentSinceLastWrite !== handle.updateChunksSent()) {\n      self[kUpdateTimer]();\n      return;\n    }\n  }\n\n  self.emit('timeout');\n}\n\nfunction callStreamClose(stream) {\n  stream.close();\n}\n\nfunction processHeaders(oldHeaders\x2C options) {\n  assertIsObject(oldHeaders\x2C 'headers');\n  const headers = { __proto__: null };\n\n  if (oldHeaders !== null && oldHeaders !== undefined) {\n    // This loop is here for performance reason. Do not change.\n    for (const key in oldHeaders) {\n      if (ObjectHasOwn(oldHeaders\x2C key)) {\n        headers[key] = oldHeaders[key];\n      }\n    }\n    headers[kSensitiveHeaders] = oldHeaders[kSensitiveHeaders];\n  }\n\n  const statusCode =\n    headers[HTTP2_HEADER_STATUS] =\n      headers[HTTP2_HEADER_STATUS] | 0 || HTTP_STATUS_OK;\n\n  if (options.sendDate == null || options.sendDate) {\n    headers[HTTP2_HEADER_DATE] ??= utcDate();\n  }\n\n  // This is intentionally stricter than the HTTP/1 implementation\x2C which\n  // allows values between 100 and 999 (inclusive) in order to allow for\n  // backwards compatibility with non-spec compliant code. With HTTP/2\x2C\n  // we have the opportunity to start fresh with stricter spec compliance.\n  // This will have an impact on the compatibility layer for anyone using\n  // non-standard\x2C non-compliant status codes.\n  if (statusCode < 200 || statusCode > 599)\n    throw new ERR_HTTP2_STATUS_INVALID(headers[HTTP2_HEADER_STATUS]);\n\n  const neverIndex = headers[kSensitiveHeaders];\n  if (neverIndex !== undefined && !ArrayIsArray(neverIndex))\n    throw new ERR_INVALID_ARG_VALUE('headers[http2.neverIndex]'\x2C neverIndex);\n\n  return headers;\n}\n\n\nfunction onFileUnpipe() {\n  const stream = this.sink[kOwner];\n  if (stream.ownsFd)\n    this.source.close().catch(stream.destroy.bind(stream));\n  else\n    this.source.releaseFD();\n}\n\n// This is only called once the pipe has returned back control\x2C so\n// it only has to handle errors and End-of-File.\nfunction onPipedFileHandleRead() {\n  const err = streamBaseState[kReadBytesOrError];\n  if (err < 0 && err !== UV_EOF) {\n    this.stream.close(NGHTTP2_INTERNAL_ERROR);\n  }\n}\n\nfunction processRespondWithFD(self\x2C fd\x2C headers\x2C offset = 0\x2C length = -1\x2C\n                              streamOptions = 0) {\n  const state = self[kState];\n  state.flags |= STREAM_FLAGS_HEADERS_SENT;\n\n  let headersList;\n  try {\n    headersList = mapToHeaders(headers\x2C assertValidPseudoHeaderResponse);\n  } catch (err) {\n    self.destroy(err);\n    return;\n  }\n  self[kSentHeaders] = headers;\n\n  // Close the writable side of the stream\x2C but only as far as the writable\n  // stream implementation is concerned.\n  self._final = null;\n  self.end();\n\n  const ret = self[kHandle].respond(headersList\x2C streamOptions);\n\n  if (ret < 0) {\n    self.destroy(new NghttpError(ret));\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C startFilePipe\x2C\n                             self\x2C fd\x2C offset\x2C length);\n}\n\nfunction startFilePipe(self\x2C fd\x2C offset\x2C length) {\n  const handle = new FileHandle(fd\x2C offset\x2C length);\n  handle.onread = onPipedFileHandleRead;\n  handle.stream = self;\n\n  const pipe = new StreamPipe(handle\x2C self[kHandle]);\n  pipe.onunpipe = onFileUnpipe;\n  pipe.start();\n\n  // Exact length of the file doesn't matter here\x2C since the\n  // stream is closing anyway - just use 1 to signify that\n  // a write does exist\n  trackWriteState(self\x2C 1);\n}\n\nfunction doSendFD(session\x2C options\x2C fd\x2C headers\x2C streamOptions\x2C err\x2C stat) {\n  if (err) {\n    this.destroy(err);\n    return;\n  }\n\n  // This can happen if the stream is destroyed or closed while we are waiting\n  // for the file descriptor to be opened or the stat call to be completed.\n  // In either case\x2C we do not want to continue because the we are shutting\n  // down and should not attempt to send any data.\n  if (this.destroyed || this.closed) {\n    this.destroy(new ERR_HTTP2_INVALID_STREAM());\n    return;\n  }\n\n  const statOptions = {\n    offset: options.offset !== undefined ? options.offset : 0\x2C\n    length: options.length !== undefined ? options.length : -1\x2C\n  };\n\n  // options.statCheck is a user-provided function that can be used to\n  // verify stat values\x2C override or set headers\x2C or even cancel the\n  // response operation. If statCheck explicitly returns false\x2C the\n  // response is canceled. The user code may also send a separate type\n  // of response so check again for the HEADERS_SENT flag\n  if ((typeof options.statCheck === 'function' &&\n       ReflectApply(options.statCheck\x2C this\x2C\n                    [stat\x2C headers\x2C statOptions]) === false) ||\n       (this[kState].flags & STREAM_FLAGS_HEADERS_SENT)) {\n    return;\n  }\n\n  processRespondWithFD(this\x2C fd\x2C headers\x2C\n                       statOptions.offset | 0\x2C\n                       statOptions.length | 0\x2C\n                       streamOptions);\n}\n\nfunction doSendFileFD(session\x2C options\x2C fd\x2C headers\x2C streamOptions\x2C err\x2C stat) {\n  const onError = options.onError;\n\n  if (err) {\n    tryClose(fd);\n    if (onError)\n      onError(err);\n    else\n      this.destroy(err);\n    return;\n  }\n\n  if (!stat.isFile()) {\n    const isDirectory = stat.isDirectory();\n    if (options.offset !== undefined || options.offset > 0 ||\n        options.length !== undefined || options.length >= 0 ||\n        isDirectory) {\n      const err = isDirectory ?\n        new ERR_HTTP2_SEND_FILE() : new ERR_HTTP2_SEND_FILE_NOSEEK();\n      tryClose(fd);\n      if (onError)\n        onError(err);\n      else\n        this.destroy(err);\n      return;\n    }\n\n    options.offset = -1;\n    options.length = -1;\n  }\n\n  if (this.destroyed || this.closed) {\n    tryClose(fd);\n    this.destroy(new ERR_HTTP2_INVALID_STREAM());\n    return;\n  }\n\n  const statOptions = {\n    offset: options.offset !== undefined ? options.offset : 0\x2C\n    length: options.length !== undefined ? options.length : -1\x2C\n  };\n\n  // options.statCheck is a user-provided function that can be used to\n  // verify stat values\x2C override or set headers\x2C or even cancel the\n  // response operation. If statCheck explicitly returns false\x2C the\n  // response is canceled. The user code may also send a separate type\n  // of response so check again for the HEADERS_SENT flag\n  if ((typeof options.statCheck === 'function' &&\n       ReflectApply(options.statCheck\x2C this\x2C [stat\x2C headers]) === false) ||\n       (this[kState].flags & STREAM_FLAGS_HEADERS_SENT)) {\n    tryClose(fd);\n    return;\n  }\n\n  if (stat.isFile()) {\n    statOptions.length =\n      statOptions.length < 0 ? stat.size - (+statOptions.offset) :\n        MathMin(stat.size - (+statOptions.offset)\x2C\n                statOptions.length);\n\n    headers[HTTP2_HEADER_CONTENT_LENGTH] = statOptions.length;\n  }\n\n  processRespondWithFD(this\x2C fd\x2C headers\x2C\n                       options.offset | 0\x2C\n                       statOptions.length | 0\x2C\n                       streamOptions);\n}\n\nfunction afterOpen(session\x2C options\x2C headers\x2C streamOptions\x2C err\x2C fd) {\n  const state = this[kState];\n  const onError = options.onError;\n  if (err) {\n    if (onError)\n      onError(err);\n    else\n      this.destroy(err);\n    return;\n  }\n  if (this.destroyed || this.closed) {\n    tryClose(fd);\n    return;\n  }\n  state.fd = fd;\n\n  fs.fstat(fd\x2C\n           doSendFileFD.bind(this\x2C session\x2C options\x2C fd\x2C headers\x2C streamOptions));\n}\n\nclass ServerHttp2Stream extends Http2Stream {\n  constructor(session\x2C handle\x2C id\x2C options\x2C headers) {\n    super(session\x2C options);\n    handle.owner = this;\n    this[kInit](id\x2C handle);\n    this[kProtocol] = headers[HTTP2_HEADER_SCHEME];\n    this[kAuthority] = getAuthority(headers);\n  }\n\n  // True if the remote peer accepts push streams\n  get pushAllowed() {\n    return !this.destroyed &&\n           !this.closed &&\n           !this.session.closed &&\n           !this.session.destroyed &&\n           this[kSession].remoteSettings.enablePush;\n  }\n\n  // Create a push stream\x2C call the given callback with the created\n  // Http2Stream for the push stream.\n  pushStream(headers\x2C options\x2C callback) {\n    if (!this.pushAllowed)\n      throw new ERR_HTTP2_PUSH_DISABLED();\n    if (this[kID] % 2 === 0)\n      throw new ERR_HTTP2_NESTED_PUSH();\n\n    const session = this[kSession];\n\n    debugStreamObj(this\x2C 'initiating push stream');\n\n    this[kUpdateTimer]();\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n\n    validateFunction(callback\x2C 'callback');\n\n    assertIsObject(options\x2C 'options');\n    options = { ...options };\n    options.endStream = !!options.endStream;\n\n    assertIsObject(headers\x2C 'headers');\n    headers = ObjectAssign({ __proto__: null }\x2C headers);\n\n    if (headers[HTTP2_HEADER_METHOD] === undefined)\n      headers[HTTP2_HEADER_METHOD] = HTTP2_METHOD_GET;\n    if (getAuthority(headers) === undefined)\n      headers[HTTP2_HEADER_AUTHORITY] = this[kAuthority];\n    if (headers[HTTP2_HEADER_SCHEME] === undefined)\n      headers[HTTP2_HEADER_SCHEME] = this[kProtocol];\n    if (headers[HTTP2_HEADER_PATH] === undefined)\n      headers[HTTP2_HEADER_PATH] = '/';\n\n    let headRequest = false;\n    if (headers[HTTP2_HEADER_METHOD] === HTTP2_METHOD_HEAD)\n      headRequest = options.endStream = true;\n\n    const headersList = mapToHeaders(headers);\n\n    const streamOptions = options.endStream ? STREAM_OPTION_EMPTY_PAYLOAD : 0;\n\n    const ret = this[kHandle].pushPromise(headersList\x2C streamOptions);\n    let err;\n    if (typeof ret === 'number') {\n      switch (ret) {\n        case NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE:\n          err = new ERR_HTTP2_OUT_OF_STREAMS();\n          break;\n        case NGHTTP2_ERR_STREAM_CLOSED:\n          err = new ERR_HTTP2_INVALID_STREAM();\n          break;\n        default:\n          err = new NghttpError(ret);\n          break;\n      }\n      process.nextTick(callback\x2C err);\n      return;\n    }\n\n    const id = ret.id();\n    const stream = new ServerHttp2Stream(session\x2C ret\x2C id\x2C options\x2C headers);\n    stream[kSentHeaders] = headers;\n\n    stream.push(null);\n\n    if (options.endStream)\n      stream.end();\n\n    if (headRequest)\n      stream[kState].flags |= STREAM_FLAGS_HEAD_REQUEST;\n\n    process.nextTick(callback\x2C null\x2C stream\x2C headers\x2C 0);\n  }\n\n  // Initiate a response on this Http2Stream\n  respond(headers\x2C options) {\n    if (this.destroyed || this.closed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n    if (this.headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    const state = this[kState];\n\n    assertIsObject(options\x2C 'options');\n    options = { ...options };\n\n    debugStreamObj(this\x2C 'initiating response');\n    this[kUpdateTimer]();\n\n    options.endStream = !!options.endStream;\n\n    let streamOptions = 0;\n    if (options.endStream)\n      streamOptions |= STREAM_OPTION_EMPTY_PAYLOAD;\n\n    if (options.waitForTrailers) {\n      streamOptions |= STREAM_OPTION_GET_TRAILERS;\n      state.flags |= STREAM_FLAGS_HAS_TRAILERS;\n    }\n\n    headers = processHeaders(headers\x2C options);\n    const headersList = mapToHeaders(headers\x2C assertValidPseudoHeaderResponse);\n    this[kSentHeaders] = headers;\n\n    state.flags |= STREAM_FLAGS_HEADERS_SENT;\n\n    // Close the writable side if the endStream option is set or status\n    // is one of known codes with no payload\x2C or it's a head request\n    const statusCode = headers[HTTP2_HEADER_STATUS] | 0;\n    if (!!options.endStream ||\n        statusCode === HTTP_STATUS_NO_CONTENT ||\n        statusCode === HTTP_STATUS_RESET_CONTENT ||\n        statusCode === HTTP_STATUS_NOT_MODIFIED ||\n        this.headRequest === true) {\n      options.endStream = true;\n      this.end();\n    }\n\n    const ret = this[kHandle].respond(headersList\x2C streamOptions);\n    if (ret < 0)\n      this.destroy(new NghttpError(ret));\n  }\n\n  // Initiate a response using an open FD. Note that there are fewer\n  // protections with this approach. For one\x2C the fd is not validated by\n  // default. In respondWithFile\x2C the file is checked to make sure it is a\n  // regular file\x2C here the fd is passed directly. If the underlying\n  // mechanism is not able to read from the fd\x2C then the stream will be\n  // reset with an error code.\n  respondWithFD(fd\x2C headers\x2C options) {\n    if (this.destroyed || this.closed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n    if (this.headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    const session = this[kSession];\n\n    assertIsObject(options\x2C 'options');\n    options = { ...options };\n\n    if (options.offset !== undefined && typeof options.offset !== 'number')\n      throw new ERR_INVALID_ARG_VALUE('options.offset'\x2C options.offset);\n\n    if (options.length !== undefined && typeof options.length !== 'number')\n      throw new ERR_INVALID_ARG_VALUE('options.length'\x2C options.length);\n\n    if (options.statCheck !== undefined &&\n        typeof options.statCheck !== 'function') {\n      throw new ERR_INVALID_ARG_VALUE('options.statCheck'\x2C options.statCheck);\n    }\n\n    let streamOptions = 0;\n    if (options.waitForTrailers) {\n      streamOptions |= STREAM_OPTION_GET_TRAILERS;\n      this[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;\n    }\n\n    if (fd instanceof fsPromisesInternal.FileHandle)\n      fd = fd.fd;\n    else if (typeof fd !== 'number')\n      throw new ERR_INVALID_ARG_TYPE('fd'\x2C ['number'\x2C 'FileHandle']\x2C fd);\n\n    debugStreamObj(this\x2C 'initiating response from fd');\n    this[kUpdateTimer]();\n    this.ownsFd = false;\n\n    headers = processHeaders(headers\x2C options);\n    const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;\n    // Payload/DATA frames are not permitted in these cases\n    if (statusCode === HTTP_STATUS_NO_CONTENT ||\n        statusCode === HTTP_STATUS_RESET_CONTENT ||\n        statusCode === HTTP_STATUS_NOT_MODIFIED ||\n        this.headRequest) {\n      throw new ERR_HTTP2_PAYLOAD_FORBIDDEN(statusCode);\n    }\n\n    if (options.statCheck !== undefined) {\n      fs.fstat(fd\x2C\n               doSendFD.bind(this\x2C session\x2C options\x2C fd\x2C headers\x2C streamOptions));\n      return;\n    }\n\n    processRespondWithFD(this\x2C fd\x2C headers\x2C\n                         options.offset\x2C\n                         options.length\x2C\n                         streamOptions);\n  }\n\n  // Initiate a file response on this Http2Stream. The path is passed to\n  // fs.open() to acquire the fd with mode 'r'\x2C then the fd is passed to\n  // fs.fstat(). Assuming fstat is successful\x2C a check is made to ensure\n  // that the file is a regular file\x2C then options.statCheck is called\x2C\n  // giving the user an opportunity to verify the details and set additional\n  // headers. If statCheck returns false\x2C the operation is aborted and no\n  // file details are sent.\n  respondWithFile(path\x2C headers\x2C options) {\n    if (this.destroyed || this.closed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n    if (this.headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    assertIsObject(options\x2C 'options');\n    options = { ...options };\n\n    if (options.offset !== undefined && typeof options.offset !== 'number')\n      throw new ERR_INVALID_ARG_VALUE('options.offset'\x2C options.offset);\n\n    if (options.length !== undefined && typeof options.length !== 'number')\n      throw new ERR_INVALID_ARG_VALUE('options.length'\x2C options.length);\n\n    if (options.statCheck !== undefined &&\n        typeof options.statCheck !== 'function') {\n      throw new ERR_INVALID_ARG_VALUE('options.statCheck'\x2C options.statCheck);\n    }\n\n    let streamOptions = 0;\n    if (options.waitForTrailers) {\n      streamOptions |= STREAM_OPTION_GET_TRAILERS;\n      this[kState].flags |= STREAM_FLAGS_HAS_TRAILERS;\n    }\n\n    const session = this[kSession];\n    debugStreamObj(this\x2C 'initiating response from file');\n    this[kUpdateTimer]();\n    this.ownsFd = true;\n\n    headers = processHeaders(headers\x2C options);\n    const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;\n    // Payload/DATA frames are not permitted in these cases\n    if (statusCode === HTTP_STATUS_NO_CONTENT ||\n        statusCode === HTTP_STATUS_RESET_CONTENT ||\n        statusCode === HTTP_STATUS_NOT_MODIFIED ||\n        this.headRequest) {\n      throw new ERR_HTTP2_PAYLOAD_FORBIDDEN(statusCode);\n    }\n\n    fs.open(path\x2C 'r'\x2C\n            afterOpen.bind(this\x2C session\x2C options\x2C headers\x2C streamOptions));\n  }\n\n  // Sends a block of informational headers. In theory\x2C the HTTP/2 spec\n  // allows sending a HEADER block at any time during a streams lifecycle\x2C\n  // but the HTTP request/response semantics defined in HTTP/2 places limits\n  // such that HEADERS may only be sent *before* or *after* DATA frames.\n  // If the block of headers being sent includes a status code\x2C it MUST be\n  // a 1xx informational code and it MUST be sent before the request/response\n  // headers are sent\x2C or an error will be thrown.\n  additionalHeaders(headers) {\n    if (this.destroyed || this.closed)\n      throw new ERR_HTTP2_INVALID_STREAM();\n    if (this.headersSent)\n      throw new ERR_HTTP2_HEADERS_AFTER_RESPOND();\n\n    assertIsObject(headers\x2C 'headers');\n    headers = ObjectAssign({ __proto__: null }\x2C headers);\n\n    debugStreamObj(this\x2C 'sending additional headers');\n\n    if (headers[HTTP2_HEADER_STATUS] != null) {\n      const statusCode = headers[HTTP2_HEADER_STATUS] |= 0;\n      if (statusCode === HTTP_STATUS_SWITCHING_PROTOCOLS)\n        throw new ERR_HTTP2_STATUS_101();\n      if (statusCode < 100 || statusCode >= 200) {\n        throw new ERR_HTTP2_INVALID_INFO_STATUS(headers[HTTP2_HEADER_STATUS]);\n      }\n    }\n\n    this[kUpdateTimer]();\n\n    const headersList = mapToHeaders(headers\x2C assertValidPseudoHeaderResponse);\n    if (!this[kInfoHeaders])\n      this[kInfoHeaders] = [headers];\n    else\n      this[kInfoHeaders].push(headers);\n\n    const ret = this[kHandle].info(headersList);\n    if (ret < 0)\n      this.destroy(new NghttpError(ret));\n  }\n}\n\nServerHttp2Stream.prototype[kProceed] = ServerHttp2Stream.prototype.respond;\n\nclass ClientHttp2Stream extends Http2Stream {\n  constructor(session\x2C handle\x2C id\x2C options) {\n    super(session\x2C options);\n    this[kState].flags |= STREAM_FLAGS_HEADERS_SENT;\n    if (id !== undefined)\n      this[kInit](id\x2C handle);\n    this.on('headers'\x2C handleHeaderContinue);\n  }\n}\n\nfunction handleHeaderContinue(headers) {\n  if (headers[HTTP2_HEADER_STATUS] === HTTP_STATUS_CONTINUE)\n    this.emit('continue');\n}\n\nconst setTimeoutValue = {\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: true\x2C\n  value: setStreamTimeout\x2C\n};\nObjectDefineProperty(Http2Stream.prototype\x2C 'setTimeout'\x2C setTimeoutValue);\nObjectDefineProperty(Http2Session.prototype\x2C 'setTimeout'\x2C setTimeoutValue);\n\n\n// When the socket emits an error\x2C destroy the associated Http2Session and\n// forward it the same error.\nfunction socketOnError(error) {\n  const session = this[kBoundSession];\n  if (session !== undefined) {\n    // We can ignore ECONNRESET after GOAWAY was received as there's nothing\n    // we can do and the other side is fully within its rights to do so.\n    if (error.code === 'ECONNRESET' && session[kState].goawayCode !== null)\n      return session.destroy();\n    debugSessionObj(this\x2C 'socket error [%s]'\x2C error.message);\n    session.destroy(error);\n  }\n}\n\n// Handles the on('stream') event for a session and forwards\n// it on to the server object.\nfunction sessionOnStream(stream\x2C headers\x2C flags\x2C rawHeaders) {\n  if (this[kServer] !== undefined)\n    this[kServer].emit('stream'\x2C stream\x2C headers\x2C flags\x2C rawHeaders);\n}\n\nfunction sessionOnPriority(stream\x2C parent\x2C weight\x2C exclusive) {\n  if (this[kServer] !== undefined)\n    this[kServer].emit('priority'\x2C stream\x2C parent\x2C weight\x2C exclusive);\n}\n\nfunction sessionOnError(error) {\n  if (this[kServer] !== undefined)\n    this[kServer].emit('sessionError'\x2C error\x2C this);\n}\n\n// When the session times out on the server\x2C try emitting a timeout event.\n// If no handler is registered\x2C destroy the session.\nfunction sessionOnTimeout() {\n  // If destroyed or closed already\x2C do nothing\n  if (this.destroyed || this.closed)\n    return;\n  const server = this[kServer];\n  if (!server.emit('timeout'\x2C this))\n    this.destroy();  // No error code\x2C just things down.\n}\n\nfunction connectionListener(socket) {\n  debug('Http2Session server: received a connection');\n  const options = this[kOptions] || {};\n\n  if (socket.alpnProtocol === false || socket.alpnProtocol === 'http/1.1') {\n    // Fallback to HTTP/1.1\n    if (options.allowHTTP1 === true) {\n      socket.server[kIncomingMessage] = options.Http1IncomingMessage;\n      socket.server[kServerResponse] = options.Http1ServerResponse;\n      return httpConnectionListener.call(this\x2C socket);\n    }\n    // Let event handler deal with the socket\n    debug('Unknown protocol from %s:%s'\x2C\n          socket.remoteAddress\x2C socket.remotePort);\n    if (!this.emit('unknownProtocol'\x2C socket)) {\n      debug('Unknown protocol timeout:  %s'\x2C options.unknownProtocolTimeout);\n      // Install a timeout if the socket was not successfully closed\x2C then\n      // destroy the socket to ensure that the underlying resources are\n      // released.\n      const timer = setTimeout(() => {\n        if (!socket.destroyed) {\n          debug('UnknownProtocol socket timeout\x2C destroy socket');\n          socket.destroy();\n        }\n      }\x2C options.unknownProtocolTimeout);\n      // Un-reference the timer to avoid blocking of application shutdown and\n      // clear the timeout if the socket was successfully closed.\n      timer.unref();\n\n      socket.once('close'\x2C () => clearTimeout(timer));\n\n      // We don't know what to do\x2C so let's just tell the other side what's\n      // going on in a format that they *might* understand.\n      socket.end('HTTP/1.0 403 Forbidden\\r\\n' +\n                 'Content-Type: text/plain\\r\\n\\r\\n' +\n                 'Missing ALPN Protocol\x2C expected `h2` to be available.\\n' +\n                 'If this is a HTTP request: The server was not ' +\n                 'configured with the `allowHTTP1` option or a ' +\n                 'listener for the `unknownProtocol` event.\\n');\n    }\n    return;\n  }\n\n  // Set up the Session\n  const session = new ServerHttp2Session(options\x2C socket\x2C this);\n\n  session.on('stream'\x2C sessionOnStream);\n  session.on('error'\x2C sessionOnError);\n  // Don't count our own internal listener.\n  session.on('priority'\x2C sessionOnPriority);\n  session[kNativeFields][kSessionPriorityListenerCount]--;\n\n  if (this.timeout)\n    session.setTimeout(this.timeout\x2C sessionOnTimeout);\n\n  socket[kServer] = this;\n\n  this.emit('session'\x2C session);\n}\n\nfunction initializeOptions(options) {\n  assertIsObject(options\x2C 'options');\n  options = { ...options };\n  assertIsObject(options.settings\x2C 'options.settings');\n  options.settings = { ...options.settings };\n\n  assertIsArray(options.remoteCustomSettings\x2C 'options.remoteCustomSettings');\n  if (options.remoteCustomSettings) {\n    options.remoteCustomSettings = [ ...options.remoteCustomSettings ];\n    if (options.remoteCustomSettings.length > MAX_ADDITIONAL_SETTINGS)\n      throw new ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS();\n  }\n\n  if (options.maxSessionInvalidFrames !== undefined)\n    validateUint32(options.maxSessionInvalidFrames\x2C 'maxSessionInvalidFrames');\n\n  if (options.maxSessionRejectedStreams !== undefined) {\n    validateUint32(\n      options.maxSessionRejectedStreams\x2C\n      'maxSessionRejectedStreams'\x2C\n    );\n  }\n\n  if (options.unknownProtocolTimeout !== undefined)\n    validateUint32(options.unknownProtocolTimeout\x2C 'unknownProtocolTimeout');\n  else\n    // TODO(danbev): is this a good default value?\n    options.unknownProtocolTimeout = 10000;\n\n\n  // Used only with allowHTTP1\n  options.Http1IncomingMessage ||= http.IncomingMessage;\n  options.Http1ServerResponse ||= http.ServerResponse;\n\n  options.Http2ServerRequest ||= Http2ServerRequest;\n  options.Http2ServerResponse ||= Http2ServerResponse;\n  return options;\n}\n\nfunction initializeTLSOptions(options\x2C servername) {\n  options = initializeOptions(options);\n  options.ALPNProtocols = ['h2'];\n  if (options.allowHTTP1 === true)\n    options.ALPNProtocols.push('http/1.1');\n  if (servername !== undefined && !options.servername)\n    options.servername = servername;\n  return options;\n}\n\nfunction onErrorSecureServerSession(err\x2C socket) {\n  if (!this.emit('clientError'\x2C err\x2C socket))\n    socket.destroy(err);\n}\n\nclass Http2SecureServer extends TLSServer {\n  constructor(options\x2C requestListener) {\n    options = initializeTLSOptions(options);\n    super(options\x2C connectionListener);\n    this[kOptions] = options;\n    this.timeout = 0;\n    this.on('newListener'\x2C setupCompat);\n    if (options.allowHTTP1 === true) {\n      this.headersTimeout = 60_000; // Minimum between 60 seconds or requestTimeout\n      this.requestTimeout = 300_000; // 5 minutes\n      this.connectionsCheckingInterval = 30_000; // 30 seconds\n      this.on('listening'\x2C setupConnectionsTracking);\n    }\n    if (typeof requestListener === 'function')\n      this.on('request'\x2C requestListener);\n    this.on('tlsClientError'\x2C onErrorSecureServerSession);\n  }\n\n  setTimeout(msecs\x2C callback) {\n    this.timeout = msecs;\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.on('timeout'\x2C callback);\n    }\n    return this;\n  }\n\n  updateSettings(settings) {\n    assertIsObject(settings\x2C 'settings');\n    validateSettings(settings);\n    this[kOptions].settings = { ...this[kOptions].settings\x2C ...settings };\n  }\n\n  close() {\n    if (this[kOptions].allowHTTP1 === true) {\n      httpServerPreClose(this);\n    }\n    ReflectApply(TLSServer.prototype.close\x2C this\x2C arguments);\n  }\n\n  closeIdleConnections() {\n    if (this[kOptions].allowHTTP1 === true) {\n      ReflectApply(HttpServer.prototype.closeIdleConnections\x2C this\x2C arguments);\n    }\n  }\n}\n\nclass Http2Server extends NETServer {\n  constructor(options\x2C requestListener) {\n    options = initializeOptions(options);\n    super(options\x2C connectionListener);\n    this[kOptions] = options;\n    this.timeout = 0;\n    this.on('newListener'\x2C setupCompat);\n    if (typeof requestListener === 'function')\n      this.on('request'\x2C requestListener);\n  }\n\n  setTimeout(msecs\x2C callback) {\n    this.timeout = msecs;\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.on('timeout'\x2C callback);\n    }\n    return this;\n  }\n\n  updateSettings(settings) {\n    assertIsObject(settings\x2C 'settings');\n    validateSettings(settings);\n    this[kOptions].settings = { ...this[kOptions].settings\x2C ...settings };\n  }\n\n  async [SymbolAsyncDispose]() {\n    return promisify(super.close).call(this);\n  }\n}\n\nHttp2Server.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C ...args) {\n\n  switch (event) {\n    case 'stream': {\n      // TODO(mcollina): we might want to match this with what we do on\n      // the compat side.\n      const { 0: stream } = args;\n      if (stream.sentHeaders) {\n        stream.destroy(err);\n      } else {\n        stream.respond({ [HTTP2_HEADER_STATUS]: 500 });\n        stream.end();\n      }\n      break;\n    }\n    case 'request': {\n      const { 1: res } = args;\n      if (!res.headersSent && !res.finished) {\n        // Don't leak headers.\n        for (const name of res.getHeaderNames()) {\n          res.removeHeader(name);\n        }\n        res.statusCode = 500;\n        res.end(http.STATUS_CODES[500]);\n      } else {\n        res.destroy();\n      }\n      break;\n    }\n    default:\n      args.unshift(err\x2C event);\n      ReflectApply(net.Server.prototype[EventEmitter.captureRejectionSymbol]\x2C\n                   this\x2C args);\n  }\n};\n\nfunction setupCompat(ev) {\n  if (ev === 'request') {\n    this.removeListener('newListener'\x2C setupCompat);\n    this.on('stream'\x2C onServerStream.bind(this\x2C this[kOptions].Http2ServerRequest\x2C\n                                          this[kOptions].Http2ServerResponse));\n  }\n}\n\nfunction socketOnClose() {\n  const session = this[kBoundSession];\n  if (session !== undefined) {\n    debugSessionObj(session\x2C 'socket closed');\n    const err = session.connecting ? new ERR_SOCKET_CLOSED() : null;\n    const state = session[kState];\n    state.streams.forEach((stream) => stream.close(NGHTTP2_CANCEL));\n    state.pendingStreams.forEach((stream) => stream.close(NGHTTP2_CANCEL));\n    session.close();\n    session[kMaybeDestroy](err);\n  }\n}\n\nfunction connect(authority\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n    options = undefined;\n  }\n\n  assertIsObject(options\x2C 'options');\n  options = { ...options };\n\n  assertIsArray(options.remoteCustomSettings\x2C 'options.remoteCustomSettings');\n  if (options.remoteCustomSettings) {\n    options.remoteCustomSettings = [ ...options.remoteCustomSettings ];\n    if (options.remoteCustomSettings.length > MAX_ADDITIONAL_SETTINGS)\n      throw new ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS();\n  }\n\n  if (typeof authority === 'string')\n    authority = new URL(authority);\n\n  assertIsObject(authority\x2C 'authority'\x2C ['string'\x2C 'Object'\x2C 'URL']);\n\n  const protocol = authority.protocol || options.protocol || 'https:';\n  const port = '' + (authority.port !== '' ?\n    authority.port : (authority.protocol === 'http:' ? 80 : 443));\n  let host = 'localhost';\n\n  if (authority.hostname) {\n    host = authority.hostname;\n\n    if (host[0] === '[')\n      host = host.slice(1\x2C -1);\n  } else if (authority.host) {\n    host = authority.host;\n  }\n\n  let socket;\n  if (typeof options.createConnection === 'function') {\n    socket = options.createConnection(authority\x2C options);\n  } else {\n    switch (protocol) {\n      case 'http:':\n        socket = net.connect({ port\x2C host\x2C ...options });\n        break;\n      case 'https:':\n        socket = tls.connect(port\x2C host\x2C initializeTLSOptions(options\x2C host));\n        break;\n      default:\n        throw new ERR_HTTP2_UNSUPPORTED_PROTOCOL(protocol);\n    }\n  }\n\n  const session = new ClientHttp2Session(options\x2C socket);\n\n  session[kAuthority] = `${options.servername || host}:${port}`;\n  session[kProtocol] = protocol;\n\n  if (typeof listener === 'function')\n    session.once('connect'\x2C listener);\n\n  return session;\n}\n\n// Support util.promisify\nObjectDefineProperty(connect\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  value: (authority\x2C options) => {\n    return new Promise((resolve\x2C reject) => {\n      const server = connect(authority\x2C options\x2C () => {\n        server.removeListener('error'\x2C reject);\n        return resolve(server);\n      });\n\n      server.once('error'\x2C reject);\n    });\n  }\x2C\n});\n\nfunction createSecureServer(options\x2C handler) {\n  return new Http2SecureServer(options\x2C handler);\n}\n\nfunction createServer(options\x2C handler) {\n  if (typeof options === 'function') {\n    handler = options;\n    options = kEmptyObject;\n  }\n  return new Http2Server(options\x2C handler);\n}\n\n// Returns a Base64 encoded settings frame payload from the given\n// object. The value is suitable for passing as the value of the\n// HTTP2-Settings header frame.\nfunction getPackedSettings(settings) {\n  assertIsObject(settings\x2C 'settings');\n  validateSettings(settings);\n  updateSettingsBuffer({ ...settings });\n  return binding.packSettings();\n}\n\nfunction getUnpackedSettings(buf\x2C options = kEmptyObject) {\n  if (!isArrayBufferView(buf) || buf.length === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\n                                   ['Buffer'\x2C 'TypedArray']\x2C buf);\n  }\n  if (buf.length % 6 !== 0)\n    throw new ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH();\n  const settings = {};\n  let offset = 0;\n  while (offset < buf.length) {\n    const id = ReflectApply(readUInt16BE\x2C buf\x2C [offset]);\n    offset += 2;\n    const value = ReflectApply(readUInt32BE\x2C buf\x2C [offset]);\n    switch (id) {\n      case NGHTTP2_SETTINGS_HEADER_TABLE_SIZE:\n        settings.headerTableSize = value;\n        break;\n      case NGHTTP2_SETTINGS_ENABLE_PUSH:\n        settings.enablePush = value !== 0;\n        break;\n      case NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS:\n        settings.maxConcurrentStreams = value;\n        break;\n      case NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE:\n        settings.initialWindowSize = value;\n        break;\n      case NGHTTP2_SETTINGS_MAX_FRAME_SIZE:\n        settings.maxFrameSize = value;\n        break;\n      case NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:\n        settings.maxHeaderListSize = settings.maxHeaderSize = value;\n        break;\n      case NGHTTP2_SETTINGS_ENABLE_CONNECT_PROTOCOL:\n        settings.enableConnectProtocol = value !== 0;\n        break;\n      default:\n        settings.customSettings ||= {};\n        settings.customSettings[id] = value;\n    }\n    offset += 4;\n  }\n\n  if (options != null && options.validate)\n    validateSettings(settings);\n\n  return settings;\n}\n\nfunction performServerHandshake(socket\x2C options = {}) {\n  options = initializeOptions(options);\n  return new ServerHttp2Session(options\x2C socket\x2C undefined);\n}\n\nbinding.setCallbackFunctions(\n  onSessionInternalError\x2C\n  onPriority\x2C\n  onSettings\x2C\n  onPing\x2C\n  onSessionHeaders\x2C\n  onFrameError\x2C\n  onGoawayData\x2C\n  onAltSvc\x2C\n  onOrigin\x2C\n  onStreamTrailers\x2C\n  onStreamClose\x2C\n);\n\n// Exports\nmodule.exports = {\n  connect\x2C\n  constants\x2C\n  createServer\x2C\n  createSecureServer\x2C\n  getDefaultSettings\x2C\n  getPackedSettings\x2C\n  getUnpackedSettings\x2C\n  performServerHandshake\x2C\n  sensitiveHeaders: kSensitiveHeaders\x2C\n  Http2Session\x2C\n  Http2Stream\x2C\n  ServerHttp2Session\x2C\n  Http2ServerRequest\x2C\n  Http2ServerResponse\x2C\n};\n
code-source-info,0x12ea986707b0,135,0,109464,C0O0C4O109464,,
code-creation,JS,9,150708,0x12ea98671688,5435, node:internal/http2/core:1:1,0x31c3bc4d5d8,~
tick,0x192563050,150750,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1924a5ef0,150750,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1925629f4,150750,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-source-info,0x12ea
tick,0x1011eb994,151333,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,151417,0x12ea986730b8,5, node:tls:1:1,0x31c3bc556c0,~
script-source,136,node:tls,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  StringFromCharCode\x2C\n} = primordials;\n\nconst {\n  ERR_TLS_CERT_ALTNAME_FORMAT\x2C\n  ERR_TLS_CERT_ALTNAME_INVALID\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst internalUtil = require('internal/util');\ninternalUtil.assertCrypto();\nconst {\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\n\nconst net = require('net');\nconst { getOptionValue } = require('internal/options');\nconst { getRootCertificates\x2C getSSLCiphers } = internalBinding('crypto');\nconst { Buffer } = require('buffer');\nconst { canonicalizeIP } = internalBinding('cares_wrap');\nconst _tls_common = require('_tls_common');\nconst _tls_wrap = require('_tls_wrap');\nconst { createSecurePair } = require('internal/tls/secure-pair');\n\n// Allow {CLIENT_RENEG_LIMIT} client-initiated session renegotiations\n// every {CLIENT_RENEG_WINDOW} seconds. An error event is emitted if more\n// renegotiations are seen. The settings are applied to all remote client\n// connections.\nexports.CLIENT_RENEG_LIMIT = 3;\nexports.CLIENT_RENEG_WINDOW = 600;\n\nexports.DEFAULT_CIPHERS = getOptionValue('--tls-cipher-list');\n\nexports.DEFAULT_ECDH_CURVE = 'auto';\n\nif (getOptionValue('--tls-min-v1.0'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1';\nelse if (getOptionValue('--tls-min-v1.1'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.1';\nelse if (getOptionValue('--tls-min-v1.2'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\nelse if (getOptionValue('--tls-min-v1.3'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.3';\nelse\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\n\nif (getOptionValue('--tls-max-v1.3'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3';\nelse if (getOptionValue('--tls-max-v1.2'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.2';\nelse\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3'; // Will depend on node version.\n\n\nexports.getCiphers = internalUtil.cachedResult(\n  () => internalUtil.filterDuplicateStrings(getSSLCiphers()\x2C true)\x2C\n);\n\nlet rootCertificates;\n\nfunction cacheRootCertificates() {\n  rootCertificates = ObjectFreeze(getRootCertificates());\n}\n\nObjectDefineProperty(exports\x2C 'rootCertificates'\x2C {\n  __proto__: null\x2C\n  configurable: false\x2C\n  enumerable: true\x2C\n  get: () => {\n    // Out-of-line caching to promote inlining the getter.\n    if (!rootCertificates) cacheRootCertificates();\n    return rootCertificates;\n  }\x2C\n});\n\n// Convert protocols array into valid OpenSSL protocols list\n// ("\\x06spdy/2\\x08http/1.1\\x08http/1.0")\nfunction convertProtocols(protocols) {\n  const lens = new Array(protocols.length);\n  const buff = Buffer.allocUnsafe(protocols.reduce((p\x2C c\x2C i) => {\n    const len = Buffer.byteLength(c);\n    if (len > 255) {\n      throw new ERR_OUT_OF_RANGE('The byte length of the protocol at index ' +\n        `${i} exceeds the maximum length.`\x2C '<= 255'\x2C len\x2C true);\n    }\n    lens[i] = len;\n    return p + 1 + len;\n  }\x2C 0));\n\n  let offset = 0;\n  for (let i = 0\x2C c = protocols.length; i < c; i++) {\n    buff[offset++] = lens[i];\n    buff.write(protocols[i]\x2C offset);\n    offset += lens[i];\n  }\n\n  return buff;\n}\n\nexports.convertALPNProtocols = function convertALPNProtocols(protocols\x2C out) {\n  // If protocols is Array - translate it into buffer\n  if (ArrayIsArray(protocols)) {\n    out.ALPNProtocols = convertProtocols(protocols);\n  } else if (isUint8Array(protocols)) {\n    // Copy new buffer not to be modified by user.\n    out.ALPNProtocols = Buffer.from(protocols);\n  } else if (isArrayBufferView(protocols)) {\n    out.ALPNProtocols = Buffer.from(protocols.buffer.slice(\n      protocols.byteOffset\x2C\n      protocols.byteOffset + protocols.byteLength\x2C\n    ));\n  }\n};\n\nfunction unfqdn(host) {\n  return host.replace(/[.]$/\x2C '');\n}\n\n// String#toLowerCase() is locale-sensitive so we use\n// a conservative version that only lowercases A-Z.\nfunction toLowerCase(c) {\n  return StringFromCharCode(32 + c.charCodeAt(0));\n}\n\nfunction splitHost(host) {\n  return unfqdn(host).replace(/[A-Z]/g\x2C toLowerCase).split('.');\n}\n\nfunction check(hostParts\x2C pattern\x2C wildcards) {\n  // Empty strings\x2C null\x2C undefined\x2C etc. never match.\n  if (!pattern)\n    return false;\n\n  const patternParts = splitHost(pattern);\n\n  if (hostParts.length !== patternParts.length)\n    return false;\n\n  // Pattern has empty components\x2C e.g. "bad..example.com".\n  if (patternParts.includes(''))\n    return false;\n\n  // RFC 6125 allows IDNA U-labels (Unicode) in names but we have no\n  // good way to detect their encoding or normalize them so we simply\n  // reject them.  Control characters and blanks are rejected as well\n  // because nothing good can come from accepting them.\n  const isBad = (s) => /[^\\u0021-\\u007F]/u.test(s);\n  if (patternParts.some(isBad))\n    return false;\n\n  // Check host parts from right to left first.\n  for (let i = hostParts.length - 1; i > 0; i -= 1) {\n    if (hostParts[i] !== patternParts[i])\n      return false;\n  }\n\n  const hostSubdomain = hostParts[0];\n  const patternSubdomain = patternParts[0];\n  const patternSubdomainParts = patternSubdomain.split('*');\n\n  // Short-circuit when the subdomain does not contain a wildcard.\n  // RFC 6125 does not allow wildcard substitution for components\n  // containing IDNA A-labels (Punycode) so match those verbatim.\n  if (patternSubdomainParts.length === 1 ||\n      patternSubdomain.includes('xn--'))\n    return hostSubdomain === patternSubdomain;\n\n  if (!wildcards)\n    return false;\n\n  // More than one wildcard is always wrong.\n  if (patternSubdomainParts.length > 2)\n    return false;\n\n  // *.tld wildcards are not allowed.\n  if (patternParts.length <= 2)\n    return false;\n\n  const { 0: prefix\x2C 1: suffix } = patternSubdomainParts;\n\n  if (prefix.length + suffix.length > hostSubdomain.length)\n    return false;\n\n  if (!hostSubdomain.startsWith(prefix))\n    return false;\n\n  if (!hostSubdomain.endsWith(suffix))\n    return false;\n\n  return true;\n}\n\n// This pattern is used to determine the length of escaped sequences within\n// the subject alt names string. It allows any valid JSON string literal.\n// This MUST match the JSON specification (ECMA-404 / RFC8259) exactly.\nconst jsonStringPattern =\n  // eslint-disable-next-line no-control-regex\n  /^"(?:[^"\\\\\\u0000-\\u001f]|\\\\(?:["\\\\/bfnrt]|u[0-9a-fA-F]{4}))*"/;\n\nfunction splitEscapedAltNames(altNames) {\n  const result = [];\n  let currentToken = '';\n  let offset = 0;\n  while (offset !== altNames.length) {\n    const nextSep = altNames.indexOf('\x2C'\x2C offset);\n    const nextQuote = altNames.indexOf('"'\x2C offset);\n    if (nextQuote !== -1 && (nextSep === -1 || nextQuote < nextSep)) {\n      // There is a quote character and there is no separator before the quote.\n      currentToken += altNames.substring(offset\x2C nextQuote);\n      const match = jsonStringPattern.exec(altNames.substring(nextQuote));\n      if (!match) {\n        throw new ERR_TLS_CERT_ALTNAME_FORMAT();\n      }\n      currentToken += JSONParse(match[0]);\n      offset = nextQuote + match[0].length;\n    } else if (nextSep !== -1) {\n      // There is a separator and no quote before it.\n      currentToken += altNames.substring(offset\x2C nextSep);\n      result.push(currentToken);\n      currentToken = '';\n      offset = nextSep + 2;\n    } else {\n      currentToken += altNames.substring(offset);\n      offset = altNames.length;\n    }\n  }\n  result.push(currentToken);\n  return result;\n}\n\nexports.checkServerIdentity = function checkServerIdentity(hostname\x2C cert) {\n  const subject = cert.subject;\n  const altNames = cert.subjectaltname;\n  const dnsNames = [];\n  const ips = [];\n\n  hostname = '' + hostname;\n\n  if (altNames) {\n    const splitAltNames = altNames.includes('"') ?\n      splitEscapedAltNames(altNames) :\n      altNames.split('\x2C ');\n    splitAltNames.forEach((name) => {\n      if (name.startsWith('DNS:')) {\n        dnsNames.push(name.slice(4));\n      } else if (name.startsWith('IP Address:')) {\n        ips.push(canonicalizeIP(name.slice(11)));\n      }\n    });\n  }\n\n  let valid = false;\n  let reason = 'Unknown reason';\n\n  hostname = unfqdn(hostname);  // Remove trailing dot for error messages.\n\n  if (net.isIP(hostname)) {\n    valid = ips.includes(canonicalizeIP(hostname));\n    if (!valid)\n      reason = `IP: ${hostname} is not in the cert's list: ` + ips.join('\x2C ');\n  } else if (dnsNames.length > 0 || subject?.CN) {\n    const hostParts = splitHost(hostname);\n    const wildcard = (pattern) => check(hostParts\x2C pattern\x2C true);\n\n    if (dnsNames.length > 0) {\n      valid = dnsNames.some(wildcard);\n      if (!valid)\n        reason =\n          `Host: ${hostname}. is not in the cert's altnames: ${altNames}`;\n    } else {\n      // Match against Common Name only if no supported identifiers exist.\n      const cn = subject.CN;\n\n      if (ArrayIsArray(cn))\n        valid = cn.some(wildcard);\n      else if (cn)\n        valid = wildcard(cn);\n\n      if (!valid)\n        reason = `Host: ${hostname}. is not cert's CN: ${cn}`;\n    }\n  } else {\n    reason = 'Cert does not contain a DNS name';\n  }\n\n  if (!valid) {\n    return new ERR_TLS_CERT_ALTNAME_INVALID(reason\x2C hostname\x2C cert);\n  }\n};\n\nexports.createSecureContext = _tls_common.createSecureContext;\nexports.SecureContext = _tls_common.SecureContext;\nexports.TLSSocket = _tls_wrap.TLSSocket;\nexports.Server = _tls_wrap.Server;\nexports.createServer = _tls_wrap.createServer;\nexports.connect = _tls_wrap.connect;\n\nexports.createSecurePair = internalUtil.deprecate(\n  createSecurePair\x2C\n  'tls.createSecurePair() is deprecated. Please use ' +\n  'tls.TLSSocket instead.'\x2C 'DEP0064');\n
code-source-info,0x12ea986730b8,136,0,10611,C0O0C4O10611,,
code-creation,JS,9,151750,0x12ea98673398,606, node:tls:1:1,0x31c3bc55918,~
code-source-info,0x12ea
code-creation,Eval,9,152083,0x12ea98673778,5, node:_tls_common:1:1,0x31c3bc64c28,~
script-source,137,node:_tls_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  JSONParse\x2C\n} = primordials;\n\nconst tls = require('tls');\n\nconst {\n  codes: {\n    ERR_TLS_INVALID_PROTOCOL_VERSION\x2C\n    ERR_TLS_PROTOCOL_VERSION_CONFLICT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  crypto: {\n    SSL_OP_CIPHER_SERVER_PREFERENCE\x2C\n    TLS1_VERSION\x2C\n    TLS1_1_VERSION\x2C\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\n\nconst {\n  configSecureContext\x2C\n} = require('internal/tls/secure-context');\n\nfunction toV(which\x2C v\x2C def) {\n  v ??= def;\n  if (v === 'TLSv1') return TLS1_VERSION;\n  if (v === 'TLSv1.1') return TLS1_1_VERSION;\n  if (v === 'TLSv1.2') return TLS1_2_VERSION;\n  if (v === 'TLSv1.3') return TLS1_3_VERSION;\n  throw new ERR_TLS_INVALID_PROTOCOL_VERSION(v\x2C which);\n}\n\nconst {\n  SecureContext: NativeSecureContext\x2C\n} = internalBinding('crypto');\n\nfunction SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C maxVersion) {\n  if (!(this instanceof SecureContext)) {\n    return new SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C\n                             maxVersion);\n  }\n\n  if (secureProtocol) {\n    if (minVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(minVersion\x2C secureProtocol);\n    if (maxVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(maxVersion\x2C secureProtocol);\n  }\n\n  this.context = new NativeSecureContext();\n  this.context.init(secureProtocol\x2C\n                    toV('minimum'\x2C minVersion\x2C tls.DEFAULT_MIN_VERSION)\x2C\n                    toV('maximum'\x2C maxVersion\x2C tls.DEFAULT_MAX_VERSION));\n\n  if (secureOptions) {\n    validateInteger(secureOptions\x2C 'secureOptions');\n    this.context.setOptions(secureOptions);\n  }\n}\n\nfunction createSecureContext(options) {\n  options ||= kEmptyObject;\n  const {\n    honorCipherOrder\x2C\n    minVersion\x2C\n    maxVersion\x2C\n    secureProtocol\x2C\n  } = options;\n\n  let { secureOptions } = options;\n\n  if (honorCipherOrder)\n    secureOptions |= SSL_OP_CIPHER_SERVER_PREFERENCE;\n\n  const c = new SecureContext(secureProtocol\x2C secureOptions\x2C\n                              minVersion\x2C maxVersion);\n\n  configSecureContext(c.context\x2C options);\n\n  return c;\n}\n\n// Translate some fields from the handle's C-friendly format into more idiomatic\n// javascript object representations before passing them back to the user.  Can\n// be used on any cert object\x2C but changing the name would be semver-major.\nfunction translatePeerCertificate(c) {\n  if (!c)\n    return null;\n\n  if (c.issuerCertificate != null && c.issuerCertificate !== c) {\n    c.issuerCertificate = translatePeerCertificate(c.issuerCertificate);\n  }\n  if (c.infoAccess != null) {\n    const info = c.infoAccess;\n    c.infoAccess = { __proto__: null };\n\n    // XXX: More key validation?\n    info.replace(/([^\\n:]*):([^\\n]*)(?:\\n|$)/g\x2C\n                 (all\x2C key\x2C val) => {\n                   if (val.charCodeAt(0) === 0x22) {\n                     // The translatePeerCertificate function is only\n                     // used on internally created legacy certificate\n                     // objects\x2C and any value that contains a quote\n                     // will always be a valid JSON string literal\x2C\n                     // so this should never throw.\n                     val = JSONParse(val);\n                   }\n                   if (key in c.infoAccess)\n                     c.infoAccess[key].push(val);\n                   else\n                     c.infoAccess[key] = [val];\n                 });\n  }\n  return c;\n}\n\nmodule.exports = {\n  SecureContext\x2C\n  createSecureContext\x2C\n  translatePeerCertificate\x2C\n};\n
code-source-info,0x12ea98673778,137,0,4789,C0O0C4O4789,,
code-creation,JS,9,152250,0x12ea986738d0,237, node:_tls_common:1:1,0x31c3bc64df0,~
code-source-info,0x12ea986738d0,137,0,4789,C0O0C67O1159C73O1200C76O1200C80O1200C82O1322C85O1322C90O1234C95O1240C101O1278C107O1495C110O1495C115O1369C120O1375C126O1412C132O1430C138O1450C144O1470C150O1554C153O1554C158O1536C164O1612C167O1612C172O1591C178O1680C181O1680C186O1655C192O2053C195O2053C200O2028C206O4699C213O4720C219O4737C225O4760C231O4714C236O4788,,
tick,0x100cff7c4,152583,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea98673985,0x107f89188,0x107f88e30,0x12ea986734b1,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,152625,0x12ea98673a88,5, node:internal/tls/secure-context:1:1,0x31c3bc65fa8,~
script-source,138,node:internal/tls/secure-context,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  validateBuffer\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  toBuf\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nfunction getDefaultEcdhCurve() {\n  // We do it this way because DEFAULT_ECDH_CURVE can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_ECDH_CURVE || 'auto';\n}\n\nfunction getDefaultCiphers() {\n  // We do it this way because DEFAULT_CIPHERS can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_CIPHERS;\n}\n\nfunction addCACerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.addCACert(cert);\n  });\n}\n\nfunction setCerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.setCert(cert);\n  });\n}\n\nfunction validateKeyOrCertOption(name\x2C value) {\n  if (typeof value !== 'string' && !isArrayBufferView(value)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      value\x2C\n    );\n  }\n}\n\nfunction setKey(context\x2C key\x2C passphrase\x2C name) {\n  validateKeyOrCertOption(`${name}.key`\x2C key);\n  if (passphrase !== undefined && passphrase !== null)\n    validateString(passphrase\x2C `${name}.passphrase`);\n  context.setKey(key\x2C passphrase);\n}\n\nfunction processCiphers(ciphers\x2C name) {\n  ciphers = StringPrototypeSplit(ciphers || getDefaultCiphers()\x2C ':');\n\n  const cipherList =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          if (cipher.length === 0) return false;\n          if (StringPrototypeStartsWith(cipher\x2C 'TLS_')) return false;\n          if (StringPrototypeStartsWith(cipher\x2C '!TLS_')) return false;\n          return true;\n        })\x2C ':');\n\n  const cipherSuites =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          if (cipher.length === 0) return false;\n          if (StringPrototypeStartsWith(cipher\x2C 'TLS_')) return true;\n          if (StringPrototypeStartsWith(cipher\x2C '!TLS_')) return true;\n          return false;\n        })\x2C ':');\n\n  // Specifying empty cipher suites for both TLS1.2 and TLS1.3 is invalid\x2C its\n  // not possible to handshake with no suites.\n  if (cipherSuites === '' && cipherList === '')\n    throw new ERR_INVALID_ARG_VALUE(name\x2C ciphers);\n\n  return { cipherList\x2C cipherSuites };\n}\n\nfunction configSecureContext(context\x2C options = kEmptyObject\x2C name = 'options') {\n  validateObject(options\x2C name);\n\n  const {\n    allowPartialTrustChain\x2C\n    ca\x2C\n    cert\x2C\n    ciphers = getDefaultCiphers()\x2C\n    clientCertEngine\x2C\n    crl\x2C\n    dhparam\x2C\n    ecdhCurve = getDefaultEcdhCurve()\x2C\n    key\x2C\n    passphrase\x2C\n    pfx\x2C\n    privateKeyIdentifier\x2C\n    privateKeyEngine\x2C\n    sessionIdContext\x2C\n    sessionTimeout\x2C\n    sigalgs\x2C\n    ticketKeys\x2C\n  } = options;\n\n  // Set the cipher list and cipher suite before anything else because\n  // @SECLEVEL=<n> changes the security level and that affects subsequent\n  // operations.\n  if (ciphers !== undefined && ciphers !== null)\n    validateString(ciphers\x2C `${name}.ciphers`);\n\n  // Work around an OpenSSL API quirk. cipherList is for TLSv1.2 and below\x2C\n  // cipherSuites is for TLSv1.3 (and presumably any later versions). TLSv1.3\n  // cipher suites all have a standard name format beginning with TLS_\x2C so split\n  // the ciphers and pass them to the appropriate API.\n  const {\n    cipherList\x2C\n    cipherSuites\x2C\n  } = processCiphers(ciphers\x2C `${name}.ciphers`);\n\n  if (cipherSuites !== '')\n    context.setCipherSuites(cipherSuites);\n  context.setCiphers(cipherList);\n\n  if (cipherList === '' &&\n      context.getMinProto() < TLS1_3_VERSION &&\n      context.getMaxProto() > TLS1_2_VERSION) {\n    context.setMinProto(TLS1_3_VERSION);\n  }\n\n  // Add CA before the cert to be able to load cert's issuer in C++ code.\n  // NOTE(@jasnell): ca\x2C cert\x2C and key are permitted to be falsy\x2C so do not\n  // change the checks to !== undefined checks.\n  if (ca) {\n    addCACerts(context\x2C ArrayIsArray(ca) ? ca : [ca]\x2C `${name}.ca`);\n  } else {\n    context.addRootCerts();\n  }\n\n  if (allowPartialTrustChain) {\n    context.setAllowPartialTrustChain();\n  }\n\n  if (cert) {\n    setCerts(context\x2C ArrayIsArray(cert) ? cert : [cert]\x2C `${name}.cert`);\n  }\n\n  // Set the key after the cert.\n  // `ssl_set_pkey` returns `0` when the key does not match the cert\x2C but\n  // `ssl_set_cert` returns `1` and nullifies the key in the SSL structure\n  // which leads to the crash later on.\n  if (key) {\n    if (ArrayIsArray(key)) {\n      for (let i = 0; i < key.length; ++i) {\n        const val = key[i];\n        const pem = (\n          val?.pem !== undefined ? val.pem : val);\n        const pass = (\n          val?.passphrase !== undefined ? val.passphrase : passphrase);\n        setKey(context\x2C pem\x2C pass\x2C name);\n      }\n    } else {\n      setKey(context\x2C key\x2C passphrase\x2C name);\n    }\n  }\n\n  if (sigalgs !== undefined && sigalgs !== null) {\n    validateString(sigalgs\x2C `${name}.sigalgs`);\n\n    if (sigalgs === '')\n      throw new ERR_INVALID_ARG_VALUE(`${name}.sigalgs`\x2C sigalgs);\n\n    context.setSigalgs(sigalgs);\n  }\n\n  if (privateKeyIdentifier !== undefined && privateKeyIdentifier !== null) {\n    if (privateKeyEngine === undefined || privateKeyEngine === null) {\n      // Engine is required when privateKeyIdentifier is present\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyEngine`\x2C\n                                      privateKeyEngine);\n    }\n    if (key) {\n      // Both data key and engine key can't be set at the same time\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyIdentifier`\x2C\n                                      privateKeyIdentifier);\n    }\n\n    if (typeof privateKeyIdentifier === 'string' &&\n        typeof privateKeyEngine === 'string') {\n      if (context.setEngineKey)\n        context.setEngineKey(privateKeyIdentifier\x2C privateKeyEngine);\n      else\n        throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    } else if (typeof privateKeyIdentifier !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyIdentifier`\x2C\n                                     ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                     privateKeyIdentifier);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyEngine`\x2C\n                                     ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                     privateKeyEngine);\n    }\n  }\n\n  validateString(ecdhCurve\x2C `${name}.ecdhCurve`);\n  context.setECDHCurve(ecdhCurve);\n\n  if (dhparam !== undefined && dhparam !== null) {\n    validateKeyOrCertOption(`${name}.dhparam`\x2C dhparam);\n    const warning = context.setDHParam(dhparam === 'auto' || dhparam);\n    if (warning)\n      process.emitWarning(warning\x2C 'SecurityWarning');\n  }\n\n  if (crl !== undefined && crl !== null) {\n    if (ArrayIsArray(crl)) {\n      for (const val of crl) {\n        validateKeyOrCertOption(`${name}.crl`\x2C val);\n        context.addCRL(val);\n      }\n    } else {\n      validateKeyOrCertOption(`${name}.crl`\x2C crl);\n      context.addCRL(crl);\n    }\n  }\n\n  if (sessionIdContext !== undefined && sessionIdContext !== null) {\n    validateString(sessionIdContext\x2C `${name}.sessionIdContext`);\n    context.setSessionIdContext(sessionIdContext);\n  }\n\n  if (pfx !== undefined && pfx !== null) {\n    if (ArrayIsArray(pfx)) {\n      ArrayPrototypeForEach(pfx\x2C (val) => {\n        const raw = val.buf || val;\n        const pass = val.passphrase || passphrase;\n        if (pass !== undefined && pass !== null) {\n          context.loadPKCS12(toBuf(raw)\x2C toBuf(pass));\n        } else {\n          context.loadPKCS12(toBuf(raw));\n        }\n      });\n    } else if (passphrase) {\n      context.loadPKCS12(toBuf(pfx)\x2C toBuf(passphrase));\n    } else {\n      context.loadPKCS12(toBuf(pfx));\n    }\n  }\n\n  if (typeof clientCertEngine === 'string') {\n    if (typeof context.setClientCertEngine !== 'function')\n      throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    else\n      context.setClientCertEngine(clientCertEngine);\n  } else if (clientCertEngine !== undefined && clientCertEngine !== null) {\n    throw new ERR_INVALID_ARG_TYPE(`${name}.clientCertEngine`\x2C\n                                   ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                   clientCertEngine);\n  }\n\n  if (ticketKeys !== undefined && ticketKeys !== null) {\n    validateBuffer(ticketKeys\x2C `${name}.ticketKeys`);\n    if (ticketKeys.byteLength !== 48) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `${name}.ticketKeys`\x2C\n        ticketKeys.byteLength\x2C\n        'must be exactly 48 bytes');\n    }\n    context.setTicketKeys(ticketKeys);\n  }\n\n  if (sessionTimeout !== undefined && sessionTimeout !== null) {\n    validateInt32(sessionTimeout\x2C `${name}.sessionTimeout`\x2C 0);\n    context.setSessionTimeout(sessionTimeout);\n  }\n}\n\nmodule.exports = {\n  configSecureContext\x2C\n};\n
code-source-info,0x12ea98673a88,138,0,9600,C0O0C4O9600,,
code-creation,JS,9,152958,0x12ea98673c28,314, node:internal/tls/secure-context:1:1,0x31c3bc66220,~
code-source-info,0x12ea98673c28,138,0,9600,C0O0C114O25C120O41C126O65C132O90C138O112C144O136C150O306C156O306C161O198C166O204C172O248C178O274C184O363C190O363C195O345C201O423C207O423C212O400C218O539C224O539C229O466C235O484C241O501C247O519C253O593C259O593C264O582C270O696C273O696C278O645C283O651C289O671C295O9555C302O9576C308O9570C313O9599,,
code-creation,Eval,9,153542,0x12ea98673e30,5, node:internal/crypto/util:1:1,0x31c3bc68a90,~
script-source,139,node:internal/crypto/util,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  BigInt\x2C\n  DataViewPrototypeGetBuffer\x2C\n  DataViewPrototypeGetByteLength\x2C\n  DataViewPrototypeGetByteOffset\x2C\n  FunctionPrototypeBind\x2C\n  Number\x2C\n  ObjectDefineProperty\x2C\n  ObjectEntries\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  Promise\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeSlice\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  getCiphers: _getCiphers\x2C\n  getCurves: _getCurves\x2C\n  getHashes: _getHashes\x2C\n  setEngine: _setEngine\x2C\n  secureHeapUsed: _secureHeapUsed\x2C\n  getCachedAliases\x2C\n} = internalBinding('crypto');\n\nconst { getOptionValue } = require('internal/options');\n\nconst {\n  crypto: {\n    ENGINE_METHOD_ALL\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst normalizeHashName = require('internal/crypto/hashnames');\n\nconst {\n  codes: {\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\n\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  cachedResult\x2C\n  emitExperimentalWarning\x2C\n  filterDuplicateStrings\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  namespace: {\n    isBuildingSnapshot\x2C\n    addSerializeCallback\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nconst {\n  isDataView\x2C\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst kHandle = Symbol('kHandle');\nconst kKeyObject = Symbol('kKeyObject');\n\n// This is here because many functions accepted binary strings without\n// any explicit encoding in older versions of node\x2C and we don't want\n// to break them unnecessarily.\nfunction toBuf(val\x2C encoding) {\n  if (typeof val === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(val\x2C encoding);\n  }\n  return val;\n}\n\nlet _hashCache;\nfunction getHashCache() {\n  if (_hashCache === undefined) {\n    _hashCache = getCachedAliases();\n    if (isBuildingSnapshot()) {\n      // For dynamic linking\x2C clear the map.\n      addSerializeCallback(() => { _hashCache = undefined; });\n    }\n  }\n  return _hashCache;\n}\n\nfunction getCachedHashId(algorithm) {\n  const result = getHashCache()[algorithm];\n  return result === undefined ? -1 : result;\n}\n\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\n\nfunction setEngine(id\x2C flags) {\n  validateString(id\x2C 'id');\n  if (flags)\n    validateNumber(flags\x2C 'flags');\n  flags = flags >>> 0;\n\n  // Use provided engine for everything by default\n  if (flags === 0)\n    flags = ENGINE_METHOD_ALL;\n\n  if (typeof _setEngine !== 'function')\n    throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n  if (!_setEngine(id\x2C flags))\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\n}\n\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\n  if (isAnyArrayBuffer(buffer))\n    return buffer;\n  if (typeof buffer === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(buffer\x2C encoding);\n  }\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\n      name\x2C\n      [\n        'string'\x2C\n        'ArrayBuffer'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      buffer\x2C\n    );\n  }\n  return buffer;\n});\n\n// The maximum buffer size that we'll support in the WebCrypto impl\nconst kMaxBufferLength = (2 ** 31) - 1;\n\n// The EC named curves that we currently support via the Web Crypto API.\nconst kNamedCurveAliases = {\n  'P-256': 'prime256v1'\x2C\n  'P-384': 'secp384r1'\x2C\n  'P-521': 'secp521r1'\x2C\n};\n\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\n\nconst kSupportedAlgorithms = {\n  'digest': {\n    'SHA-1': null\x2C\n    'SHA-256': null\x2C\n    'SHA-384': null\x2C\n    'SHA-512': null\x2C\n  }\x2C\n  'generateKey': {\n    'RSASSA-PKCS1-v1_5': 'RsaHashedKeyGenParams'\x2C\n    'RSA-PSS': 'RsaHashedKeyGenParams'\x2C\n    'RSA-OAEP': 'RsaHashedKeyGenParams'\x2C\n    'ECDSA': 'EcKeyGenParams'\x2C\n    'ECDH': 'EcKeyGenParams'\x2C\n    'AES-CTR': 'AesKeyGenParams'\x2C\n    'AES-CBC': 'AesKeyGenParams'\x2C\n    'AES-GCM': 'AesKeyGenParams'\x2C\n    'AES-KW': 'AesKeyGenParams'\x2C\n    'HMAC': 'HmacKeyGenParams'\x2C\n  }\x2C\n  'sign': {\n    'RSASSA-PKCS1-v1_5': null\x2C\n    'RSA-PSS': 'RsaPssParams'\x2C\n    'ECDSA': 'EcdsaParams'\x2C\n    'HMAC': null\x2C\n  }\x2C\n  'verify': {\n    'RSASSA-PKCS1-v1_5': null\x2C\n    'RSA-PSS': 'RsaPssParams'\x2C\n    'ECDSA': 'EcdsaParams'\x2C\n    'HMAC': null\x2C\n  }\x2C\n  'importKey': {\n    'RSASSA-PKCS1-v1_5': 'RsaHashedImportParams'\x2C\n    'RSA-PSS': 'RsaHashedImportParams'\x2C\n    'RSA-OAEP': 'RsaHashedImportParams'\x2C\n    'ECDSA': 'EcKeyImportParams'\x2C\n    'ECDH': 'EcKeyImportParams'\x2C\n    'HMAC': 'HmacImportParams'\x2C\n    'HKDF': null\x2C\n    'PBKDF2': null\x2C\n    'AES-CTR': null\x2C\n    'AES-CBC': null\x2C\n    'AES-GCM': null\x2C\n    'AES-KW': null\x2C\n  }\x2C\n  'deriveBits': {\n    'HKDF': 'HkdfParams'\x2C\n    'PBKDF2': 'Pbkdf2Params'\x2C\n    'ECDH': 'EcdhKeyDeriveParams'\x2C\n  }\x2C\n  'encrypt': {\n    'RSA-OAEP': 'RsaOaepParams'\x2C\n    'AES-CBC': 'AesCbcParams'\x2C\n    'AES-GCM': 'AesGcmParams'\x2C\n    'AES-CTR': 'AesCtrParams'\x2C\n  }\x2C\n  'decrypt': {\n    'RSA-OAEP': 'RsaOaepParams'\x2C\n    'AES-CBC': 'AesCbcParams'\x2C\n    'AES-GCM': 'AesGcmParams'\x2C\n    'AES-CTR': 'AesCtrParams'\x2C\n  }\x2C\n  'get key length': {\n    'AES-CBC': 'AesDerivedKeyParams'\x2C\n    'AES-CTR': 'AesDerivedKeyParams'\x2C\n    'AES-GCM': 'AesDerivedKeyParams'\x2C\n    'AES-KW': 'AesDerivedKeyParams'\x2C\n    'HMAC': 'HmacImportParams'\x2C\n    'HKDF': null\x2C\n    'PBKDF2': null\x2C\n  }\x2C\n  'wrapKey': {\n    'AES-KW': null\x2C\n  }\x2C\n  'unwrapKey': {\n    'AES-KW': null\x2C\n  }\x2C\n};\n\nconst experimentalAlgorithms = ObjectEntries({\n  'X25519': {\n    generateKey: null\x2C\n    importKey: null\x2C\n    deriveBits: 'EcdhKeyDeriveParams'\x2C\n  }\x2C\n  'Ed25519': {\n    generateKey: null\x2C\n    sign: null\x2C\n    verify: null\x2C\n    importKey: null\x2C\n  }\x2C\n  'X448': {\n    generateKey: null\x2C\n    importKey: null\x2C\n    deriveBits: 'EcdhKeyDeriveParams'\x2C\n  }\x2C\n  'Ed448': {\n    generateKey: null\x2C\n    sign: 'Ed448Params'\x2C\n    verify: 'Ed448Params'\x2C\n    importKey: null\x2C\n  }\x2C\n});\n\nfor (let i = 0; i < experimentalAlgorithms.length; i++) {\n  const name = experimentalAlgorithms[i][0];\n  const ops = ObjectEntries(experimentalAlgorithms[i][1]);\n  for (let j = 0; j < ops.length; j++) {\n    const { 0: op\x2C 1: dict } = ops[j];\n    ObjectDefineProperty(kSupportedAlgorithms[op]\x2C name\x2C {\n      get() {\n        emitExperimentalWarning(`The ${name} Web Crypto API algorithm`);\n        return dict;\n      }\x2C\n      __proto__: null\x2C\n      enumerable: true\x2C\n    });\n  }\n}\n\nconst simpleAlgorithmDictionaries = {\n  AesGcmParams: { iv: 'BufferSource'\x2C additionalData: 'BufferSource' }\x2C\n  RsaHashedKeyGenParams: { hash: 'HashAlgorithmIdentifier' }\x2C\n  EcKeyGenParams: {}\x2C\n  HmacKeyGenParams: { hash: 'HashAlgorithmIdentifier' }\x2C\n  RsaPssParams: {}\x2C\n  EcdsaParams: { hash: 'HashAlgorithmIdentifier' }\x2C\n  HmacImportParams: { hash: 'HashAlgorithmIdentifier' }\x2C\n  HkdfParams: {\n    hash: 'HashAlgorithmIdentifier'\x2C\n    salt: 'BufferSource'\x2C\n    info: 'BufferSource'\x2C\n  }\x2C\n  Ed448Params: { context: 'BufferSource' }\x2C\n  Pbkdf2Params: { hash: 'HashAlgorithmIdentifier'\x2C salt: 'BufferSource' }\x2C\n  RsaOaepParams: { label: 'BufferSource' }\x2C\n  RsaHashedImportParams: { hash: 'HashAlgorithmIdentifier' }\x2C\n  EcKeyImportParams: {}\x2C\n};\n\nfunction validateMaxBufferLength(data\x2C name) {\n  if (data.byteLength > kMaxBufferLength) {\n    throw lazyDOMException(\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\n      'OperationError');\n  }\n}\n\nlet webidl;\n\n// https://w3c.github.io/webcrypto/#algorithm-normalization-normalize-an-algorithm\n// adapted for Node.js from Deno's implementation\n// https://github.com/denoland/deno/blob/v1.29.1/ext/crypto/00_crypto.js#L195\nfunction normalizeAlgorithm(algorithm\x2C op) {\n  if (typeof algorithm === 'string')\n    return normalizeAlgorithm({ name: algorithm }\x2C op);\n\n  webidl ??= require('internal/crypto/webidl');\n\n  // 1.\n  const registeredAlgorithms = kSupportedAlgorithms[op];\n  // 2. 3.\n  const initialAlg = webidl.converters.Algorithm(algorithm\x2C {\n    prefix: 'Failed to normalize algorithm'\x2C\n    context: 'passed algorithm'\x2C\n  });\n  // 4.\n  let algName = initialAlg.name;\n\n  // 5.\n  let desiredType;\n  for (const key in registeredAlgorithms) {\n    if (!ObjectPrototypeHasOwnProperty(registeredAlgorithms\x2C key)) {\n      continue;\n    }\n    if (\n      StringPrototypeToUpperCase(key) === StringPrototypeToUpperCase(algName)\n    ) {\n      algName = key;\n      desiredType = registeredAlgorithms[key];\n    }\n  }\n  if (desiredType === undefined)\n    throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\n\n  // Fast path everything below if the registered dictionary is null\n  if (desiredType === null)\n    return { name: algName };\n\n  // 6.\n  const normalizedAlgorithm = webidl.converters[desiredType](algorithm\x2C {\n    prefix: 'Failed to normalize algorithm'\x2C\n    context: 'passed algorithm'\x2C\n  });\n  // 7.\n  normalizedAlgorithm.name = algName;\n\n  // 9.\n  const dict = simpleAlgorithmDictionaries[desiredType];\n  // 10.\n  const dictKeys = dict ? ObjectKeys(dict) : [];\n  for (let i = 0; i < dictKeys.length; i++) {\n    const member = dictKeys[i];\n    if (!ObjectPrototypeHasOwnProperty(dict\x2C member))\n      continue;\n    const idlType = dict[member];\n    const idlValue = normalizedAlgorithm[member];\n    // 3.\n    if (idlType === 'BufferSource' && idlValue) {\n      const isView = ArrayBufferIsView(idlValue);\n      normalizedAlgorithm[member] = TypedArrayPrototypeSlice(\n        new Uint8Array(\n          isView ? getDataViewOrTypedArrayBuffer(idlValue) : idlValue\x2C\n          isView ? getDataViewOrTypedArrayByteOffset(idlValue) : 0\x2C\n          isView ? getDataViewOrTypedArrayByteLength(idlValue) : ArrayBufferPrototypeGetByteLength(idlValue)\x2C\n        )\x2C\n      );\n    } else if (idlType === 'HashAlgorithmIdentifier') {\n      normalizedAlgorithm[member] = normalizeAlgorithm(idlValue\x2C 'digest');\n    } else if (idlType === 'AlgorithmIdentifier') {\n      // This extension point is not used by any supported algorithm (yet?)\n      throw lazyDOMException('Not implemented.'\x2C 'NotSupportedError');\n    }\n  }\n\n  return normalizedAlgorithm;\n}\n\nfunction getDataViewOrTypedArrayBuffer(V) {\n  return isDataView(V) ?\n    DataViewPrototypeGetBuffer(V) : TypedArrayPrototypeGetBuffer(V);\n}\n\nfunction getDataViewOrTypedArrayByteOffset(V) {\n  return isDataView(V) ?\n    DataViewPrototypeGetByteOffset(V) : TypedArrayPrototypeGetByteOffset(V);\n}\n\nfunction getDataViewOrTypedArrayByteLength(V) {\n  return isDataView(V) ?\n    DataViewPrototypeGetByteLength(V) : TypedArrayPrototypeGetByteLength(V);\n}\n\nfunction hasAnyNotIn(set\x2C checks) {\n  for (const s of set)\n    if (!ArrayPrototypeIncludes(checks\x2C s))\n      return true;\n  return false;\n}\n\nfunction validateBitLength(length\x2C name\x2C required = false) {\n  if (length !== undefined || required) {\n    validateNumber(length\x2C name);\n    if (length < 0)\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\n    if (length % 8) {\n      throw new ERR_INVALID_ARG_VALUE(\n        name\x2C\n        length\x2C\n        'must be a multiple of 8');\n    }\n  }\n}\n\nfunction validateByteLength(buf\x2C name\x2C target) {\n  if (buf.byteLength !== target) {\n    throw lazyDOMException(\n      `${name} must contain exactly ${target} bytes`\x2C\n      'OperationError');\n  }\n}\n\nconst validateByteSource = hideStackFrames((val\x2C name) => {\n  val = toBuf(val);\n\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\n    return val;\n\n  throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\n    name\x2C\n    [\n      'string'\x2C\n      'ArrayBuffer'\x2C\n      'TypedArray'\x2C\n      'DataView'\x2C\n      'Buffer'\x2C\n    ]\x2C\n    val);\n});\n\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\n  if (err) {\n    return reject(lazyDOMException(\n      'The operation failed for an operation-specific reason'\x2C\n      { name: 'OperationError'\x2C cause: err }));\n  }\n  resolve(result);\n}\n\nfunction jobPromise(getJob) {\n  return new Promise((resolve\x2C reject) => {\n    try {\n      const job = getJob();\n      job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\n      job.run();\n    } catch (err) {\n      onDone(resolve\x2C reject\x2C err);\n    }\n  });\n}\n\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\n// number of leading zero bits. Our conventional APIs for reading\n// an unsigned int from a Buffer are not adequate. The implementation\n// here is adapted from the chromium implementation here:\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\n// Returns undefined if the conversion was unsuccessful.\nfunction bigIntArrayToUnsignedInt(input) {\n  let result = 0;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    if (n_reversed >= 4 && input[n])\n      return;  // Too large\n    result |= input[n] << 8 * n_reversed;\n  }\n\n  return result;\n}\n\nfunction bigIntArrayToUnsignedBigInt(input) {\n  let result = 0n;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\n  }\n\n  return result;\n}\n\nfunction getStringOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null)\n    validateString(value\x2C `options.${key}`);\n  return value;\n}\n\nfunction getUsagesUnion(usageSet\x2C ...usages) {\n  const newset = [];\n  for (let n = 0; n < usages.length; n++) {\n    if (usageSet.has(usages[n]))\n      ArrayPrototypePush(newset\x2C usages[n]);\n  }\n  return newset;\n}\n\nfunction getBlockSize(name) {\n  switch (name) {\n    case 'SHA-1':\n      // Fall through\n    case 'SHA-256':\n      return 512;\n    case 'SHA-384':\n      // Fall through\n    case 'SHA-512':\n      return 1024;\n  }\n}\n\nfunction getDigestSizeInBytes(name) {\n  switch (name) {\n    case 'SHA-1': return 20;\n    case 'SHA-256': return 32;\n    case 'SHA-384': return 48;\n    case 'SHA-512': return 64;\n  }\n}\n\nconst kKeyOps = {\n  sign: 1\x2C\n  verify: 2\x2C\n  encrypt: 3\x2C\n  decrypt: 4\x2C\n  wrapKey: 5\x2C\n  unwrapKey: 6\x2C\n  deriveKey: 7\x2C\n  deriveBits: 8\x2C\n};\n\nfunction validateKeyOps(keyOps\x2C usagesSet) {\n  if (keyOps === undefined) return;\n  validateArray(keyOps\x2C 'keyData.key_ops');\n  let flags = 0;\n  for (let n = 0; n < keyOps.length; n++) {\n    const op = keyOps[n];\n    const op_flag = kKeyOps[op];\n    // Skipping unknown key ops\n    if (op_flag === undefined)\n      continue;\n    // Have we seen it already? if so\x2C error\n    if (flags & (1 << op_flag))\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\n    flags |= (1 << op_flag);\n\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\n    // key usage combinations. Specifically\x2C it says that unrelated key\n    // ops SHOULD NOT be used together. We're not yet validating that here.\n  }\n\n  if (usagesSet !== undefined) {\n    for (const use of usagesSet) {\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\n        throw lazyDOMException(\n          'Key operations and usage mismatch'\x2C\n          'DataError');\n      }\n    }\n  }\n}\n\nfunction secureHeapUsed() {\n  const val = _secureHeapUsed();\n  if (val === undefined)\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\n  const used = Number(_secureHeapUsed());\n  const total = Number(getOptionValue('--secure-heap'));\n  const min = Number(getOptionValue('--secure-heap-min'));\n  const utilization = used / total;\n  return { total\x2C used\x2C utilization\x2C min };\n}\n\nmodule.exports = {\n  getArrayBufferOrView\x2C\n  getCiphers\x2C\n  getCurves\x2C\n  getDataViewOrTypedArrayBuffer\x2C\n  getHashes\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n  setEngine\x2C\n  toBuf\x2C\n\n  kNamedCurveAliases\x2C\n  kAesKeyLengths\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  hasAnyNotIn\x2C\n  validateBitLength\x2C\n  validateByteLength\x2C\n  validateByteSource\x2C\n  validateKeyOps\x2C\n  jobPromise\x2C\n  validateMaxBufferLength\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n  bigIntArrayToUnsignedInt\x2C\n  getBlockSize\x2C\n  getDigestSizeInBytes\x2C\n  getStringOption\x2C\n  getUsagesUnion\x2C\n  secureHeapUsed\x2C\n  getCachedHashId\x2C\n  getHashCache\x2C\n};\n
code-source-info,0x12ea98673e30,139,0,16364,C0O0C4O16364,,
code-creation,JS,9,154083,0x12ea98674298,1318, node:internal/crypto/util:1:1,0x31c3bc68f68,~
code-source-info,0x12ea
tick,0x100fb323c,154167,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98673d2b,0x107f89188,0x107f88e30,0x12ea98673985,0x107f89188,0x107f88e30,0x12ea986734b1,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,154500,0x12ea986749b0,5, node:internal/crypto/hashnames:1:1,0x31c3bc6b298,~
script-source,140,node:internal/crypto/hashnames,'use strict';\n\nconst {\n  ObjectKeys\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst kHashContextNode = 1;\nconst kHashContextWebCrypto = 2;\nconst kHashContextJwkRsa = 3;\nconst kHashContextJwkRsaPss = 4;\nconst kHashContextJwkRsaOaep = 5;\nconst kHashContextJwkHmac = 6;\n\n// WebCrypto and JWK use a bunch of different names for the\n// standard set of SHA-* digest algorithms... which is ... fun.\n// Here we provide a utility for mapping between them in order\n// make it easier in the code.\n\nconst kHashNames = {\n  sha1: {\n    [kHashContextNode]: 'sha1'\x2C\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\n    [kHashContextJwkRsa]: 'RS1'\x2C\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\n    [kHashContextJwkHmac]: 'HS1'\x2C\n  }\x2C\n  sha256: {\n    [kHashContextNode]: 'sha256'\x2C\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\n    [kHashContextJwkRsa]: 'RS256'\x2C\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\n    [kHashContextJwkHmac]: 'HS256'\x2C\n  }\x2C\n  sha384: {\n    [kHashContextNode]: 'sha384'\x2C\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\n    [kHashContextJwkRsa]: 'RS384'\x2C\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\n    [kHashContextJwkHmac]: 'HS384'\x2C\n  }\x2C\n  sha512: {\n    [kHashContextNode]: 'sha512'\x2C\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\n    [kHashContextJwkRsa]: 'RS512'\x2C\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\n    [kHashContextJwkHmac]: 'HS512'\x2C\n  }\x2C\n};\n\n{\n  // Index the aliases\n  const keys = ObjectKeys(kHashNames);\n  for (let n = 0; n < keys.length; n++) {\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\n    for (let i = 0; i < contexts.length; i++) {\n      const alias =\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\n      if (kHashNames[alias] === undefined)\n        kHashNames[alias] = kHashNames[keys[n]];\n    }\n  }\n}\n\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\n  if (typeof name !== 'string')\n    return name;\n  name = StringPrototypeToLowerCase(name);\n  const alias = kHashNames[name]?.[context];\n  return alias || name;\n}\n\nnormalizeHashName.kContextNode = kHashContextNode;\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\n\nmodule.exports = normalizeHashName;\n
code-source-info,0x12ea986749b0,140,0,2502,C0O0C4O2502,,
code-creation,JS,9,154625,0x12ea98674b50,532, node:internal/crypto/hashnames:1:1,0x31c3bc6b390,~
code-source-info,0x12ea98674b
tick,0x101197fbc,155083,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,155542,0x12ea98674ec8,5, node:_tls_wrap:1:1,0x31c3bc740b8,~
script-source,141,node:_tls_wrap,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExp\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nassertCrypto();\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst crypto = require('crypto');\nconst EE = require('events');\nconst net = require('net');\nconst tls = require('tls');\nconst common = require('_tls_common');\nconst { kReinitializeHandle } = require('internal/net');\nconst JSStreamSocket = require('internal/js_stream_socket');\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('tls'\x2C (fn) => {\n  debug = fn;\n});\nconst { TCP\x2C constants: TCPConstants } = internalBinding('tcp_wrap');\nconst tls_wrap = internalBinding('tls_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { isArrayBufferView } = require('internal/util/types');\nconst { SecureContext: NativeSecureContext } = internalBinding('crypto');\nconst {\n  ConnResetException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MULTIPLE_CALLBACK\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_TLS_ALPN_CALLBACK_INVALID_RESULT\x2C\n    ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS\x2C\n    ERR_TLS_DH_PARAM_SIZE\x2C\n    ERR_TLS_HANDSHAKE_TIMEOUT\x2C\n    ERR_TLS_INVALID_CONTEXT\x2C\n    ERR_TLS_INVALID_STATE\x2C\n    ERR_TLS_RENEGOTIATION_DISABLED\x2C\n    ERR_TLS_REQUIRED_SERVER_NAME\x2C\n    ERR_TLS_SESSION_ATTACK\x2C\n    ERR_TLS_SNI_FROM_SERVER\x2C\n  }\x2C\n} = require('internal/errors');\nconst { onpskexchange: kOnPskExchange } = internalBinding('symbols');\nconst {\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n} = require('internal/options');\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  InternalX509Certificate\x2C\n} = require('internal/crypto/x509');\nconst traceTls = getOptionValue('--trace-tls');\nconst tlsKeylog = getOptionValue('--tls-keylog');\nconst { appendFile } = require('fs');\nconst kConnectOptions = Symbol('connect-options');\nconst kDisableRenegotiation = Symbol('disable-renegotiation');\nconst kErrorEmitted = Symbol('error-emitted');\nconst kHandshakeTimeout = Symbol('handshake-timeout');\nconst kRes = Symbol('res');\nconst kSNICallback = Symbol('snicallback');\nconst kALPNCallback = Symbol('alpncallback');\nconst kEnableTrace = Symbol('enableTrace');\nconst kPskCallback = Symbol('pskcallback');\nconst kPskIdentityHint = Symbol('pskidentityhint');\nconst kPendingSession = Symbol('pendingSession');\nconst kIsVerified = Symbol('verified');\n\nconst noop = () => {};\n\nlet ipServernameWarned = false;\nlet tlsTracingWarned = false;\n\n// Server side times how long a handshake is taking to protect against slow\n// handshakes being used for DoS.\nfunction onhandshakestart(now) {\n  debug('server onhandshakestart');\n\n  const { lastHandshakeTime } = this;\n  assert(now >= lastHandshakeTime\x2C\n         `now (${now}) < lastHandshakeTime (${lastHandshakeTime})`);\n\n  this.lastHandshakeTime = now;\n\n  // If this is the first handshake we can skip the rest of the checks.\n  if (lastHandshakeTime === 0)\n    return;\n\n  if ((now - lastHandshakeTime) >= tls.CLIENT_RENEG_WINDOW * 1000)\n    this.handshakes = 1;\n  else\n    this.handshakes++;\n\n  const owner = this[owner_symbol];\n\n  assert(owner._tlsOptions.isServer);\n\n  if (this.handshakes > tls.CLIENT_RENEG_LIMIT) {\n    owner._emitTLSError(new ERR_TLS_SESSION_ATTACK());\n    return;\n  }\n\n  if (owner[kDisableRenegotiation])\n    owner._emitTLSError(new ERR_TLS_RENEGOTIATION_DISABLED());\n}\n\nfunction onhandshakedone() {\n  debug('server onhandshakedone');\n\n  const owner = this[owner_symbol];\n  assert(owner._tlsOptions.isServer);\n\n  // `newSession` callback wasn't called yet\n  if (owner._newSessionPending) {\n    owner._securePending = true;\n    return;\n  }\n\n  owner._finishInit();\n}\n\n\nfunction loadSession(hello) {\n  debug('server onclienthello'\x2C\n        'sessionid.len'\x2C hello.sessionId.length\x2C\n        'ticket?'\x2C hello.tlsTicket\x2C\n  );\n  const owner = this[owner_symbol];\n\n  let once = false;\n  function onSession(err\x2C session) {\n    debug('server resumeSession callback(err %j\x2C sess? %s)'\x2C err\x2C !!session);\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    owner._handle.loadSession(session);\n    // Session is loaded. End the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n\n  if (hello.sessionId.length <= 0 ||\n      hello.tlsTicket ||\n      (owner.server &&\n      !owner.server.emit('resumeSession'\x2C hello.sessionId\x2C onSession))) {\n    // Sessions without identifiers can't be resumed.\n    // Sessions with tickets can be resumed directly from the ticket\x2C no server\n    // session storage is necessary.\n    // Without a call to a resumeSession listener\x2C a session will never be\n    // loaded\x2C so end the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n}\n\n\nfunction loadSNI(info) {\n  const owner = this[owner_symbol];\n  const servername = info.servername;\n  if (!servername || !owner._SNICallback)\n    return requestOCSP(owner\x2C info);\n\n  let once = false;\n  owner._SNICallback(servername\x2C (err\x2C context) => {\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    // TODO(indutny): eventually disallow raw `SecureContext`\n    if (context)\n      owner._handle.sni_context = context.context || context;\n\n    requestOCSP(owner\x2C info);\n  });\n}\n\n\nfunction callALPNCallback(protocolsBuffer) {\n  const handle = this;\n  const socket = handle[owner_symbol];\n\n  const servername = handle.getServername();\n\n  // Collect all the protocols from the given buffer:\n  const protocols = [];\n  let offset = 0;\n  while (offset < protocolsBuffer.length) {\n    const protocolLen = protocolsBuffer[offset];\n    offset += 1;\n\n    const protocol = protocolsBuffer.slice(offset\x2C offset + protocolLen);\n    offset += protocolLen;\n\n    protocols.push(protocol.toString('ascii'));\n  }\n\n  const selectedProtocol = socket[kALPNCallback]({\n    servername\x2C\n    protocols\x2C\n  });\n\n  // Undefined -> all proposed protocols rejected\n  if (selectedProtocol === undefined) return undefined;\n\n  const protocolIndex = protocols.indexOf(selectedProtocol);\n  if (protocolIndex === -1) {\n    throw new ERR_TLS_ALPN_CALLBACK_INVALID_RESULT(selectedProtocol\x2C protocols);\n  }\n  let protocolOffset = 0;\n  for (let i = 0; i < protocolIndex; i++) {\n    protocolOffset += 1 + protocols[i].length;\n  }\n\n  return protocolOffset;\n}\n\nfunction requestOCSP(socket\x2C info) {\n  if (!info.OCSPRequest || !socket.server)\n    return requestOCSPDone(socket);\n\n  let ctx = socket._handle.sni_context;\n\n  if (!ctx) {\n    ctx = socket.server._sharedCreds;\n\n    // TLS socket is using a `net.Server` instead of a tls.TLSServer.\n    // Some TLS properties like `server._sharedCreds` will not be present\n    if (!ctx)\n      return requestOCSPDone(socket);\n  }\n\n  // TODO(indutny): eventually disallow raw `SecureContext`\n  if (ctx.context)\n    ctx = ctx.context;\n\n  if (socket.server.listenerCount('OCSPRequest') === 0) {\n    return requestOCSPDone(socket);\n  }\n\n  let once = false;\n  const onOCSP = (err\x2C response) => {\n    debug('server OCSPRequest done'\x2C 'handle?'\x2C !!socket._handle\x2C 'once?'\x2C once\x2C\n          'response?'\x2C !!response\x2C 'err?'\x2C err);\n    if (once)\n      return socket.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return socket.destroy(err);\n\n    if (socket._handle === null)\n      return socket.destroy(new ERR_SOCKET_CLOSED());\n\n    if (response)\n      socket._handle.setOCSPResponse(response);\n    requestOCSPDone(socket);\n  };\n\n  debug('server oncertcb emit OCSPRequest');\n  socket.server.emit('OCSPRequest'\x2C\n                     ctx.getCertificate()\x2C\n                     ctx.getIssuer()\x2C\n                     onOCSP);\n}\n\nfunction requestOCSPDone(socket) {\n  debug('server certcb done');\n  try {\n    socket._handle.certCbDone();\n  } catch (e) {\n    debug('server certcb done errored'\x2C e);\n    socket.destroy(e);\n  }\n}\n\nfunction onnewsessionclient(sessionId\x2C session) {\n  debug('client emit session');\n  const owner = this[owner_symbol];\n  if (owner[kIsVerified]) {\n    owner.emit('session'\x2C session);\n  } else {\n    owner[kPendingSession] = session;\n  }\n}\n\nfunction onnewsession(sessionId\x2C session) {\n  debug('onnewsession');\n  const owner = this[owner_symbol];\n\n  // TODO(@sam-github) no server to emit the event on\x2C but handshake won't\n  // continue unless newSessionDone() is called\x2C should it be\x2C or is that\n  // situation unreachable\x2C or only occurring during shutdown?\n  if (!owner.server)\n    return;\n\n  let once = false;\n  const done = () => {\n    debug('onnewsession done');\n    if (once)\n      return;\n    once = true;\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    this.newSessionDone();\n\n    owner._newSessionPending = false;\n    if (owner._securePending)\n      owner._finishInit();\n    owner._securePending = false;\n  };\n\n  owner._newSessionPending = true;\n  if (!owner.server.emit('newSession'\x2C sessionId\x2C session\x2C done))\n    done();\n}\n\nfunction onPskServerCallback(identity\x2C maxPskLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](owner\x2C identity);\n  if (ret == null)\n    return undefined;\n\n  let psk;\n  if (isArrayBufferView(ret)) {\n    psk = ret;\n  } else {\n    if (typeof ret !== 'object') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'ret'\x2C\n        ['Object'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ret\x2C\n      );\n    }\n    psk = ret.psk;\n    validateBuffer(psk\x2C 'psk');\n  }\n\n  if (psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\x2C\n    );\n  }\n\n  return psk;\n}\n\nfunction onPskClientCallback(hint\x2C maxPskLen\x2C maxIdentityLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](hint);\n  if (ret == null)\n    return undefined;\n\n  validateObject(ret\x2C 'ret');\n\n  validateBuffer(ret.psk\x2C 'psk');\n  if (ret.psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      ret.psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\x2C\n    );\n  }\n\n  validateString(ret.identity\x2C 'identity');\n  if (Buffer.byteLength(ret.identity) > maxIdentityLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'identity'\x2C\n      ret.identity\x2C\n      `PSK identity exceeds ${maxIdentityLen} bytes`\x2C\n    );\n  }\n\n  return { psk: ret.psk\x2C identity: ret.identity };\n}\n\nfunction onkeylog(line) {\n  debug('onkeylog');\n  this[owner_symbol].emit('keylog'\x2C line);\n}\n\nfunction onocspresponse(resp) {\n  debug('client onocspresponse');\n  this[owner_symbol].emit('OCSPResponse'\x2C resp);\n}\n\nfunction onerror(err) {\n  const owner = this[owner_symbol];\n  debug('%s onerror %s had? %j'\x2C\n        (typeof owner._tlsOptions === 'object' && owner._tlsOptions !== null) ?\n          owner._tlsOptions.isServer ? 'server' : 'client' :\n          'unknown'\x2C\n        err\x2C owner._hadError);\n\n  if (owner._hadError)\n    return;\n\n  owner._hadError = true;\n\n  // Destroy socket if error happened before handshake's finish\n  if (!owner._secureEstablished) {\n    // When handshake fails control is not yet released\x2C\n    // so self._tlsError will return null instead of actual error\n\n    // Set closing the socket after emitting an event since the socket needs to\n    // be accessible when the `tlsClientError` event is emitted.\n    owner._closeAfterHandlingError = true;\n    owner.destroy(err);\n  } else if (owner._tlsOptions?.isServer &&\n             owner._rejectUnauthorized &&\n             /peer did not return a certificate/.test(err.message)) {\n    // Ignore server's authorization errors\n    owner.destroy();\n  } else {\n    // Emit error\n    owner._emitTLSError(err);\n  }\n}\n\n// Used by both client and server TLSSockets to start data flowing from _handle\x2C\n// read(0) causes a StreamBase::ReadStart\x2C via Socket._read.\nfunction initRead(tlsSocket\x2C socket) {\n  debug('%s initRead'\x2C\n        tlsSocket._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!tlsSocket._handle\x2C\n        'buffered?'\x2C !!socket && socket.readableLength\x2C\n  );\n  // If we were destroyed already don't bother reading\n  if (!tlsSocket._handle)\n    return;\n\n  // Socket already has some buffered data - emulate receiving it\n  if (socket?.readableLength) {\n    let buf;\n    while ((buf = socket.read()) !== null)\n      tlsSocket._handle.receive(buf);\n  }\n\n  tlsSocket.read(0);\n}\n\n/**\n * Provides a wrap of socket stream to do encrypted communication.\n */\n\nfunction TLSSocket(socket\x2C opts) {\n  const tlsOptions = { ...opts };\n  let enableTrace = tlsOptions.enableTrace;\n\n  if (enableTrace == null) {\n    enableTrace = traceTls;\n\n    if (enableTrace && !tlsTracingWarned) {\n      tlsTracingWarned = true;\n      process.emitWarning('Enabling --trace-tls can expose sensitive data in ' +\n                          'the resulting log.');\n    }\n  } else {\n    validateBoolean(enableTrace\x2C 'options.enableTrace');\n  }\n\n  if (tlsOptions.ALPNProtocols)\n    tls.convertALPNProtocols(tlsOptions.ALPNProtocols\x2C tlsOptions);\n\n  this._tlsOptions = tlsOptions;\n  this._secureEstablished = false;\n  this._securePending = false;\n  this._newSessionPending = false;\n  this._controlReleased = false;\n  this.secureConnecting = true;\n  this._SNICallback = null;\n  this[kALPNCallback] = null;\n  this.servername = null;\n  this.alpnProtocol = null;\n  this.authorized = false;\n  this.authorizationError = null;\n  this[kRes] = null;\n  this[kIsVerified] = false;\n  this[kPendingSession] = null;\n\n  let wrap;\n  let handle;\n  let wrapHasActiveWriteFromPrevOwner;\n\n  if (socket) {\n    if (socket instanceof net.Socket && socket._handle) {\n      // 1. connected socket\n      wrap = socket;\n    } else {\n      // 2. socket has no handle so it is js not c++\n      // 3. unconnected sockets are wrapped\n      // TLS expects to interact from C++ with a net.Socket that has a C++ stream\n      // handle\x2C but a JS stream doesn't have one. Wrap it up to make it look like\n      // a socket.\n      wrap = new JSStreamSocket(socket);\n    }\n\n    handle = wrap._handle;\n    wrapHasActiveWriteFromPrevOwner = wrap.writableLength > 0;\n  } else {\n    // 4. no socket\x2C one will be created with net.Socket().connect\n    wrap = null;\n    wrapHasActiveWriteFromPrevOwner = false;\n  }\n\n  // Just a documented property to make secure sockets\n  // distinguishable from regular ones.\n  this.encrypted = true;\n\n  ReflectApply(net.Socket\x2C this\x2C [{\n    handle: this._wrapHandle(wrap\x2C handle\x2C wrapHasActiveWriteFromPrevOwner)\x2C\n    allowHalfOpen: socket ? socket.allowHalfOpen : tlsOptions.allowHalfOpen\x2C\n    pauseOnCreate: tlsOptions.pauseOnConnect\x2C\n    manualStart: true\x2C\n    highWaterMark: tlsOptions.highWaterMark\x2C\n    onread: !socket ? tlsOptions.onread : null\x2C\n    signal: tlsOptions.signal\x2C\n  }]);\n\n  // Proxy for API compatibility\n  this.ssl = this._handle;  // C++ TLSWrap object\n\n  this.on('error'\x2C this._tlsError);\n\n  this._init(socket\x2C wrap);\n\n  if (enableTrace && this._handle)\n    this._handle.enableTrace();\n\n  if (wrapHasActiveWriteFromPrevOwner) {\n    // `wrap` is a streams.Writable in JS. This empty write will be queued\n    // and hence finish after all existing writes\x2C which is the timing\n    // we want to start to send any tls data to `wrap`.\n    wrap.write(''\x2C (err) => {\n      if (err) {\n        debug('error got before writing any tls data to the underlying stream');\n        this.destroy(err);\n        return;\n      }\n\n      this._handle.writesIssuedByPrevListenerDone();\n    });\n  }\n\n  // Read on next tick so the caller has a chance to setup listeners\n  process.nextTick(initRead\x2C this\x2C socket);\n}\nObjectSetPrototypeOf(TLSSocket.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(TLSSocket\x2C net.Socket);\nexports.TLSSocket = TLSSocket;\n\nconst proxiedMethods = [\n  'ref'\x2C 'unref'\x2C 'open'\x2C 'bind'\x2C 'listen'\x2C 'connect'\x2C 'bind6'\x2C\n  'connect6'\x2C 'getsockname'\x2C 'getpeername'\x2C 'setNoDelay'\x2C 'setKeepAlive'\x2C\n  'setSimultaneousAccepts'\x2C 'setBlocking'\x2C\n\n  // PipeWrap\n  'setPendingInstances'\x2C\n];\n\n// Proxy HandleWrap\x2C PipeWrap and TCPWrap methods\nfunction makeMethodProxy(name) {\n  return function methodProxy(...args) {\n    if (this._parent[name])\n      return ReflectApply(this._parent[name]\x2C this._parent\x2C args);\n  };\n}\nfor (const proxiedMethod of proxiedMethods) {\n  tls_wrap.TLSWrap.prototype[proxiedMethod] =\n    makeMethodProxy(proxiedMethod);\n}\n\ntls_wrap.TLSWrap.prototype.close = function close(cb) {\n  let ssl;\n  if (this[owner_symbol]) {\n    ssl = this[owner_symbol].ssl;\n    this[owner_symbol].ssl = null;\n  }\n\n  // Invoke `destroySSL` on close to clean up possibly pending write requests\n  // that may self-reference TLSWrap\x2C leading to leak\n  const done = () => {\n    if (ssl) {\n      ssl.destroySSL();\n      if (ssl._secureContext.singleUse) {\n        ssl._secureContext.context.close();\n        ssl._secureContext.context = null;\n      }\n    }\n    if (cb)\n      cb();\n  };\n\n  if (this._parentWrap) {\n    if (this._parentWrap._handle === null) {\n      // The socket handle was already closed.\n      done();\n      return;\n    }\n\n    if (this._parentWrap._handle === this._parent) {\n      this._parentWrap.once('close'\x2C done);\n      this._parentWrap.destroy();\n      return;\n    }\n  }\n\n  return this._parent.close(done);\n};\n\nTLSSocket.prototype.disableRenegotiation = function disableRenegotiation() {\n  this[kDisableRenegotiation] = true;\n};\n\n/**\n *\n * @param {null|net.Socket} wrap\n * @param {null|object} handle\n * @param {boolean} wrapHasActiveWriteFromPrevOwner\n * @returns {object}\n */\nTLSSocket.prototype._wrapHandle = function(wrap\x2C handle\x2C wrapHasActiveWriteFromPrevOwner) {\n  const options = this._tlsOptions;\n  if (!handle) {\n    handle = options.pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    handle[owner_symbol] = this;\n  }\n\n  // Wrap socket's handle\n  const context = options.secureContext ||\n                  options.credentials ||\n                  tls.createSecureContext(options);\n  assert(handle.isStreamBase\x2C 'handle must be a StreamBase');\n  if (!(context.context instanceof NativeSecureContext)) {\n    throw new ERR_TLS_INVALID_CONTEXT('context');\n  }\n\n  const res = tls_wrap.wrap(handle\x2C context.context\x2C\n                            !!options.isServer\x2C\n                            wrapHasActiveWriteFromPrevOwner);\n  res._parent = handle;  // C++ "wrap" object: TCPWrap\x2C JSStream\x2C ...\n  res._parentWrap = wrap;  // JS object: net.Socket\x2C JSStreamSocket\x2C ...\n  res._secureContext = context;\n  res.reading = handle.reading;\n  this[kRes] = res;\n  defineHandleReading(this\x2C handle);\n\n  // Guard against adding multiple listeners\x2C as this method may be called\n  // repeatedly on the same socket by reinitializeHandle\n  if (this.listenerCount('close'\x2C onSocketCloseDestroySSL) === 0) {\n    this.on('close'\x2C onSocketCloseDestroySSL);\n  }\n\n  if (wrap) {\n    wrap.on('close'\x2C () => this.destroy());\n  }\n\n  return res;\n};\n\nTLSSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\n  const originalServername = this.ssl ? this._handle.getServername() : null;\n  const originalSession = this.ssl ? this._handle.getSession() : null;\n\n  this.handle = this._wrapHandle(null\x2C handle\x2C false);\n  this.ssl = this._handle;\n\n  net.Socket.prototype[kReinitializeHandle].call(this\x2C this.handle);\n  this._init();\n\n  if (this._tlsOptions.enableTrace) {\n    this._handle.enableTrace();\n  }\n\n  if (originalSession) {\n    this.setSession(originalSession);\n  }\n\n  if (originalServername) {\n    this.setServername(originalServername);\n  }\n};\n\n// This eliminates a cyclic reference to TLSWrap\n// Ref: https://github.com/nodejs/node/commit/f7620fb96d339f704932f9bb9a0dceb9952df2d4\nfunction defineHandleReading(socket\x2C handle) {\n  ObjectDefineProperty(handle\x2C 'reading'\x2C {\n    __proto__: null\x2C\n    get: () => {\n      return socket[kRes].reading;\n    }\x2C\n    set: (value) => {\n      socket[kRes].reading = value;\n    }\x2C\n  });\n}\n\nfunction onSocketCloseDestroySSL() {\n  // Make sure we are not doing it on OpenSSL's stack\n  setImmediate(destroySSL\x2C this);\n  this[kRes] = null;\n}\n\nfunction destroySSL(self) {\n  self._destroySSL();\n}\n\nTLSSocket.prototype._destroySSL = function _destroySSL() {\n  if (!this.ssl) return;\n  this.ssl.destroySSL();\n  if (this.ssl._secureContext.singleUse) {\n    this.ssl._secureContext.context.close();\n    this.ssl._secureContext.context = null;\n  }\n  this.ssl = null;\n  this[kPendingSession] = null;\n  this[kIsVerified] = false;\n};\n\nfunction keylogNewListener(event) {\n  if (event !== 'keylog')\n    return;\n\n  // Guard against enableKeylogCallback after destroy\n  if (!this._handle) return;\n  this._handle.enableKeylogCallback();\n\n  // Remove this listener since it's no longer needed.\n  this.removeListener('newListener'\x2C keylogNewListener);\n}\n\nfunction newListener(event) {\n  if (event !== 'session')\n    return;\n\n  // Guard against enableSessionCallbacks after destroy\n  if (!this._handle) return;\n  this._handle.enableSessionCallbacks();\n\n  // Remove this listener since it's no longer needed.\n  this.removeListener('newListener'\x2C newListener);\n}\n\n// Constructor guts\x2C arbitrarily factored out.\nlet warnOnTlsKeylog = true;\nlet warnOnTlsKeylogError = true;\nTLSSocket.prototype._init = function(socket\x2C wrap) {\n  const options = this._tlsOptions;\n  const ssl = this._handle;\n  this.server = options.server;\n\n  debug('%s _init'\x2C\n        options.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!ssl\x2C\n  );\n\n  // Clients (!isServer) always request a cert\x2C servers request a client cert\n  // only on explicit configuration.\n  const requestCert = !!options.requestCert || !options.isServer;\n  const rejectUnauthorized = !!options.rejectUnauthorized;\n\n  this._requestCert = requestCert;\n  this._rejectUnauthorized = rejectUnauthorized;\n  if (requestCert || rejectUnauthorized)\n    ssl.setVerifyMode(requestCert\x2C rejectUnauthorized);\n\n  // Only call .onkeylog if there is a keylog listener.\n  ssl.onkeylog = onkeylog;\n\n  if (this.listenerCount('newListener'\x2C keylogNewListener) === 0) {\n    this.on('newListener'\x2C keylogNewListener);\n  }\n\n  if (options.isServer) {\n    ssl.onhandshakestart = onhandshakestart;\n    ssl.onhandshakedone = onhandshakedone;\n    ssl.onclienthello = loadSession;\n    ssl.oncertcb = loadSNI;\n    ssl.onnewsession = onnewsession;\n    ssl.lastHandshakeTime = 0;\n    ssl.handshakes = 0;\n\n    if (options.ALPNCallback) {\n      validateFunction(options.ALPNCallback\x2C 'options.ALPNCallback');\n      this[kALPNCallback] = options.ALPNCallback;\n      ssl.ALPNCallback = callALPNCallback;\n      ssl.enableALPNCb();\n    }\n\n    if (this.server) {\n      if (this.server.listenerCount('resumeSession') > 0 ||\n          this.server.listenerCount('newSession') > 0) {\n        // Also starts the client hello parser as a side effect.\n        ssl.enableSessionCallbacks();\n      }\n      if (this.server.listenerCount('OCSPRequest') > 0)\n        ssl.enableCertCb();\n    }\n  } else {\n    ssl.onhandshakestart = noop;\n    ssl.onhandshakedone = () => {\n      debug('client onhandshakedone');\n      this._finishInit();\n    };\n    ssl.onocspresponse = onocspresponse;\n\n    if (options.session)\n      ssl.setSession(options.session);\n\n    ssl.onnewsession = onnewsessionclient;\n\n    // Only call .onnewsession if there is a session listener.\n    if (this.listenerCount('newListener'\x2C newListener) === 0) {\n      this.on('newListener'\x2C newListener);\n    }\n  }\n\n  if (tlsKeylog) {\n    if (warnOnTlsKeylog) {\n      warnOnTlsKeylog = false;\n      process.emitWarning('Using --tls-keylog makes TLS connections insecure ' +\n        'by writing secret key material to file ' + tlsKeylog);\n    }\n    this.on('keylog'\x2C (line) => {\n      appendFile(tlsKeylog\x2C line\x2C { mode: 0o600 }\x2C (err) => {\n        if (err && warnOnTlsKeylogError) {\n          warnOnTlsKeylogError = false;\n          process.emitWarning('Failed to write TLS keylog (this warning ' +\n            'will not be repeated): ' + err);\n        }\n      });\n    });\n  }\n\n  ssl.onerror = onerror;\n\n  // If custom SNICallback was given\x2C or if\n  // there're SNI contexts to perform match against -\n  // set `.onsniselect` callback.\n  if (options.isServer &&\n      options.SNICallback &&\n      (options.SNICallback !== SNICallback ||\n       (options.server && options.server._contexts.length))) {\n    validateFunction(options.SNICallback\x2C 'options.SNICallback');\n    this._SNICallback = options.SNICallback;\n    ssl.enableCertCb();\n  }\n\n  if (options.ALPNProtocols)\n    ssl.setALPNProtocols(options.ALPNProtocols);\n\n  if (options.pskCallback && ssl.enablePskCallback) {\n    validateFunction(options.pskCallback\x2C 'pskCallback');\n\n    ssl[kOnPskExchange] = options.isServer ?\n      onPskServerCallback : onPskClientCallback;\n\n    this[kPskCallback] = options.pskCallback;\n    ssl.enablePskCallback();\n\n    if (options.pskIdentityHint) {\n      validateString(options.pskIdentityHint\x2C 'options.pskIdentityHint');\n      ssl.setPskIdentityHint(options.pskIdentityHint);\n    }\n  }\n\n  // We can only come here via [kWrapConnectedHandle]() call that happens\n  // if the connection is established with `autoSelectFamily` set to `true`.\n  const connectOptions = this[kConnectOptions];\n  if (!options.isServer && connectOptions) {\n    if (connectOptions.servername) {\n      this.setServername(connectOptions.servername);\n    }\n  }\n\n  if (options.handshakeTimeout > 0)\n    this.setTimeout(options.handshakeTimeout\x2C this._handleTimeout);\n\n  if (socket instanceof net.Socket) {\n    this._parent = socket;\n\n    // To prevent assertion in afterConnect() and properly kick off readStart\n    this.connecting = socket.connecting || !socket._handle;\n    socket.once('connect'\x2C () => {\n      this.connecting = false;\n      this.emit('connect');\n    });\n  }\n\n  // Assume `tls.connect()`\n  if (wrap) {\n    wrap.on('error'\x2C (err) => this._emitTLSError(err));\n  } else {\n    assert(!socket);\n    this.connecting = true;\n  }\n};\n\nTLSSocket.prototype.renegotiate = function(options\x2C callback) {\n  validateObject(options\x2C 'options');\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  debug('%s renegotiate()'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'destroyed?'\x2C this.destroyed\x2C\n  );\n\n  if (this.destroyed)\n    return;\n\n  let requestCert = !!this._requestCert;\n  let rejectUnauthorized = !!this._rejectUnauthorized;\n\n  if (options.requestCert !== undefined)\n    requestCert = !!options.requestCert;\n  if (options.rejectUnauthorized !== undefined)\n    rejectUnauthorized = !!options.rejectUnauthorized;\n\n  if (requestCert !== this._requestCert ||\n      rejectUnauthorized !== this._rejectUnauthorized) {\n    this._handle.setVerifyMode(requestCert\x2C rejectUnauthorized);\n    this._requestCert = requestCert;\n    this._rejectUnauthorized = rejectUnauthorized;\n  }\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  try {\n    this._handle.renegotiate();\n  } catch (err) {\n    if (callback) {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  if (callback) {\n    this.once('secure'\x2C () => callback(null));\n  }\n\n  return true;\n};\n\nTLSSocket.prototype.exportKeyingMaterial = function(length\x2C label\x2C context) {\n  validateUint32(length\x2C 'length'\x2C true);\n  validateString(label\x2C 'label');\n  if (context !== undefined)\n    validateBuffer(context\x2C 'context');\n\n  if (!this._secureEstablished)\n    throw new ERR_TLS_INVALID_STATE();\n\n  return this._handle.exportKeyingMaterial(length\x2C label\x2C context);\n};\n\nTLSSocket.prototype.setMaxSendFragment = function setMaxSendFragment(size) {\n  validateInt32(size\x2C 'size');\n  return this._handle.setMaxSendFragment(size) === 1;\n};\n\nTLSSocket.prototype._handleTimeout = function() {\n  this._emitTLSError(new ERR_TLS_HANDSHAKE_TIMEOUT());\n};\n\nTLSSocket.prototype._emitTLSError = function(err) {\n  const e = this._tlsError(err);\n  if (e)\n    this.emit('error'\x2C e);\n};\n\nTLSSocket.prototype._tlsError = function(err) {\n  this.emit('_tlsError'\x2C err);\n  if (this._controlReleased)\n    return err;\n  return null;\n};\n\nTLSSocket.prototype._releaseControl = function() {\n  if (this._controlReleased)\n    return false;\n  this._controlReleased = true;\n  this.removeListener('error'\x2C this._tlsError);\n  return true;\n};\n\nTLSSocket.prototype._finishInit = function() {\n  // Guard against getting onhandshakedone() after .destroy().\n  // * 1.2: If destroy() during onocspresponse()\x2C then write of next handshake\n  // record fails\x2C the handshake done info callbacks does not occur\x2C and the\n  // socket closes.\n  // * 1.3: The OCSP response comes in the same record that finishes handshake\x2C\n  // so even after .destroy()\x2C the handshake done info callback occurs\n  // immediately after onocspresponse(). Ignore it.\n  if (!this._handle)\n    return;\n\n  this.alpnProtocol = this._handle.getALPNNegotiatedProtocol();\n  // The servername could be set by TLSWrap::SelectSNIContextCallback().\n  if (this.servername === null) {\n    this.servername = this._handle.getServername();\n  }\n\n  debug('%s _finishInit'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'alpn'\x2C this.alpnProtocol\x2C\n        'servername'\x2C this.servername);\n\n  this._secureEstablished = true;\n  if (this._tlsOptions.handshakeTimeout > 0)\n    this.setTimeout(0\x2C this._handleTimeout);\n  this.emit('secure');\n};\n\nTLSSocket.prototype._start = function() {\n  debug('%s _start'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'connecting?'\x2C this.connecting\x2C\n        'requestOCSP?'\x2C !!this._tlsOptions.requestOCSP\x2C\n  );\n  if (this.connecting) {\n    this.once('connect'\x2C this._start);\n    return;\n  }\n\n  // Socket was destroyed before the connection was established\n  if (!this._handle)\n    return;\n\n  if (this._tlsOptions.requestOCSP)\n    this._handle.requestOCSP();\n  this._handle.start();\n};\n\nTLSSocket.prototype.setServername = function(name) {\n  validateString(name\x2C 'name');\n\n  if (this._tlsOptions.isServer) {\n    throw new ERR_TLS_SNI_FROM_SERVER();\n  }\n\n  this._handle.setServername(name);\n};\n\nTLSSocket.prototype.setSession = function(session) {\n  if (typeof session === 'string')\n    session = Buffer.from(session\x2C 'latin1');\n  this._handle.setSession(session);\n};\n\nTLSSocket.prototype.getPeerCertificate = function(detailed) {\n  if (this._handle) {\n    return common.translatePeerCertificate(\n      this._handle.getPeerCertificate(detailed)) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getCertificate = function() {\n  if (this._handle) {\n    // It's not a peer cert\x2C but the formatting is identical.\n    return common.translatePeerCertificate(\n      this._handle.getCertificate()) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getPeerX509Certificate = function(detailed) {\n  const cert = this._handle?.getPeerX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\nTLSSocket.prototype.getX509Certificate = function() {\n  const cert = this._handle?.getX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\nTLSSocket.prototype.setKeyCert = function(context) {\n  if (this._handle) {\n    let secureContext;\n    if (context instanceof common.SecureContext)\n      secureContext = context;\n    else\n      secureContext = tls.createSecureContext(context);\n    this._handle.setKeyCert(secureContext.context);\n  }\n};\n\n// Proxy TLSSocket handle methods\nfunction makeSocketMethodProxy(name) {\n  return function socketMethodProxy(...args) {\n    if (this._handle)\n      return ReflectApply(this._handle[name]\x2C this._handle\x2C args);\n    return null;\n  };\n}\n\n[\n  'getCipher'\x2C\n  'getSharedSigalgs'\x2C\n  'getEphemeralKeyInfo'\x2C\n  'getFinished'\x2C\n  'getPeerFinished'\x2C\n  'getProtocol'\x2C\n  'getSession'\x2C\n  'getTLSTicket'\x2C\n  'isSessionReused'\x2C\n  'enableTrace'\x2C\n].forEach((method) => {\n  TLSSocket.prototype[method] = makeSocketMethodProxy(method);\n});\n\n// TODO: support anonymous (nocert)\n\n\nfunction onServerSocketSecure() {\n  if (this._requestCert) {\n    const verifyError = this._handle.verifyError();\n    if (verifyError) {\n      this.authorizationError = verifyError.code;\n\n      if (this._rejectUnauthorized)\n        this.destroy();\n    } else {\n      this.authorized = true;\n    }\n  }\n\n  if (!this.destroyed && this._releaseControl()) {\n    debug('server emit secureConnection');\n    this.secureConnecting = false;\n    this._tlsOptions.server.emit('secureConnection'\x2C this);\n  }\n}\n\nfunction onSocketTLSError(err) {\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    debug('server emit tlsClientError:'\x2C err);\n    this._tlsOptions.server.emit('tlsClientError'\x2C err\x2C this);\n  }\n}\n\nfunction onSocketKeylog(line) {\n  this._tlsOptions.server.emit('keylog'\x2C line\x2C this);\n}\n\nfunction onSocketClose(err) {\n  // Closed because of error - no need to emit it twice\n  if (err)\n    return;\n\n  // Emit ECONNRESET\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    const connReset = new ConnResetException('socket hang up');\n    this._tlsOptions.server.emit('tlsClientError'\x2C connReset\x2C this);\n  }\n}\n\nfunction tlsConnectionListener(rawSocket) {\n  debug('net.Server.on(connection): new TLSSocket');\n  const socket = new TLSSocket(rawSocket\x2C {\n    secureContext: this._sharedCreds\x2C\n    isServer: true\x2C\n    server: this\x2C\n    requestCert: this.requestCert\x2C\n    rejectUnauthorized: this.rejectUnauthorized\x2C\n    handshakeTimeout: this[kHandshakeTimeout]\x2C\n    ALPNProtocols: this.ALPNProtocols\x2C\n    ALPNCallback: this.ALPNCallback\x2C\n    SNICallback: this[kSNICallback] || SNICallback\x2C\n    enableTrace: this[kEnableTrace]\x2C\n    pauseOnConnect: this.pauseOnConnect\x2C\n    pskCallback: this[kPskCallback]\x2C\n    pskIdentityHint: this[kPskIdentityHint]\x2C\n  });\n\n  socket.on('secure'\x2C onServerSocketSecure);\n\n  if (this.listenerCount('keylog') > 0)\n    socket.on('keylog'\x2C onSocketKeylog);\n\n  socket[kErrorEmitted] = false;\n  socket.on('close'\x2C onSocketClose);\n  socket.on('_tlsError'\x2C onSocketTLSError);\n}\n\n// AUTHENTICATION MODES\n//\n// There are several levels of authentication that TLS/SSL supports.\n// Read more about this in "man SSL_set_verify".\n//\n// 1. The server sends a certificate to the client but does not request a\n// cert from the client. This is common for most HTTPS servers. The browser\n// can verify the identity of the server\x2C but the server does not know who\n// the client is. Authenticating the client is usually done over HTTP using\n// login boxes and cookies and stuff.\n//\n// 2. The server sends a cert to the client and requests that the client\n// also send it a cert. The client knows who the server is and the server is\n// requesting the client also identify themselves. There are several\n// outcomes:\n//\n//   A) verifyError returns null meaning the client's certificate is signed\n//   by one of the server's CAs. The server now knows the client's identity\n//   and the client is authorized.\n//\n//   B) For some reason the client's certificate is not acceptable -\n//   verifyError returns a string indicating the problem. The server can\n//   either (i) reject the client or (ii) allow the client to connect as an\n//   unauthorized connection.\n//\n// The mode is controlled by two boolean variables.\n//\n// requestCert\n//   If true the server requests a certificate from client connections. For\n//   the common HTTPS case\x2C users will want this to be false\x2C which is what\n//   it defaults to.\n//\n// rejectUnauthorized\n//   If true clients whose certificates are invalid for any reason will not\n//   be allowed to make connections. If false\x2C they will simply be marked as\n//   unauthorized but secure communication will continue. By default this is\n//   true.\n//\n//\n//\n// Options:\n// - requestCert. Send verify request. Default to false.\n// - rejectUnauthorized. Boolean\x2C default to true.\n// - key. string.\n// - cert: string.\n// - clientCertEngine: string.\n// - ca: string or array of strings.\n// - sessionTimeout: integer.\n//\n// emit 'secureConnection'\n//   function (tlsSocket) { }\n//\n//   "UNABLE_TO_GET_ISSUER_CERT"\x2C "UNABLE_TO_GET_CRL"\x2C\n//   "UNABLE_TO_DECRYPT_CERT_SIGNATURE"\x2C "UNABLE_TO_DECRYPT_CRL_SIGNATURE"\x2C\n//   "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"\x2C "CERT_SIGNATURE_FAILURE"\x2C\n//   "CRL_SIGNATURE_FAILURE"\x2C "CERT_NOT_YET_VALID" "CERT_HAS_EXPIRED"\x2C\n//   "CRL_NOT_YET_VALID"\x2C "CRL_HAS_EXPIRED" "ERROR_IN_CERT_NOT_BEFORE_FIELD"\x2C\n//   "ERROR_IN_CERT_NOT_AFTER_FIELD"\x2C "ERROR_IN_CRL_LAST_UPDATE_FIELD"\x2C\n//   "ERROR_IN_CRL_NEXT_UPDATE_FIELD"\x2C "OUT_OF_MEM"\x2C\n//   "DEPTH_ZERO_SELF_SIGNED_CERT"\x2C "SELF_SIGNED_CERT_IN_CHAIN"\x2C\n//   "UNABLE_TO_GET_ISSUER_CERT_LOCALLY"\x2C "UNABLE_TO_VERIFY_LEAF_SIGNATURE"\x2C\n//   "CERT_CHAIN_TOO_LONG"\x2C "CERT_REVOKED" "INVALID_CA"\x2C\n//   "PATH_LENGTH_EXCEEDED"\x2C "INVALID_PURPOSE" "CERT_UNTRUSTED"\x2C\n//   "CERT_REJECTED"\n//\nfunction Server(options\x2C listener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C listener);\n\n  if (typeof options === 'function') {\n    listener = options;\n    options = kEmptyObject;\n  } else if (options == null || typeof options === 'object') {\n    options ??= kEmptyObject;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._contexts = [];\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  this.ALPNCallback = options.ALPNCallback;\n  if (this.ALPNCallback && options.ALPNProtocols) {\n    throw new ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS();\n  }\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n\n  this.setSecureContext(options);\n\n  this[kHandshakeTimeout] = options.handshakeTimeout || (120 * 1000);\n  this[kSNICallback] = options.SNICallback;\n  this[kPskCallback] = options.pskCallback;\n  this[kPskIdentityHint] = options.pskIdentityHint;\n\n  validateNumber(this[kHandshakeTimeout]\x2C 'options.handshakeTimeout');\n\n  if (this[kSNICallback]) {\n    validateFunction(this[kSNICallback]\x2C 'options.SNICallback');\n  }\n\n  if (this[kPskCallback]) {\n    validateFunction(this[kPskCallback]\x2C 'options.pskCallback');\n  }\n\n  if (this[kPskIdentityHint]) {\n    validateString(this[kPskIdentityHint]\x2C 'options.pskIdentityHint');\n  }\n\n  // constructor call\n  ReflectApply(net.Server\x2C this\x2C [options\x2C tlsConnectionListener]);\n\n  if (listener) {\n    this.on('secureConnection'\x2C listener);\n  }\n\n  this[kEnableTrace] = options.enableTrace;\n}\n\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\nexports.Server = Server;\nexports.createServer = function createServer(options\x2C listener) {\n  return new Server(options\x2C listener);\n};\n\n\nServer.prototype.setSecureContext = function(options) {\n  validateObject(options\x2C 'options');\n\n  if (options.pfx)\n    this.pfx = options.pfx;\n  else\n    this.pfx = undefined;\n\n  if (options.key)\n    this.key = options.key;\n  else\n    this.key = undefined;\n\n  if (options.passphrase)\n    this.passphrase = options.passphrase;\n  else\n    this.passphrase = undefined;\n\n  if (options.cert)\n    this.cert = options.cert;\n  else\n    this.cert = undefined;\n\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  else\n    this.clientCertEngine = undefined;\n\n  if (options.ca)\n    this.ca = options.ca;\n  else\n    this.ca = undefined;\n\n  if (options.minVersion)\n    this.minVersion = options.minVersion;\n  else\n    this.minVersion = undefined;\n\n  if (options.maxVersion)\n    this.maxVersion = options.maxVersion;\n  else\n    this.maxVersion = undefined;\n\n  if (options.secureProtocol)\n    this.secureProtocol = options.secureProtocol;\n  else\n    this.secureProtocol = undefined;\n\n  if (options.crl)\n    this.crl = options.crl;\n  else\n    this.crl = undefined;\n\n  this.sigalgs = options.sigalgs;\n\n  if (options.ciphers)\n    this.ciphers = options.ciphers;\n  else\n    this.ciphers = undefined;\n\n  this.ecdhCurve = options.ecdhCurve;\n\n  if (options.dhparam)\n    this.dhparam = options.dhparam;\n  else\n    this.dhparam = undefined;\n\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n\n  const secureOptions = options.secureOptions || 0;\n\n  if (secureOptions)\n    this.secureOptions = secureOptions;\n  else\n    this.secureOptions = undefined;\n\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = crypto.createHash('sha1')\n      .update(process.argv.join(' '))\n      .digest('hex')\n      .slice(0\x2C 32);\n  }\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  this.privateKeyIdentifier = options.privateKeyIdentifier;\n  this.privateKeyEngine = options.privateKeyEngine;\n\n  this._sharedCreds = tls.createSecureContext({\n    pfx: this.pfx\x2C\n    key: this.key\x2C\n    passphrase: this.passphrase\x2C\n    cert: this.cert\x2C\n    clientCertEngine: this.clientCertEngine\x2C\n    ca: this.ca\x2C\n    ciphers: this.ciphers\x2C\n    sigalgs: this.sigalgs\x2C\n    ecdhCurve: this.ecdhCurve\x2C\n    dhparam: this.dhparam\x2C\n    minVersion: this.minVersion\x2C\n    maxVersion: this.maxVersion\x2C\n    secureProtocol: this.secureProtocol\x2C\n    secureOptions: this.secureOptions\x2C\n    honorCipherOrder: this.honorCipherOrder\x2C\n    crl: this.crl\x2C\n    sessionIdContext: this.sessionIdContext\x2C\n    ticketKeys: this.ticketKeys\x2C\n    sessionTimeout: this.sessionTimeout\x2C\n    privateKeyIdentifier: this.privateKeyIdentifier\x2C\n    privateKeyEngine: this.privateKeyEngine\x2C\n  });\n};\n\n\nServer.prototype._getServerData = function() {\n  return {\n    ticketKeys: this.getTicketKeys().toString('hex')\x2C\n  };\n};\n\n\nServer.prototype._setServerData = function(data) {\n  this.setTicketKeys(Buffer.from(data.ticketKeys\x2C 'hex'));\n};\n\n\nServer.prototype.getTicketKeys = function getTicketKeys() {\n  return this._sharedCreds.context.getTicketKeys();\n};\n\n\nServer.prototype.setTicketKeys = function setTicketKeys(keys) {\n  validateBuffer(keys);\n  assert(keys.byteLength === 48\x2C\n         'Session ticket keys must be a 48-byte buffer');\n  this._sharedCreds.context.setTicketKeys(keys);\n};\n\n\nServer.prototype.setOptions = deprecate(function(options) {\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.pfx) this.pfx = options.pfx;\n  if (options.key) this.key = options.key;\n  if (options.passphrase) this.passphrase = options.passphrase;\n  if (options.cert) this.cert = options.cert;\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  if (options.ca) this.ca = options.ca;\n  if (options.minVersion) this.minVersion = options.minVersion;\n  if (options.maxVersion) this.maxVersion = options.maxVersion;\n  if (options.secureProtocol) this.secureProtocol = options.secureProtocol;\n  if (options.crl) this.crl = options.crl;\n  if (options.ciphers) this.ciphers = options.ciphers;\n  if (options.ecdhCurve !== undefined)\n    this.ecdhCurve = options.ecdhCurve;\n  if (options.dhparam) this.dhparam = options.dhparam;\n  if (options.sessionTimeout) this.sessionTimeout = options.sessionTimeout;\n  if (options.ticketKeys) this.ticketKeys = options.ticketKeys;\n  const secureOptions = options.secureOptions || 0;\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n  if (secureOptions) this.secureOptions = secureOptions;\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = crypto.createHash('sha1')\n      .update(process.argv.join(' '))\n      .digest('hex')\n      .slice(0\x2C 32);\n  }\n  if (options.pskCallback) this[kPskCallback] = options.pskCallback;\n  if (options.pskIdentityHint) this[kPskIdentityHint] = options.pskIdentityHint;\n  if (options.sigalgs) this.sigalgs = options.sigalgs;\n  if (options.privateKeyIdentifier !== undefined)\n    this.privateKeyIdentifier = options.privateKeyIdentifier;\n  if (options.privateKeyEngine !== undefined)\n    this.privateKeyEngine = options.privateKeyEngine;\n}\x2C 'Server.prototype.setOptions() is deprecated'\x2C 'DEP0122');\n\n// SNI Contexts High-Level API\nServer.prototype.addContext = function(servername\x2C context) {\n  if (!servername) {\n    throw new ERR_TLS_REQUIRED_SERVER_NAME();\n  }\n\n  const re = new RegExp(`^${\n    servername\n      .replace(/([.^$+?\\-\\\\[\\]{}])/g\x2C '\\\\$1')\n      .replaceAll('*'\x2C '[^.]*')\n  }$`);\n\n  const secureContext =\n    context instanceof common.SecureContext ? context : tls.createSecureContext(context);\n  this._contexts.push([re\x2C secureContext.context]);\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'secureConnection':\n      sock.destroy(err);\n      break;\n    default:\n      ReflectApply(net.Server.prototype[SymbolFor('nodejs.rejection')]\x2C this\x2C\n                   [err\x2C event\x2C sock]);\n  }\n};\n\nfunction SNICallback(servername\x2C callback) {\n  const contexts = this.server._contexts;\n\n  for (let i = contexts.length - 1; i >= 0; --i) {\n    const elem = contexts[i];\n    if (elem[0].test(servername)) {\n      callback(null\x2C elem[1]);\n      return;\n    }\n  }\n\n  callback(null\x2C undefined);\n}\n\n\n// Target API:\n//\n//  let s = tls.connect({port: 8000\x2C host: "google.com"}\x2C function() {\n//    if (!s.authorized) {\n//      s.destroy();\n//      return;\n//    }\n//\n//    // s.socket;\n//\n//    s.end("hello world\\n");\n//  });\n//\n//\nfunction normalizeConnectArgs(listArgs) {\n  const args = net._normalizeArgs(listArgs);\n  const options = args[0];\n  const cb = args[1];\n\n  // If args[0] was options\x2C then normalize dealt with it.\n  // If args[0] is port\x2C or args[0]\x2C args[1] is host\x2C port\x2C we need to\n  // find the options and merge them in\x2C normalize's options has only\n  // the host/port/path args that it knows about\x2C not the tls options.\n  // This means that options.host overrides a host arg.\n  if (listArgs[1] !== null && typeof listArgs[1] === 'object') {\n    ObjectAssign(options\x2C listArgs[1]);\n  } else if (listArgs[2] !== null && typeof listArgs[2] === 'object') {\n    ObjectAssign(options\x2C listArgs[2]);\n  }\n\n  return cb ? [options\x2C cb] : [options];\n}\n\nfunction onConnectSecure() {\n  const options = this[kConnectOptions];\n\n  // Check the size of DHE parameter above minimum requirement\n  // specified in options.\n  const ekeyinfo = this.getEphemeralKeyInfo();\n  if (ekeyinfo.type === 'DH' && ekeyinfo.size < options.minDHSize) {\n    const err = new ERR_TLS_DH_PARAM_SIZE(ekeyinfo.size);\n    debug('client emit:'\x2C err);\n    this.emit('error'\x2C err);\n    this.destroy();\n    return;\n  }\n\n  let verifyError = this._handle.verifyError();\n\n  // Verify that server's identity matches it's certificate's names\n  // Unless server has resumed our existing session\n  if (!verifyError && !this.isSessionReused()) {\n    const hostname = options.servername ||\n                   options.host ||\n                   (options.socket?._host) ||\n                   'localhost';\n    const cert = this.getPeerCertificate(true);\n    verifyError = options.checkServerIdentity(hostname\x2C cert);\n  }\n\n  if (verifyError) {\n    this.authorized = false;\n    this.authorizationError = verifyError.code || verifyError.message;\n\n    // rejectUnauthorized property can be explicitly defined as `undefined`\n    // causing the assignment to default value (`true`) fail. Before assigning\n    // it to the tlssock connection options\x2C explicitly check if it is false\n    // and update rejectUnauthorized property. The property gets used by\n    // TLSSocket connection handler to allow or reject connection if\n    // unauthorized.\n    // This check is potentially redundant\x2C however it is better to keep it\n    // in case the option object gets modified somewhere.\n    if (options.rejectUnauthorized !== false) {\n      this.destroy(verifyError);\n      return;\n    }\n    debug('client emit secureConnect. rejectUnauthorized: %s\x2C ' +\n          'authorizationError: %s'\x2C options.rejectUnauthorized\x2C\n          this.authorizationError);\n  } else {\n    this.authorized = true;\n    debug('client emit secureConnect. authorized:'\x2C this.authorized);\n  }\n  this.secureConnecting = false;\n  this.emit('secureConnect');\n\n  this[kIsVerified] = true;\n  const session = this[kPendingSession];\n  this[kPendingSession] = null;\n  if (session)\n    this.emit('session'\x2C session);\n\n  this.removeListener('end'\x2C onConnectEnd);\n}\n\nfunction onConnectEnd() {\n  // NOTE: This logic is shared with _http_client.js\n  if (!this._hadError) {\n    const options = this[kConnectOptions];\n    this._hadError = true;\n    const error = new ConnResetException('Client network socket disconnected ' +\n                                         'before secure TLS connection was ' +\n                                         'established');\n    error.path = options.path;\n    error.host = options.host;\n    error.port = options.port;\n    error.localAddress = options.localAddress;\n    this.destroy(error);\n  }\n}\n\n// Arguments: [port\x2C] [host\x2C] [options\x2C] [cb]\nexports.connect = function connect(...args) {\n  args = normalizeConnectArgs(args);\n  let options = args[0];\n  const cb = args[1];\n  const allowUnauthorized = getAllowUnauthorized();\n\n  options = {\n    rejectUnauthorized: !allowUnauthorized\x2C\n    ciphers: tls.DEFAULT_CIPHERS\x2C\n    checkServerIdentity: tls.checkServerIdentity\x2C\n    minDHSize: 1024\x2C\n    ...options\x2C\n  };\n\n  if (!options.keepAlive)\n    options.singleUse = true;\n\n  validateFunction(options.checkServerIdentity\x2C 'options.checkServerIdentity');\n  validateNumber(options.minDHSize\x2C 'options.minDHSize'\x2C 1);\n\n  const context = options.secureContext || tls.createSecureContext(options);\n\n  const tlssock = new TLSSocket(options.socket\x2C {\n    allowHalfOpen: options.allowHalfOpen\x2C\n    pipe: !!options.path\x2C\n    secureContext: context\x2C\n    isServer: false\x2C\n    requestCert: true\x2C\n    rejectUnauthorized: options.rejectUnauthorized !== false\x2C\n    session: options.session\x2C\n    ALPNProtocols: options.ALPNProtocols\x2C\n    requestOCSP: options.requestOCSP\x2C\n    enableTrace: options.enableTrace\x2C\n    pskCallback: options.pskCallback\x2C\n    highWaterMark: options.highWaterMark\x2C\n    onread: options.onread\x2C\n    signal: options.signal\x2C\n  });\n\n  // rejectUnauthorized property can be explicitly defined as `undefined`\n  // causing the assignment to default value (`true`) fail. Before assigning\n  // it to the tlssock connection options\x2C explicitly check if it is false\n  // and update rejectUnauthorized property. The property gets used by TLSSocket\n  // connection handler to allow or reject connection if unauthorized\n  options.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  tlssock[kConnectOptions] = options;\n\n  if (cb)\n    tlssock.once('secureConnect'\x2C cb);\n\n  if (!options.socket) {\n    // If user provided the socket\x2C it's their responsibility to manage its\n    // connectivity. If we created one internally\x2C we connect it.\n    if (options.timeout) {\n      tlssock.setTimeout(options.timeout);\n    }\n\n    tlssock.connect(options\x2C tlssock._start);\n  }\n\n  tlssock._releaseControl();\n\n  if (options.session)\n    tlssock.setSession(options.session);\n\n  if (options.servername) {\n    if (!ipServernameWarned && net.isIP(options.servername)) {\n      process.emitWarning(\n        'Setting the TLS ServerName to an IP address is not permitted by ' +\n        'RFC 6066. This will be ignored in a future version.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0123'\x2C\n      );\n      ipServernameWarned = true;\n    }\n    tlssock.setServername(options.servername);\n  }\n\n  if (options.socket)\n    tlssock._start();\n\n  tlssock.on('secure'\x2C onConnectSecure);\n  tlssock.prependListener('end'\x2C onConnectEnd);\n\n  return tlssock;\n};\n
code-source-info,0x12ea98674ec8,141,0,53463,C0O0C4O53463,,
code-creation,JS,9,157333,0x12ea986755a8,2008, node:_tls_wrap:1:1,0x31c3bc754e8,~
code-source-info,0x12ea986755a
tick,0x1925278f4,157417,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1011faa5c,157583,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,157708,0x12ea986760a8,5, node:crypto:1:1,0x31c3bc79190,~
script-source,142,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\n// binary-encoded strings rather than buffers.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\x2C\n} = require('internal/util');\nassertCrypto();\n\nconst {\n  ERR_CRYPTO_FIPS_FORCED\x2C\n  ERR_WORKER_UNSUPPORTED_OPERATION\x2C\n} = require('internal/errors').codes;\nconst constants = internalBinding('constants').crypto;\nconst { getOptionValue } = require('internal/options');\nconst {\n  getFipsCrypto\x2C\n  setFipsCrypto\x2C\n  timingSafeEqual\x2C\n} = internalBinding('crypto');\nconst {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n} = require('internal/crypto/random');\nconst {\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n} = require('internal/crypto/pbkdf2');\nconst {\n  scrypt\x2C\n  scryptSync\x2C\n} = require('internal/crypto/scrypt');\nconst {\n  hkdf\x2C\n  hkdfSync\x2C\n} = require('internal/crypto/hkdf');\nconst {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n} = require('internal/crypto/keygen');\nconst {\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n} = require('internal/crypto/keys');\nconst {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\x2C\n} = require('internal/crypto/diffiehellman');\nconst {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n} = require('internal/crypto/cipher');\nconst {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\x2C\n} = require('internal/crypto/sig');\nconst {\n  Hash\x2C\n  Hmac\x2C\n  hash\x2C\n} = require('internal/crypto/hash');\nconst {\n  X509Certificate\x2C\n} = require('internal/crypto/x509');\nconst {\n  getCiphers\x2C\n  getCurves\x2C\n  getHashes\x2C\n  setEngine\x2C\n  secureHeapUsed\x2C\n} = require('internal/crypto/util');\nconst Certificate = require('internal/crypto/certificate');\n\nlet webcrypto;\nfunction lazyWebCrypto() {\n  webcrypto ??= require('internal/crypto/webcrypto');\n  return webcrypto;\n}\n\nlet ownsProcessState;\nfunction lazyOwnsProcessState() {\n  ownsProcessState ??= require('internal/worker').ownsProcessState;\n  return ownsProcessState;\n}\n\n// These helper functions are needed because the constructors can\n// use new\x2C in which case V8 cannot inline the recursive constructor call\nfunction createHash(algorithm\x2C options) {\n  return new Hash(algorithm\x2C options);\n}\n\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n}\n\nfunction createDiffieHellmanGroup(name) {\n  return new DiffieHellmanGroup(name);\n}\n\nfunction createECDH(curve) {\n  return new ECDH(curve);\n}\n\nfunction createHmac(hmac\x2C key\x2C options) {\n  return new Hmac(hmac\x2C key\x2C options);\n}\n\nfunction createSign(algorithm\x2C options) {\n  return new Sign(algorithm\x2C options);\n}\n\nfunction createVerify(algorithm\x2C options) {\n  return new Verify(algorithm\x2C options);\n}\n\nmodule.exports = {\n  // Methods\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  createCipheriv\x2C\n  createDecipheriv\x2C\n  createDiffieHellman\x2C\n  createDiffieHellmanGroup\x2C\n  createECDH\x2C\n  createHash\x2C\n  createHmac\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  createSecretKey\x2C\n  createSign\x2C\n  createVerify\x2C\n  diffieHellman\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  getCiphers\x2C\n  getCipherInfo\x2C\n  getCurves\x2C\n  getDiffieHellman: createDiffieHellmanGroup\x2C\n  getHashes\x2C\n  hkdf\x2C\n  hkdfSync\x2C\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n  scrypt\x2C\n  scryptSync\x2C\n  sign: signOneShot\x2C\n  setEngine\x2C\n  timingSafeEqual\x2C\n  getFips\x2C\n  setFips\x2C\n  verify: verifyOneShot\x2C\n  hash\x2C\n\n  // Classes\n  Certificate\x2C\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  Hash: deprecate(Hash\x2C 'crypto.Hash constructor is deprecated.'\x2C 'DEP0179')\x2C\n  Hmac: deprecate(Hmac\x2C 'crypto.Hmac constructor is deprecated.'\x2C 'DEP0181')\x2C\n  KeyObject\x2C\n  Sign\x2C\n  Verify\x2C\n  X509Certificate\x2C\n  secureHeapUsed\x2C\n};\n\nfunction getFips() {\n  return getOptionValue('--force-fips') ? 1 : getFipsCrypto();\n}\n\nfunction setFips(val) {\n  if (getOptionValue('--force-fips')) {\n    if (val) return;\n    throw new ERR_CRYPTO_FIPS_FORCED();\n  } else {\n    if (!lazyOwnsProcessState()) {\n      throw new ERR_WORKER_UNSUPPORTED_OPERATION('Calling crypto.setFips()');\n    }\n    setFipsCrypto(val);\n  }\n}\n\nfunction getRandomValues(array) {\n  return lazyWebCrypto().crypto.getRandomValues(array);\n}\n\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\n  __proto__: null\x2C\n  get() {\n    const value = getOptionValue('--tls-cipher-list');\n    ObjectDefineProperty(this\x2C 'defaultCipherList'\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      value\x2C\n    });\n    return value;\n  }\x2C\n  set(val) {\n    ObjectDefineProperty(this\x2C 'defaultCipherList'\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      value: val\x2C\n    });\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nfunction getRandomBytesAlias(key) {\n  return {\n    enumerable: false\x2C\n    configurable: true\x2C\n    get() {\n      let value;\n      if (getOptionValue('--pending-deprecation')) {\n        value = deprecate(\n          randomBytes\x2C\n          `crypto.${key} is deprecated.`\x2C\n          'DEP0115');\n      } else {\n        value = randomBytes;\n      }\n      ObjectDefineProperty(\n        this\x2C\n        key\x2C\n        {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          writable: true\x2C\n          value: value\x2C\n        }\x2C\n      );\n      return value;\n    }\x2C\n    set(value) {\n      ObjectDefineProperty(\n        this\x2C\n        key\x2C\n        {\n          __proto__: null\x2C\n          enumerable: true\x2C\n          configurable: true\x2C\n          writable: true\x2C\n          value\x2C\n        }\x2C\n      );\n    }\x2C\n  };\n}\n\nObjectDefineProperties(module.exports\x2C {\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\n  fips: {\n    __proto__: null\x2C\n    get: getFips\x2C\n    set: setFips\x2C\n  }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n\n  webcrypto: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get() { return lazyWebCrypto().crypto; }\x2C\n    set: undefined\x2C\n  }\x2C\n\n  subtle: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get() { return lazyWebCrypto().crypto.subtle; }\x2C\n    set: undefined\x2C\n  }\x2C\n\n  getRandomValues: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: () => getRandomValues\x2C\n    set: undefined\x2C\n  }\x2C\n\n  // Aliases for randomBytes are deprecated.\n  // The ecosystem needs those to exist for backwards compatibility.\n  prng: getRandomBytesAlias('prng')\x2C\n  pseudoRandomBytes: getRandomBytesAlias('pseudoRandomBytes')\x2C\n  rng: getRandomBytesAlias('rng')\x2C\n});\n
code-source-info,0x12ea986760a8,142,0,8421,C0O0C4O8421,,
code-creation,JS,9,158000,0x12ea98676568,1594, node:crypto:1:1,0x31c3bc793c8,~
code-source-info,0x12ea
new,MemoryChunk,0x32afbc400000,262144
new,MemoryChunk,0x51523800000,262144
new,MemoryChunk,0xc0541840000,262144
new,MemoryChunk,0x2e3cb72c0000,262144
tick,0x1012a4c24,158833,0,0x0,5,0x107f890bc,0x107f88e30,0x12ea98676691,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,159208,0x12ea98676dd0,5, node:internal/crypto/random:1:1,0x31c3bc7a678,~
script-source,143,node:internal/crypto/random,'use strict';\n\nconst {\n  Array\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  BigInt\x2C\n  BigIntPrototypeToString\x2C\n  DataView\x2C\n  DataViewPrototypeGetUint8\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  NumberIsSafeInteger\x2C\n  NumberPrototypeToString\x2C\n  StringFromCharCodeApply\x2C\n  StringPrototypePadStart\x2C\n} = primordials;\n\nconst {\n  RandomBytesJob\x2C\n  RandomPrimeJob\x2C\n  CheckPrimeJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  secureBuffer\x2C\n} = internalBinding('crypto');\n\nconst {\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst { Buffer\x2C kMaxLength } = require('buffer');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OPERATION_FAILED\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateNumber\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isTypedArray\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n} = require('internal/util/types');\n\nconst { FastBuffer } = require('internal/buffer');\n\nconst kMaxInt32 = 2 ** 31 - 1;\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\n\nfunction assertOffset(offset\x2C elementSize\x2C length) {\n  validateNumber(offset\x2C 'offset');\n  offset *= elementSize;\n\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\n  }\n\n  return offset >>> 0;  // Convert to uint32.\n}\n\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\n  validateNumber(size\x2C 'size');\n  size *= elementSize;\n\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\n  }\n\n  if (size + offset > length) {\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\n  }\n\n  return size >>> 0;  // Convert to uint32.\n}\n\nfunction randomBytes(size\x2C callback) {\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\n  if (callback !== undefined) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  const buf = new FastBuffer(size);\n\n  if (callback === undefined) {\n    randomFillSync(buf.buffer\x2C 0\x2C size);\n    return buf;\n  }\n\n  // Keep the callback as a regular function so this is propagated.\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\n    if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n  });\n}\n\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0)\n    return buf;\n\n  const job = new RandomBytesJob(\n    kCryptoJobSync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n\n  const err = job.run()[0];\n  if (err)\n    throw err;\n\n  return buf;\n}\n\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  if (typeof offset === 'function') {\n    callback = offset;\n    offset = 0;\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    callback = size;\n    size = buf.length - offset;\n  } else {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0) {\n    callback(null\x2C buf);\n    return;\n  }\n\n  const job = new RandomBytesJob(\n    kCryptoJobAsync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\n  job.run();\n}\n\n// Largest integer we can read from a buffer.\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\n\n// Cache random data to use in randomInt. The cache size must be evenly\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\nconst randomCache = new FastBuffer(6 * 1024);\nlet randomCacheOffset = randomCache.length;\nlet asyncCacheFillInProgress = false;\nconst asyncCachePendingTasks = [];\n\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\n// exclusive.\nfunction randomInt(min\x2C max\x2C callback) {\n  // Detect optional min syntax\n  // randomInt(max)\n  // randomInt(max\x2C callback)\n  const minNotSpecified = typeof max === 'undefined' ||\n    typeof max === 'function';\n\n  if (minNotSpecified) {\n    callback = max;\n    max = min;\n    min = 0;\n  }\n\n  const isSync = typeof callback === 'undefined';\n  if (!isSync) {\n    validateFunction(callback\x2C 'callback');\n  }\n  if (!NumberIsSafeInteger(min)) {\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\n  }\n  if (!NumberIsSafeInteger(max)) {\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\n  }\n  if (max <= min) {\n    throw new ERR_OUT_OF_RANGE(\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\x2C\n    );\n  }\n\n  // First we generate a random int between [0..range)\n  const range = max - min;\n\n  if (!(range <= RAND_MAX)) {\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\n                               `<= ${RAND_MAX}`\x2C range);\n  }\n\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\n  // less than range\x2C x must be drawn randomly from the set of integers greater\n  // than or equal to 0 and less than randLimit.\n  const randLimit = RAND_MAX - (RAND_MAX % range);\n\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\n  // do this synchronously\x2C which is super fast.\n  while (isSync || (randomCacheOffset < randomCache.length)) {\n    if (randomCacheOffset === randomCache.length) {\n      // This might block the thread for a bit\x2C but we are in sync mode.\n      randomFillSync(randomCache);\n      randomCacheOffset = 0;\n    }\n\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\n    randomCacheOffset += 6;\n\n    if (x < randLimit) {\n      const n = (x % range) + min;\n      if (isSync) return n;\n      process.nextTick(callback\x2C undefined\x2C n);\n      return;\n    }\n  }\n\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\n  // simply refill the cache\x2C because another async call to randomInt might\n  // already be doing that. Instead\x2C queue this call for when the cache has\n  // been refilled.\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\n  asyncRefillRandomIntCache();\n}\n\nfunction asyncRefillRandomIntCache() {\n  if (asyncCacheFillInProgress)\n    return;\n\n  asyncCacheFillInProgress = true;\n  randomFill(randomCache\x2C (err) => {\n    asyncCacheFillInProgress = false;\n\n    const tasks = asyncCachePendingTasks;\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\n    if (!err)\n      randomCacheOffset = 0;\n\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\n    // callback (errorReceiver) about it. This way\x2C every async call to\n    // randomInt has a chance of being successful\x2C and it avoids complex\n    // exception handling here.\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\n      randomInt(task.min\x2C task.max\x2C task.callback);\n    });\n\n    // This is the only call that might throw\x2C and is therefore done at the end.\n    if (errorReceiver)\n      errorReceiver.callback(err);\n  });\n}\n\n\nfunction onJobDone(buf\x2C callback\x2C error) {\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n}\n\n// Really just the Web Crypto API alternative\n// to require('crypto').randomFillSync() with an\n// additional limitation that the input buffer is\n// not allowed to exceed 65536 bytes\x2C and can only\n// be an integer-type TypedArray.\nfunction getRandomValues(data) {\n  if (!isTypedArray(data) ||\n      isFloat32Array(data) ||\n      isFloat64Array(data)) {\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\n    // the Web Crypto API and web platform tests expect this to\n    // be a DOMException with type TypeMismatchError.\n    throw lazyDOMException(\n      'The data argument must be an integer-type TypedArray'\x2C\n      'TypeMismatchError');\n  }\n  if (data.byteLength > 65536) {\n    throw lazyDOMException(\n      'The requested length exceeds 65\x2C536 bytes'\x2C\n      'QuotaExceededError');\n  }\n  randomFillSync(data\x2C 0);\n  return data;\n}\n\n// Implements an RFC 4122 version 4 random UUID.\n// To improve performance\x2C random data is generated in batches\n// large enough to cover kBatchSize UUID's at a time. The uuidData\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\n// from the buffer.\n\nconst kBatchSize = 128;\nlet uuidData;\nlet uuidNotBuffered;\nlet uuidBatch = 0;\n\nlet hexBytesCache;\nfunction getHexBytes() {\n  if (hexBytesCache === undefined) {\n    hexBytesCache = new Array(256);\n    for (let i = 0; i < hexBytesCache.length; i++) {\n      const hex = NumberPrototypeToString(i\x2C 16);\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\n    }\n  }\n  return hexBytesCache;\n}\n\nfunction serializeUUID(buf\x2C offset = 0) {\n  const kHexBytes = getHexBytes();\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n  return kHexBytes[buf[offset]] +\n    kHexBytes[buf[offset + 1]] +\n    kHexBytes[buf[offset + 2]] +\n    kHexBytes[buf[offset + 3]] +\n    '-' +\n    kHexBytes[buf[offset + 4]] +\n    kHexBytes[buf[offset + 5]] +\n    '-' +\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\n    kHexBytes[buf[offset + 7]] +\n    '-' +\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\n    kHexBytes[buf[offset + 9]] +\n    '-' +\n    kHexBytes[buf[offset + 10]] +\n    kHexBytes[buf[offset + 11]] +\n    kHexBytes[buf[offset + 12]] +\n    kHexBytes[buf[offset + 13]] +\n    kHexBytes[buf[offset + 14]] +\n    kHexBytes[buf[offset + 15]];\n}\n\nfunction getBufferedUUID() {\n  uuidData ??= secureBuffer(16 * kBatchSize);\n  if (uuidData === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n\n  if (uuidBatch === 0) randomFillSync(uuidData);\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\n}\n\nfunction getUnbufferedUUID() {\n  uuidNotBuffered ??= secureBuffer(16);\n  if (uuidNotBuffered === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n  randomFillSync(uuidNotBuffered);\n  return serializeUUID(uuidNotBuffered);\n}\n\nfunction randomUUID(options) {\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n  const {\n    disableEntropyCache = false\x2C\n  } = options || kEmptyObject;\n\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\n\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\n}\n\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\n  validateObject(options\x2C 'options');\n\n  const {\n    safe = false\x2C\n    bigint = false\x2C\n  } = options;\n  let {\n    add\x2C\n    rem\x2C\n  } = options;\n\n  validateBoolean(safe\x2C 'options.safe');\n  validateBoolean(bigint\x2C 'options.bigint');\n\n  if (add !== undefined) {\n    if (typeof add === 'bigint') {\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.add'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        add);\n    }\n  }\n\n  if (rem !== undefined) {\n    if (typeof rem === 'bigint') {\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.rem'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        rem);\n    }\n  }\n\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\n  return job;\n}\n\nfunction generatePrime(size\x2C options\x2C callback) {\n  validateInt32(size\x2C 'size'\x2C 1);\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateFunction(callback\x2C 'callback');\n\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\n  job.ondone = (err\x2C prime) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    callback(\n      undefined\x2C\n      job.result(prime));\n  };\n  job.run();\n}\n\nfunction generatePrimeSync(size\x2C options = kEmptyObject) {\n  validateInt32(size\x2C 'size'\x2C 1);\n\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\n  const { 0: err\x2C 1: prime } = job.run();\n  if (err)\n    throw err;\n  return job.result(prime);\n}\n\n/**\n * 48 is the ASCII code for '0'\x2C 97 is the ASCII code for 'a'.\n * @param {number} number An integer between 0 and 15.\n * @returns {number} corresponding to the ASCII code of the hex representation\n *                   of the parameter.\n */\nconst numberToHexCharCode = (number) => (number < 10 ? 48 : 87) + number;\n\n/**\n * @param {ArrayBuffer} buf An ArrayBuffer.\n * @return {bigint}\n */\nfunction arrayBufferToUnsignedBigInt(buf) {\n  const length = ArrayBufferPrototypeGetByteLength(buf);\n  const chars = Array(length * 2);\n  const view = new DataView(buf);\n\n  for (let i = 0; i < length; i++) {\n    const val = DataViewPrototypeGetUint8(view\x2C i);\n    chars[2 * i] = numberToHexCharCode(val >> 4);\n    chars[2 * i + 1] = numberToHexCharCode(val & 0xf);\n  }\n\n  return BigInt(`0x${StringFromCharCodeApply(chars)}`);\n}\n\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\n  if (bigint < 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\n  }\n\n  const hex = BigIntPrototypeToString(bigint\x2C 16);\n  const padded = StringPrototypePadStart(hex\x2C hex.length + (hex.length % 2)\x2C 0);\n  return Buffer.from(padded\x2C 'hex');\n}\n\nfunction checkPrime(candidate\x2C options = kEmptyObject\x2C callback) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\x2C\n    );\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateFunction(callback\x2C 'callback');\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  // The checks option is unsigned but must fit into a signed C int for OpenSSL.\n  validateInt32(checks\x2C 'options.checks'\x2C 0);\n\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\n  job.ondone = callback;\n  job.run();\n}\n\nfunction checkPrimeSync(candidate\x2C options = kEmptyObject) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\x2C\n    );\n  }\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  // The checks option is unsigned but must fit into a signed C int for OpenSSL.\n  validateInt32(checks\x2C 'options.checks'\x2C 0);\n\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\n  const { 0: err\x2C 1: result } = job.run();\n  if (err)\n    throw err;\n\n  return result;\n}\n\nmodule.exports = {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  getRandomValues\x2C\n  randomUUID\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n};\n
code-source-info,0x12ea98676dd0,143,0,16246,C0O0C4O16246,,
code-creation,JS,9,159792,0x12ea986770f8,750, node:internal/crypto/random:1:1,0x31c3bc7ab80,~
code-source-info,0x12ea986770f
tick,0x100cfcd70,159958,0,0x0,2,0x107f890bc,0x107f88e30,0x12ea986766cd,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,160000,0x12ea98677538,5, node:internal/crypto/pbkdf2:1:1,0x31c3bc7bfe0,~
script-source,144,node:internal/crypto/pbkdf2,'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  FunctionPrototypeCall\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  PBKDF2Job\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateFunction\x2C\n  validateInt32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  getArrayBufferOrView\x2C\n  normalizeHashName\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n  promisify\x2C\n} = require('internal/util');\n\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  validateFunction(callback\x2C 'callback');\n\n  const job = new PBKDF2Job(\n    kCryptoJobAsync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  job.ondone = (err\x2C result) => {\n    if (err !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\n    const buf = Buffer.from(result);\n    return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n  };\n\n  job.run();\n}\n\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  const job = new PBKDF2Job(\n    kCryptoJobSync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const { 0: err\x2C 1: result } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  return Buffer.from(result);\n}\n\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  validateString(digest\x2C 'digest');\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  // OpenSSL uses a signed int to represent these values\x2C so we are restricted\n  // to the 31-bit range here (which is plenty).\n  validateInt32(iterations\x2C 'iterations'\x2C 1);\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\n\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\n}\n\nconst pbkdf2Promise = promisify(pbkdf2);\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\n  const { iterations\x2C hash\x2C salt } = algorithm;\n  if (iterations === 0)\n    throw lazyDOMException(\n      'iterations cannot be zero'\x2C\n      'OperationError');\n\n  if (length === 0)\n    return new ArrayBuffer(0);\n  if (length === null)\n    throw lazyDOMException('length cannot be null'\x2C 'OperationError');\n  if (length % 8) {\n    throw lazyDOMException(\n      'length must be a multiple of 8'\x2C\n      'OperationError');\n  }\n\n  let result;\n  try {\n    result = await pbkdf2Promise(\n      baseKey[kKeyObject].export()\x2C salt\x2C iterations\x2C length / 8\x2C normalizeHashName(hash.name)\x2C\n    );\n  } catch (err) {\n    throw lazyDOMException(\n      'The operation failed for an operation-specific reason'\x2C\n      { name: 'OperationError'\x2C cause: err });\n  }\n\n  return result.buffer;\n}\n\nmodule.exports = {\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  pbkdf2DeriveBits\x2C\n};\n
code-source-info,0x12ea98677538,144,0,2973,C0O0C4O2973,,
code-creation,JS,9,160125,0x12ea98677690,228, node:internal/crypto/pbkdf2:1:1,0x31c3bc7c198,~
code-source-info,0x12ea98677690,144,0,2973,C0O0C68O25C74O40C80O100C83O100C88O89C94O182C97O182C102O130C108O143C114O162C120O277C123O277C128O220C134O240C140O257C146O381C149O381C154O320C160O344C166O365C172O460C175O460C180O425C186O445C191O2055C195O2055C197O2907C204O2928C210O2938C216O2952C222O2922C227O2972,,
code-creation,Eval,9,160250,0x12ea98677838,5, node:internal/crypto/scrypt:1:1,0x31c3bc7cbe0,~
script-source,145,node:internal/crypto/scrypt,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  ScryptJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n  validateInt32\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  getArrayBufferOrView\x2C\n} = require('internal/crypto/util');\n\nconst defaults = {\n  N: 16384\x2C\n  r: 8\x2C\n  p: 1\x2C\n  maxmem: 32 << 20\x2C  // 32 MiB\x2C matches SCRYPT_MAX_MEM.\n};\n\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\n  if (callback === defaults) {\n    callback = options;\n    options = defaults;\n  }\n\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n\n  validateFunction(callback\x2C 'callback');\n\n  const job = new ScryptJob(\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n\n  job.ondone = (error\x2C result) => {\n    if (error !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\n    const buf = Buffer.from(result);\n    return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n  };\n\n  job.run();\n}\n\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n  const job = new ScryptJob(\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n  const { 0: err\x2C 1: result } = job.run();\n\n  if (err !== undefined)\n    throw err;\n\n  return Buffer.from(result);\n}\n\nfunction check(password\x2C salt\x2C keylen\x2C options) {\n  if (ScryptJob === undefined)\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\n\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\n  if (options && options !== defaults) {\n    const has_N = options.N !== undefined;\n    if (has_N) {\n      N = options.N;\n      validateUint32(N\x2C 'N');\n    }\n    if (options.cost !== undefined) {\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      N = options.cost;\n      validateUint32(N\x2C 'cost');\n    }\n    const has_r = (options.r !== undefined);\n    if (has_r) {\n      r = options.r;\n      validateUint32(r\x2C 'r');\n    }\n    if (options.blockSize !== undefined) {\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      r = options.blockSize;\n      validateUint32(r\x2C 'blockSize');\n    }\n    const has_p = options.p !== undefined;\n    if (has_p) {\n      p = options.p;\n      validateUint32(p\x2C 'p');\n    }\n    if (options.parallelization !== undefined) {\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      p = options.parallelization;\n      validateUint32(p\x2C 'parallelization');\n    }\n    if (options.maxmem !== undefined) {\n      maxmem = options.maxmem;\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\n    }\n    if (N === 0) N = defaults.N;\n    if (r === 0) r = defaults.r;\n    if (p === 0) p = defaults.p;\n    if (maxmem === 0) maxmem = defaults.maxmem;\n  }\n\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\n}\n\nmodule.exports = {\n  scrypt\x2C\n  scryptSync\x2C\n};\n
code-source-info,0x12ea98677838,145,0,3331,C0O0C4O3331,,
code-creation,JS,9,160375,0x12ea98677980,208, node:internal/crypto/scrypt:1:1,0x31c3bc7cd88,~
code-source-info,0x12ea98677980,145,0,3331,C0O0C60O25C66O85C69O85C74O74C80O167C83O167C88O115C94O128C100O147C106O281C109O281C114O205C120O225C126O244C132O261C138O420C141O420C146O331C151O337C157O378C163O485C166O485C171O459C177O536C181O536C183O3285C190O3306C196O3316C202O3300C207O3330,,
code-creation,Eval,9,160500,0x12ea98677b08,5, node:internal/crypto/hkdf:1:1,0x31c3bc7db80,~
script-source,146,node:internal/crypto/hkdf,'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  FunctionPrototypeCall\x2C\n} = primordials;\n\nconst {\n  HKDFJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { kMaxLength } = require('buffer');\n\nconst {\n  normalizeHashName\x2C\n  toBuf\x2C\n  validateByteSource\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  createSecretKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n  promisify\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\n\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\n  validateString.withoutStackTrace(hash\x2C 'digest');\n  key = prepareKey(key);\n  salt = validateByteSource.withoutStackTrace(salt\x2C 'salt');\n  info = validateByteSource.withoutStackTrace(info\x2C 'info');\n\n  validateInteger.withoutStackTrace(length\x2C 'length'\x2C 0\x2C kMaxLength);\n\n  if (info.byteLength > 1024) {\n    throw new ERR_OUT_OF_RANGE.HideStackFramesError(\n      'info'\x2C\n      'must not contain more than 1024 bytes'\x2C\n      info.byteLength);\n  }\n\n  return {\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  };\n});\n\nfunction prepareKey(key) {\n  if (isKeyObject(key))\n    return key;\n\n  if (isAnyArrayBuffer(key))\n    return createSecretKey(key);\n\n  key = toBuf(key);\n\n  if (!isArrayBufferView(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'ikm'\x2C\n      [\n        'string'\x2C\n        'SecretKeyObject'\x2C\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n        'Buffer'\x2C\n      ]\x2C\n      key);\n  }\n\n  return createSecretKey(key);\n}\n\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  validateFunction(callback\x2C 'callback');\n\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n\n  job.run();\n}\n\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n  const { 0: err\x2C 1: bits } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  return bits;\n}\n\nconst hkdfPromise = promisify(hkdf);\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\n  const { hash\x2C salt\x2C info } = algorithm;\n\n  if (length === 0)\n    return new ArrayBuffer(0);\n  if (length === null)\n    throw lazyDOMException('length cannot be null'\x2C 'OperationError');\n  if (length % 8) {\n    throw lazyDOMException(\n      'length must be a multiple of 8'\x2C\n      'OperationError');\n  }\n\n  try {\n    return await hkdfPromise(\n      normalizeHashName(hash.name)\x2C baseKey[kKeyObject]\x2C salt\x2C info\x2C length / 8\x2C\n    );\n  } catch (err) {\n    throw lazyDOMException(\n      'The operation failed for an operation-specific reason'\x2C\n      { name: 'OperationError'\x2C cause: err });\n  }\n}\n\nmodule.exports = {\n  hkdf\x2C\n  hkdfSync\x2C\n  hkdfDeriveBits\x2C\n};\n
code-source-info,0x12ea98677b08,146,0,3376,C0O0C4O3376,,
code-creation,JS,9,160625,0x12ea98677cc8,339, node:internal/crypto/hkdf:1:1,0x31c3bc7ddb8,~
code-source-info,0x12ea98677cc8,146,0,3376,C0O0C92O25C98O40C104O141C107O141C112O91C118O102C124O121C130O238C133O238C138O179C144O199C150O218C156O294C159O294C164O279C170O392C173O392C178O324C184O345C190O354C196O376C202O472C205O472C210O436C216O455C222O551C225O551C230O516C236O536C241O631C244O631C249O588C255O608C261O759C264O759C269O681C274O687C280O713C286O738C291O815C296O815C300O815C302O2644C306O2644C308O3316C315O3337C321O3345C327O3357C333O3331C338O3375,,
new,MemoryChunk,0x2ded8900000,262144
code-creation,Eval,9,161000,0x12ea98677f08,5, node:internal/crypto/keys:1:1,0x2ded8903988,~
script-source,147,node:internal/crypto/keys,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  KeyObjectHandle\x2C\n  createNativeKeyObjectClass\x2C\n  kKeyTypeSecret\x2C\n  kKeyTypePublic\x2C\n  kKeyTypePrivate\x2C\n  kKeyFormatPEM\x2C\n  kKeyFormatDER\x2C\n  kKeyFormatJWK\x2C\n  kKeyEncodingPKCS1\x2C\n  kKeyEncodingPKCS8\x2C\n  kKeyEncodingSPKI\x2C\n  kKeyEncodingSEC1\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\n    ERR_CRYPTO_INVALID_JWK\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  kHandle\x2C\n  kKeyObject\x2C\n  getArrayBufferOrView\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n  normalizeAlgorithm\x2C\n  hasAnyNotIn\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  markTransferMode\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst kAlgorithm = Symbol('kAlgorithm');\nconst kExtractable = Symbol('kExtractable');\nconst kKeyType = Symbol('kKeyType');\nconst kKeyUsages = Symbol('kKeyUsages');\n\n// Key input contexts.\nconst kConsumePublic = 0;\nconst kConsumePrivate = 1;\nconst kCreatePublic = 2;\nconst kCreatePrivate = 3;\n\nconst encodingNames = [];\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\n  encodingNames[m[0]] = m[1];\n\n// Creating the KeyObject class is a little complicated due to inheritance\n// and the fact that KeyObjects should be transferable between threads\x2C\n// which requires the KeyObject base class to be implemented in C++.\n// The creation requires a callback to make sure that the NativeKeyObject\n// base class cannot exist without the other KeyObject implementations.\nconst {\n  0: KeyObject\x2C\n  1: SecretKeyObject\x2C\n  2: PublicKeyObject\x2C\n  3: PrivateKeyObject\x2C\n} = createNativeKeyObjectClass((NativeKeyObject) => {\n  // Publicly visible KeyObject class.\n  class KeyObject extends NativeKeyObject {\n    constructor(type\x2C handle) {\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\n\n      super(handle);\n\n      this[kKeyType] = type;\n\n      ObjectDefineProperty(this\x2C kHandle\x2C {\n        __proto__: null\x2C\n        value: handle\x2C\n        enumerable: false\x2C\n        configurable: false\x2C\n        writable: false\x2C\n      });\n    }\n\n    get type() {\n      return this[kKeyType];\n    }\n\n    static from(key) {\n      if (!isCryptoKey(key))\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n      return key[kKeyObject];\n    }\n\n    equals(otherKeyObject) {\n      if (!isKeyObject(otherKeyObject)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'otherKeyObject'\x2C 'KeyObject'\x2C otherKeyObject);\n      }\n\n      return otherKeyObject.type === this.type &&\n        this[kHandle].equals(otherKeyObject[kHandle]);\n    }\n  }\n\n  ObjectDefineProperties(KeyObject.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: 'KeyObject'\x2C\n    }\x2C\n  });\n\n  let webidl;\n\n  class SecretKeyObject extends KeyObject {\n    constructor(handle) {\n      super('secret'\x2C handle);\n    }\n\n    get symmetricKeySize() {\n      return this[kHandle].getSymmetricKeySize();\n    }\n\n    export(options) {\n      if (options !== undefined) {\n        validateObject(options\x2C 'options');\n        validateOneOf(\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\n        if (options.format === 'jwk') {\n          return this[kHandle].exportJwk({}\x2C false);\n        }\n      }\n      return this[kHandle].export();\n    }\n\n    toCryptoKey(algorithm\x2C extractable\x2C keyUsages) {\n      webidl ??= require('internal/crypto/webidl');\n      algorithm = normalizeAlgorithm(webidl.converters.AlgorithmIdentifier(algorithm)\x2C 'importKey');\n      extractable = webidl.converters.boolean(extractable);\n      keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages);\n\n      let result;\n      switch (algorithm.name) {\n        case 'HMAC':\n          result = require('internal/crypto/mac')\n            .hmacImportKey('KeyObject'\x2C this\x2C algorithm\x2C extractable\x2C keyUsages);\n          break;\n        case 'AES-CTR':\n          // Fall through\n        case 'AES-CBC':\n          // Fall through\n        case 'AES-GCM':\n          // Fall through\n        case 'AES-KW':\n          result = require('internal/crypto/aes')\n            .aesImportKey(algorithm\x2C 'KeyObject'\x2C this\x2C extractable\x2C keyUsages);\n          break;\n        case 'HKDF':\n          // Fall through\n        case 'PBKDF2':\n          result = importGenericSecretKey(\n            algorithm\x2C\n            'KeyObject'\x2C\n            this\x2C\n            extractable\x2C\n            keyUsages);\n          break;\n        default:\n          throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\n      }\n\n      if (result.usages.length === 0) {\n        throw lazyDOMException(\n          `Usages cannot be empty when importing a ${result.type} key.`\x2C\n          'SyntaxError');\n      }\n\n      return result;\n    }\n  }\n\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\n\n  function normalizeKeyDetails(details = {}) {\n    if (details.publicExponent !== undefined) {\n      return {\n        ...details\x2C\n        publicExponent:\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\x2C\n      };\n    }\n    return details;\n  }\n\n  class AsymmetricKeyObject extends KeyObject {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(type\x2C handle) {\n      super(type\x2C handle);\n    }\n\n    get asymmetricKeyType() {\n      return this[kAsymmetricKeyType] ||= this[kHandle].getAsymmetricKeyType();\n    }\n\n    get asymmetricKeyDetails() {\n      switch (this.asymmetricKeyType) {\n        case 'rsa':\n        case 'rsa-pss':\n        case 'dsa':\n        case 'ec':\n          return this[kAsymmetricKeyDetails] ||= normalizeKeyDetails(\n            this[kHandle].keyDetail({})\x2C\n          );\n        default:\n          return {};\n      }\n    }\n\n    toCryptoKey(algorithm\x2C extractable\x2C keyUsages) {\n      webidl ??= require('internal/crypto/webidl');\n      algorithm = normalizeAlgorithm(webidl.converters.AlgorithmIdentifier(algorithm)\x2C 'importKey');\n      extractable = webidl.converters.boolean(extractable);\n      keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages);\n\n      let result;\n      switch (algorithm.name) {\n        case 'RSASSA-PKCS1-v1_5':\n          // Fall through\n        case 'RSA-PSS':\n          // Fall through\n        case 'RSA-OAEP':\n          result = require('internal/crypto/rsa')\n            .rsaImportKey('KeyObject'\x2C this\x2C algorithm\x2C extractable\x2C keyUsages);\n          break;\n        case 'ECDSA':\n          // Fall through\n        case 'ECDH':\n          result = require('internal/crypto/ec')\n            .ecImportKey('KeyObject'\x2C this\x2C algorithm\x2C extractable\x2C keyUsages);\n          break;\n        case 'Ed25519':\n          // Fall through\n        case 'Ed448':\n          // Fall through\n        case 'X25519':\n          // Fall through\n        case 'X448':\n          result = require('internal/crypto/cfrg')\n            .cfrgImportKey('KeyObject'\x2C this\x2C algorithm\x2C extractable\x2C keyUsages);\n          break;\n        default:\n          throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\n      }\n\n      if (result.type === 'private' && result.usages.length === 0) {\n        throw lazyDOMException(\n          `Usages cannot be empty when importing a ${result.type} key.`\x2C\n          'SyntaxError');\n      }\n\n      return result;\n    }\n  }\n\n  class PublicKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('public'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\x2C\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type);\n    }\n  }\n\n  class PrivateKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('private'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        if (options.passphrase !== undefined) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            'jwk'\x2C 'does not support encryption');\n        }\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\x2C\n        cipher\x2C\n        passphrase\x2C\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\n    }\n  }\n\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\n});\n\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\n  if (formatStr === undefined && defaultFormat !== undefined)\n    return defaultFormat;\n  else if (formatStr === 'pem')\n    return kKeyFormatPEM;\n  else if (formatStr === 'der')\n    return kKeyFormatDER;\n  else if (formatStr === 'jwk')\n    return kKeyFormatJWK;\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\n}\n\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\n  if (typeStr === undefined && !required) {\n    return undefined;\n  } else if (typeStr === 'pkcs1') {\n    if (keyType !== undefined && keyType !== 'rsa') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for RSA keys');\n    }\n    return kKeyEncodingPKCS1;\n  } else if (typeStr === 'spki' && isPublic !== false) {\n    return kKeyEncodingSPKI;\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\n    return kKeyEncodingPKCS8;\n  } else if (typeStr === 'sec1' && isPublic !== true) {\n    if (keyType !== undefined && keyType !== 'ec') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for EC keys');\n    }\n    return kKeyEncodingSEC1;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\n}\n\nfunction option(name\x2C objName) {\n  return objName === undefined ?\n    `options.${name}` : `options.${objName}.${name}`;\n}\n\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\n  const { format: formatStr\x2C type: typeStr } = enc;\n\n  const isInput = keyType === undefined;\n  const format = parseKeyFormat(formatStr\x2C\n                                isInput ? kKeyFormatPEM : undefined\x2C\n                                option('format'\x2C objName));\n\n  const isRequired = (!isInput ||\n                      format === kKeyFormatDER) &&\n                      format !== kKeyFormatJWK;\n  const type = parseKeyType(typeStr\x2C\n                            isRequired\x2C\n                            keyType\x2C\n                            isPublic\x2C\n                            option('type'\x2C objName));\n  return { format\x2C type };\n}\n\nfunction isStringOrBuffer(val) {\n  return typeof val === 'string' ||\n         isArrayBufferView(val) ||\n         isAnyArrayBuffer(val);\n}\n\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\n  validateObject(enc\x2C 'options');\n\n  const isInput = keyType === undefined;\n\n  const {\n    format\x2C\n    type\x2C\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\n\n  let cipher\x2C passphrase\x2C encoding;\n  if (isPublic !== true) {\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\n\n    if (!isInput) {\n      if (cipher != null) {\n        if (typeof cipher !== 'string')\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n        if (format === kKeyFormatDER &&\n            (type === kKeyEncodingPKCS1 ||\n             type === kKeyEncodingSEC1)) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            encodingNames[type]\x2C 'does not support encryption');\n        }\n      } else if (passphrase !== undefined) {\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n      }\n    }\n\n    if ((isInput && passphrase !== undefined &&\n         !isStringOrBuffer(passphrase)) ||\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\n                                      passphrase);\n    }\n  }\n\n  if (passphrase !== undefined)\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\n\n  return { format\x2C type\x2C cipher\x2C passphrase };\n}\n\n// Parses the public key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\n}\n\n// Parses the private key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\n}\n\nfunction getKeyObjectHandle(key\x2C ctx) {\n  if (ctx === kCreatePrivate) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      key\x2C\n    );\n  }\n\n  if (key.type !== 'private') {\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\n    if (key.type !== 'public') {\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\n                                                   'private or public');\n    }\n  }\n\n  return key[kHandle];\n}\n\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\n  const types = [\n    'ArrayBuffer'\x2C\n    'Buffer'\x2C\n    'TypedArray'\x2C\n    'DataView'\x2C\n    'string'\x2C // Only if bufferOnly == false\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\n  ];\n  if (bufferOnly) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\n  } else if (!allowKeyObject) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\n  }\n  return types;\n}\n\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\n  validateObject(key\x2C 'key');\n  validateOneOf(\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\n\n  if (key.kty === 'OKP') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\n    validateString(key.x\x2C 'key.x');\n\n    if (!isPublic)\n      validateString(key.d\x2C 'key.d');\n\n    let keyData;\n    if (isPublic)\n      keyData = Buffer.from(key.x\x2C 'base64');\n    else\n      keyData = Buffer.from(key.d\x2C 'base64');\n\n    switch (key.crv) {\n      case 'Ed25519':\n      case 'X25519':\n        if (keyData.byteLength !== 32) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'Ed448':\n        if (keyData.byteLength !== 57) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'X448':\n        if (keyData.byteLength !== 56) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n    }\n\n    const handle = new KeyObjectHandle();\n\n    const keyType = isPublic ? kKeyTypePublic : kKeyTypePrivate;\n    if (!handle.initEDRaw(key.crv\x2C keyData\x2C keyType)) {\n      throw new ERR_CRYPTO_INVALID_JWK();\n    }\n\n    return handle;\n  }\n\n  if (key.kty === 'EC') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\n    validateString(key.x\x2C 'key.x');\n    validateString(key.y\x2C 'key.y');\n\n    const jwk = {\n      kty: key.kty\x2C\n      crv: key.crv\x2C\n      x: key.x\x2C\n      y: key.y\x2C\n    };\n\n    if (!isPublic) {\n      validateString(key.d\x2C 'key.d');\n      jwk.d = key.d;\n    }\n\n    const handle = new KeyObjectHandle();\n    const type = handle.initJwk(jwk\x2C jwk.crv);\n    if (type === undefined)\n      throw new ERR_CRYPTO_INVALID_JWK();\n\n    return handle;\n  }\n\n  // RSA\n  validateString(key.n\x2C 'key.n');\n  validateString(key.e\x2C 'key.e');\n\n  const jwk = {\n    kty: key.kty\x2C\n    n: key.n\x2C\n    e: key.e\x2C\n  };\n\n  if (!isPublic) {\n    validateString(key.d\x2C 'key.d');\n    validateString(key.p\x2C 'key.p');\n    validateString(key.q\x2C 'key.q');\n    validateString(key.dp\x2C 'key.dp');\n    validateString(key.dq\x2C 'key.dq');\n    validateString(key.qi\x2C 'key.qi');\n    jwk.d = key.d;\n    jwk.p = key.p;\n    jwk.q = key.q;\n    jwk.dp = key.dp;\n    jwk.dq = key.dq;\n    jwk.qi = key.qi;\n  }\n\n  const handle = new KeyObjectHandle();\n  const type = handle.initJwk(jwk);\n  if (type === undefined)\n    throw new ERR_CRYPTO_INVALID_JWK();\n\n  return handle;\n}\n\nfunction prepareAsymmetricKey(key\x2C ctx) {\n  if (isKeyObject(key)) {\n    // Best case: A key object\x2C as simple as that.\n    return { data: getKeyObjectHandle(key\x2C ctx) };\n  } else if (isCryptoKey(key)) {\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\n  } else if (isStringOrBuffer(key)) {\n    // Expect PEM by default\x2C mostly for backward compatibility.\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\n  } else if (typeof key === 'object') {\n    const { key: data\x2C encoding\x2C format } = key;\n\n    // The 'key' property can be a KeyObject as well to allow specifying\n    // additional options such as padding along with the key.\n    if (isKeyObject(data))\n      return { data: getKeyObjectHandle(data\x2C ctx) };\n    else if (isCryptoKey(data))\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\n    else if (format === 'jwk') {\n      validateObject(data\x2C 'key.key');\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\n    }\n\n    // Either PEM or DER using PKCS#1 or SPKI.\n    if (!isStringOrBuffer(data)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'key.key'\x2C\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\n        data);\n    }\n\n    const isPublic =\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\n    return {\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\x2C\n    };\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'key'\x2C\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\n    key);\n}\n\nfunction preparePrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\n}\n\nfunction preparePublicOrPrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\n}\n\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\n  if (!bufferOnly) {\n    if (isKeyObject(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kHandle];\n    } else if (isCryptoKey(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kKeyObject][kHandle];\n    }\n  }\n  if (typeof key !== 'string' &&\n      !isArrayBufferView(key) &&\n      !isAnyArrayBuffer(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\n      key);\n  }\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n}\n\nfunction createSecretKey(key\x2C encoding) {\n  key = prepareSecretKey(key\x2C encoding\x2C true);\n  const handle = new KeyObjectHandle();\n  handle.init(kKeyTypeSecret\x2C key);\n  return new SecretKeyObject(handle);\n}\n\nfunction createPublicKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePublic);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PublicKeyObject(handle);\n}\n\nfunction createPrivateKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PrivateKeyObject(handle);\n}\n\nfunction isKeyObject(obj) {\n  return obj != null && obj[kKeyType] !== undefined;\n}\n\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\n// that adapts it to the standard interface.\n// TODO(@jasnell): Embedder environments like electron may have issues\n// here similar to other things like URL. A chromium provided CryptoKey\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\n// would be fantastic if we could find a way of making those interop.\nclass CryptoKey {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `CryptoKey ${inspect({\n      type: this.type\x2C\n      extractable: this.extractable\x2C\n      algorithm: this.algorithm\x2C\n      usages: this.usages\x2C\n    }\x2C opts)}`;\n  }\n\n  get type() {\n    if (!(this instanceof CryptoKey))\n      throw new ERR_INVALID_THIS('CryptoKey');\n    return this[kKeyObject].type;\n  }\n\n  get extractable() {\n    if (!(this instanceof CryptoKey))\n      throw new ERR_INVALID_THIS('CryptoKey');\n    return this[kExtractable];\n  }\n\n  get algorithm() {\n    if (!(this instanceof CryptoKey))\n      throw new ERR_INVALID_THIS('CryptoKey');\n    return this[kAlgorithm];\n  }\n\n  get usages() {\n    if (!(this instanceof CryptoKey))\n      throw new ERR_INVALID_THIS('CryptoKey');\n    return ArrayFrom(this[kKeyUsages]);\n  }\n}\n\nObjectDefineProperties(CryptoKey.prototype\x2C {\n  type: kEnumerableProperty\x2C\n  extractable: kEnumerableProperty\x2C\n  algorithm: kEnumerableProperty\x2C\n  usages: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'CryptoKey'\x2C\n  }\x2C\n});\n\n/**\n * @param {InternalCryptoKey} key\n * @param {KeyObject} keyObject\n * @param {object} algorithm\n * @param {boolean} extractable\n * @param {Set<string>} keyUsages\n */\nfunction defineCryptoKeyProperties(\n  key\x2C\n  keyObject\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages\x2C\n) {\n  // Using symbol properties here currently instead of private\n  // properties because (for now) the performance penalty of\n  // private fields is still too high.\n  ObjectDefineProperties(key\x2C {\n    [kKeyObject]: {\n      __proto__: null\x2C\n      value: keyObject\x2C\n      enumerable: false\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    }\x2C\n    [kAlgorithm]: {\n      __proto__: null\x2C\n      value: algorithm\x2C\n      enumerable: false\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    }\x2C\n    [kExtractable]: {\n      __proto__: null\x2C\n      value: extractable\x2C\n      enumerable: false\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    }\x2C\n    [kKeyUsages]: {\n      __proto__: null\x2C\n      value: keyUsages\x2C\n      enumerable: false\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    }\x2C\n  });\n}\n\n// All internal code must use new InternalCryptoKey to create\n// CryptoKey instances. The CryptoKey class is exposed to end\n// user code but is not permitted to be constructed directly.\n// Using markTransferMode also allows the CryptoKey to be\n// cloned to Workers.\nclass InternalCryptoKey {\n  constructor(keyObject\x2C algorithm\x2C keyUsages\x2C extractable) {\n    markTransferMode(this\x2C true\x2C false);\n    // When constructed during transfer the properties get assigned\n    // in the kDeserialize call.\n    if (keyObject) {\n      defineCryptoKeyProperties(\n        this\x2C\n        keyObject\x2C\n        algorithm\x2C\n        extractable\x2C\n        keyUsages\x2C\n      );\n    }\n  }\n\n  [kClone]() {\n    const keyObject = this[kKeyObject];\n    const algorithm = this[kAlgorithm];\n    const extractable = this[kExtractable];\n    const usages = this[kKeyUsages];\n\n    return {\n      data: {\n        keyObject\x2C\n        algorithm\x2C\n        usages\x2C\n        extractable\x2C\n      }\x2C\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\x2C\n    };\n  }\n\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\n    defineCryptoKeyProperties(this\x2C keyObject\x2C algorithm\x2C extractable\x2C usages);\n  }\n}\nInternalCryptoKey.prototype.constructor = CryptoKey;\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\n\nfunction isCryptoKey(obj) {\n  return obj != null && obj[kKeyObject] !== undefined;\n}\n\nfunction importGenericSecretKey(\n  { name\x2C length }\x2C\n  format\x2C\n  keyData\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  if (extractable)\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\n\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      `Unsupported key usage for a ${name} key`\x2C\n      'SyntaxError');\n  }\n\n  switch (format) {\n    case 'KeyObject': {\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n        throw lazyDOMException(\n          `Unsupported key usage for a ${name} key`\x2C\n          'SyntaxError');\n      }\n\n      const checkLength = keyData.symmetricKeySize * 8;\n\n      // The Web Crypto spec allows for key lengths that are not multiples of\n      // 8. We don't. Our check here is stricter than that defined by the spec\n      // in that we require that algorithm.length match keyData.length * 8 if\n      // algorithm.length is specified.\n      if (length !== undefined && length !== checkLength) {\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\n      }\n      return new InternalCryptoKey(keyData\x2C { name }\x2C keyUsages\x2C false);\n    }\n    case 'raw': {\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n        throw lazyDOMException(\n          `Unsupported key usage for a ${name} key`\x2C\n          'SyntaxError');\n      }\n\n      const checkLength = keyData.byteLength * 8;\n\n      // The Web Crypto spec allows for key lengths that are not multiples of\n      // 8. We don't. Our check here is stricter than that defined by the spec\n      // in that we require that algorithm.length match keyData.length * 8 if\n      // algorithm.length is specified.\n      if (length !== undefined && length !== checkLength) {\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\n      }\n\n      const keyObject = createSecretKey(keyData);\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\n    }\n  }\n\n  throw lazyDOMException(\n    `Unable to import ${name} key with format ${format}`\x2C\n    'NotSupportedError');\n}\n\nmodule.exports = {\n  // Public API.\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n\n  // These are designed for internal use only and should not be exposed.\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  parseKeyEncoding\x2C\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n  SecretKeyObject\x2C\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  isKeyObject\x2C\n  isCryptoKey\x2C\n  importGenericSecretKey\x2C\n};\n
code-source-info,0x12ea98677f08,147,0,27427,C0O0C4O27427,,
code-creation,JS,9,161958,0x12ea986783d8,1410, node:internal/crypto/keys:1:1,0x2ded8903f28,~
code-source-info,0x12ea986783d
tick,0x192563008,162000,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98677d95,0x107f89188,0x107f88e30,0x12ea986766fd,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,162250,0x12ea98678c20,300, node:internal/crypto/keys:104:32,0x2ded8904720,~
code-source-info,0x12ea98678c20,147,2398,9438,C0O2398C20O2486C57O3555C64O3588C78O3606C82O3626C91O3555C96O3723C97O3723C99O3764C136O5756C146O5756C150O5756C152O5818C160O5818C164O5818C166O6161C203O8332C230O8752C257O9365C266O9373C275O9384C284O9401C293O9418C299O9436,,
tick,0x100d96bc0,162458,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98676717,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,162500,0x12ea98678e00,5, node:internal/crypto/keygen:1:1,0x2ded890b1c8,~
script-source,148,node:internal/crypto/keygen,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  SafeArrayIterator\x2C\n} = primordials;\n\nconst {\n  DhKeyPairGenJob\x2C\n  DsaKeyPairGenJob\x2C\n  EcKeyPairGenJob\x2C\n  NidKeyPairGenJob\x2C\n  RsaKeyPairGenJob\x2C\n  SecretKeyGenJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kKeyVariantRSA_PSS\x2C\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\n  EVP_PKEY_ED25519\x2C\n  EVP_PKEY_ED448\x2C\n  EVP_PKEY_X25519\x2C\n  EVP_PKEY_X448\x2C\n  OPENSSL_EC_NAMED_CURVE\x2C\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  SecretKeyObject\x2C\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  kAesKeyLengths\x2C\n} = require('internal/crypto/util');\n\nconst {\n  customPromisifyArgs\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  validateFunction\x2C\n  validateBuffer\x2C\n  validateString\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateInt32\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst { isArrayBufferView } = require('internal/util/types');\n\nfunction isJwk(obj) {\n  return obj != null && obj.kty !== undefined;\n}\n\nfunction wrapKey(key\x2C ctor) {\n  if (typeof key === 'string' ||\n      isArrayBufferView(key) ||\n      isJwk(key))\n    return key;\n  return new ctor(key);\n}\n\nfunction generateKeyPair(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  validateFunction(callback\x2C 'callback');\n\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    // If no encoding was chosen\x2C return key objects instead.\n    let { 0: pubkey\x2C 1: privkey } = result;\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\n  };\n\n  job.run();\n}\n\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\n  __proto__: null\x2C\n  value: ['publicKey'\x2C 'privateKey']\x2C\n  enumerable: false\x2C\n});\n\nfunction generateKeyPairSync(type\x2C options) {\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nfunction handleError(ret) {\n  if (ret == null)\n    return; // async\n\n  const { 0: err\x2C 1: keys } = ret;\n  if (err !== undefined)\n    throw err;\n\n  const { 0: publicKey\x2C 1: privateKey } = keys;\n\n  // If no encoding was chosen\x2C return key objects instead.\n  return {\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\x2C\n  };\n}\n\nfunction parseKeyEncoding(keyType\x2C options = kEmptyObject) {\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\n\n  let publicFormat\x2C publicType;\n  if (publicKeyEncoding == null) {\n    publicFormat = publicType = undefined;\n  } else if (typeof publicKeyEncoding === 'object') {\n    ({\n      format: publicFormat\x2C\n      type: publicType\x2C\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\n                               'publicKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\n                                    publicKeyEncoding);\n  }\n\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\n  if (privateKeyEncoding == null) {\n    privateFormat = privateType = undefined;\n  } else if (typeof privateKeyEncoding === 'object') {\n    ({\n      format: privateFormat\x2C\n      type: privateType\x2C\n      cipher\x2C\n      passphrase\x2C\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\n                                'privateKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\n                                    privateKeyEncoding);\n  }\n\n  return [\n    publicFormat\x2C\n    publicType\x2C\n    privateFormat\x2C\n    privateType\x2C\n    cipher\x2C\n    passphrase\x2C\n  ];\n}\n\nfunction createJob(mode\x2C type\x2C options) {\n  validateString(type\x2C 'type');\n\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\n\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n\n  switch (type) {\n    case 'rsa':\n    case 'rsa-pss':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      validateUint32(modulusLength\x2C 'options.modulusLength');\n\n      let { publicExponent } = options;\n      if (publicExponent == null) {\n        publicExponent = 0x10001;\n      } else {\n        validateUint32(publicExponent\x2C 'options.publicExponent');\n      }\n\n      if (type === 'rsa') {\n        return new RsaKeyPairGenJob(\n          mode\x2C\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\n          modulusLength\x2C\n          publicExponent\x2C\n          ...encoding);\n      }\n\n      const {\n        hash\x2C mgf1Hash\x2C hashAlgorithm\x2C mgf1HashAlgorithm\x2C saltLength\x2C\n      } = options;\n\n      if (saltLength !== undefined)\n        validateInt32(saltLength\x2C 'options.saltLength'\x2C 0);\n      if (hashAlgorithm !== undefined)\n        validateString(hashAlgorithm\x2C 'options.hashAlgorithm');\n      if (mgf1HashAlgorithm !== undefined)\n        validateString(mgf1HashAlgorithm\x2C 'options.mgf1HashAlgorithm');\n      if (hash !== undefined) {\n        process.emitWarning(\n          '"options.hash" is deprecated\x2C ' +\n          'use "options.hashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        validateString(hash\x2C 'options.hash');\n        if (hashAlgorithm && hash !== hashAlgorithm) {\n          throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\n        }\n      }\n      if (mgf1Hash !== undefined) {\n        process.emitWarning(\n          '"options.mgf1Hash" is deprecated\x2C ' +\n          'use "options.mgf1HashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        validateString(mgf1Hash\x2C 'options.mgf1Hash');\n        if (mgf1HashAlgorithm && mgf1Hash !== mgf1HashAlgorithm) {\n          throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\n        }\n      }\n\n      return new RsaKeyPairGenJob(\n        mode\x2C\n        kKeyVariantRSA_PSS\x2C\n        modulusLength\x2C\n        publicExponent\x2C\n        hashAlgorithm || hash\x2C\n        mgf1HashAlgorithm || mgf1Hash\x2C\n        saltLength\x2C\n        ...encoding);\n    }\n    case 'dsa':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      validateUint32(modulusLength\x2C 'options.modulusLength');\n\n      let { divisorLength } = options;\n      if (divisorLength == null) {\n        divisorLength = -1;\n      } else\n        validateInt32(divisorLength\x2C 'options.divisorLength'\x2C 0);\n\n      return new DsaKeyPairGenJob(\n        mode\x2C\n        modulusLength\x2C\n        divisorLength\x2C\n        ...encoding);\n    }\n    case 'ec':\n    {\n      validateObject(options\x2C 'options');\n      const { namedCurve } = options;\n      validateString(namedCurve\x2C 'options.namedCurve');\n      let { paramEncoding } = options;\n      if (paramEncoding == null || paramEncoding === 'named')\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\n      else if (paramEncoding === 'explicit')\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\n      else\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\n\n      return new EcKeyPairGenJob(\n        mode\x2C\n        namedCurve\x2C\n        paramEncoding\x2C\n        ...encoding);\n    }\n    case 'ed25519':\n    case 'ed448':\n    case 'x25519':\n    case 'x448':\n    {\n      let id;\n      switch (type) {\n        case 'ed25519':\n          id = EVP_PKEY_ED25519;\n          break;\n        case 'ed448':\n          id = EVP_PKEY_ED448;\n          break;\n        case 'x25519':\n          id = EVP_PKEY_X25519;\n          break;\n        case 'x448':\n          id = EVP_PKEY_X448;\n          break;\n      }\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\n    }\n    case 'dh':\n    {\n      validateObject(options\x2C 'options');\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\n      if (group != null) {\n        if (prime != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\n        if (generator != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\n\n        validateString(group\x2C 'options.group');\n\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\n      }\n\n      if (prime != null) {\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\n\n        validateBuffer(prime\x2C 'options.prime');\n      } else if (primeLength != null) {\n        validateInt32(primeLength\x2C 'options.primeLength'\x2C 0);\n      } else {\n        throw new ERR_MISSING_OPTION(\n          'At least one of the group\x2C prime\x2C or primeLength options');\n      }\n\n      if (generator != null) {\n        validateInt32(generator\x2C 'options.generator'\x2C 0);\n      }\n      return new DhKeyPairGenJob(\n        mode\x2C\n        prime != null ? prime : primeLength\x2C\n        generator == null ? 2 : generator\x2C\n        ...encoding);\n    }\n    default:\n      // Fall through\n  }\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\n}\n\n// Symmetric Key Generation\n\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\n  validateString(keyType\x2C 'type');\n  validateObject(options\x2C 'options');\n  const { length } = options;\n  switch (keyType) {\n    case 'hmac':\n      validateInteger(length\x2C 'options.length'\x2C 8\x2C 2 ** 31 - 1);\n      break;\n    case 'aes':\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\n      break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE(\n        'type'\x2C\n        keyType\x2C\n        'must be a supported key type');\n  }\n\n  return new SecretKeyGenJob(mode\x2C length);\n}\n\nfunction handleGenerateKeyError(ret) {\n  if (ret === undefined)\n    return; // async\n\n  const { 0: err\x2C 1: key } = ret;\n  if (err !== undefined)\n    throw err;\n\n  return wrapKey(key\x2C SecretKeyObject);\n}\n\nfunction generateKey(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateFunction(callback\x2C 'callback');\n\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C key) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\n  };\n\n  handleGenerateKeyError(job.run());\n}\n\nfunction generateKeySync(type\x2C options) {\n  return handleGenerateKeyError(\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nmodule.exports = {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n};\n
code-source-info,0x12ea98678e00,148,0,10712,C0O0C4O10712,,
code-creation,JS,9,162833,0x12ea98679080,528, node:internal/crypto/keygen:1:1,0x2ded890b560,~
code-source-info,0x12ea98679080,148,0,10712,C0O0C182O25C188O50C193O74C199O461C202O461C207O121C213O140C219O160C225O179C231O199C237O219C243O238C249O257C255O275C261O297C267O330C273O350C279O368C285O387C291O404C297O430C303O612C306O612C311O499C317O518C323O538C329O557C335O583C341O676C344O676C349O656C355O761C358O761C363O720C368O743C374O945C377O945C382O798C388O818C394O836C400O854C406O873C412O891C418O908C424O925C430O1091C433O1091C438O995C443O1001C449O1035C455O1062C461O1150C464O1150C469O1128C475O2087C486O2049C491O10614C498O10635C504O10654C510O10677C516O10692C522O10629C527O10711,,
code-creation,Eval,9,163083,0x12ea98679390,5, node:internal/crypto/diffiehellman:1:1,0x2ded890cc30,~
script-source,149,node:internal/crypto/diffiehellman,'use strict';\n\nconst {\n  ArrayBufferPrototypeSlice\x2C\n  MathCeil\x2C\n  ObjectDefineProperty\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  DiffieHellman: _DiffieHellman\x2C\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\n  ECDH: _ECDH\x2C\n  ECDHBitsJob\x2C\n  ECDHConvertKey: _ECDHConvertKey\x2C\n  statelessDH\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  codes: {\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  KeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getArrayBufferOrView\x2C\n  jobPromise\x2C\n  toBuf\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    POINT_CONVERSION_COMPRESSED\x2C\n    POINT_CONVERSION_HYBRID\x2C\n    POINT_CONVERSION_UNCOMPRESSED\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst DH_GENERATOR = 2;\n\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  if (!(this instanceof DiffieHellman))\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n\n  if (typeof sizeOrKey !== 'number' &&\n      typeof sizeOrKey !== 'string' &&\n      !isArrayBufferView(sizeOrKey) &&\n      !isAnyArrayBuffer(sizeOrKey)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'sizeOrKey'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      sizeOrKey\x2C\n    );\n  }\n\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\n  // and that's why we do that here too.\n  if (typeof sizeOrKey === 'number')\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\n\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\n      keyEncoding !== 'buffer') {\n    genEncoding = generator;\n    generator = keyEncoding;\n    keyEncoding = false;\n  }\n\n  if (typeof sizeOrKey !== 'number')\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\n\n  if (!generator) {\n    generator = DH_GENERATOR;\n  } else if (typeof generator === 'number') {\n    validateInt32(generator\x2C 'generator');\n  } else if (typeof generator === 'string') {\n    generator = toBuf(generator\x2C genEncoding);\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'generator'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      generator\x2C\n    );\n  }\n\n\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\x2C\n  });\n}\n\n\nfunction DiffieHellmanGroup(name) {\n  if (!(this instanceof DiffieHellmanGroup))\n    return new DiffieHellmanGroup(name);\n  this[kHandle] = new _DiffieHellmanGroup(name);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\x2C\n  });\n}\n\n\nDiffieHellmanGroup.prototype.generateKeys =\n    DiffieHellman.prototype.generateKeys =\n    dhGenerateKeys;\n\nfunction dhGenerateKeys(encoding) {\n  const keys = this[kHandle].generateKeys();\n  return encode(keys\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.computeSecret =\n    DiffieHellman.prototype.computeSecret =\n    dhComputeSecret;\n\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\n  const ret = this[kHandle].computeSecret(key);\n  if (typeof ret === 'string')\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\n  return encode(ret\x2C outEnc);\n}\n\n\nDiffieHellmanGroup.prototype.getPrime =\n    DiffieHellman.prototype.getPrime =\n    dhGetPrime;\n\nfunction dhGetPrime(encoding) {\n  const prime = this[kHandle].getPrime();\n  return encode(prime\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getGenerator =\n    DiffieHellman.prototype.getGenerator =\n    dhGetGenerator;\n\nfunction dhGetGenerator(encoding) {\n  const generator = this[kHandle].getGenerator();\n  return encode(generator\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPublicKey =\n    DiffieHellman.prototype.getPublicKey =\n    dhGetPublicKey;\n\nfunction dhGetPublicKey(encoding) {\n  const key = this[kHandle].getPublicKey();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPrivateKey =\n    DiffieHellman.prototype.getPrivateKey =\n    dhGetPrivateKey;\n\nfunction dhGetPrivateKey(encoding) {\n  const key = this[kHandle].getPrivateKey();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPublicKey(key);\n  return this;\n};\n\n\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPrivateKey(key);\n  return this;\n};\n\n\nfunction ECDH(curve) {\n  if (!(this instanceof ECDH))\n    return new ECDH(curve);\n\n  validateString(curve\x2C 'curve');\n  this[kHandle] = new _ECDH(curve);\n}\n\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\n\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\n  this[kHandle].generateKeys();\n\n  return this.getPublicKey(encoding\x2C format);\n};\n\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\n  const f = getFormat(format);\n  const key = this[kHandle].getPublicKey(f);\n  return encode(key\x2C encoding);\n};\n\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\n  validateString(curve\x2C 'curve');\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\n  const f = getFormat(format);\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\n  return encode(convertedKey\x2C outEnc);\n};\n\nfunction encode(buffer\x2C encoding) {\n  if (encoding && encoding !== 'buffer')\n    buffer = buffer.toString(encoding);\n  return buffer;\n}\n\nfunction getFormat(format) {\n  if (format) {\n    if (format === 'compressed')\n      return POINT_CONVERSION_COMPRESSED;\n    if (format === 'hybrid')\n      return POINT_CONVERSION_HYBRID;\n    if (format !== 'uncompressed')\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\n  }\n  return POINT_CONVERSION_UNCOMPRESSED;\n}\n\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\n\nfunction diffieHellman(options) {\n  validateObject(options\x2C 'options');\n\n  const { privateKey\x2C publicKey } = options;\n  if (!(privateKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\n\n  if (!(publicKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\n\n  if (privateKey.type !== 'private')\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\n\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\n                                                 'private or public');\n  }\n\n  const privateType = privateKey.asymmetricKeyType;\n  const publicType = publicKey.asymmetricKeyType;\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\n                                          `${privateType} and ${publicType}`);\n  }\n\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\n}\n\n// The ecdhDeriveBits function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nasync function ecdhDeriveBits(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (\n    key.algorithm.name !== 'ECDH' &&\n    key.algorithm.name !== 'X25519' &&\n    key.algorithm.name !== 'X448'\n  ) {\n    throw lazyDOMException('Keys must be ECDH\x2C X25519\x2C or X448 keys'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  if (\n    key.algorithm.name === 'ECDH' &&\n    key.algorithm.namedCurve !== baseKey.algorithm.namedCurve\n  ) {\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\n  }\n\n  const bits = await jobPromise(() => new ECDHBitsJob(\n    kCryptoJobAsync\x2C\n    key[kKeyObject][kHandle]\x2C\n    baseKey[kKeyObject][kHandle]));\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8 the nearest ceiled\n  // multiple of 8 is sliced.\n  length = MathCeil(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nmodule.exports = {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\x2C\n  ecdhDeriveBits\x2C\n};\n
code-source-info,0x12ea98679390,149,0,9819,C0O0C4O9819,,
code-creation,JS,9,163417,0x12ea98679668,856, node:internal/crypto/diffiehellman:1:1,0x2ded890cf68,~
code-source-info,0x12ea
code-creation,Eval,9,163667,0x12ea98679b70,5, node:internal/crypto/cipher:1:1,0x2ded890ec20,~
script-source,150,node:internal/crypto/cipher,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CipherBase\x2C\n  privateDecrypt: _privateDecrypt\x2C\n  privateEncrypt: _privateEncrypt\x2C\n  publicDecrypt: _publicDecrypt\x2C\n  publicEncrypt: _publicEncrypt\x2C\n  getCipherInfo: _getCipherInfo\x2C\n} = internalBinding('crypto');\n\nconst {\n  crypto: {\n    RSA_PKCS1_OAEP_PADDING\x2C\n    RSA_PKCS1_PADDING\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INVALID_STATE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getArrayBufferOrView\x2C\n  getStringOption\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst { normalizeEncoding } = require('internal/util');\n\nconst { StringDecoder } = require('string_decoder');\n\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\n  return (options\x2C buffer) => {\n    const { format\x2C type\x2C data\x2C passphrase } =\n      keyType === 'private' ?\n        preparePrivateKey(options) :\n        preparePublicOrPrivateKey(options);\n    const padding = options.padding || defaultPadding;\n    const { oaepHash\x2C encoding } = options;\n    let { oaepLabel } = options;\n    if (oaepHash !== undefined)\n      validateString(oaepHash\x2C 'key.oaepHash');\n    if (oaepLabel !== undefined)\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\n                  oaepLabel);\n  };\n}\n\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                     'public');\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\n                                     'public');\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\n                                      'private');\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                      'private');\n\nfunction getDecoder(decoder\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  decoder ||= new StringDecoder(encoding);\n  if (decoder.encoding !== normalizedEncoding) {\n    if (normalizedEncoding === undefined) {\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n    assert(false\x2C 'Cannot change encoding');\n  }\n  return decoder;\n}\n\nfunction getUIntOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null) {\n    if (value >>> 0 !== value)\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\n    return value;\n  }\n  return -1;\n}\n\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\n  this[kHandle] = new CipherBase(decipher);\n  if (iv === undefined) {\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\n  } else {\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\n  }\n  this._decoder = null;\n\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\n  validateString(cipher\x2C 'cipher');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\n}\n\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Cipher))\n    return new Cipher(cipher\x2C password\x2C options);\n}\n\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\n\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this.push(this[kHandle].update(chunk\x2C encoding));\n  callback();\n};\n\nCipher.prototype._flush = function _flush(callback) {\n  try {\n    this.push(this[kHandle].final());\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback();\n};\n\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C inputEncoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  const ret = this[kHandle].update(data\x2C inputEncoding);\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.write(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.final = function final(outputEncoding) {\n  const ret = this[kHandle].final();\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.end(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\n  if (!this[kHandle].setAutoPadding(!!ap))\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\n  return this;\n};\n\nCipher.prototype.getAuthTag = function getAuthTag() {\n  const ret = this[kHandle].getAuthTag();\n  if (ret === undefined)\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\n  return ret;\n};\n\n\nfunction setAuthTag(tagbuf\x2C encoding) {\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\n  if (!this[kHandle].setAuthTag(tagbuf))\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\n  return this;\n}\n\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\n  const encoding = getStringOption(options\x2C 'encoding');\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\n  return this;\n};\n\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Cipheriv))\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\n}\n\nfunction addCipherPrototypeFunctions(constructor) {\n  constructor.prototype._transform = Cipher.prototype._transform;\n  constructor.prototype._flush = Cipher.prototype._flush;\n  constructor.prototype.update = Cipher.prototype.update;\n  constructor.prototype.final = Cipher.prototype.final;\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\n  if (constructor === Cipheriv) {\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\n  } else {\n    constructor.prototype.setAuthTag = setAuthTag;\n  }\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\n}\n\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Cipheriv);\n\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Decipher))\n    return new Decipher(cipher\x2C password\x2C options);\n}\n\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipher);\n\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Decipheriv))\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\n}\n\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipheriv);\n\nfunction getCipherInfo(nameOrNid\x2C options) {\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'nameOrNid'\x2C\n      ['string'\x2C 'number']\x2C\n      nameOrNid);\n  }\n  if (typeof nameOrNid === 'number')\n    validateInt32(nameOrNid\x2C 'nameOrNid');\n  let keyLength\x2C ivLength;\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n    ({ keyLength\x2C ivLength } = options);\n    if (keyLength !== undefined)\n      validateInt32(keyLength\x2C 'options.keyLength');\n    if (ivLength !== undefined)\n      validateInt32(ivLength\x2C 'options.ivLength');\n  }\n\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\n  if (ret !== undefined) {\n    ret.name &&= StringPrototypeToLowerCase(ret.name);\n    ret.type &&= StringPrototypeToLowerCase(ret.type);\n  }\n  return ret;\n}\n\nmodule.exports = {\n  Cipheriv\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n};\n
code-source-info,0x12ea98679b70,150,0,9762,C0O0C4O9762,,
code-creation,JS,9,164042,0x12ea98679e30,825, node:internal/crypto/cipher:1:1,0x2ded890eee8,~
code-source-info,0x12ea98679e30,150,0,9762,C0O0C143O25C148O49C154O65C160O306C164O306C169O121C175O151C180O186C185O220C190O253C195O286C201O414C205O414C210O352C216O358C221O386C226O582C230O582C235O462C241O468C247O498C253O524C259O551C265O696C269O696C274O621C280O641C286O658C292O676C298O811C302O811C307O739C313O760C319O789C325O911C329O911C334O855C340O879C346O898C352O978C356O978C361O955C367O1026C371O1026C375O1026C377O1077C381O1077C385O1077C387O1152C391O1152C396O1130C402O1205C406O1205C411O1187C417O2005C427O2005C433O2130C443O2130C449O2251C459O2251C465O2375C475O2375C481O4211C485O4239C495O4264C501O4211C506O4276C514O4276C519O4322C522O4329C531O4350C535O4471C538O4478C547O4495C551O4638C554O4645C563O4662C567O5184C570O5191C579O5207C583O5457C586O5464C595O5489C599O5641C602O5648C611O5669C615O6049C618O6056C627O6073C631O7470C635O7500C645O7525C651O7470C656O7537C664O7537C669O7584C673O7584C677O8006C681O8036C691O8061C697O8006C702O8073C710O8073C715O8120C719O8120C723O8628C727O8660C737O8685C743O8628C748O8697C756O8697C761O8746C765O8746C769O9627C777O9648C783O9660C789O9674C795O9692C801O9710C807O9727C813O9744C819O9642C824O9761,,
tick,0x192563008,164083,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98676789,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,164125,0x12ea9867a308,5, node:internal/streams/lazy_transform:1:1,0x2ded890fbf0,~
script-source,151,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\n// This is used for performance with bi-API-ship: when two APIs are available\n// for the stream\x2C one conventional and one non-conventional.\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst stream = require('stream');\n\nmodule.exports = LazyTransform;\n\nfunction LazyTransform(options) {\n  this._options = options;\n}\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\n\nfunction makeGetter(name) {\n  return function() {\n    stream.Transform.call(this\x2C this._options);\n    this._writableState.decodeStrings = false;\n    return this[name];\n  };\n}\n\nfunction makeSetter(name) {\n  return function(val) {\n    ObjectDefineProperty(this\x2C name\x2C {\n      __proto__: null\x2C\n      value: val\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n    });\n  };\n}\n\nObjectDefineProperties(LazyTransform.prototype\x2C {\n  _readableState: {\n    __proto__: null\x2C\n    get: makeGetter('_readableState')\x2C\n    set: makeSetter('_readableState')\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n  _writableState: {\n    __proto__: null\x2C\n    get: makeGetter('_writableState')\x2C\n    set: makeSetter('_writableState')\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n
code-source-info,0x12ea9867a308,151,0,1386,C0O0C4O1386,,
code-creation,JS,9,164208,0x12ea9867a408,176, node:internal/streams/lazy_transform:1:1,0x2ded890fcd8,~
code-source-info,0x12ea9867a408,151,0,1386,C0O0C26O243C31O269C37O293C42O348C45O348C49O348C51O368C53O383C57O499C65O517C70O527C75O464C80O539C83O582C88O539C93O1029C103O1060C111O1092C122O1131C136O1230C144O1262C155O1301C169O992C175O1385,,
code-creation,JS,9,164250,0x12ea9867a570,14,makeGetter node:internal/streams/lazy_transform:22:20,0x2ded890fd98,~
code-source-info,0x12ea9867a570,151,614,769,C0O614C9O625C13O767,,
code-creation,JS,9,164250,0x12ea9867a600,14,makeSetter node:internal/streams/lazy_transform:30:20,0x2ded890fe18,~
code-source-info,0x12ea9867a600,151,790,990,C0O790C9O801C13O988,,
code-creation,JS,9,164292,0x12ea9867a690,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0x2ded890ef50,~
code-source-info,0x12ea9867a690,150,1256,1981,C0O1256C17O1294C21O1979,,
code-creation,JS,9,164333,0x12ea9867a760,169,addCipherPrototypeFunctions node:internal/crypto/cipher:237:37,0x2ded890f210,~
code-source-info,0x12ea9867a760,150,6913,7468,C0O6943C8O6973C13O6983C17O6964C21O7009C29O7035C34O7045C38O7026C42O7067C50O7093C55O7103C59O7084C63O7125C71O7150C76O7160C80O7141C84O7181C92O7215C97O7225C101O7206C105O7243C107O7259C112O7291C120O7321C125O7331C129O7312C135O7370C142O7391C146O7423C154O7449C159O7459C163O7440C168O7467,,
code-creation,Eval,9,164458,0x12ea9867a8c8,5, node:internal/crypto/sig:1:1,0x2ded8912460,~
script-source,152,node:internal/crypto/sig,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateEncoding\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  Sign: _Sign\x2C\n  SignJob\x2C\n  Verify: _Verify\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kSigEncDER\x2C\n  kSigEncP1363\x2C\n  kSignJobModeSign\x2C\n  kSignJobModeVerify\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n} = require('internal/crypto/keys');\n\nconst { Writable } = require('stream');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nfunction Sign(algorithm\x2C options) {\n  if (!(this instanceof Sign))\n    return new Sign(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Sign();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Sign\x2C Writable);\n\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\n  this.update(chunk\x2C encoding);\n  callback();\n};\n\nSign.prototype.update = function update(data\x2C encoding) {\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  this[kHandle].update(data\x2C encoding);\n  return this;\n};\n\nfunction getPadding(options) {\n  return getIntOption('padding'\x2C options);\n}\n\nfunction getSaltLength(options) {\n  return getIntOption('saltLength'\x2C options);\n}\n\nfunction getDSASignatureEncoding(options) {\n  if (typeof options === 'object') {\n    const { dsaEncoding = 'der' } = options;\n    if (dsaEncoding === 'der')\n      return kSigEncDER;\n    else if (dsaEncoding === 'ieee-p1363')\n      return kSigEncP1363;\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\n  }\n\n  return kSigEncDER;\n}\n\nfunction getIntOption(name\x2C options) {\n  const value = options[name];\n  if (value !== undefined) {\n    if (value === value >> 0) {\n      return value;\n    }\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\n  }\n  return undefined;\n}\n\nSign.prototype.sign = function sign(options\x2C encoding) {\n  if (!options)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\n                                 pssSaltLength\x2C dsaSigEnc);\n\n  if (encoding && encoding !== 'buffer')\n    return ret.toString(encoding);\n\n  return ret;\n};\n\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateFunction(callback\x2C 'callback');\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!key)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\x2C\n  } = preparePrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeSign\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc);\n\n  if (!callback) {\n    const { 0: err\x2C 1: signature } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return Buffer.from(signature);\n  }\n\n  job.ondone = (error\x2C signature) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\n  };\n  job.run();\n}\n\nfunction Verify(algorithm\x2C options) {\n  if (!(this instanceof Verify))\n    return new Verify(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Verify();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Verify\x2C Writable);\n\nVerify.prototype._write = Sign.prototype._write;\nVerify.prototype.update = Sign.prototype.update;\n\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\n  const {\n    data\x2C\n    format\x2C\n    type\x2C\n    passphrase\x2C\n  } = preparePublicOrPrivateKey(options\x2C true);\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\n\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\n};\n\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateFunction(callback\x2C 'callback');\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      data\x2C\n    );\n  }\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  if (!isArrayBufferView(signature)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'signature'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      signature\x2C\n    );\n  }\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\x2C\n  } = preparePublicOrPrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeVerify\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc\x2C\n    signature);\n\n  if (!callback) {\n    const { 0: err\x2C 1: result } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return result;\n  }\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\n  };\n  job.run();\n}\n\nmodule.exports = {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\x2C\n};\n
code-source-info,0x12ea9867a8c8,152,0,6942,C0O0C4O6942,,
code-creation,JS,9,164708,0x12ea9867aaf8,554, node:internal/crypto/sig:1:1,0x2ded8912708,~
code-source-info,0x12ea9867aaf8,152,0,6942,C0O0C123O25C129O50C134O74C140O221C143O221C148O123C153O129C159O163C165O189C171O320C174O320C179O260C185O280C191O300C197O519C200O519C205O369C211O378C217O397C223O408C229O427C235O445C241O459C247O475C253O495C259O594C262O594C267O557C273O581C279O690C282O690C287O638C293O659C299O745C302O745C307O732C313O784C316O784C321O773C327O837C330O837C335O814C341O1131C344O1157C352O1177C357O1131C362O1189C368O1189C373O1228C376O1233C385O1250C389O1347C392O1352C401O1369C405O2448C408O2453C417O2468C421O4578C424O4606C432O4626C437O4578C442O4638C448O4638C453O4679C456O4686C464O4710C469O4720C473O4703C477O4728C480O4735C488O4759C493O4769C497O4752C501O4778C504O4785C513O4802C517O6870C524O6891C530O6899C536O6914C542O6924C548O6885C553O6941,,
code-creation,Eval,9,164833,0x12ea9867ae58,5, node:internal/crypto/hash:1:1,0x2ded8913a78,~
script-source,153,node:internal/crypto/hash,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  Hash: _Hash\x2C\n  HashJob\x2C\n  Hmac: _Hmac\x2C\n  kCryptoJobAsync\x2C\n  oneShotDigest\x2C\n} = internalBinding('crypto');\n\nconst {\n  getStringOption\x2C\n  jobPromise\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kHandle\x2C\n  getCachedHashId\x2C\n  getHashCache\x2C\n} = require('internal/crypto/util');\n\nconst {\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  encodingsMap\x2C\n} = require('internal/util');\n\nconst {\n  Buffer\x2C\n} = require('buffer');\n\nconst {\n  codes: {\n    ERR_CRYPTO_HASH_FINALIZED\x2C\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst kState = Symbol('kState');\nconst kFinalized = Symbol('kFinalized');\n\nfunction Hash(algorithm\x2C options) {\n  if (!new.target)\n    return new Hash(algorithm\x2C options);\n  const isCopy = algorithm instanceof _Hash;\n  if (!isCopy)\n    validateString(algorithm\x2C 'algorithm');\n  const xofLen = typeof options === 'object' && options !== null ?\n    options.outputLength : undefined;\n  if (xofLen !== undefined)\n    validateUint32(xofLen\x2C 'options.outputLength');\n  // Lookup the cached ID from JS land because it's faster than decoding\n  // the string in C++ land.\n  const algorithmId = isCopy ? -1 : getCachedHashId(algorithm);\n  this[kHandle] = new _Hash(algorithm\x2C xofLen\x2C algorithmId\x2C getHashCache());\n  this[kState] = {\n    [kFinalized]: false\x2C\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\n\nHash.prototype.copy = function copy(options) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  return new Hash(this[kHandle]\x2C options);\n};\n\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this[kHandle].update(chunk\x2C encoding);\n  callback();\n};\n\nHash.prototype._flush = function _flush(callback) {\n  this.push(this[kHandle].digest());\n  callback();\n};\n\nHash.prototype.update = function update(data\x2C encoding) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  if (!this[kHandle].update(data\x2C encoding))\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\n  return this;\n};\n\n\nHash.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  // Explicit conversion of truthy values for backward compatibility.\n  const ret = this[kHandle].digest(outputEncoding && `${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nfunction Hmac(hmac\x2C key\x2C options) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hmac\x2C key\x2C options);\n  validateString(hmac\x2C 'hmac');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  this[kHandle] = new _Hmac();\n  this[kHandle].init(hmac\x2C key);\n  this[kState] = {\n    [kFinalized]: false\x2C\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\n\nHmac.prototype.update = Hash.prototype.update;\n\nHmac.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n\n  if (state[kFinalized]) {\n    const buf = Buffer.from('');\n    if (outputEncoding && outputEncoding !== 'buffer')\n      return buf.toString(outputEncoding);\n    return buf;\n  }\n\n  // Explicit conversion of truthy values for backward compatibility.\n  const ret = this[kHandle].digest(outputEncoding && `${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nHmac.prototype._flush = Hash.prototype._flush;\nHmac.prototype._transform = Hash.prototype._transform;\n\n// Implementation for WebCrypto subtle.digest()\n\nasync function asyncDigest(algorithm\x2C data) {\n  validateMaxBufferLength(data\x2C 'data');\n\n  switch (algorithm.name) {\n    case 'SHA-1':\n      // Fall through\n    case 'SHA-256':\n      // Fall through\n    case 'SHA-384':\n      // Fall through\n    case 'SHA-512':\n      return jobPromise(() => new HashJob(\n        kCryptoJobAsync\x2C\n        normalizeHashName(algorithm.name)\x2C\n        data));\n  }\n\n  throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\n}\n\nfunction hash(algorithm\x2C input\x2C outputEncoding = 'hex') {\n  validateString(algorithm\x2C 'algorithm');\n  if (typeof input !== 'string' && !isArrayBufferView(input)) {\n    throw new ERR_INVALID_ARG_TYPE('input'\x2C ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'string']\x2C input);\n  }\n  let normalized = outputEncoding;\n  // Fast case: if it's 'hex'\x2C we don't need to validate it further.\n  if (outputEncoding !== 'hex') {\n    validateString(outputEncoding\x2C 'outputEncoding');\n    normalized = normalizeEncoding(outputEncoding);\n    // If the encoding is invalid\x2C normalizeEncoding() returns undefined.\n    if (normalized === undefined) {\n      // normalizeEncoding() doesn't handle 'buffer'.\n      if (StringPrototypeToLowerCase(outputEncoding) === 'buffer') {\n        normalized = 'buffer';\n      } else {\n        throw new ERR_INVALID_ARG_VALUE('outputEncoding'\x2C outputEncoding);\n      }\n    }\n  }\n  return oneShotDigest(algorithm\x2C getCachedHashId(algorithm)\x2C getHashCache()\x2C\n                       input\x2C normalized\x2C encodingsMap[normalized]);\n}\n\nmodule.exports = {\n  Hash\x2C\n  Hmac\x2C\n  asyncDigest\x2C\n  hash\x2C\n};\n
code-source-info,0x12ea9867ae58,153,0,5947,C0O0C4O5947,,
code-creation,JS,9,165083,0x12ea9867b0b8,654, node:internal/crypto/hash:1:1,0x2ded8913d40,~
code-source-info,0x12ea9867b0b
tick,0x1924a5f2c,165125,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea986767f3,0x107f89188,0x107f88e30,0x12ea986757a5,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,165333,0x12ea9867b4b0,5, node:internal/crypto/x509:1:1,0x2ded89157b0,~
script-source,154,node:internal/crypto/x509,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  parseX509\x2C\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  markTransferMode\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nlet lazyTranslatePeerCertificate;\n\nconst kInternalState = Symbol('kInternalState');\n\nfunction isX509Certificate(value) {\n  return value[kInternalState] !== undefined;\n}\n\nfunction getFlags(options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const {\n    subject = 'default'\x2C  // Can be 'default'\x2C 'always'\x2C or 'never'\n    wildcards = true\x2C\n    partialWildcards = true\x2C\n    multiLabelWildcards = false\x2C\n    singleLabelSubdomains = false\x2C\n  } = { ...options };\n  let flags = 0;\n  validateString(subject\x2C 'options.subject');\n  validateBoolean(wildcards\x2C 'options.wildcards');\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\n  switch (subject) {\n    case 'default': /* Matches OpenSSL's default\x2C no flags. */ break;\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\n  }\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\n  return flags;\n}\n\nclass InternalX509Certificate {\n  [kInternalState] = new SafeMap();\n\n  constructor(handle) {\n    markTransferMode(this\x2C true\x2C false);\n    this[kHandle] = handle;\n  }\n}\n\nclass X509Certificate {\n  [kInternalState] = new SafeMap();\n\n  constructor(buffer) {\n    if (typeof buffer === 'string')\n      buffer = Buffer.from(buffer);\n    if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        buffer);\n    }\n    markTransferMode(this\x2C true\x2C false);\n    this[kHandle] = parseX509(buffer);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `X509Certificate ${inspect({\n      subject: this.subject\x2C\n      subjectAltName: this.subjectAltName\x2C\n      issuer: this.issuer\x2C\n      infoAccess: this.infoAccess\x2C\n      validFrom: this.validFrom\x2C\n      validTo: this.validTo\x2C\n      validFromDate: this.validFromDate\x2C\n      validToDate: this.validToDate\x2C\n      fingerprint: this.fingerprint\x2C\n      fingerprint256: this.fingerprint256\x2C\n      fingerprint512: this.fingerprint512\x2C\n      keyUsage: this.keyUsage\x2C\n      serialNumber: this.serialNumber\x2C\n    }\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n\n  get subject() {\n    let value = this[kInternalState].get('subject');\n    if (value === undefined) {\n      value = this[kHandle].subject();\n      this[kInternalState].set('subject'\x2C value);\n    }\n    return value;\n  }\n\n  get subjectAltName() {\n    let value = this[kInternalState].get('subjectAltName');\n    if (value === undefined) {\n      value = this[kHandle].subjectAltName();\n      this[kInternalState].set('subjectAltName'\x2C value);\n    }\n    return value;\n  }\n\n  get issuer() {\n    let value = this[kInternalState].get('issuer');\n    if (value === undefined) {\n      value = this[kHandle].issuer();\n      this[kInternalState].set('issuer'\x2C value);\n    }\n    return value;\n  }\n\n  get issuerCertificate() {\n    let value = this[kInternalState].get('issuerCertificate');\n    if (value === undefined) {\n      const cert = this[kHandle].getIssuerCert();\n      if (cert)\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\n      this[kInternalState].set('issuerCertificate'\x2C value);\n    }\n    return value;\n  }\n\n  get infoAccess() {\n    let value = this[kInternalState].get('infoAccess');\n    if (value === undefined) {\n      value = this[kHandle].infoAccess();\n      this[kInternalState].set('infoAccess'\x2C value);\n    }\n    return value;\n  }\n\n  get validFrom() {\n    let value = this[kInternalState].get('validFrom');\n    if (value === undefined) {\n      value = this[kHandle].validFrom();\n      this[kInternalState].set('validFrom'\x2C value);\n    }\n    return value;\n  }\n\n  get validTo() {\n    let value = this[kInternalState].get('validTo');\n    if (value === undefined) {\n      value = this[kHandle].validTo();\n      this[kInternalState].set('validTo'\x2C value);\n    }\n    return value;\n  }\n\n  get validFromDate() {\n    let value = this[kInternalState].get('validFromDate');\n    if (value === undefined) {\n      value = this[kHandle].validFromDate();\n      this[kInternalState].set('validFromDate'\x2C value);\n    }\n    return value;\n  }\n\n  get validToDate() {\n    let value = this[kInternalState].get('validToDate');\n    if (value === undefined) {\n      value = this[kHandle].validToDate();\n      this[kInternalState].set('validToDate'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint() {\n    let value = this[kInternalState].get('fingerprint');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint();\n      this[kInternalState].set('fingerprint'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint256() {\n    let value = this[kInternalState].get('fingerprint256');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint256();\n      this[kInternalState].set('fingerprint256'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint512() {\n    let value = this[kInternalState].get('fingerprint512');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint512();\n      this[kInternalState].set('fingerprint512'\x2C value);\n    }\n    return value;\n  }\n\n  get keyUsage() {\n    let value = this[kInternalState].get('keyUsage');\n    if (value === undefined) {\n      value = this[kHandle].keyUsage();\n      this[kInternalState].set('keyUsage'\x2C value);\n    }\n    return value;\n  }\n\n  get serialNumber() {\n    let value = this[kInternalState].get('serialNumber');\n    if (value === undefined) {\n      value = this[kHandle].serialNumber();\n      this[kInternalState].set('serialNumber'\x2C value);\n    }\n    return value;\n  }\n\n  get raw() {\n    let value = this[kInternalState].get('raw');\n    if (value === undefined) {\n      value = this[kHandle].raw();\n      this[kInternalState].set('raw'\x2C value);\n    }\n    return value;\n  }\n\n  get publicKey() {\n    let value = this[kInternalState].get('publicKey');\n    if (value === undefined) {\n      value = new PublicKeyObject(this[kHandle].publicKey());\n      this[kInternalState].set('publicKey'\x2C value);\n    }\n    return value;\n  }\n\n  toString() {\n    let value = this[kInternalState].get('pem');\n    if (value === undefined) {\n      value = this[kHandle].pem();\n      this[kInternalState].set('pem'\x2C value);\n    }\n    return value;\n  }\n\n  // There's no standardized JSON encoding for X509 certs so we\n  // fallback to providing the PEM encoding as a string.\n  toJSON() { return this.toString(); }\n\n  get ca() {\n    let value = this[kInternalState].get('ca');\n    if (value === undefined) {\n      value = this[kHandle].checkCA();\n      this[kInternalState].set('ca'\x2C value);\n    }\n    return value;\n  }\n\n  checkHost(name\x2C options) {\n    validateString(name\x2C 'name');\n    return this[kHandle].checkHost(name\x2C getFlags(options));\n  }\n\n  checkEmail(email\x2C options) {\n    validateString(email\x2C 'email');\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\n  }\n\n  checkIP(ip\x2C options) {\n    validateString(ip\x2C 'ip');\n    // The options argument is currently undocumented since none of the options\n    // have any effect on the behavior of this function. However\x2C we still parse\n    // the options argument in case OpenSSL adds flags in the future that do\n    // affect the behavior of X509_check_ip. This ensures that no invalid values\n    // are passed as the second argument in the meantime.\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\n  }\n\n  checkIssued(otherCert) {\n    if (!isX509Certificate(otherCert))\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\n    return this[kHandle].checkIssued(otherCert[kHandle]);\n  }\n\n  checkPrivateKey(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'private')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\n  }\n\n  verify(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'public')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].verify(pkey[kHandle]);\n  }\n\n  toLegacyObject() {\n    // TODO(tniessen): do not depend on translatePeerCertificate here\x2C return\n    // the correct legacy representation from the binding\n    lazyTranslatePeerCertificate ??=\n      require('_tls_common').translatePeerCertificate;\n    return lazyTranslatePeerCertificate(this[kHandle].toLegacy());\n  }\n}\n\nInternalX509Certificate.prototype.constructor = X509Certificate;\nObjectSetPrototypeOf(\n  InternalX509Certificate.prototype\x2C\n  X509Certificate.prototype);\n\nmodule.exports = {\n  X509Certificate\x2C\n  InternalX509Certificate\x2C\n  isX509Certificate\x2C\n};\n
code-source-info,0x12ea9867b4b0,154,0,10479,C0O0C4O10479,,
code-creation,JS,9,165708,0x12ea9867b7d0,710, node:internal/crypto/x509:1:1,0x2ded8915b58,~
code-source-info,0x12ea9867b7d0,154,0,10479,C0O0C93O25C98O49C104O60C109O346C112O346C117O96C123O109C129O149C135O188C141O220C147O260C153O301C159O420C165O420C170O384C176O403C182O515C188O515C193O485C198O497C204O609C210O609C215O552C221O571C227O589C233O662C239O662C244O650C250O716C256O716C261O705C267O769C273O769C278O746C284O883C290O883C295O819C300O825C306O851C312O970C318O970C323O922C329O942C334O952C339O1038C345O1038C350O1025C356O1076C357O1076C359O1130C362O1130C366O1130C385O2524C413O2489C432O2685C439O3076C448O3782C457O3951C647O10235C650O10259C657O10281C661O10300C664O10348C669O10377C674O10300C679O10390C686O10411C692O10430C698O10457C704O10405C709O10478,,
code-creation,JS,9,165750,0x12ea9867bbb8,22,X509Certificate node:internal/crypto/x509:106:23,0x2ded8916990,~
code-source-info,0x12ea9867bbb8,154,2680,10233,C3O2703C10O2703C21O10233,,
code-creation,JS,9,165750,0x12ea9867bc48,22,InternalX509Certificate node:internal/crypto/x509:97:31,0x2ded8915cc8,~
code-source-info,0x12ea9867bc48,154,2519,2656,C3O2542C10O2542C21O2656,,
code-creation,Eval,9,165833,0x12ea9867bcd8,5, node:internal/crypto/certificate:1:1,0x2ded8918148,~
script-source,155,node:internal/crypto/certificate,'use strict';\n\nconst {\n  certExportChallenge\x2C\n  certExportPublicKey\x2C\n  certVerifySpkac\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n} = require('internal/crypto/util');\n\n// The functions contained in this file cover the SPKAC format\n// (also referred to as Netscape SPKI). A general description of\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\n\nfunction verifySpkac(spkac\x2C encoding) {\n  return certVerifySpkac(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportPublicKey(spkac\x2C encoding) {\n  return certExportPublicKey(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportChallenge(spkac\x2C encoding) {\n  return certExportChallenge(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\n// The legacy implementation of this exposed the Certificate\n// object and required that users create an instance before\n// calling the member methods. This API pattern has been\n// deprecated\x2C however\x2C as the method implementations do not\n// rely on any object state.\n\n// For backwards compatibility reasons\x2C this cannot be converted into a\n// ES6 Class.\nfunction Certificate() {\n  if (!(this instanceof Certificate))\n    return new Certificate();\n}\n\nCertificate.prototype.verifySpkac = verifySpkac;\nCertificate.prototype.exportPublicKey = exportPublicKey;\nCertificate.prototype.exportChallenge = exportChallenge;\n\nCertificate.exportChallenge = exportChallenge;\nCertificate.exportPublicKey = exportPublicKey;\nCertificate.verifySpkac = verifySpkac;\n\nmodule.exports = Certificate;\n
code-source-info,0x12ea9867bcd8,155,0,1546,C0O0C4O1546,,
code-creation,JS,9,165917,0x12ea9867bdc8,155, node:internal/crypto/certificate:1:1,0x2ded8918260,~
code-source-info,0x12ea9867bdc8,155,0,1546,C0O0C38O92C41O92C46O25C52O48C58O71C64O156C67O156C72O130C78O1218C81O1230C88O1252C92O1267C95O1279C102O1305C106O1324C109O1336C116O1362C120O1382C125O1410C129O1429C134O1457C138O1476C143O1500C147O1516C149O1531C154O1545,,
code-creation,JS,9,166042,0x12ea9867bf38,33,getRandomBytesAlias node:crypto:289:29,0x31c3bc79900,~
code-source-info,0x12ea9867bf38,142,6597,7402,C0O6597C9O6607C14O6667C22O7163C32O7400,,
tick,0x100cec580,166167,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea986757df,0x107f89188,0x107f88e30,0x12ea986734b9,0x107f89188,0x107f88e30,0x12ea98671ccf,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,166208,0x12ea9867bfe0,5, node:internal/js_stream_socket:1:1,0x2ded891bb70,~
script-source,156,node:internal/js_stream_socket,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst { Socket } = require('net');\nconst { JSStream } = internalBinding('js_stream');\nconst uv = internalBinding('uv');\nlet debug = require('internal/util/debuglog').debuglog(\n  'stream_socket'\x2C\n  (fn) => {\n    debug = fn;\n  }\x2C\n);\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { ERR_STREAM_WRAP } = require('internal/errors').codes;\nconst { kBoundSession } = require('internal/stream_base_commons');\n\nconst kCurrentWriteRequest = Symbol('kCurrentWriteRequest');\nconst kCurrentShutdownRequest = Symbol('kCurrentShutdownRequest');\nconst kPendingShutdownRequest = Symbol('kPendingShutdownRequest');\nconst kPendingClose = Symbol('kPendingClose');\n\nfunction isClosing() { return this[owner_symbol].isClosing(); }\n\nfunction onreadstart() { return this[owner_symbol].readStart(); }\n\nfunction onreadstop() { return this[owner_symbol].readStop(); }\n\nfunction onshutdown(req) { return this[owner_symbol].doShutdown(req); }\n\nfunction onwrite(req\x2C bufs) { return this[owner_symbol].doWrite(req\x2C bufs); }\n\n/* This class serves as a wrapper for when the C++ side of Node wants access\n * to a standard JS stream. For example\x2C TLS or HTTP do not operate on network\n * resources conceptually\x2C although that is the common case and what we are\n * optimizing for; in theory\x2C they are completely composable and can work with\n * any stream resource they see.\n *\n * For the common case\x2C i.e. a TLS socket wrapping around a net.Socket\x2C we\n * can skip going through the JS layer and let TLS access the raw C++ handle\n * of a net.Socket. The flipside of this is that\x2C to maintain composability\x2C\n * we need a way to create "fake" net.Socket instances that call back into a\n * "real" JavaScript stream. JSStreamSocket is exactly this.\n */\nclass JSStreamSocket extends Socket {\n  constructor(stream) {\n    const handle = new JSStream();\n    handle.close = (cb) => {\n      debug('close');\n      this.doClose(cb);\n    };\n    // Inside of the following functions\x2C `this` refers to the handle\n    // and `this[owner_symbol]` refers to this JSStreamSocket instance.\n    handle.isClosing = isClosing;\n    handle.onreadstart = onreadstart;\n    handle.onreadstop = onreadstop;\n    handle.onshutdown = onshutdown;\n    handle.onwrite = onwrite;\n\n    stream.pause();\n    stream.on('error'\x2C (err) => this.emit('error'\x2C err));\n    const ondata = (chunk) => {\n      if (typeof chunk === 'string' ||\n          stream.readableObjectMode === true) {\n        // Make sure that no further `data` events will happen.\n        stream.pause();\n        stream.removeListener('data'\x2C ondata);\n\n        this.emit('error'\x2C new ERR_STREAM_WRAP());\n        return;\n      }\n\n      debug('data'\x2C chunk.length);\n      if (this._handle)\n        this._handle.readBuffer(chunk);\n    };\n    stream.on('data'\x2C ondata);\n    stream.once('end'\x2C () => {\n      debug('end');\n      if (this._handle)\n        this._handle.emitEOF();\n    });\n    // Some `Stream` don't pass `hasError` parameters when closed.\n    stream.once('close'\x2C () => {\n      // Errors emitted from `stream` have also been emitted to this instance\n      // so that we don't pass errors to `destroy()` again.\n      this.destroy();\n    });\n\n    super({ handle\x2C manualStart: true });\n    this.stream = stream;\n    this[kCurrentWriteRequest] = null;\n    this[kCurrentShutdownRequest] = null;\n    this[kPendingShutdownRequest] = null;\n    this[kPendingClose] = false;\n    this.readable = stream.readable;\n    this.writable = stream.writable;\n\n    // Start reading.\n    this.read(0);\n  }\n\n  // Allow legacy requires in the test suite to keep working:\n  //   const { StreamWrap } = require('internal/js_stream_socket')\n  static get StreamWrap() {\n    return JSStreamSocket;\n  }\n\n  isClosing() {\n    return !this.readable || !this.writable;\n  }\n\n  readStart() {\n    this.stream.resume();\n    return 0;\n  }\n\n  readStop() {\n    this.stream.pause();\n    return 0;\n  }\n\n  doShutdown(req) {\n    // TODO(addaleax): It might be nice if we could get into a state where\n    // DoShutdown() is not called on streams while a write is still pending.\n    //\n    // Currently\x2C the only part of the code base where that happens is the\n    // TLS implementation\x2C which calls both DoWrite() and DoShutdown() on the\n    // underlying network stream inside of its own DoShutdown() method.\n    // Working around that on the native side is not quite trivial (yet?)\x2C\n    // so for now that is supported here.\n\n    if (this[kCurrentWriteRequest] !== null) {\n      this[kPendingShutdownRequest] = req;\n      return 0;\n    }\n\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n    this[kCurrentShutdownRequest] = req;\n\n    if (this[kPendingClose]) {\n      // If doClose is pending\x2C the stream & this._handle are gone. We can't do\n      // anything. doClose will call finishShutdown with ECANCELED for us shortly.\n      return 0;\n    }\n\n    const handle = this._handle;\n    assert(handle !== null);\n\n    process.nextTick(() => {\n      // Ensure that write is dispatched asynchronously.\n      this.stream.end(() => {\n        this.finishShutdown(handle\x2C 0);\n      });\n    });\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishShutdown(handle\x2C errCode) {\n    // The shutdown request might already have been cancelled.\n    if (this[kCurrentShutdownRequest] === null)\n      return;\n    const req = this[kCurrentShutdownRequest];\n    this[kCurrentShutdownRequest] = null;\n    handle.finishShutdown(req\x2C errCode);\n  }\n\n  doWrite(req\x2C bufs) {\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n\n    if (this[kPendingClose]) {\n      // If doClose is pending\x2C the stream & this._handle are gone. We can't do\n      // anything. doClose will call finishWrite with ECANCELED for us shortly.\n      this[kCurrentWriteRequest] = req; // Store req\x2C for doClose to cancel\n      return 0;\n    } else if (this._handle === null) {\n      // If this._handle is already null\x2C there is nothing left to do with a\n      // pending write request\x2C so we discard it.\n      return 0;\n    }\n\n    const handle = this._handle;\n\n    const self = this;\n\n    let pending = bufs.length;\n\n    this.stream.cork();\n    // Use `var` over `let` for performance optimization.\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < bufs.length; ++i)\n      this.stream.write(bufs[i]\x2C done);\n    this.stream.uncork();\n\n    // Only set the request here\x2C because the `write()` calls could throw.\n    this[kCurrentWriteRequest] = req;\n\n    function done(err) {\n      if (!err && --pending !== 0)\n        return;\n\n      // Ensure that this is called once in case of error\n      pending = 0;\n\n      let errCode = 0;\n      if (err) {\n        errCode = uv[`UV_${err.code}`] || uv.UV_EPIPE;\n      }\n\n      // Ensure that write was dispatched\n      setImmediate(() => {\n        self.finishWrite(handle\x2C errCode);\n      });\n    }\n\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishWrite(handle\x2C errCode) {\n    // The write request might already have been cancelled.\n    if (this[kCurrentWriteRequest] === null)\n      return;\n    const req = this[kCurrentWriteRequest];\n    this[kCurrentWriteRequest] = null;\n\n    handle.finishWrite(req\x2C errCode);\n    if (this[kPendingShutdownRequest]) {\n      const req = this[kPendingShutdownRequest];\n      this[kPendingShutdownRequest] = null;\n      this.doShutdown(req);\n    }\n  }\n\n  doClose(cb) {\n    this[kPendingClose] = true;\n\n    const handle = this._handle;\n\n    // When sockets of the "net" module destroyed\x2C they will call\n    // `this._handle.close()` which will also emit EOF if not emitted before.\n    // This feature makes sockets on the other side emit "end" and "close"\n    // even though we haven't called `end()`. As `stream` are likely to be\n    // instances of `net.Socket`\x2C calling `stream.destroy()` manually will\n    // avoid issues that don't properly close wrapped connections.\n    this.stream.destroy();\n\n    setImmediate(() => {\n      // Should be already set by net.js\n      assert(this._handle === null);\n\n      this.finishWrite(handle\x2C uv.UV_ECANCELED);\n      this.finishShutdown(handle\x2C uv.UV_ECANCELED);\n\n      this[kPendingClose] = false;\n\n      cb();\n    });\n  }\n\n  get [kBoundSession]() {\n    return this.stream[kBoundSession];\n  }\n\n  set [kBoundSession](session) {\n    this.stream[kBoundSession] = session;\n  }\n}\n\nmodule.exports = JSStreamSocket;\n
code-source-info,0x12ea9867bfe0,156,0,8580,C0O0C4O8580,,
code-creation,JS,9,166500,0x12ea9867c1c0,370, node:internal/js_stream_socket:1:1,0x2ded891bda0,~
code-source-info,0x12ea9867c1c0,156,0,8580,C0O0C75O25C80O76C83O76C88O59C94O110C97O110C101O110C103O157C106O157C111O146C116O194C119O194C124O181C130O235C133O235C137O235C139O270C142O270C147O303C160O304C166O270C168O394C171O394C176O425C181O377C187O463C190O463C195O489C200O443C206O523C209O523C214O505C220O594C223O594C227O594C229O658C232O658C236O658C238O725C241O725C245O725C247O782C250O782C254O782C263O1904C318O8402C331O8472C362O8547C364O8562C369O8579,,
code-creation,JS,9,166708,0x12ea9867c428,14,makeMethodProxy node:_tls_wrap:621:25,0x31c3bc75af8,~
code-source-info,0x12ea9867c428,141,17652,17803,C0O17652C9O17663C13O17801,,
code-creation,JS,9,166750,0x12ea9867c4b0,21, node:_tls_wrap:1178:11,0x31c3bc76d90,~
code-source-info,0x12ea9867c4b0,141,33373,33451,C0O33389C3O33399C11O33419C15O33417C20O33450,,
code-creation,JS,9,166750,0x12ea9867c548,14,makeSocketMethodProxy node:_tls_wrap:1159:31,0x31c3bc75d30,~
code-source-info,0x12ea9867c548,141,33002,33170,C0O33002C9O33013C13O33168,,
code-creation,Eval,9,166833,0x12ea9867c5d0,5, node:internal/tls/secure-pair:1:1,0x2ded8926380,~
script-source,157,node:internal/tls/secure-pair,'use strict';\n\nconst {\n  ReflectConstruct\x2C\n  Symbol\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst { kEmptyObject } = require('internal/util');\nconst { Duplex } = require('stream');\nconst _tls_wrap = require('_tls_wrap');\nconst _tls_common = require('_tls_common');\n\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\n\nclass DuplexSocket extends Duplex {\n  constructor() {\n    super();\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this[kOtherSide].push(chunk);\n      this[kOtherSide][kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this[kOtherSide].on('end'\x2C callback);\n    this[kOtherSide].push(null);\n  }\n}\n\nclass DuplexPair {\n  constructor() {\n    this.socket1 = new DuplexSocket();\n    this.socket2 = new DuplexSocket();\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\n\nclass SecurePair extends EventEmitter {\n  constructor(secureContext = _tls_common.createSecureContext()\x2C\n              isServer = false\x2C\n              requestCert = !isServer\x2C\n              rejectUnauthorized = false\x2C\n              options = kEmptyObject) {\n    super();\n    const { socket1\x2C socket2 } = new DuplexPair();\n\n    this.server = options.server;\n    this.credentials = secureContext;\n\n    this.encrypted = socket1;\n    this.cleartext = new _tls_wrap.TLSSocket(socket2\x2C {\n      secureContext\x2C\n      isServer\x2C\n      requestCert\x2C\n      rejectUnauthorized\x2C\n      ...options\x2C\n    });\n    this.cleartext.once('secure'\x2C () => this.emit('secure'));\n  }\n\n  destroy() {\n    this.cleartext.destroy();\n    this.encrypted.destroy();\n  }\n}\n\nexports.createSecurePair = function createSecurePair(...args) {\n  return ReflectConstruct(SecurePair\x2C args);\n};\n
code-source-info,0x12ea9867c5d0,157,0,1991,C0O0C4O1991,,
code-creation,JS,9,166875,0x12ea9867c700,216, node:internal/tls/secure-pair:1:1,0x2ded89264e8,~
code-source-info,0x12ea9867c700,157,0,1991,C0O0C36O25C42O45C47O92C50O92C55O136C58O136C63O119C69O181C72O181C77O170C82O218C85O218C89O218C91O260C94O260C98O260C100O303C103O303C107O303C109O342C112O342C116O342C118O387C154O360C176O929C178O1166C204O1141C206O1879C210O1904C215O1990,,
code-creation,Eval,9,167250,0x12ea9867c890,5, node:internal/http2/compat:1:1,0x2ded892a488,~
script-source,158,node:internal/http2/compat,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  ObjectAssign\x2C\n  ObjectHasOwn\x2C\n  ObjectKeys\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectGetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst Stream = require('stream');\nconst { Readable } = Stream;\nconst {\n  constants: {\n    HTTP2_HEADER_AUTHORITY\x2C\n    HTTP2_HEADER_CONNECTION\x2C\n    HTTP2_HEADER_METHOD\x2C\n    HTTP2_HEADER_PATH\x2C\n    HTTP2_HEADER_SCHEME\x2C\n    HTTP2_HEADER_STATUS\x2C\n\n    HTTP_STATUS_CONTINUE\x2C\n    HTTP_STATUS_EARLY_HINTS\x2C\n    HTTP_STATUS_EXPECTATION_FAILED\x2C\n    HTTP_STATUS_METHOD_NOT_ALLOWED\x2C\n    HTTP_STATUS_OK\x2C\n  }\x2C\n} = internalBinding('http2');\nconst {\n  codes: {\n    ERR_HTTP2_HEADERS_SENT\x2C\n    ERR_HTTP2_INFO_STATUS_NOT_ALLOWED\x2C\n    ERR_HTTP2_INVALID_HEADER_VALUE\x2C\n    ERR_HTTP2_INVALID_STREAM\x2C\n    ERR_HTTP2_NO_SOCKET_MANIPULATION\x2C\n    ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED\x2C\n    ERR_HTTP2_STATUS_INVALID\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n  validateString\x2C\n  validateLinkHeaderValue\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst {\n  kSocket\x2C\n  kRequest\x2C\n  kProxySocket\x2C\n  assertValidPseudoHeader\x2C\n  getAuthority\x2C\n} = require('internal/http2/util');\nconst { _checkIsHttpToken: checkIsHttpToken } = require('_http_common');\n\nconst kBeginSend = Symbol('begin-send');\nconst kState = Symbol('state');\nconst kStream = Symbol('stream');\nconst kResponse = Symbol('response');\nconst kHeaders = Symbol('headers');\nconst kRawHeaders = Symbol('rawHeaders');\nconst kTrailers = Symbol('trailers');\nconst kRawTrailers = Symbol('rawTrailers');\nconst kSetHeader = Symbol('setHeader');\nconst kAppendHeader = Symbol('appendHeader');\nconst kAborted = Symbol('aborted');\n\nlet statusMessageWarned = false;\nlet statusConnectionHeaderWarned = false;\n\n// Defines and implements an API compatibility layer on top of the core\n// HTTP/2 implementation\x2C intended to provide an interface that is as\n// close as possible to the current require('http') API\n\nconst assertValidHeader = hideStackFrames((name\x2C value) => {\n  if (name === '' ||\n      typeof name !== 'string' ||\n      name.includes(' ')) {\n    throw new ERR_INVALID_HTTP_TOKEN.HideStackFramesError('Header name'\x2C name);\n  }\n  if (isPseudoHeader(name)) {\n    throw new ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED.HideStackFramesError();\n  }\n  if (value === undefined || value === null) {\n    throw new ERR_HTTP2_INVALID_HEADER_VALUE.HideStackFramesError(value\x2C name);\n  }\n  if (!isConnectionHeaderAllowed(name\x2C value)) {\n    connectionHeaderMessageWarn();\n  }\n});\n\nfunction isPseudoHeader(name) {\n  switch (name) {\n    case HTTP2_HEADER_STATUS:    // :status\n    case HTTP2_HEADER_METHOD:    // :method\n    case HTTP2_HEADER_PATH:      // :path\n    case HTTP2_HEADER_AUTHORITY: // :authority\n    case HTTP2_HEADER_SCHEME:    // :scheme\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction statusMessageWarn() {\n  if (statusMessageWarned === false) {\n    process.emitWarning(\n      'Status message is not supported by HTTP/2 (RFC7540 8.1.2.4)'\x2C\n      'UnsupportedWarning'\x2C\n    );\n    statusMessageWarned = true;\n  }\n}\n\nfunction isConnectionHeaderAllowed(name\x2C value) {\n  return name !== HTTP2_HEADER_CONNECTION ||\n         value === 'trailers';\n}\n\nfunction connectionHeaderMessageWarn() {\n  if (statusConnectionHeaderWarned === false) {\n    process.emitWarning(\n      'The provided connection header is not valid\x2C ' +\n      'the value will be dropped from the header and ' +\n      'will never be in use.'\x2C\n      'UnsupportedWarning'\x2C\n    );\n    statusConnectionHeaderWarned = true;\n  }\n}\n\nfunction onStreamData(chunk) {\n  const request = this[kRequest];\n  if (request !== undefined && !request.push(chunk))\n    this.pause();\n}\n\nfunction onStreamTrailers(trailers\x2C flags\x2C rawTrailers) {\n  const request = this[kRequest];\n  if (request !== undefined) {\n    ObjectAssign(request[kTrailers]\x2C trailers);\n    request[kRawTrailers].push(...rawTrailers);\n  }\n}\n\nfunction onStreamEnd() {\n  // Cause the request stream to end as well.\n  const request = this[kRequest];\n  if (request !== undefined)\n    this[kRequest].push(null);\n}\n\nfunction onStreamError(error) {\n  // This is purposefully left blank\n  //\n  // errors in compatibility mode are\n  // not forwarded to the request\n  // and response objects.\n}\n\nfunction onRequestPause() {\n  this[kStream].pause();\n}\n\nfunction onRequestResume() {\n  this[kStream].resume();\n}\n\nfunction onStreamDrain() {\n  const response = this[kResponse];\n  if (response !== undefined)\n    response.emit('drain');\n}\n\nfunction onStreamAbortedRequest() {\n  const request = this[kRequest];\n  if (request !== undefined && request[kState].closed === false) {\n    request[kAborted] = true;\n    request.emit('aborted');\n  }\n}\n\nfunction onStreamAbortedResponse() {\n  // non-op for now\n}\n\nfunction resumeStream(stream) {\n  stream.resume();\n}\n\nconst proxySocketHandler = {\n  has(stream\x2C prop) {\n    const ref = stream.session !== undefined ? stream.session[kSocket] : stream;\n    return (prop in stream) || (prop in ref);\n  }\x2C\n\n  get(stream\x2C prop) {\n    switch (prop) {\n      case 'on':\n      case 'once':\n      case 'end':\n      case 'emit':\n      case 'destroy':\n        return stream[prop].bind(stream);\n      case 'writable':\n      case 'destroyed':\n        return stream[prop];\n      case 'readable': {\n        if (stream.destroyed)\n          return false;\n        const request = stream[kRequest];\n        return request ? request.readable : stream.readable;\n      }\n      case 'setTimeout': {\n        const session = stream.session;\n        if (session !== undefined)\n          return session.setTimeout.bind(session);\n        return stream.setTimeout.bind(stream);\n      }\n      case 'write':\n      case 'read':\n      case 'pause':\n      case 'resume':\n        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n      default: {\n        const ref = stream.session !== undefined ?\n          stream.session[kSocket] : stream;\n        const value = ref[prop];\n        return typeof value === 'function' ?\n          value.bind(ref) :\n          value;\n      }\n    }\n  }\x2C\n  getPrototypeOf(stream) {\n    if (stream.session !== undefined)\n      return ReflectGetPrototypeOf(stream.session[kSocket]);\n    return ReflectGetPrototypeOf(stream);\n  }\x2C\n  set(stream\x2C prop\x2C value) {\n    switch (prop) {\n      case 'writable':\n      case 'readable':\n      case 'destroyed':\n      case 'on':\n      case 'once':\n      case 'end':\n      case 'emit':\n      case 'destroy':\n        stream[prop] = value;\n        return true;\n      case 'setTimeout': {\n        const session = stream.session;\n        if (session !== undefined)\n          session.setTimeout = value;\n        else\n          stream.setTimeout = value;\n        return true;\n      }\n      case 'write':\n      case 'read':\n      case 'pause':\n      case 'resume':\n        throw new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n      default: {\n        const ref = stream.session !== undefined ?\n          stream.session[kSocket] : stream;\n        ref[prop] = value;\n        return true;\n      }\n    }\n  }\x2C\n};\n\nfunction onStreamCloseRequest() {\n  const req = this[kRequest];\n\n  if (req === undefined)\n    return;\n\n  const state = req[kState];\n  state.closed = true;\n\n  req.push(null);\n  // If the user didn't interact with incoming data and didn't pipe it\x2C\n  // dump it for compatibility with http1\n  if (!state.didRead && !req._readableState.resumeScheduled)\n    req.resume();\n\n  this[kProxySocket] = null;\n  this[kRequest] = undefined;\n\n  req.emit('close');\n}\n\nfunction onStreamTimeout(kind) {\n  return function onStreamTimeout() {\n    const obj = this[kind];\n    obj.emit('timeout');\n  };\n}\n\nclass Http2ServerRequest extends Readable {\n  constructor(stream\x2C headers\x2C options\x2C rawHeaders) {\n    super({ autoDestroy: false\x2C ...options });\n    this[kState] = {\n      closed: false\x2C\n      didRead: false\x2C\n    };\n    // Headers in HTTP/1 are not initialized using Object.create(null) which\x2C\n    // although preferable\x2C would simply break too much code. Ergo header\n    // initialization using Object.create(null) in HTTP/2 is intentional.\n    this[kHeaders] = headers;\n    this[kRawHeaders] = rawHeaders;\n    this[kTrailers] = {};\n    this[kRawTrailers] = [];\n    this[kStream] = stream;\n    this[kAborted] = false;\n    stream[kProxySocket] = null;\n    stream[kRequest] = this;\n\n    // Pause the stream..\n    stream.on('trailers'\x2C onStreamTrailers);\n    stream.on('end'\x2C onStreamEnd);\n    stream.on('error'\x2C onStreamError);\n    stream.on('aborted'\x2C onStreamAbortedRequest);\n    stream.on('close'\x2C onStreamCloseRequest);\n    stream.on('timeout'\x2C onStreamTimeout(kRequest));\n    this.on('pause'\x2C onRequestPause);\n    this.on('resume'\x2C onRequestResume);\n  }\n\n  get aborted() {\n    return this[kAborted];\n  }\n\n  get complete() {\n    return this[kAborted] ||\n           this.readableEnded ||\n           this[kState].closed ||\n           this[kStream].destroyed;\n  }\n\n  get stream() {\n    return this[kStream];\n  }\n\n  get headers() {\n    return this[kHeaders];\n  }\n\n  get rawHeaders() {\n    return this[kRawHeaders];\n  }\n\n  get trailers() {\n    return this[kTrailers];\n  }\n\n  get rawTrailers() {\n    return this[kRawTrailers];\n  }\n\n  get httpVersionMajor() {\n    return 2;\n  }\n\n  get httpVersionMinor() {\n    return 0;\n  }\n\n  get httpVersion() {\n    return '2.0';\n  }\n\n  get socket() {\n    const stream = this[kStream];\n    const proxySocket = stream[kProxySocket];\n    if (proxySocket === null)\n      return stream[kProxySocket] = new Proxy(stream\x2C proxySocketHandler);\n    return proxySocket;\n  }\n\n  get connection() {\n    return this.socket;\n  }\n\n  _read(nread) {\n    const state = this[kState];\n    assert(!state.closed);\n    if (!state.didRead) {\n      state.didRead = true;\n      this[kStream].on('data'\x2C onStreamData);\n    } else {\n      process.nextTick(resumeStream\x2C this[kStream]);\n    }\n  }\n\n  get method() {\n    return this[kHeaders][HTTP2_HEADER_METHOD];\n  }\n\n  set method(method) {\n    validateString(method\x2C 'method');\n    if (method.trim() === '')\n      throw new ERR_INVALID_ARG_VALUE('method'\x2C method);\n\n    this[kHeaders][HTTP2_HEADER_METHOD] = method;\n  }\n\n  get authority() {\n    return getAuthority(this[kHeaders]);\n  }\n\n  get scheme() {\n    return this[kHeaders][HTTP2_HEADER_SCHEME];\n  }\n\n  get url() {\n    return this[kHeaders][HTTP2_HEADER_PATH];\n  }\n\n  set url(url) {\n    this[kHeaders][HTTP2_HEADER_PATH] = url;\n  }\n\n  setTimeout(msecs\x2C callback) {\n    if (!this[kState].closed)\n      this[kStream].setTimeout(msecs\x2C callback);\n    return this;\n  }\n}\n\nfunction onStreamTrailersReady() {\n  this.sendTrailers(this[kResponse][kTrailers]);\n}\n\nfunction onStreamCloseResponse() {\n  const res = this[kResponse];\n\n  if (res === undefined)\n    return;\n\n  const state = res[kState];\n\n  if (this.headRequest !== state.headRequest)\n    return;\n\n  state.closed = true;\n\n  this[kProxySocket] = null;\n\n  this.removeListener('wantTrailers'\x2C onStreamTrailersReady);\n  this[kResponse] = undefined;\n\n  res.emit('finish');\n  res.emit('close');\n}\n\nclass Http2ServerResponse extends Stream {\n  constructor(stream\x2C options) {\n    super(options);\n    this[kState] = {\n      closed: false\x2C\n      ending: false\x2C\n      destroyed: false\x2C\n      headRequest: false\x2C\n      sendDate: true\x2C\n      statusCode: HTTP_STATUS_OK\x2C\n    };\n    this[kHeaders] = { __proto__: null };\n    this[kTrailers] = { __proto__: null };\n    this[kStream] = stream;\n    stream[kProxySocket] = null;\n    stream[kResponse] = this;\n    this.writable = true;\n    this.req = stream[kRequest];\n    stream.on('drain'\x2C onStreamDrain);\n    stream.on('aborted'\x2C onStreamAbortedResponse);\n    stream.on('close'\x2C onStreamCloseResponse);\n    stream.on('wantTrailers'\x2C onStreamTrailersReady);\n    stream.on('timeout'\x2C onStreamTimeout(kResponse));\n  }\n\n  // User land modules such as finalhandler just check truthiness of this\n  // but if someone is actually trying to use this for more than that\n  // then we simply can't support such use cases\n  get _header() {\n    return this.headersSent;\n  }\n\n  get writableEnded() {\n    const state = this[kState];\n    return state.ending;\n  }\n\n  get finished() {\n    const state = this[kState];\n    return state.ending;\n  }\n\n  get socket() {\n    // This is compatible with http1 which removes socket reference\n    // only from ServerResponse but not IncomingMessage\n    if (this[kState].closed)\n      return undefined;\n\n    const stream = this[kStream];\n    const proxySocket = stream[kProxySocket];\n    if (proxySocket === null)\n      return stream[kProxySocket] = new Proxy(stream\x2C proxySocketHandler);\n    return proxySocket;\n  }\n\n  get connection() {\n    return this.socket;\n  }\n\n  get stream() {\n    return this[kStream];\n  }\n\n  get headersSent() {\n    return this[kStream].headersSent;\n  }\n\n  get sendDate() {\n    return this[kState].sendDate;\n  }\n\n  set sendDate(bool) {\n    this[kState].sendDate = Boolean(bool);\n  }\n\n  get statusCode() {\n    return this[kState].statusCode;\n  }\n\n  get writableCorked() {\n    return this[kStream].writableCorked;\n  }\n\n  get writableHighWaterMark() {\n    return this[kStream].writableHighWaterMark;\n  }\n\n  get writableFinished() {\n    return this[kStream].writableFinished;\n  }\n\n  get writableLength() {\n    return this[kStream].writableLength;\n  }\n\n  set statusCode(code) {\n    code |= 0;\n    if (code >= 100 && code < 200)\n      throw new ERR_HTTP2_INFO_STATUS_NOT_ALLOWED();\n    if (code < 100 || code > 599)\n      throw new ERR_HTTP2_STATUS_INVALID(code);\n    this[kState].statusCode = code;\n  }\n\n  setTrailer(name\x2C value) {\n    validateString(name\x2C 'name');\n    name = name.trim().toLowerCase();\n    assertValidHeader(name\x2C value);\n    this[kTrailers][name] = value;\n  }\n\n  addTrailers(headers) {\n    const keys = ObjectKeys(headers);\n    let key = '';\n    for (let i = 0; i < keys.length; i++) {\n      key = keys[i];\n      this.setTrailer(key\x2C headers[key]);\n    }\n  }\n\n  getHeader(name) {\n    validateString(name\x2C 'name');\n    name = name.trim().toLowerCase();\n    return this[kHeaders][name];\n  }\n\n  getHeaderNames() {\n    return ObjectKeys(this[kHeaders]);\n  }\n\n  getHeaders() {\n    const headers = { __proto__: null };\n    return ObjectAssign(headers\x2C this[kHeaders]);\n  }\n\n  hasHeader(name) {\n    validateString(name\x2C 'name');\n    name = name.trim().toLowerCase();\n    return ObjectHasOwn(this[kHeaders]\x2C name);\n  }\n\n  removeHeader(name) {\n    validateString(name\x2C 'name');\n    if (this[kStream].headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    name = name.trim().toLowerCase();\n\n    if (name === 'date') {\n      this[kState].sendDate = false;\n\n      return;\n    }\n\n    delete this[kHeaders][name];\n  }\n\n  setHeader(name\x2C value) {\n    validateString(name\x2C 'name');\n    if (this[kStream].headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    this[kSetHeader](name\x2C value);\n  }\n\n  [kSetHeader](name\x2C value) {\n    name = name.trim().toLowerCase();\n    assertValidHeader(name\x2C value);\n\n    if (!isConnectionHeaderAllowed(name\x2C value)) {\n      return;\n    }\n\n    if (name[0] === ':')\n      assertValidPseudoHeader(name);\n    else if (!checkIsHttpToken(name))\n      this.destroy(new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name));\n\n    this[kHeaders][name] = value;\n  }\n\n  appendHeader(name\x2C value) {\n    validateString(name\x2C 'name');\n    if (this[kStream].headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    this[kAppendHeader](name\x2C value);\n  }\n\n  [kAppendHeader](name\x2C value) {\n    name = name.trim().toLowerCase();\n    assertValidHeader(name\x2C value);\n\n    if (!isConnectionHeaderAllowed(name\x2C value)) {\n      return;\n    }\n\n    if (name[0] === ':')\n      assertValidPseudoHeader(name);\n    else if (!checkIsHttpToken(name))\n      this.destroy(new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name));\n\n    // Handle various possible cases the same as OutgoingMessage.appendHeader:\n    const headers = this[kHeaders];\n    if (headers === null || !headers[name]) {\n      return this.setHeader(name\x2C value);\n    }\n\n    if (!ArrayIsArray(headers[name])) {\n      headers[name] = [headers[name]];\n    }\n\n    const existingValues = headers[name];\n    if (ArrayIsArray(value)) {\n      for (let i = 0\x2C length = value.length; i < length; i++) {\n        existingValues.push(value[i]);\n      }\n    } else {\n      existingValues.push(value);\n    }\n  }\n\n  get statusMessage() {\n    statusMessageWarn();\n\n    return '';\n  }\n\n  set statusMessage(msg) {\n    statusMessageWarn();\n  }\n\n  flushHeaders() {\n    const state = this[kState];\n    if (!state.closed && !this[kStream].headersSent)\n      this.writeHead(state.statusCode);\n  }\n\n  writeHead(statusCode\x2C statusMessage\x2C headers) {\n    const state = this[kState];\n\n    if (state.closed || this.stream.destroyed)\n      return this;\n    if (this[kStream].headersSent)\n      throw new ERR_HTTP2_HEADERS_SENT();\n\n    if (typeof statusMessage === 'string')\n      statusMessageWarn();\n\n    if (headers === undefined && typeof statusMessage === 'object')\n      headers = statusMessage;\n\n    let i;\n    if (ArrayIsArray(headers)) {\n      if (this[kHeaders]) {\n        // Headers in obj should override previous headers but still\n        // allow explicit duplicates. To do so\x2C we first remove any\n        // existing conflicts\x2C then use appendHeader. This is the\n        // slow path\x2C which only applies when you use setHeader and\n        // then pass headers in writeHead too.\n\n        // We need to handle both the tuple and flat array formats\x2C just\n        // like the logic further below.\n        if (headers.length && ArrayIsArray(headers[0])) {\n          for (let n = 0; n < headers.length; n += 1) {\n            const key = headers[n + 0][0];\n            this.removeHeader(key);\n          }\n        } else {\n          for (let n = 0; n < headers.length; n += 2) {\n            const key = headers[n + 0];\n            this.removeHeader(key);\n          }\n        }\n      }\n\n      // Append all the headers provided in the array:\n      if (headers.length && ArrayIsArray(headers[0])) {\n        for (i = 0; i < headers.length; i++) {\n          const header = headers[i];\n          this[kAppendHeader](header[0]\x2C header[1]);\n        }\n      } else {\n        if (headers.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\n        }\n\n        for (i = 0; i < headers.length; i += 2) {\n          this[kAppendHeader](headers[i]\x2C headers[i + 1]);\n        }\n      }\n    } else if (typeof headers === 'object') {\n      const keys = ObjectKeys(headers);\n      let key = '';\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        this[kSetHeader](key\x2C headers[key]);\n      }\n    }\n\n    state.statusCode = statusCode;\n    this[kBeginSend]();\n\n    return this;\n  }\n\n  cork() {\n    this[kStream].cork();\n  }\n\n  uncork() {\n    this[kStream].uncork();\n  }\n\n  write(chunk\x2C encoding\x2C cb) {\n    const state = this[kState];\n\n    if (typeof encoding === 'function') {\n      cb = encoding;\n      encoding = 'utf8';\n    }\n\n    let err;\n    if (state.ending) {\n      err = new ERR_STREAM_WRITE_AFTER_END();\n    } else if (state.closed) {\n      err = new ERR_HTTP2_INVALID_STREAM();\n    } else if (state.destroyed) {\n      return false;\n    }\n\n    if (err) {\n      if (typeof cb === 'function')\n        process.nextTick(cb\x2C err);\n      this.destroy(err);\n      return false;\n    }\n\n    const stream = this[kStream];\n    if (!stream.headersSent)\n      this.writeHead(state.statusCode);\n    return stream.write(chunk\x2C encoding\x2C cb);\n  }\n\n  end(chunk\x2C encoding\x2C cb) {\n    const stream = this[kStream];\n    const state = this[kState];\n\n    if (typeof chunk === 'function') {\n      cb = chunk;\n      chunk = null;\n    } else if (typeof encoding === 'function') {\n      cb = encoding;\n      encoding = 'utf8';\n    }\n\n    if ((state.closed || state.ending) &&\n        state.headRequest === stream.headRequest) {\n      if (typeof cb === 'function') {\n        process.nextTick(cb);\n      }\n      return this;\n    }\n\n    if (chunk !== null && chunk !== undefined)\n      this.write(chunk\x2C encoding);\n\n    state.headRequest = stream.headRequest;\n    state.ending = true;\n\n    if (typeof cb === 'function') {\n      if (stream.writableEnded)\n        this.once('finish'\x2C cb);\n      else\n        stream.once('finish'\x2C cb);\n    }\n\n    if (!stream.headersSent)\n      this.writeHead(this[kState].statusCode);\n\n    if (this[kState].closed || stream.destroyed)\n      ReflectApply(onStreamCloseResponse\x2C stream\x2C []);\n    else\n      stream.end();\n\n    return this;\n  }\n\n  destroy(err) {\n    if (this[kState].destroyed)\n      return;\n\n    this[kState].destroyed = true;\n    this[kStream].destroy(err);\n  }\n\n  setTimeout(msecs\x2C callback) {\n    if (this[kState].closed)\n      return;\n    this[kStream].setTimeout(msecs\x2C callback);\n  }\n\n  createPushResponse(headers\x2C callback) {\n    validateFunction(callback\x2C 'callback');\n    if (this[kState].closed) {\n      process.nextTick(callback\x2C new ERR_HTTP2_INVALID_STREAM());\n      return;\n    }\n    this[kStream].pushStream(headers\x2C {}\x2C (err\x2C stream\x2C headers\x2C options) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null\x2C new Http2ServerResponse(stream));\n    });\n  }\n\n  [kBeginSend]() {\n    const state = this[kState];\n    const headers = this[kHeaders];\n    headers[HTTP2_HEADER_STATUS] = state.statusCode;\n    const options = {\n      endStream: state.ending\x2C\n      waitForTrailers: true\x2C\n      sendDate: state.sendDate\x2C\n    };\n    this[kStream].respond(headers\x2C options);\n  }\n\n  // TODO doesn't support callbacks\n  writeContinue() {\n    const stream = this[kStream];\n    if (stream.headersSent || this[kState].closed)\n      return false;\n    stream.additionalHeaders({\n      [HTTP2_HEADER_STATUS]: HTTP_STATUS_CONTINUE\x2C\n    });\n    return true;\n  }\n\n  writeEarlyHints(hints) {\n    validateObject(hints\x2C 'hints');\n\n    const headers = { __proto__: null };\n\n    const linkHeaderValue = validateLinkHeaderValue(hints.link);\n\n    for (const key of ObjectKeys(hints)) {\n      if (key !== 'link') {\n        headers[key] = hints[key];\n      }\n    }\n\n    if (linkHeaderValue.length === 0) {\n      return false;\n    }\n\n    const stream = this[kStream];\n\n    if (stream.headersSent || this[kState].closed)\n      return false;\n\n    stream.additionalHeaders({\n      ...headers\x2C\n      [HTTP2_HEADER_STATUS]: HTTP_STATUS_EARLY_HINTS\x2C\n      'Link': linkHeaderValue\x2C\n    });\n\n    return true;\n  }\n}\n\nfunction onServerStream(ServerRequest\x2C ServerResponse\x2C\n                        stream\x2C headers\x2C flags\x2C rawHeaders) {\n  const server = this;\n  const request = new ServerRequest(stream\x2C headers\x2C undefined\x2C rawHeaders);\n  const response = new ServerResponse(stream);\n\n  // Check for the CONNECT method\n  const method = headers[HTTP2_HEADER_METHOD];\n  if (method === 'CONNECT') {\n    if (!server.emit('connect'\x2C request\x2C response)) {\n      response.statusCode = HTTP_STATUS_METHOD_NOT_ALLOWED;\n      response.end();\n    }\n    return;\n  }\n\n  // Check for Expectations\n  if (headers.expect !== undefined) {\n    if (headers.expect === '100-continue') {\n      if (server.listenerCount('checkContinue')) {\n        server.emit('checkContinue'\x2C request\x2C response);\n      } else {\n        response.writeContinue();\n        server.emit('request'\x2C request\x2C response);\n      }\n    } else if (server.listenerCount('checkExpectation')) {\n      server.emit('checkExpectation'\x2C request\x2C response);\n    } else {\n      response.statusCode = HTTP_STATUS_EXPECTATION_FAILED;\n      response.end();\n    }\n    return;\n  }\n\n  server.emit('request'\x2C request\x2C response);\n}\n\nmodule.exports = {\n  onServerStream\x2C\n  Http2ServerRequest\x2C\n  Http2ServerResponse\x2C\n};\n
code-source-info,0x12ea9867c890,158,0,23603,C0O0C4O23603,,
code-creation,JS,9,168083,0x12ea9867ce08,1220, node:internal/http2/compat:1:1,0x2ded892aa38,~
code-source-info,0x12ea9867ce
tick,0x1009ee2f0,168125,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea98671ef7,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x101144704,168708,0,0x0,5,0x107f8951c,0x12ea9867cf75,0x107f89188,0x107f88e30,0x12ea98671ef7,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,169167,0x12ea9867d460,5, node:internal/http2/util:1:1,0x2ded893a708,~
script-source,159,node:internal/http2/util,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  ObjectKeys\x2C\n  SafeSet\x2C\n  String\x2C\n  StringFromCharCode\x2C\n  Symbol\x2C\n} = primordials;\n\nconst binding = internalBinding('http2');\nconst {\n  codes: {\n    ERR_HTTP2_HEADER_SINGLE_VALUE\x2C\n    ERR_HTTP2_INVALID_CONNECTION_HEADERS\x2C\n    ERR_HTTP2_INVALID_PSEUDOHEADER: { HideStackFramesError: ERR_HTTP2_INVALID_PSEUDOHEADER }\x2C\n    ERR_HTTP2_INVALID_SETTING_VALUE\x2C\n    ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n  }\x2C\n  getMessage\x2C\n  hideStackFrames\x2C\n  kIsNodeError\x2C\n} = require('internal/errors');\n\nconst kSensitiveHeaders = Symbol('sensitiveHeaders');\nconst kSocket = Symbol('socket');\nconst kProxySocket = Symbol('proxySocket');\nconst kRequest = Symbol('request');\n\nconst {\n  NGHTTP2_NV_FLAG_NONE\x2C\n  NGHTTP2_NV_FLAG_NO_INDEX\x2C\n  NGHTTP2_SESSION_CLIENT\x2C\n  NGHTTP2_SESSION_SERVER\x2C\n\n  HTTP2_HEADER_STATUS\x2C\n  HTTP2_HEADER_METHOD\x2C\n  HTTP2_HEADER_AUTHORITY\x2C\n  HTTP2_HEADER_SCHEME\x2C\n  HTTP2_HEADER_PATH\x2C\n  HTTP2_HEADER_PROTOCOL\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_MAX_AGE\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD\x2C\n  HTTP2_HEADER_AGE\x2C\n  HTTP2_HEADER_AUTHORIZATION\x2C\n  HTTP2_HEADER_CONTENT_ENCODING\x2C\n  HTTP2_HEADER_CONTENT_LANGUAGE\x2C\n  HTTP2_HEADER_CONTENT_LENGTH\x2C\n  HTTP2_HEADER_CONTENT_LOCATION\x2C\n  HTTP2_HEADER_CONTENT_MD5\x2C\n  HTTP2_HEADER_CONTENT_RANGE\x2C\n  HTTP2_HEADER_CONTENT_TYPE\x2C\n  HTTP2_HEADER_COOKIE\x2C\n  HTTP2_HEADER_DATE\x2C\n  HTTP2_HEADER_DNT\x2C\n  HTTP2_HEADER_ETAG\x2C\n  HTTP2_HEADER_EXPIRES\x2C\n  HTTP2_HEADER_FROM\x2C\n  HTTP2_HEADER_HOST\x2C\n  HTTP2_HEADER_IF_MATCH\x2C\n  HTTP2_HEADER_IF_NONE_MATCH\x2C\n  HTTP2_HEADER_IF_MODIFIED_SINCE\x2C\n  HTTP2_HEADER_IF_RANGE\x2C\n  HTTP2_HEADER_IF_UNMODIFIED_SINCE\x2C\n  HTTP2_HEADER_LAST_MODIFIED\x2C\n  HTTP2_HEADER_LOCATION\x2C\n  HTTP2_HEADER_MAX_FORWARDS\x2C\n  HTTP2_HEADER_PROXY_AUTHORIZATION\x2C\n  HTTP2_HEADER_RANGE\x2C\n  HTTP2_HEADER_REFERER\x2C\n  HTTP2_HEADER_RETRY_AFTER\x2C\n  HTTP2_HEADER_SET_COOKIE\x2C\n  HTTP2_HEADER_TK\x2C\n  HTTP2_HEADER_UPGRADE_INSECURE_REQUESTS\x2C\n  HTTP2_HEADER_USER_AGENT\x2C\n  HTTP2_HEADER_X_CONTENT_TYPE_OPTIONS\x2C\n\n  HTTP2_HEADER_CONNECTION\x2C\n  HTTP2_HEADER_UPGRADE\x2C\n  HTTP2_HEADER_HTTP2_SETTINGS\x2C\n  HTTP2_HEADER_TE\x2C\n  HTTP2_HEADER_TRANSFER_ENCODING\x2C\n  HTTP2_HEADER_KEEP_ALIVE\x2C\n  HTTP2_HEADER_PROXY_CONNECTION\x2C\n\n  HTTP2_METHOD_DELETE\x2C\n  HTTP2_METHOD_GET\x2C\n  HTTP2_METHOD_HEAD\x2C\n} = binding.constants;\n\n// This set is defined strictly by the HTTP/2 specification. Only\n// :-prefixed headers defined by that specification may be added to\n// this set.\nconst kValidPseudoHeaders = new SafeSet([\n  HTTP2_HEADER_STATUS\x2C\n  HTTP2_HEADER_METHOD\x2C\n  HTTP2_HEADER_AUTHORITY\x2C\n  HTTP2_HEADER_SCHEME\x2C\n  HTTP2_HEADER_PATH\x2C\n  HTTP2_HEADER_PROTOCOL\x2C\n]);\n\n// This set contains headers that are permitted to have only a single\n// value. Multiple instances must not be specified.\nconst kSingleValueHeaders = new SafeSet([\n  HTTP2_HEADER_STATUS\x2C\n  HTTP2_HEADER_METHOD\x2C\n  HTTP2_HEADER_AUTHORITY\x2C\n  HTTP2_HEADER_SCHEME\x2C\n  HTTP2_HEADER_PATH\x2C\n  HTTP2_HEADER_PROTOCOL\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_MAX_AGE\x2C\n  HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD\x2C\n  HTTP2_HEADER_AGE\x2C\n  HTTP2_HEADER_AUTHORIZATION\x2C\n  HTTP2_HEADER_CONTENT_ENCODING\x2C\n  HTTP2_HEADER_CONTENT_LANGUAGE\x2C\n  HTTP2_HEADER_CONTENT_LENGTH\x2C\n  HTTP2_HEADER_CONTENT_LOCATION\x2C\n  HTTP2_HEADER_CONTENT_MD5\x2C\n  HTTP2_HEADER_CONTENT_RANGE\x2C\n  HTTP2_HEADER_CONTENT_TYPE\x2C\n  HTTP2_HEADER_DATE\x2C\n  HTTP2_HEADER_DNT\x2C\n  HTTP2_HEADER_ETAG\x2C\n  HTTP2_HEADER_EXPIRES\x2C\n  HTTP2_HEADER_FROM\x2C\n  HTTP2_HEADER_HOST\x2C\n  HTTP2_HEADER_IF_MATCH\x2C\n  HTTP2_HEADER_IF_MODIFIED_SINCE\x2C\n  HTTP2_HEADER_IF_NONE_MATCH\x2C\n  HTTP2_HEADER_IF_RANGE\x2C\n  HTTP2_HEADER_IF_UNMODIFIED_SINCE\x2C\n  HTTP2_HEADER_LAST_MODIFIED\x2C\n  HTTP2_HEADER_LOCATION\x2C\n  HTTP2_HEADER_MAX_FORWARDS\x2C\n  HTTP2_HEADER_PROXY_AUTHORIZATION\x2C\n  HTTP2_HEADER_RANGE\x2C\n  HTTP2_HEADER_REFERER\x2C\n  HTTP2_HEADER_RETRY_AFTER\x2C\n  HTTP2_HEADER_TK\x2C\n  HTTP2_HEADER_UPGRADE_INSECURE_REQUESTS\x2C\n  HTTP2_HEADER_USER_AGENT\x2C\n  HTTP2_HEADER_X_CONTENT_TYPE_OPTIONS\x2C\n]);\n\n// The HTTP methods in this set are specifically defined as assigning no\n// meaning to the request payload. By default\x2C unless the user explicitly\n// overrides the endStream option on the request method\x2C the endStream\n// option will be defaulted to true when these methods are used.\nconst kNoPayloadMethods = new SafeSet([\n  HTTP2_METHOD_DELETE\x2C\n  HTTP2_METHOD_GET\x2C\n  HTTP2_METHOD_HEAD\x2C\n]);\n\n// The following ArrayBuffer instances are used to share memory more efficiently\n// with the native binding side for a number of methods. These are not intended\n// to be used directly by users in any way. The ArrayBuffers are created on\n// the native side with values that are filled in on demand\x2C the js code then\n// reads those values out. The set of IDX constants that follow identify the\n// relevant data positions within these buffers.\nconst { settingsBuffer\x2C optionsBuffer } = binding;\n\n// Note that Float64Array is used here because there is no Int64Array available\n// and these deal with numbers that can be beyond the range of Uint32 and Int32.\n// The values set on the native side will always be integers. This is not a\n// unique example of this\x2C this pattern can be found in use in other parts of\n// Node.js core as a performance optimization.\nconst { sessionState\x2C streamState } = binding;\n\nconst IDX_SETTINGS_HEADER_TABLE_SIZE = 0;\nconst IDX_SETTINGS_ENABLE_PUSH = 1;\nconst IDX_SETTINGS_INITIAL_WINDOW_SIZE = 2;\nconst IDX_SETTINGS_MAX_FRAME_SIZE = 3;\nconst IDX_SETTINGS_MAX_CONCURRENT_STREAMS = 4;\nconst IDX_SETTINGS_MAX_HEADER_LIST_SIZE = 5;\nconst IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL = 6;\nconst IDX_SETTINGS_FLAGS = 7;\n\n// Maximum number of allowed additional settings\nconst MAX_ADDITIONAL_SETTINGS = 10;\n\nconst IDX_SESSION_STATE_EFFECTIVE_LOCAL_WINDOW_SIZE = 0;\nconst IDX_SESSION_STATE_EFFECTIVE_RECV_DATA_LENGTH = 1;\nconst IDX_SESSION_STATE_NEXT_STREAM_ID = 2;\nconst IDX_SESSION_STATE_LOCAL_WINDOW_SIZE = 3;\nconst IDX_SESSION_STATE_LAST_PROC_STREAM_ID = 4;\nconst IDX_SESSION_STATE_REMOTE_WINDOW_SIZE = 5;\nconst IDX_SESSION_STATE_OUTBOUND_QUEUE_SIZE = 6;\nconst IDX_SESSION_STATE_HD_DEFLATE_DYNAMIC_TABLE_SIZE = 7;\nconst IDX_SESSION_STATE_HD_INFLATE_DYNAMIC_TABLE_SIZE = 8;\nconst IDX_STREAM_STATE = 0;\nconst IDX_STREAM_STATE_WEIGHT = 1;\nconst IDX_STREAM_STATE_SUM_DEPENDENCY_WEIGHT = 2;\nconst IDX_STREAM_STATE_LOCAL_CLOSE = 3;\nconst IDX_STREAM_STATE_REMOTE_CLOSE = 4;\nconst IDX_STREAM_STATE_LOCAL_WINDOW_SIZE = 5;\n\nconst IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE = 0;\nconst IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS = 1;\nconst IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH = 2;\nconst IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS = 3;\nconst IDX_OPTIONS_PADDING_STRATEGY = 4;\nconst IDX_OPTIONS_MAX_HEADER_LIST_PAIRS = 5;\nconst IDX_OPTIONS_MAX_OUTSTANDING_PINGS = 6;\nconst IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS = 7;\nconst IDX_OPTIONS_MAX_SESSION_MEMORY = 8;\nconst IDX_OPTIONS_MAX_SETTINGS = 9;\nconst IDX_OPTIONS_STREAM_RESET_RATE = 10;\nconst IDX_OPTIONS_STREAM_RESET_BURST = 11;\nconst IDX_OPTIONS_FLAGS = 12;\n\nfunction updateOptionsBuffer(options) {\n  let flags = 0;\n  if (typeof options.maxDeflateDynamicTableSize === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE);\n    optionsBuffer[IDX_OPTIONS_MAX_DEFLATE_DYNAMIC_TABLE_SIZE] =\n      options.maxDeflateDynamicTableSize;\n  }\n  if (typeof options.maxReservedRemoteStreams === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS);\n    optionsBuffer[IDX_OPTIONS_MAX_RESERVED_REMOTE_STREAMS] =\n      options.maxReservedRemoteStreams;\n  }\n  if (typeof options.maxSendHeaderBlockLength === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH);\n    optionsBuffer[IDX_OPTIONS_MAX_SEND_HEADER_BLOCK_LENGTH] =\n      options.maxSendHeaderBlockLength;\n  }\n  if (typeof options.peerMaxConcurrentStreams === 'number') {\n    flags |= (1 << IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS);\n    optionsBuffer[IDX_OPTIONS_PEER_MAX_CONCURRENT_STREAMS] =\n      options.peerMaxConcurrentStreams;\n  }\n  if (typeof options.paddingStrategy === 'number') {\n    flags |= (1 << IDX_OPTIONS_PADDING_STRATEGY);\n    optionsBuffer[IDX_OPTIONS_PADDING_STRATEGY] =\n      options.paddingStrategy;\n  }\n  if (typeof options.maxHeaderListPairs === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_HEADER_LIST_PAIRS);\n    optionsBuffer[IDX_OPTIONS_MAX_HEADER_LIST_PAIRS] =\n      options.maxHeaderListPairs;\n  }\n  if (typeof options.maxOutstandingPings === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_OUTSTANDING_PINGS);\n    optionsBuffer[IDX_OPTIONS_MAX_OUTSTANDING_PINGS] =\n      options.maxOutstandingPings;\n  }\n  if (typeof options.maxOutstandingSettings === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS);\n    optionsBuffer[IDX_OPTIONS_MAX_OUTSTANDING_SETTINGS] =\n      MathMax(1\x2C options.maxOutstandingSettings);\n  }\n  if (typeof options.maxSessionMemory === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_SESSION_MEMORY);\n    optionsBuffer[IDX_OPTIONS_MAX_SESSION_MEMORY] =\n      MathMax(1\x2C options.maxSessionMemory);\n  }\n  if (typeof options.maxSettings === 'number') {\n    flags |= (1 << IDX_OPTIONS_MAX_SETTINGS);\n    optionsBuffer[IDX_OPTIONS_MAX_SETTINGS] =\n      MathMax(1\x2C options.maxSettings);\n  }\n  if (typeof options.streamResetRate === 'number') {\n    flags |= (1 << IDX_OPTIONS_STREAM_RESET_RATE);\n    optionsBuffer[IDX_OPTIONS_STREAM_RESET_RATE] =\n      MathMax(1\x2C options.streamResetRate);\n  }\n  if (typeof options.streamResetBurst === 'number') {\n    flags |= (1 << IDX_OPTIONS_STREAM_RESET_BURST);\n    optionsBuffer[IDX_OPTIONS_STREAM_RESET_BURST] =\n      MathMax(1\x2C options.streamResetBurst);\n  }\n  optionsBuffer[IDX_OPTIONS_FLAGS] = flags;\n}\n\nfunction addCustomSettingsToObj() {\n  const toRet = {};\n  const num = settingsBuffer[IDX_SETTINGS_FLAGS + 1];\n  for (let i = 0; i < num; i++) {\n    toRet[settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * i + 1].toString()] =\n       Number(settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * i + 2]);\n  }\n  return toRet;\n}\n\nfunction getDefaultSettings() {\n  settingsBuffer[IDX_SETTINGS_FLAGS] = 0;\n  settingsBuffer[IDX_SETTINGS_FLAGS + 1] = 0; // Length of custom settings\n  binding.refreshDefaultSettings();\n  const holder = { __proto__: null };\n\n  const flags = settingsBuffer[IDX_SETTINGS_FLAGS];\n\n  if ((flags & (1 << IDX_SETTINGS_HEADER_TABLE_SIZE)) ===\n      (1 << IDX_SETTINGS_HEADER_TABLE_SIZE)) {\n    holder.headerTableSize =\n      settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE];\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_ENABLE_PUSH)) ===\n      (1 << IDX_SETTINGS_ENABLE_PUSH)) {\n    holder.enablePush =\n      settingsBuffer[IDX_SETTINGS_ENABLE_PUSH] === 1;\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE)) ===\n      (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE)) {\n    holder.initialWindowSize =\n      settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE];\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_MAX_FRAME_SIZE)) ===\n      (1 << IDX_SETTINGS_MAX_FRAME_SIZE)) {\n    holder.maxFrameSize =\n      settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE];\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS)) ===\n      (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS)) {\n    holder.maxConcurrentStreams =\n      settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS];\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE)) ===\n      (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE)) {\n    holder.maxHeaderListSize = holder.maxHeaderSize =\n      settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE];\n  }\n\n  if ((flags & (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL)) ===\n      (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL)) {\n    holder.enableConnectProtocol =\n      settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL] === 1;\n  }\n\n  if (settingsBuffer[IDX_SETTINGS_FLAGS + 1]) holder.customSettings = addCustomSettingsToObj();\n\n  return holder;\n}\n\n// Remote is a boolean. true to fetch remote settings\x2C false to fetch local.\n// this is only called internally\nfunction getSettings(session\x2C remote) {\n  if (remote)\n    session.remoteSettings();\n  else\n    session.localSettings();\n\n  const toRet = {\n    headerTableSize: settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE]\x2C\n    enablePush: !!settingsBuffer[IDX_SETTINGS_ENABLE_PUSH]\x2C\n    initialWindowSize: settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE]\x2C\n    maxFrameSize: settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE]\x2C\n    maxConcurrentStreams: settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS]\x2C\n    maxHeaderListSize: settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE]\x2C\n    maxHeaderSize: settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE]\x2C\n    enableConnectProtocol:\n      !!settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL]\x2C\n  };\n  if (settingsBuffer[IDX_SETTINGS_FLAGS + 1]) toRet.customSettings = addCustomSettingsToObj();\n  return toRet;\n}\n\nfunction updateSettingsBuffer(settings) {\n  let flags = 0;\n  let numCustomSettings = 0;\n\n  if (typeof settings.customSettings === 'object') {\n    const customSettings = settings.customSettings;\n    for (const setting in customSettings) {\n      const val = customSettings[setting];\n      if (typeof val === 'number') {\n        let set = false;\n        const nsetting = Number(setting);\n        if (NumberIsNaN(nsetting) ||\n          typeof nsetting !== 'number' ||\n          0 >= nsetting ||\n          nsetting > 0xffff)\n          throw new ERR_HTTP2_INVALID_SETTING_VALUE.RangeError(\n            'Range Error'\x2C nsetting\x2C 0\x2C 0xffff);\n        if (NumberIsNaN(val) ||\n            typeof val !== 'number' ||\n            0 >= val ||\n            val > 0xffffffff)\n          throw new ERR_HTTP2_INVALID_SETTING_VALUE.RangeError(\n            'Range Error'\x2C val\x2C 0\x2C 0xffffffff);\n        if (nsetting < IDX_SETTINGS_FLAGS) {\n          set = true;\n          switch (nsetting) {\n            case IDX_SETTINGS_HEADER_TABLE_SIZE:\n              flags |= (1 << IDX_SETTINGS_HEADER_TABLE_SIZE);\n              settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE] =\n                val;\n              break;\n            case IDX_SETTINGS_ENABLE_PUSH:\n              flags |= (1 << IDX_SETTINGS_ENABLE_PUSH);\n              settingsBuffer[IDX_SETTINGS_ENABLE_PUSH] = val;\n              break;\n            case IDX_SETTINGS_INITIAL_WINDOW_SIZE:\n              flags |= (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE);\n              settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE] =\n                val;\n              break;\n            case IDX_SETTINGS_MAX_FRAME_SIZE:\n              flags |= (1 << IDX_SETTINGS_MAX_FRAME_SIZE);\n              settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE] =\n                val;\n              break;\n            case IDX_SETTINGS_MAX_CONCURRENT_STREAMS:\n              flags |= (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS);\n              settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS] = val;\n              break;\n            case IDX_SETTINGS_MAX_HEADER_LIST_SIZE:\n              flags |= (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE);\n              settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE] =\n                val;\n              break;\n            case IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL:\n              flags |= (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL);\n              settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL] = val;\n              break;\n            default:\n              set = false;\n              break;\n          }\n        }\n        if (!set) { // not supported\n          let i = 0;\n          while (i < numCustomSettings) {\n            if (settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * i + 1] === nsetting) {\n              settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * i + 2] = val;\n              break;\n            }\n            i++;\n          }\n          if (i === numCustomSettings) {\n            if (numCustomSettings === MAX_ADDITIONAL_SETTINGS)\n              throw new ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS();\n\n            settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * numCustomSettings + 1] = nsetting;\n            settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * numCustomSettings + 2] = val;\n            numCustomSettings++;\n          }\n        }\n      }\n    }\n  }\n  settingsBuffer[IDX_SETTINGS_FLAGS + 1] = numCustomSettings;\n\n  if (typeof settings.headerTableSize === 'number') {\n    flags |= (1 << IDX_SETTINGS_HEADER_TABLE_SIZE);\n    settingsBuffer[IDX_SETTINGS_HEADER_TABLE_SIZE] =\n      settings.headerTableSize;\n  }\n  if (typeof settings.maxConcurrentStreams === 'number') {\n    flags |= (1 << IDX_SETTINGS_MAX_CONCURRENT_STREAMS);\n    settingsBuffer[IDX_SETTINGS_MAX_CONCURRENT_STREAMS] =\n      settings.maxConcurrentStreams;\n  }\n  if (typeof settings.initialWindowSize === 'number') {\n    flags |= (1 << IDX_SETTINGS_INITIAL_WINDOW_SIZE);\n    settingsBuffer[IDX_SETTINGS_INITIAL_WINDOW_SIZE] =\n      settings.initialWindowSize;\n  }\n  if (typeof settings.maxFrameSize === 'number') {\n    flags |= (1 << IDX_SETTINGS_MAX_FRAME_SIZE);\n    settingsBuffer[IDX_SETTINGS_MAX_FRAME_SIZE] =\n      settings.maxFrameSize;\n  }\n  if (typeof settings.maxHeaderListSize === 'number' ||\n      typeof settings.maxHeaderSize === 'number') {\n    flags |= (1 << IDX_SETTINGS_MAX_HEADER_LIST_SIZE);\n    if (settings.maxHeaderSize !== undefined &&\n      (settings.maxHeaderSize !== settings.maxHeaderListSize)) {\n      process.emitWarning(\n        'settings.maxHeaderSize overwrite settings.maxHeaderListSize'\x2C\n      );\n      settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE] =\n        settings.maxHeaderSize;\n    } else {\n      settingsBuffer[IDX_SETTINGS_MAX_HEADER_LIST_SIZE] =\n        settings.maxHeaderListSize;\n    }\n  }\n  if (typeof settings.enablePush === 'boolean') {\n    flags |= (1 << IDX_SETTINGS_ENABLE_PUSH);\n    settingsBuffer[IDX_SETTINGS_ENABLE_PUSH] = Number(settings.enablePush);\n  }\n  if (typeof settings.enableConnectProtocol === 'boolean') {\n    flags |= (1 << IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL);\n    settingsBuffer[IDX_SETTINGS_ENABLE_CONNECT_PROTOCOL] =\n      Number(settings.enableConnectProtocol);\n  }\n\n  settingsBuffer[IDX_SETTINGS_FLAGS] = flags;\n}\n\nfunction remoteCustomSettingsToBuffer(remoteCustomSettings) {\n  if (remoteCustomSettings.length > MAX_ADDITIONAL_SETTINGS)\n    throw new ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS();\n  let numCustomSettings = 0;\n  for (let i = 0; i < remoteCustomSettings.length; i++) {\n    const nsetting = remoteCustomSettings[i];\n    if (typeof nsetting === 'number' && nsetting <= 0xffff &&\n        nsetting >= 0) {\n      settingsBuffer[IDX_SETTINGS_FLAGS + 1 + 2 * numCustomSettings + 1] = nsetting;\n      numCustomSettings++;\n    } else\n      throw new ERR_HTTP2_INVALID_SETTING_VALUE.RangeError(\n        'Range Error'\x2C nsetting\x2C 0\x2C 0xffff);\n\n  }\n  settingsBuffer[IDX_SETTINGS_FLAGS + 1] = numCustomSettings;\n}\n\nfunction getSessionState(session) {\n  session.refreshState();\n  return {\n    effectiveLocalWindowSize:\n      sessionState[IDX_SESSION_STATE_EFFECTIVE_LOCAL_WINDOW_SIZE]\x2C\n    effectiveRecvDataLength:\n      sessionState[IDX_SESSION_STATE_EFFECTIVE_RECV_DATA_LENGTH]\x2C\n    nextStreamID:\n      sessionState[IDX_SESSION_STATE_NEXT_STREAM_ID]\x2C\n    localWindowSize:\n      sessionState[IDX_SESSION_STATE_LOCAL_WINDOW_SIZE]\x2C\n    lastProcStreamID:\n      sessionState[IDX_SESSION_STATE_LAST_PROC_STREAM_ID]\x2C\n    remoteWindowSize:\n      sessionState[IDX_SESSION_STATE_REMOTE_WINDOW_SIZE]\x2C\n    outboundQueueSize:\n      sessionState[IDX_SESSION_STATE_OUTBOUND_QUEUE_SIZE]\x2C\n    deflateDynamicTableSize:\n      sessionState[IDX_SESSION_STATE_HD_DEFLATE_DYNAMIC_TABLE_SIZE]\x2C\n    inflateDynamicTableSize:\n      sessionState[IDX_SESSION_STATE_HD_INFLATE_DYNAMIC_TABLE_SIZE]\x2C\n  };\n}\n\nfunction getStreamState(stream) {\n  stream.refreshState();\n  return {\n    state: streamState[IDX_STREAM_STATE]\x2C\n    weight: streamState[IDX_STREAM_STATE_WEIGHT]\x2C\n    sumDependencyWeight: streamState[IDX_STREAM_STATE_SUM_DEPENDENCY_WEIGHT]\x2C\n    localClose: streamState[IDX_STREAM_STATE_LOCAL_CLOSE]\x2C\n    remoteClose: streamState[IDX_STREAM_STATE_REMOTE_CLOSE]\x2C\n    localWindowSize: streamState[IDX_STREAM_STATE_LOCAL_WINDOW_SIZE]\x2C\n  };\n}\n\nfunction isIllegalConnectionSpecificHeader(name\x2C value) {\n  switch (name) {\n    case HTTP2_HEADER_CONNECTION:\n    case HTTP2_HEADER_UPGRADE:\n    case HTTP2_HEADER_HTTP2_SETTINGS:\n    case HTTP2_HEADER_KEEP_ALIVE:\n    case HTTP2_HEADER_PROXY_CONNECTION:\n    case HTTP2_HEADER_TRANSFER_ENCODING:\n      return true;\n    case HTTP2_HEADER_TE:\n      return value !== 'trailers';\n    default:\n      return false;\n  }\n}\n\nconst assertValidPseudoHeader = hideStackFrames((key) => {\n  if (!kValidPseudoHeaders.has(key)) {\n    throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);\n  }\n});\n\nconst assertValidPseudoHeaderResponse = hideStackFrames((key) => {\n  if (key !== ':status') {\n    throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);\n  }\n});\n\nconst assertValidPseudoHeaderTrailer = hideStackFrames((key) => {\n  throw new ERR_HTTP2_INVALID_PSEUDOHEADER(key);\n});\n\nconst emptyArray = [];\nconst kNeverIndexFlag = StringFromCharCode(NGHTTP2_NV_FLAG_NO_INDEX);\nconst kNoHeaderFlags = StringFromCharCode(NGHTTP2_NV_FLAG_NONE);\nfunction mapToHeaders(map\x2C\n                      assertValuePseudoHeader = assertValidPseudoHeader) {\n  let headers = '';\n  let pseudoHeaders = '';\n  let count = 0;\n  const keys = ObjectKeys(map);\n  const singles = new SafeSet();\n  let i\x2C j;\n  let isArray;\n  let key;\n  let value;\n  let isSingleValueHeader;\n  let err;\n  const neverIndex = (map[kSensitiveHeaders] || emptyArray).map((v) => v.toLowerCase());\n  for (i = 0; i < keys.length; ++i) {\n    key = keys[i];\n    value = map[key];\n    if (value === undefined || key === '')\n      continue;\n    key = key.toLowerCase();\n    isSingleValueHeader = kSingleValueHeaders.has(key);\n    isArray = ArrayIsArray(value);\n    if (isArray) {\n      switch (value.length) {\n        case 0:\n          continue;\n        case 1:\n          value = String(value[0]);\n          isArray = false;\n          break;\n        default:\n          if (isSingleValueHeader)\n            throw new ERR_HTTP2_HEADER_SINGLE_VALUE(key);\n      }\n    } else {\n      value = String(value);\n    }\n    if (isSingleValueHeader) {\n      if (singles.has(key))\n        throw new ERR_HTTP2_HEADER_SINGLE_VALUE(key);\n      singles.add(key);\n    }\n    const flags = neverIndex.includes(key) ?\n      kNeverIndexFlag :\n      kNoHeaderFlags;\n    if (key[0] === ':') {\n      err = assertValuePseudoHeader(key);\n      if (err !== undefined)\n        throw err;\n      pseudoHeaders += `${key}\\0${value}\\0${flags}`;\n      count++;\n      continue;\n    }\n    if (key.includes(' ')) {\n      throw new ERR_INVALID_HTTP_TOKEN('Header name'\x2C key);\n    }\n    if (isIllegalConnectionSpecificHeader(key\x2C value)) {\n      throw new ERR_HTTP2_INVALID_CONNECTION_HEADERS(key);\n    }\n    if (isArray) {\n      for (j = 0; j < value.length; ++j) {\n        const val = String(value[j]);\n        headers += `${key}\\0${val}\\0${flags}`;\n      }\n      count += value.length;\n      continue;\n    }\n    headers += `${key}\\0${value}\\0${flags}`;\n    count++;\n  }\n\n  return [pseudoHeaders + headers\x2C count];\n}\n\nclass NghttpError extends Error {\n  constructor(integerCode\x2C customErrorCode) {\n    super(customErrorCode ?\n      getMessage(customErrorCode\x2C []\x2C null) :\n      binding.nghttp2ErrorString(integerCode));\n    this.code = customErrorCode || 'ERR_HTTP2_ERROR';\n    this.errno = integerCode;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n}\n\nconst assertIsObject = hideStackFrames((value\x2C name\x2C types) => {\n  if (value !== undefined &&\n      (value === null ||\n       typeof value !== 'object' ||\n       ArrayIsArray(value))) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C types || 'Object'\x2C value);\n  }\n});\n\nconst assertIsArray = hideStackFrames((value\x2C name\x2C types) => {\n  if (value !== undefined &&\n      (value === null ||\n       !ArrayIsArray(value))) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C types || 'Array'\x2C value);\n  }\n});\n\nconst assertWithinRange = hideStackFrames(\n  (name\x2C value\x2C min = 0\x2C max = Infinity) => {\n    if (value !== undefined &&\n      (typeof value !== 'number' || value < min || value > max)) {\n      throw new ERR_HTTP2_INVALID_SETTING_VALUE.RangeError.HideStackFramesError(\n        name\x2C value\x2C min\x2C max);\n    }\n  }\x2C\n);\n\nfunction toHeaderObject(headers\x2C sensitiveHeaders) {\n  const obj = { __proto__: null };\n  for (let n = 0; n < headers.length; n += 2) {\n    const name = headers[n];\n    let value = headers[n + 1];\n    if (name === HTTP2_HEADER_STATUS)\n      value |= 0;\n    const existing = obj[name];\n    if (existing === undefined) {\n      obj[name] = name === HTTP2_HEADER_SET_COOKIE ? [value] : value;\n    } else if (!kSingleValueHeaders.has(name)) {\n      switch (name) {\n        case HTTP2_HEADER_COOKIE:\n          // https://tools.ietf.org/html/rfc7540#section-8.1.2.5\n          // "...If there are multiple Cookie header fields after decompression\x2C\n          //  these MUST be concatenated into a single octet string using the\n          //  two-octet delimiter of 0x3B\x2C 0x20 (the ASCII string "; ") before\n          //  being passed into a non-HTTP/2 context."\n          obj[name] = `${existing}; ${value}`;\n          break;\n        case HTTP2_HEADER_SET_COOKIE:\n          // https://tools.ietf.org/html/rfc7230#section-3.2.2\n          // "Note: In practice\x2C the "Set-Cookie" header field ([RFC6265]) often\n          // appears multiple times in a response message and does not use the\n          // list syntax\x2C violating the above requirements on multiple header\n          // fields with the same name.  Since it cannot be combined into a\n          // single field-value\x2C recipients ought to handle "Set-Cookie" as a\n          // special case while processing header fields."\n          existing.push(value);\n          break;\n        default:\n          // https://tools.ietf.org/html/rfc7230#section-3.2.2\n          // "A recipient MAY combine multiple header fields with the same field\n          // name into one "field-name: field-value" pair\x2C without changing the\n          // semantics of the message\x2C by appending each subsequent field value\n          // to the combined field value in order\x2C separated by a comma."\n          obj[name] = `${existing}\x2C ${value}`;\n          break;\n      }\n    }\n  }\n  obj[kSensitiveHeaders] = sensitiveHeaders;\n  return obj;\n}\n\nfunction isPayloadMeaningless(method) {\n  return kNoPayloadMethods.has(method);\n}\n\nfunction sessionName(type) {\n  switch (type) {\n    case NGHTTP2_SESSION_CLIENT:\n      return 'client';\n    case NGHTTP2_SESSION_SERVER:\n      return 'server';\n    default:\n      return '<invalid>';\n  }\n}\n\nfunction getAuthority(headers) {\n  // For non-CONNECT requests\x2C HTTP/2 allows either :authority\n  // or Host to be used equivalently. The first is preferred\n  // when making HTTP/2 requests\x2C and the latter is preferred\n  // when converting from an HTTP/1 message.\n  if (headers[HTTP2_HEADER_AUTHORITY] !== undefined)\n    return headers[HTTP2_HEADER_AUTHORITY];\n  if (headers[HTTP2_HEADER_HOST] !== undefined)\n    return headers[HTTP2_HEADER_HOST];\n}\n\nmodule.exports = {\n  assertIsObject\x2C\n  assertIsArray\x2C\n  assertValidPseudoHeader\x2C\n  assertValidPseudoHeaderResponse\x2C\n  assertValidPseudoHeaderTrailer\x2C\n  assertWithinRange\x2C\n  getAuthority\x2C\n  getDefaultSettings\x2C\n  getSessionState\x2C\n  getSettings\x2C\n  getStreamState\x2C\n  isPayloadMeaningless\x2C\n  kSensitiveHeaders\x2C\n  kSocket\x2C\n  kProxySocket\x2C\n  kRequest\x2C\n  mapToHeaders\x2C\n  MAX_ADDITIONAL_SETTINGS\x2C\n  NghttpError\x2C\n  remoteCustomSettingsToBuffer\x2C\n  sessionName\x2C\n  toHeaderObject\x2C\n  updateOptionsBuffer\x2C\n  updateSettingsBuffer\x2C\n};\n
code-source-info,0x12ea9867d460,159,0,27483,C0O0C4O27483,,
code-creation,JS,9,170167,0x12ea9867d948,1867, node:internal/http2/util:1:1,0x2ded893b290,~
code-source-info,0x12ea9867d
tick,0x1924a5ef0,170250,0,0x0,3,0x107f890bc,0x107f88e30,0x12ea9867d032,0x107f89188,0x107f88e30,0x12ea98671ef7,0x107f89188,0x107f88e30,0x12ea9867067b,0x107f89188,0x107f88e30,0x107f921e8,0x12ea98670348,0x107f91dc4,0x12ea9866467f,0x12ea98660beb,0x12ea986636b5,0x12ea98660beb,0x12ea98662382,0x12ea98660beb,0x12ea98660d06,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,170500,0x12ea9867e3b0,41,lib/interceptor/redirect-interceptor.js node:internal/deps/undici/undici:7509:44,0x38a74a568b90,~
code-source-info,0x12ea9867e3b0,125,385192,385991,C0O385192C10O385258C15O385258C18O385258C20O385875C28O385875C33O385943C35O385959C40O385990,,
code-creation,JS,9,170542,0x12ea9867e550,277,lib/handler/redirect-handler.js node:internal/deps/undici/undici:7341:36,0x38a74a568a68,~
code-source-info,0x12ea9867e550,125,378777,385052,C0O378777C23O378832C28O378832C31O378832C33O378872C38O378872C42O378858C48O378908C56O378908C60O378908C62O378967C67O378967C71O378942C77O378998C85O378998C89O378998C91O379056C95O379056C97O379104C104O379104C108O379104C110O379148C120O379338C124O379338C154O379148C156O379505C221O383588C232O383588C237O384202C248O384202C253O384958C264O384958C269O385014C271O385030C276O385051,,
code-creation,JS,9,170625,0x12ea9867e730,15, node:internal/deps/undici/undici:7364:33,0x2ded893fe58,~
code-source-info,0x12ea9867e730,125,379511,383237,C0O379536C8O379536C14O383237,,
code-creation,JS,9,170625,0x12ea9867e7b8,15, node:internal/deps/undici/undici:7350:35,0x2ded893fb50,~
code-source-info,0x12ea9867e7b8,125,379154,379477,C0O379179C8O379179C14O379477,,
code-creation,JS,9,170667,0x12ea9867e840,10,getGlobalDispatcher2 node:internal/deps/undici/undici:8249:34,0x25c70e01dd50,~
code-source-info,0x12ea9867e840,125,412245,412298,C0O412256C6O412273C9O412292,,
code-creation,JS,9,170750,0x12ea9867e968,491,Agent node:internal/deps/undici/undici:8152:18,0x25c70e024088,~
code-source-info,0x12ea9867e
code-creation,JS,9,170792,0x12ea9867ec50,73,DispatcherBase node:internal/deps/undici/undici:456:18,0x25c70e026c50,~
code-source-info,0x12ea9867ec50,125,14988,15147,C3O15001C24O15001C36O15018C40O15035C44O15052C48O15071C52O15087C56O15101C60O15118C63O15123C65O15134C72O15146,,
code-creation,JS,9,170792,0x12ea9867ed10,31,Dispatcher node:internal/deps/undici/undici:382:22,0x25c70e027748,~
code-source-info,0x12ea9867ed10,125,12685,12685,C3O12685C24O12685C30O12685,,
code-creation,JS,9,170875,0x12ea9867edb8,19,createRedirectInterceptor node:internal/deps/undici/undici:7512:39,0x2ded893f708,~
code-source-info,0x12ea9867edb8,125,385324,385870,C0O385324C8O385344C14O385378C18O385864,,
code-creation,JS,9,170917,0x12ea9867ee58,30,deepClone node:internal/deps/undici/undici:1292:23,0x38a74a56d450,~
code-source-info,0x12ea9867ee58,125,41153,41212,C0O41167C4O41179C9O41185C13O41190C18O41190C24O41179C29O41206,,
tick,0x100fa6894,171208,0,0x0,0,0x12ea9867ee6a,0x12ea9867eaa6,0x12ea98660d11,0x12ea98660beb,0x12ea9866061e,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
new,MemoryChunk,0x2ffc889c0000,262144
code-creation,JS,9,171417,0x12ea9867ef28,60,setGlobalDispatcher2 node:internal/deps/undici/undici:8237:34,0x25c70e01dcf8,~
code-source-info,0x12ea9867ef28,125,411821,412154,C0O411837C4O411864C12O411899C20O411905C25O411899C26O411984C30O411991C35O412006C42O412018C49O412053C53O411991C59O412153,,
code-creation,JS,9,171458,0x12ea9867f0d8,273,lib/dispatcher/env-http-proxy-agent.js node:internal/deps/undici/undici:8424:43,0x38a74a569010,~
code-source-info,0x12ea9867f0d8,125,418940,423633,C0O418940C5O419005C10O419005C14O419145C19O419145C23O419042C28O419050C33O419060C39O419069C45O419081C50O419092C56O419107C62O419124C68O419185C73O419185C76O419185C78O419224C83O419224C86O419224C88O419265C92O419265C94O419342C95O419342C101O419378C168O419392C175O420605C184O420796C193O421082C265O423592C267O423608C272O423632,,
code-creation,JS,9,171500,0x12ea9867f2a8,15, node:internal/deps/undici/undici:8435:59,0x2ffc889c1ae8,~
code-source-info,0x12ea9867f2a8,125,419407,423586,C0O419432C8O419432C14O423586,,
code-creation,JS,9,171500,0x12ea9867f318,29, node:internal/deps/undici/undici:8435:59,0x2ffc889c1aa8,~
code-source-info,0x12ea9867f318,125,419407,423586,C3O419497C12O419527C21O419547C28O423586,,
code-creation,JS,9,171542,0x12ea9867f4d0,391,lib/dispatcher/proxy-agent.js node:internal/deps/undici/undici:8262:34,0x38a74a568f40,~
code-source-info,0x12ea9867f4d
code-creation,JS,9,171583,0x12ea9867f760,15, node:internal/deps/undici/undici:8287:51,0x2ffc889c26b0,~
code-source-info,0x12ea9867f760,125,413716,418060,C0O413741C8O413741C14O418060,,
new,MemoryChunk,0xbd578240000,262144
code-creation,JS,9,171708,0x12ea9867fb48,944,lib/web/fetch/index.js node:internal/deps/undici/undici:10180:27,0x38a74a569678,~
code-source-info,0x12ea9867fb
code-creation,JS,9,171750,0xbd578241300,15, node:internal/deps/undici/undici:10247:34,0x2ffc889c4158,~
code-source-info,0xbd578241300,125,484582,485478,C0O484607C8O484607C14O485478,,
code-creation,JS,9,171833,0xbd578241730,1131,lib/web/fetch/response.js node:internal/deps/undici/undici:9021:30,0x38a74a569280,~
code-source-info,0xbd
code-creation,JS,9,171917,0xbd578241d98,15,_Response node:internal/deps/undici/undici:9050:36,0x2ffc889c5400,~
code-source-info,0xbd578241d98,125,440629,445920,C0O440654C8O440654C14O445920,,
code-creation,JS,9,172000,0xbd5782420d0,844,lib/web/fetch/headers.js node:internal/deps/undici/undici:8563:29,0x38a74a5690e0,~
code-source-info,0xbd5782420d
code-creation,JS,9,172042,0xbd578242580,15,_Headers node:internal/deps/undici/undici:8811:34,0x2ffc889c7518,~
code-source-info,0xbd578242580,125,432276,437572,C0O432301C8O432301C14O437572,,
code-creation,JS,9,172042,0xbd5782425f0,20,_Headers node:internal/deps/undici/undici:8811:34,0x2ffc889c74d8,~
code-source-info,0xbd5782425f0,125,432276,437572,C4O432340C13O432354C19O437572,,
code-creation,JS,9,172042,0xbd578242680,15,_HeadersList node:internal/deps/undici/undici:8642:42,0x2ffc889c7020,~
code-source-info,0xbd578242680,125,426669,432241,C0O426694C8O426694C14O432241,,
code-creation,JS,9,172042,0xbd578242708,7,_HeadersList node:internal/deps/undici/undici:8642:42,0x2ffc889c6fe0,~
code-source-info,0xbd578242708,125,426669,432241,C0O426792C6O432241,,
code-creation,JS,9,172208,0xbd578242cc0,2206,lib/web/fetch/util.js node:internal/deps/undici/undici:4019:26,0x38a74a567e18,~
code-source-info,0xbd578242cc
code-creation,JS,9,172292,0xbd578243808,15, node:internal/deps/undici/undici:4879:43,0x2ffc889ca1c8,~
code-source-info,0xbd578243808,125,293263,293404,C0O293288C8O293288C14O293404,,
code-creation,JS,9,172292,0xbd578243890,14, node:internal/deps/undici/undici:4879:43,0x2ffc889ca188,~
code-source-info,0xbd578243890,125,293263,293404,C0O293362C3O293362C13O293404,,
code-creation,JS,9,172333,0xbd578243918,15, node:internal/deps/undici/undici:4867:47,0x2ffc889ca0f0,~
code-source-info,0xbd578243918,125,292957,293219,C0O292982C8O292982C14O293219,,
code-creation,JS,9,172333,0xbd5782439a0,12, node:internal/deps/undici/undici:4867:47,0x2ffc889ca0b0,~
code-source-info,0xbd5782439a0,125,292957,293219,C0O293191C3O293191C11O293219,,
code-creation,JS,9,172333,0xbd578243a28,15, node:internal/deps/undici/undici:4750:49,0x2ffc889c9f28,~
code-source-info,0xbd578243a28,125,289040,290045,C0O289065C8O289065C14O290045,,
code-creation,JS,9,172333,0xbd578243a98,11, node:internal/deps/undici/undici:4750:49,0x2ffc889c9ee8,~
code-source-info,0xbd578243a98,125,289040,290045,C4O289110C10O290045,,
tick,0x192400d7c,172375,0,0x0,3,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,173292,0xbd578243b20,5, node:zlib:1:1,0x2ffc889cde00,~
script-source,160,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  MathMax\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectEntries\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_BROTLI_INVALID_PARAM\x2C\n    ERR_BUFFER_TOO_LARGE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { Transform\x2C finished } = require('stream');\nconst {\n  deprecate\x2C\n} = require('internal/util');\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst binding = internalBinding('zlib');\nconst { crc32: crc32Native } = binding;\nconst assert = require('internal/assert');\nconst {\n  Buffer\x2C\n  kMaxLength\x2C\n} = require('buffer');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  checkRangesOrGetDefault\x2C\n  validateFunction\x2C\n  validateUint32\x2C\n  validateFiniteNumber\x2C\n} = require('internal/validators');\n\nconst kFlushFlag = Symbol('kFlushFlag');\nconst kError = Symbol('kError');\n\nconst constants = internalBinding('constants').zlib;\nconst {\n  // Zlib flush levels\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\n  // Zlib option values\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\n  // Node's compression stream modes (node_zlib_mode)\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\n  // Brotli operations (~flush levels)\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\n} = constants;\n\n// Translation table for return codes.\nconst codes = {\n  Z_OK: constants.Z_OK\x2C\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\n  Z_ERRNO: constants.Z_ERRNO\x2C\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\x2C\n};\n\nfor (const ckey of ObjectKeys(codes)) {\n  codes[codes[ckey]] = ckey;\n}\n\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\n  validateFunction(callback\x2C 'callback');\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\n  // Buffer without copying.\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n  } else if (isAnyArrayBuffer(buffer)) {\n    buffer = Buffer.from(buffer);\n  }\n  engine.buffers = null;\n  engine.nread = 0;\n  engine.cb = callback;\n  engine.on('data'\x2C zlibBufferOnData);\n  engine.on('error'\x2C zlibBufferOnError);\n  engine.on('end'\x2C zlibBufferOnEnd);\n  engine.end(buffer);\n}\n\nfunction zlibBufferOnData(chunk) {\n  if (!this.buffers) {\n    this.buffers = [chunk];\n  } else {\n    this.buffers.push(chunk);\n  }\n  this.nread += chunk.length;\n  if (this.nread > this._maxOutputLength) {\n    this.close();\n    this.removeAllListeners('end');\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\n  }\n}\n\nfunction zlibBufferOnError(err) {\n  this.removeAllListeners('end');\n  this.cb(err);\n}\n\nfunction zlibBufferOnEnd() {\n  let buf;\n  if (this.nread === 0) {\n    buf = Buffer.alloc(0);\n  } else {\n    const bufs = this.buffers;\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\n  }\n  this.close();\n  if (this._info)\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\n  else\n    this.cb(null\x2C buf);\n}\n\nfunction zlibBufferSync(engine\x2C buffer) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    if (isAnyArrayBuffer(buffer)) {\n      buffer = Buffer.from(buffer);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n        buffer\x2C\n      );\n    }\n  }\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\n  if (engine._info)\n    return { buffer\x2C engine };\n  return buffer;\n}\n\nfunction zlibOnError(message\x2C errno\x2C code) {\n  const self = this[owner_symbol];\n  // There is no way to cleanly recover.\n  // Continuing only obscures problems.\n\n  const error = genericNodeError(message\x2C { errno\x2C code });\n  error.errno = errno;\n  error.code = code;\n  self.destroy(error);\n  self[kError] = error;\n}\n\nconst FLUSH_BOUND = [\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\n];\nconst FLUSH_BOUND_IDX_NORMAL = 0;\nconst FLUSH_BOUND_IDX_BROTLI = 1;\n\n// The base class for all Zlib-style streams.\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\n  let chunkSize = Z_DEFAULT_CHUNK;\n  let maxOutputLength = kMaxLength;\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\n  // passed in by us.\n  assert(typeof mode === 'number');\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\n\n  let flushBoundIdx;\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\n  } else {\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\n  }\n\n  if (opts) {\n    chunkSize = opts.chunkSize;\n    if (!validateFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\n      chunkSize = Z_DEFAULT_CHUNK;\n    } else if (chunkSize < Z_MIN_CHUNK) {\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\n    }\n\n    flush = checkRangesOrGetDefault(\n      opts.flush\x2C 'options.flush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\n\n    finishFlush = checkRangesOrGetDefault(\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\n      finishFlush);\n\n    maxOutputLength = checkRangesOrGetDefault(\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\n      1\x2C kMaxLength\x2C kMaxLength);\n\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\n      opts = { ...opts };\n      opts.encoding = null;\n      opts.objectMode = false;\n      opts.writableObjectMode = false;\n    }\n  }\n\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\n  this[kError] = null;\n  this.bytesWritten = 0;\n  this._handle = handle;\n  handle[owner_symbol] = this;\n  // Used by processCallback() and zlibOnError()\n  handle.onerror = zlibOnError;\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\n  this._outOffset = 0;\n\n  this._chunkSize = chunkSize;\n  this._defaultFlushFlag = flush;\n  this._finishFlushFlag = finishFlush;\n  this._defaultFullFlushFlag = fullFlush;\n  this._info = opts?.info;\n  this._maxOutputLength = maxOutputLength;\n}\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\n\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return !this._handle;\n  }\x2C\n});\n\n// `bytesRead` made sense as a name when looking from the zlib engine's\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\n// that have this concept\x2C where it stands for the number of bytes read\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: deprecate(function() {\n    return this.bytesWritten;\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\n  set: deprecate(function(value) {\n    this.bytesWritten = value;\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\n     'This feature will be removed in the future.'\x2C 'DEP0108')\x2C\n});\n\n/**\n * @this ZlibBase\n * @returns {void}\n */\nZlibBase.prototype.reset = function() {\n  assert(this._handle\x2C 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class\x2C\n// internally\x2C when the last chunk has been written.\nZlibBase.prototype._flush = function(callback) {\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\n};\n\n// Force Transform compat behavior.\nZlibBase.prototype._final = function(callback) {\n  callback();\n};\n\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\n// out which one is the "stronger" flush is needed.\n// This is currently only used to figure out which flush flag to use for the\n// last chunk.\n// Roughly\x2C the following holds:\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\nconst flushiness = [];\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\nfor (let i = 0; i < kFlushFlagList.length; i++) {\n  flushiness[kFlushFlagList[i]] = i;\n}\n\nfunction maxFlush(a\x2C b) {\n  return flushiness[a] > flushiness[b] ? a : b;\n}\n\n// Set up a list of 'special' buffers that can be written using .write()\n// from the .flush() code as a way of introducing flushing operations into the\n// write sequence.\nconst kFlushBuffers = [];\n{\n  const dummyArrayBuffer = new ArrayBuffer();\n  for (const flushFlag of kFlushFlagList) {\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\n  }\n}\n\nZlibBase.prototype.flush = function(kind\x2C callback) {\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\n    callback = kind;\n    kind = this._defaultFullFlushFlag;\n  }\n\n  if (this.writableFinished) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (this.writableEnded) {\n    if (callback)\n      this.once('end'\x2C callback);\n  } else {\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\n  }\n};\n\n/**\n * @this import('stream').Transform\n * @param {(err?: Error) => any} [callback]\n */\nZlibBase.prototype.close = function(callback) {\n  if (callback) finished(this\x2C callback);\n  this.destroy();\n};\n\nZlibBase.prototype._destroy = function(err\x2C callback) {\n  _close(this);\n  callback(err);\n};\n\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  let flushFlag = this._defaultFlushFlag;\n  // We use a 'fake' zero-length chunk to carry information about flushes from\n  // the public API to the actual stream implementation.\n  if (typeof chunk[kFlushFlag] === 'number') {\n    flushFlag = chunk[kFlushFlag];\n  }\n\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\n  }\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n};\n\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\n  // _processChunk() is left for backwards compatibility\n  if (typeof cb === 'function')\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n  else\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\n};\n\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\n  let availInBefore = chunk.byteLength;\n  let availOutBefore = self._chunkSize - self._outOffset;\n  let inOff = 0;\n  let availOutAfter;\n  let availInAfter;\n\n  const buffers = [];\n  let nread = 0;\n  let inputRead = 0;\n  const state = self._writeState;\n  const handle = self._handle;\n  let buffer = self._outBuffer;\n  let offset = self._outOffset;\n  const chunkSize = self._chunkSize;\n\n  let error;\n  self.on('error'\x2C function onError(er) {\n    error = er;\n  });\n\n  while (true) {\n    handle.writeSync(flushFlag\x2C\n                     chunk\x2C // in\n                     inOff\x2C // in_off\n                     availInBefore\x2C // in_len\n                     buffer\x2C // out\n                     offset\x2C // out_off\n                     availOutBefore); // out_len\n    if (error)\n      throw error;\n    else if (self[kError])\n      throw self[kError];\n\n    availOutAfter = state[0];\n    availInAfter = state[1];\n\n    const inDelta = (availInBefore - availInAfter);\n    inputRead += inDelta;\n\n    const have = availOutBefore - availOutAfter;\n    if (have > 0) {\n      const out = buffer.slice(offset\x2C offset + have);\n      offset += have;\n      buffers.push(out);\n      nread += out.byteLength;\n\n      if (nread > self._maxOutputLength) {\n        _close(self);\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\n      }\n\n    } else {\n      assert(have === 0\x2C 'have should not go down');\n    }\n\n    // Exhausted the output buffer\x2C or used all the input create a new one.\n    if (availOutAfter === 0 || offset >= chunkSize) {\n      availOutBefore = chunkSize;\n      offset = 0;\n      buffer = Buffer.allocUnsafe(chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done. Need to reprocess.\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n      // it'll have the correct byte counts.\n      inOff += inDelta;\n      availInBefore = availInAfter;\n    } else {\n      break;\n    }\n  }\n\n  self.bytesWritten = inputRead;\n  _close(self);\n\n  if (nread === 0)\n    return Buffer.alloc(0);\n\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\n}\n\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\n  const handle = self._handle;\n  if (!handle) return process.nextTick(cb);\n\n  handle.buffer = chunk;\n  handle.cb = cb;\n  handle.availOutBefore = self._chunkSize - self._outOffset;\n  handle.availInBefore = chunk.byteLength;\n  handle.inOff = 0;\n  handle.flushFlag = flushFlag;\n\n  handle.write(flushFlag\x2C\n               chunk\x2C // in\n               0\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               handle.availOutBefore); // out_len\n}\n\nfunction processCallback() {\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\n  // important to null out the values once they are no longer needed since\n  // `_handle` can stay in memory long after the buffer is needed.\n  const handle = this;\n  const self = this[owner_symbol];\n  const state = self._writeState;\n\n  if (self.destroyed) {\n    this.buffer = null;\n    this.cb();\n    return;\n  }\n\n  const availOutAfter = state[0];\n  const availInAfter = state[1];\n\n  const inDelta = handle.availInBefore - availInAfter;\n  self.bytesWritten += inDelta;\n\n  const have = handle.availOutBefore - availOutAfter;\n  let streamBufferIsFull = false;\n  if (have > 0) {\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\n    self._outOffset += have;\n    streamBufferIsFull = !self.push(out);\n  } else {\n    assert(have === 0\x2C 'have should not go down');\n  }\n\n  if (self.destroyed) {\n    this.cb();\n    return;\n  }\n\n  // Exhausted the output buffer\x2C or used all the input create a new one.\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\n    handle.availOutBefore = self._chunkSize;\n    self._outOffset = 0;\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\n  }\n\n  if (availOutAfter === 0) {\n    // Not actually done. Need to reprocess.\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n    // it'll have the correct byte counts.\n    handle.inOff += inDelta;\n    handle.availInBefore = availInAfter;\n\n\n    if (!streamBufferIsFull) {\n      this.write(handle.flushFlag\x2C\n                 this.buffer\x2C // in\n                 handle.inOff\x2C // in_off\n                 handle.availInBefore\x2C // in_len\n                 self._outBuffer\x2C // out\n                 self._outOffset\x2C // out_off\n                 self._chunkSize); // out_len\n    } else {\n      const oldRead = self._read;\n      self._read = (n) => {\n        self._read = oldRead;\n        this.write(handle.flushFlag\x2C\n                   this.buffer\x2C // in\n                   handle.inOff\x2C // in_off\n                   handle.availInBefore\x2C // in_len\n                   self._outBuffer\x2C // out\n                   self._outOffset\x2C // out_off\n                   self._chunkSize); // out_len\n        self._read(n);\n      };\n    }\n    return;\n  }\n\n  if (availInAfter > 0) {\n    // If we have more input that should be written\x2C but we also have output\n    // space available\x2C that means that the compression library was not\n    // interested in receiving more data\x2C and in particular that the input\n    // stream has ended early.\n    // This applies to streams where we don't check data past the end of\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\n    self.push(null);\n  }\n\n  // Finished with the chunk.\n  this.buffer = null;\n  this.cb();\n}\n\n/**\n * @param {ZlibBase} engine\n * @private\n */\nfunction _close(engine) {\n  // Caller may invoke .close after a zlib error (which will null _handle)\n  engine._handle?.close();\n  engine._handle = null;\n}\n\nconst zlibDefaultOpts = {\n  flush: Z_NO_FLUSH\x2C\n  finishFlush: Z_FINISH\x2C\n  fullFlush: Z_FULL_FLUSH\x2C\n};\n// Base class for all streams actually backed by zlib and using zlib-specific\n// parameters.\nfunction Zlib(opts\x2C mode) {\n  let windowBits = Z_DEFAULT_WINDOWBITS;\n  let level = Z_DEFAULT_COMPRESSION;\n  let memLevel = Z_DEFAULT_MEMLEVEL;\n  let strategy = Z_DEFAULT_STRATEGY;\n  let dictionary;\n\n  if (opts) {\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\n    // to use the window size in the zlib header of the compressed stream.\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\n        (mode === INFLATE ||\n         mode === GUNZIP ||\n         mode === UNZIP)) {\n      windowBits = 0;\n    } else {\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\n      windowBits = checkRangesOrGetDefault(\n        opts.windowBits\x2C 'options.windowBits'\x2C\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\n    }\n\n    level = checkRangesOrGetDefault(\n      opts.level\x2C 'options.level'\x2C\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\n\n    memLevel = checkRangesOrGetDefault(\n      opts.memLevel\x2C 'options.memLevel'\x2C\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\n\n    strategy = checkRangesOrGetDefault(\n      opts.strategy\x2C 'options.strategy'\x2C\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\n\n    dictionary = opts.dictionary;\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\n      if (isAnyArrayBuffer(dictionary)) {\n        dictionary = Buffer.from(dictionary);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.dictionary'\x2C\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n          dictionary\x2C\n        );\n      }\n    }\n  }\n\n  const handle = new binding.Zlib(mode);\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\n  // to come up with a good solution that doesn't break our internal API\x2C\n  // and with it all supported npm versions at the time of writing.\n  this._writeState = new Uint32Array(2);\n  handle.init(windowBits\x2C\n              level\x2C\n              memLevel\x2C\n              strategy\x2C\n              this._writeState\x2C\n              processCallback\x2C\n              dictionary);\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\n\n  this._level = level;\n  this._strategy = strategy;\n}\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\n\n// This callback is used by `.params()` to wait until a full flush happened\n// before adjusting the parameters. In particular\x2C the call to the native\n// `params()` function should not happen while a write is currently in progress\n// on the threadpool.\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\n  assert(this._handle\x2C 'zlib binding closed');\n  this._handle.params(level\x2C strategy);\n  if (!this.destroyed) {\n    this._level = level;\n    this._strategy = strategy;\n    if (callback) callback();\n  }\n}\n\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\n\n  if (this._level !== level || this._strategy !== strategy) {\n    this.flush(\n      Z_SYNC_FLUSH\x2C\n      paramsAfterFlushCallback.bind(this\x2C level\x2C strategy\x2C callback)\x2C\n    );\n  } else {\n    process.nextTick(callback);\n  }\n};\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate))\n    return new Deflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\n}\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Deflate\x2C Zlib);\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate))\n    return new Inflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\n}\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Inflate\x2C Zlib);\n\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip))\n    return new Gzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\n}\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gzip\x2C Zlib);\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip))\n    return new Gunzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\n}\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\n\nfunction DeflateRaw(opts) {\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\n  if (!(this instanceof DeflateRaw))\n    return new DeflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\n}\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw))\n    return new InflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\n}\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\n\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip))\n    return new Unzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\n}\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Unzip\x2C Zlib);\n\nfunction createConvenienceMethod(ctor\x2C sync) {\n  if (sync) {\n    return function syncBufferWrapper(buffer\x2C opts) {\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\n    };\n  }\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\n  };\n}\n\nconst kMaxBrotliParam = MathMax(\n  ...ObjectEntries(constants)\n    .map(({ 0: key\x2C 1: value }) => (key.startsWith('BROTLI_PARAM_') ? value : 0))\x2C\n);\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\n\nconst brotliDefaultOpts = {\n  flush: BROTLI_OPERATION_PROCESS\x2C\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\n  fullFlush: BROTLI_OPERATION_FLUSH\x2C\n};\nfunction Brotli(opts\x2C mode) {\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\n\n  brotliInitParamsArray.fill(-1);\n  if (opts?.params) {\n    ObjectKeys(opts.params).forEach((origKey) => {\n      const key = +origKey;\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\n          (brotliInitParamsArray[key] | 0) !== -1) {\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\n      }\n\n      const value = opts.params[origKey];\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\n                                       'number'\x2C opts.params[origKey]);\n      }\n      brotliInitParamsArray[key] = value;\n    });\n  }\n\n  const handle = mode === BROTLI_DECODE ?\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\n\n  this._writeState = new Uint32Array(2);\n  handle.init(brotliInitParamsArray\x2C this._writeState\x2C processCallback);\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\n}\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Brotli\x2C Zlib);\n\nfunction BrotliCompress(opts) {\n  if (!(this instanceof BrotliCompress))\n    return new BrotliCompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\n}\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\n\nfunction BrotliDecompress(opts) {\n  if (!(this instanceof BrotliDecompress))\n    return new BrotliDecompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\n}\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\n\n\nfunction createProperty(ctor) {\n  return {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: function(options) {\n      return new ctor(options);\n    }\x2C\n  };\n}\n\nfunction crc32(data\x2C value = 0) {\n  if (typeof data !== 'string' && !isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE('data'\x2C ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'string']\x2C data);\n  }\n  validateUint32(value\x2C 'value');\n  return crc32Native(data\x2C value);\n}\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nmodule.exports = {\n  crc32\x2C\n  Deflate\x2C\n  Inflate\x2C\n  Gzip\x2C\n  Gunzip\x2C\n  DeflateRaw\x2C\n  InflateRaw\x2C\n  Unzip\x2C\n  BrotliCompress\x2C\n  BrotliDecompress\x2C\n\n  // Convenience methods.\n  // compress/decompress a string or buffer in one step.\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  createDeflate: createProperty(Deflate)\x2C\n  createInflate: createProperty(Inflate)\x2C\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\n  createInflateRaw: createProperty(InflateRaw)\x2C\n  createGzip: createProperty(Gzip)\x2C\n  createGunzip: createProperty(Gunzip)\x2C\n  createUnzip: createProperty(Unzip)\x2C\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  codes: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: ObjectFreeze(codes)\x2C\n  }\x2C\n});\n\n// These should be considered deprecated\n// expose all the zlib constants\nfor (const { 0: key\x2C 1: value } of ObjectEntries(constants)) {\n  if (key.startsWith('BROTLI')) continue;\n  ObjectDefineProperty(module.exports\x2C key\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    value\x2C\n    writable: false\x2C\n  });\n}\n
code-source-info,0xbd578243b20,160,0,28730,C0O0C4O28730,,
code-creation,JS,9,174333,0xbd5782442a8,3868, node:zlib:1:1,0x2ffc889ce990,~
code-source-info,0xbd5782442a8,160,0,28730,C0O0C345O1159C350O1174C355O1185C361O1200C366O1226C371O1250C376O1267C381O1283C387O1297C392O1321C398O1337C403O1347C409O1530C413O1530C419O1395C425O1401C431O1431C437O1457C443O1483C449O1508C455O1590C459O1590C465O1566C471O1577C477O1634C481O1634C487O1619C492O1729C496O1729C502O1670C508O1691C514O1711C520O1777C524O1777C528O1777C530O1833C534O1817C540O1857C544O1857C548O1857C550O1921C554O1921C560O1895C566O1905C572O1965C576O1965C582O1996C588O1948C594O2107C598O2107C604O2016C610O2043C616O2063C622O2081C628O2159C632O2159C636O2159C638O2196C642O2196C646O2196C648O2233C652O2233C658O2261C663O2301C668O2313C673O2322C678O2339C684O2353C689O2367C694O2403C700O2416C706O2434C712O2452C718O2465C724O2480C730O2496C736O2512C742O2529C748O2554C754O2574C760O2596C766O2616C772O2681C778O2690C784O2702C790O2711C796O2723C802O2729C808O2737C814O2746C820O2761C826O2817C831O2843C837O2869C843O2894C849O2995C855O3015C863O3047C871O3086C879O3120C887O3157C895O3199C903O3238C911O3276C919O3318C930O3358C934O3358C961O3350C992O3350C995O3381C997O3392C1004O3400C1008O3339C1080O5666C1100O5672C1110O5684C1135O5699C1145O5725C1157O5666C1159O5793C1160O5793C1162O5827C1164O5827C1166O7926C1170O7956C1180O7977C1186O7926C1191O7989C1199O7989C1204O8033C1208O8063C1224O8150C1232O8033C1237O8496C1241O8526C1257O8620C1269O8745C1278O8620C1287O8813C1299O8918C1308O8813C1317O8496C1322O9034C1326O9043C1336O9059C1340O9271C1344O9280C1354O9297C1358O9410C1362O9419C1372O9436C1376O9856C1380O9856C1382O9883C1396O9884C1410O9896C1424O9905C1438O9946C1452O9960C1466O9974C1477O9998C1480O10020C1488O10003C1496O10037C1502O10062C1512O10067C1520O10029C1528O9985C1536O10345C1540O10345C1542O10378C1544O10378C1556O10423C1585O10410C1628O10410C1631O10445C1639O10479C1649O10479C1659O10470C1667O10507C1673O10520C1687O10544C1695O10399C1779O10564C1783O10573C1793O10589C1801O11084C1805O11093C1815O11109C1823O11196C1827O11205C1837O11224C1845O11289C1849O11298C1859O11319C1867O11858C1871O11867C1881O11891C1889O18015C1900O18026C1910O18053C1920O18076C1930O18015C1932O20505C1936O20531C1950O20551C1956O20505C1966O20563C1974O20563C1984O21122C1988O21127C2002O21144C2010O21742C2014O21771C2028O21787C2038O21742C2048O21799C2056O21799C2066O21973C2070O22002C2084O22018C2094O21973C2104O22030C2112O22030C2122O22192C2126O22218C2140O22234C2150O22192C2160O22246C2168O22246C2178O22413C2182O22441C2196O22457C2206O22413C2216O22469C2224O22469C2234O22712C2238O22744C2252O22760C2262O22712C2272O22772C2280O22772C2290O22961C2294O22993C2308O23009C2318O22961C2328O23021C2336O23021C2346O23190C2350O23217C2364O23233C2374O23190C2384O23245C2392O23245C2402O23696C2405O23710C2415O23739C2431O23740C2443O23696C2453O23696C2455O23851C2461O23883C2471O23851C2481O23851C2483O23916C2494O23927C2504O23968C2514O24006C2524O23916C2526O25052C2530O25080C2544O25096C2554O25052C2564O25108C2572O25108C2582O25310C2586O25346C2600O25364C2610O25310C2620O25376C2628O25376C2638O25594C2642O25632C2656O25650C2666O25594C2676O25662C2684O25662C2694O26320C2698O26349C2708O26354C2731O26397C2743O26437C2755O26320C2765O26485C2776O26506C2786O26515C2796O26526C2806O26537C2816O26545C2826O26555C2836O26569C2846O26583C2856O26592C2866O26610C2881O26723C2906O26779C2931O26827C2956O26877C2981O26928C3006O26990C3031O27042C3056O27094C3081O27143C3106O27199C3131O27249C3156O27303C3181O27356C3206O27418C3231O27479C3256O27549C3281O27616C3306O27690C3326O26500C3334O27773C3357O27801C3377O27843C3397O27888C3417O27936C3437O27978C3457O28016C3477O28055C3497O28102C3517O28160C3533O28207C3544O28288C3562O28313C3571O28390C3597O27743C3607O28530C3646O28525C3689O28525C3692O28511C3704O28519C3712O28568C3726O28568C3738O28590C3740O28630C3750O28639C3761O28694C3772O28602C3782O28495C3867O28729,,
tick,0x100d18240,174458,0,0x0,3,0x107f890bc,0x107f88e30,0x107f921e8,0xbd578242e17,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,174667,0xbd5782455a8,34, node:zlib:783:10,0x2ffc889cf9c0,~
code-source-info,0xbd5782455a8,160,23744,23815,C2O23750C9O23758C13O23775C21O23775C33O23815,,
code-creation,JS,9,174750,0xbd578245658,23,createConvenienceMethod node:zlib:766:33,0x2ffc889cf160,~
code-source-info,0xbd578245658,160,23313,23670,C0O23313C9O23330C13O23346C17O23455C18O23462C22O23668,,
tick,0x101edf93c,174792,0,0x0,2,0xbd578244fc5,0x107f89188,0x107f88e30,0x107f921e8,0xbd578242e17,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,174792,0xbd578245708,25,createProperty node:zlib:841:24,0x2ffc889cf2f0,~
code-source-info,0xbd578245708,160,25735,25898,C0O25735C9O25746C14O25833C24O25896,,
code-creation,JS,9,174917,0xbd5782458c8,306,lib/web/fetch/constants.js node:internal/deps/undici/undici:2971:31,0x38a74a567aa8,~
code-source-info,0xbd5782458c
code-creation,JS,9,175000,0xbd578245b38,85,lib/web/fetch/global.js node:internal/deps/undici/undici:3189:28,0x38a74a567b00,~
code-source-info,0xbd578245b38,125,233186,234226,C0O233186C15O233249C19O233256C27O233259C32O233249C34O233368C42O233368C47O234103C55O234103C60O234151C67O234177C73O234200C79O234167C84O234225,,
code-creation,JS,9,175042,0xbd578245d98,555,lib/web/fetch/data-url.js node:internal/deps/undici/undici:3227:30,0x38a74a567b88,~
code-source-info,0xbd578245d
new,MemoryChunk,0x22eddd3c0000,262144
new,MemoryChunk,0x38b0a8380000,262144
new,MemoryChunk,0x29e096380000,262144
code-creation,Eval,9,175583,0xbd5782460e0,5, node:perf_hooks:1:1,0x29e09638ff50,~
script-source,161,node:perf_hooks,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst {\n  constants\x2C\n} = internalBinding('performance');\n\nconst { PerformanceEntry } = require('internal/perf/performance_entry');\nconst { PerformanceResourceTiming } = require('internal/perf/resource_timing');\nconst {\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n} = require('internal/perf/observe');\nconst {\n  PerformanceMark\x2C\n  PerformanceMeasure\x2C\n} = require('internal/perf/usertiming');\nconst {\n  Performance\x2C\n  performance\x2C\n} = require('internal/perf/performance');\n\nconst {\n  createHistogram\x2C\n} = require('internal/histogram');\n\nconst monitorEventLoopDelay = require('internal/perf/event_loop_delay');\n\nmodule.exports = {\n  Performance\x2C\n  PerformanceEntry\x2C\n  PerformanceMark\x2C\n  PerformanceMeasure\x2C\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n  PerformanceResourceTiming\x2C\n  monitorEventLoopDelay\x2C\n  createHistogram\x2C\n  performance\x2C\n};\n\nObjectDefineProperty(module.exports\x2C 'constants'\x2C {\n  __proto__: null\x2C\n  configurable: false\x2C\n  enumerable: true\x2C\n  value: constants\x2C\n});\n
code-source-info,0xbd5782460e0,161,0,1065,C0O0C4O1065,,
code-creation,JS,9,175667,0xbd578246208,216, node:perf_hooks:1:1,0x29e096390018,~
code-source-info,0xbd578246208,161,0,1065,C0O25C5O90C8O90C13O75C18O152C21O152C26O131C31O234C34O234C39O204C44O343C47O343C52O286C57O309C62O430C65O430C70O387C75O406C80O509C83O509C88O477C93O492C98O579C101O579C106O558C111O641C114O641C119O685C126O706C132O721C138O741C144O760C150O782C156O805C162O837C168O866C174O891C180O910C186O700C190O955C205O1050C209O927C215O1064,,
code-creation,Eval,9,175792,0xbd5782463b8,5, node:internal/perf/resource_timing:1:1,0x29e096391728,~
script-source,162,node:internal/perf/resource_timing,'use strict';\n// https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming\n\nconst {\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst { PerformanceEntry\x2C kSkipThrow } = require('internal/perf/performance_entry');\nconst assert = require('internal/assert');\nconst { enqueue\x2C bufferResourceTiming } = require('internal/perf/observe');\nconst { validateInternalField } = require('internal/validators');\nconst { kEnumerableProperty } = require('internal/util');\n\nconst kCacheMode = Symbol('kCacheMode');\nconst kRequestedUrl = Symbol('kRequestedUrl');\nconst kTimingInfo = Symbol('kTimingInfo');\nconst kInitiatorType = Symbol('kInitiatorType');\nconst kDeliveryType = Symbol('kDeliveryType');\nconst kResponseStatus = Symbol('kResponseStatus');\n\nclass PerformanceResourceTiming extends PerformanceEntry {\n  constructor(skipThrowSymbol = undefined\x2C name = undefined\x2C type = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    super(skipThrowSymbol\x2C name\x2C type);\n  }\n\n  get name() {\n    validateInternalField(this\x2C kRequestedUrl\x2C 'PerformanceResourceTiming');\n    return this[kRequestedUrl];\n  }\n\n  get startTime() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].startTime;\n  }\n\n  get duration() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].endTime - this[kTimingInfo].startTime;\n  }\n\n  get initiatorType() {\n    validateInternalField(this\x2C kInitiatorType\x2C 'PerformanceResourceTiming');\n    return this[kInitiatorType];\n  }\n\n  get workerStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalServiceWorkerStartTime;\n  }\n\n  get redirectStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].redirectStartTime;\n  }\n\n  get redirectEnd() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].redirectEndTime;\n  }\n\n  get fetchStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].postRedirectStartTime;\n  }\n\n  get domainLookupStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalConnectionTimingInfo?.domainLookupStartTime;\n  }\n\n  get domainLookupEnd() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalConnectionTimingInfo?.domainLookupEndTime;\n  }\n\n  get connectStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalConnectionTimingInfo?.connectionStartTime;\n  }\n\n  get connectEnd() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalConnectionTimingInfo?.connectionEndTime;\n  }\n\n  get secureConnectionStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo]\n      .finalConnectionTimingInfo?.secureConnectionStartTime;\n  }\n\n  get nextHopProtocol() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo]\n      .finalConnectionTimingInfo?.ALPNNegotiatedProtocol;\n  }\n\n  get requestStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalNetworkRequestStartTime;\n  }\n\n  get responseStart() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].finalNetworkResponseStartTime;\n  }\n\n  get responseEnd() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].endTime;\n  }\n\n  get encodedBodySize() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].encodedBodySize;\n  }\n\n  get decodedBodySize() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kTimingInfo].decodedBodySize;\n  }\n\n  get transferSize() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    if (this[kCacheMode] === 'local') return 0;\n    if (this[kCacheMode] === 'validated') return 300;\n\n    return this[kTimingInfo].encodedBodySize + 300;\n  }\n\n  get deliveryType() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kDeliveryType];\n  }\n\n  get responseStatus() {\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\n    return this[kResponseStatus];\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kInitiatorType\x2C 'PerformanceResourceTiming');\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      initiatorType: this[kInitiatorType]\x2C\n      nextHopProtocol: this.nextHopProtocol\x2C\n      workerStart: this.workerStart\x2C\n      redirectStart: this.redirectStart\x2C\n      redirectEnd: this.redirectEnd\x2C\n      fetchStart: this.fetchStart\x2C\n      domainLookupStart: this.domainLookupStart\x2C\n      domainLookupEnd: this.domainLookupEnd\x2C\n      connectStart: this.connectStart\x2C\n      connectEnd: this.connectEnd\x2C\n      secureConnectionStart: this.secureConnectionStart\x2C\n      requestStart: this.requestStart\x2C\n      responseStart: this.responseStart\x2C\n      responseEnd: this.responseEnd\x2C\n      transferSize: this.transferSize\x2C\n      encodedBodySize: this.encodedBodySize\x2C\n      decodedBodySize: this.decodedBodySize\x2C\n      deliveryType: this.deliveryType\x2C\n      responseStatus: this.responseStatus\x2C\n    };\n  }\n}\n\nObjectDefineProperties(PerformanceResourceTiming.prototype\x2C {\n  initiatorType: kEnumerableProperty\x2C\n  nextHopProtocol: kEnumerableProperty\x2C\n  workerStart: kEnumerableProperty\x2C\n  redirectStart: kEnumerableProperty\x2C\n  redirectEnd: kEnumerableProperty\x2C\n  fetchStart: kEnumerableProperty\x2C\n  domainLookupStart: kEnumerableProperty\x2C\n  domainLookupEnd: kEnumerableProperty\x2C\n  connectStart: kEnumerableProperty\x2C\n  connectEnd: kEnumerableProperty\x2C\n  secureConnectionStart: kEnumerableProperty\x2C\n  requestStart: kEnumerableProperty\x2C\n  responseStart: kEnumerableProperty\x2C\n  responseEnd: kEnumerableProperty\x2C\n  transferSize: kEnumerableProperty\x2C\n  encodedBodySize: kEnumerableProperty\x2C\n  decodedBodySize: kEnumerableProperty\x2C\n  deliveryType: kEnumerableProperty\x2C\n  responseStatus: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'PerformanceResourceTiming'\x2C\n  }\x2C\n});\n\nfunction createPerformanceResourceTiming(\n  requestedUrl\x2C\n  initiatorType\x2C\n  timingInfo\x2C\n  cacheMode = ''\x2C\n  bodyInfo\x2C\n  responseStatus\x2C\n  deliveryType\x2C\n) {\n  const resourceTiming = new PerformanceResourceTiming(kSkipThrow\x2C requestedUrl\x2C 'resource');\n\n  resourceTiming[kInitiatorType] = initiatorType;\n  resourceTiming[kRequestedUrl] = requestedUrl;\n  // https://fetch.spec.whatwg.org/#fetch-timing-info\n  // This class is using timingInfo assuming it's already validated.\n  // The spec doesn't say to validate it in the class construction.\n  resourceTiming[kTimingInfo] = timingInfo;\n  resourceTiming[kCacheMode] = cacheMode;\n  resourceTiming[kDeliveryType] = deliveryType;\n  resourceTiming[kResponseStatus] = responseStatus;\n\n  return resourceTiming;\n}\n\n// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing\nfunction markResourceTiming(\n  timingInfo\x2C\n  requestedUrl\x2C\n  initiatorType\x2C\n  global\x2C\n  cacheMode\x2C\n  bodyInfo\x2C\n  responseStatus\x2C\n  deliveryType = ''\x2C\n) {\n  // https://w3c.github.io/resource-timing/#dfn-setup-the-resource-timing-entry\n  assert(\n    cacheMode === '' || cacheMode === 'local'\x2C\n    'cache must be an empty string or \\'local\\''\x2C\n  );\n  const resource = createPerformanceResourceTiming(\n    requestedUrl\x2C\n    initiatorType\x2C\n    timingInfo\x2C\n    cacheMode\x2C\n    bodyInfo\x2C\n    responseStatus\x2C\n    deliveryType\x2C\n  );\n\n  enqueue(resource);\n  bufferResourceTiming(resource);\n  return resource;\n}\n\nmodule.exports = {\n  PerformanceResourceTiming\x2C\n  markResourceTiming\x2C\n};\n
code-source-info,0xbd5782463b8,162,0,8223,C0O0C4O8223,,
code-creation,JS,9,176125,0xbd578246698,550, node:internal/perf/resource_timing:1:1,0x29e0963918d0,~
code-source-info,0xbd578246698,162,0,8223,C0O0C55O103C60O129C65O139C70O232C73O232C78O192C83O198C89O301C92O301C97O268C102O286C108O360C111O360C115O360C117O430C120O430C125O396C131O405C137O498C140O498C145O472C151O562C154O562C159O538C164O608C167O608C171O608C173O652C176O652C180O652C182O697C185O697C189O697C191O743C194O743C198O743C200O791C203O791C207O791C209O840C212O840C216O840C218O908C372O868C374O5786C377O5835C389O5865C395O5905C401O5941C407O5979C413O6015C419O6050C425O6092C431O6132C437O6169C443O6204C449O6250C455O6287C461O6325C467O6361C473O6398C479O6438C485O6478C491O6515C497O6554C503O6585C509O6609C511O6629C520O5786C525O8150C532O8171C538O8200C544O8165C549O8222,,
tick,0x192562a28,176167,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57824622a,0x107f89188,0x107f88e30,0x107f921e8,0xbd578242e78,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,176375,0xbd5782469f0,5, node:internal/perf/usertiming:1:1,0x29e096394770,~
script-source,163,node:internal/perf/usertiming,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { PerformanceEntry\x2C kSkipThrow } = require('internal/perf/performance_entry');\nconst { now } = require('internal/perf/utils');\nconst { enqueue\x2C bufferUserTiming } = require('internal/perf/observe');\nconst nodeTiming = require('internal/perf/nodetiming');\n\nconst {\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateInternalField\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_PERFORMANCE_INVALID_TIMESTAMP\x2C\n    ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst { structuredClone } = require('internal/worker/js_transferable');\nconst {\n  lazyDOMException\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst kDetail = Symbol('kDetail');\n\nconst markTimings = new SafeMap();\n\nconst nodeTimingReadOnlyAttributes = new SafeSet(new SafeArrayIterator([\n  'nodeStart'\x2C\n  'v8Start'\x2C\n  'environment'\x2C\n  'loopStart'\x2C\n  'loopExit'\x2C\n  'bootstrapComplete'\x2C\n]));\n\nfunction getMark(name) {\n  if (name === undefined) return;\n  if (typeof name === 'number') {\n    if (name < 0)\n      throw new ERR_PERFORMANCE_INVALID_TIMESTAMP(name);\n    return name;\n  }\n  name = `${name}`;\n  if (nodeTimingReadOnlyAttributes.has(name))\n    return nodeTiming[name];\n  const ts = markTimings.get(name);\n  if (ts === undefined)\n    throw lazyDOMException(`The "${name}" performance mark has not been set`\x2C 'SyntaxError');\n  return ts;\n}\n\nclass PerformanceMark extends PerformanceEntry {\n  constructor(name\x2C options = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (nodeTimingReadOnlyAttributes.has(name))\n      throw new ERR_INVALID_ARG_VALUE('name'\x2C name);\n    if (options != null) {\n      validateObject(options\x2C 'options');\n    }\n    const startTime = options?.startTime ?? now();\n    validateNumber(startTime\x2C 'startTime');\n    if (startTime < 0)\n      throw new ERR_PERFORMANCE_INVALID_TIMESTAMP(startTime);\n    markTimings.set(name\x2C startTime);\n\n    let detail = options?.detail;\n    detail = detail != null ?\n      structuredClone(detail) :\n      null;\n\n    super(kSkipThrow\x2C name\x2C 'mark'\x2C startTime\x2C 0);\n    this[kDetail] = detail;\n  }\n\n  get detail() {\n    validateInternalField(this\x2C kDetail\x2C 'PerformanceMark');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\n\nObjectDefineProperties(PerformanceMark.prototype\x2C {\n  detail: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'PerformanceMark'\x2C\n  }\x2C\n});\n\nclass PerformanceMeasure extends PerformanceEntry {\n  constructor(\n    skipThrowSymbol = undefined\x2C\n    name = undefined\x2C\n    type = undefined\x2C\n    start = undefined\x2C\n    duration = undefined\x2C\n  ) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    super(skipThrowSymbol\x2C name\x2C type\x2C start\x2C duration);\n  }\n\n  get detail() {\n    validateInternalField(this\x2C kDetail\x2C 'PerformanceMeasure');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\nObjectDefineProperties(PerformanceMeasure.prototype\x2C {\n  detail: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'PerformanceMeasure'\x2C\n  }\x2C\n});\n\nfunction createPerformanceMeasure(name\x2C start\x2C duration\x2C detail) {\n  const measure = new PerformanceMeasure(kSkipThrow\x2C name\x2C 'measure'\x2C start\x2C duration);\n\n  measure[kDetail] = detail;\n\n  return measure;\n}\n\nfunction mark(name\x2C options) {\n  const mark = new PerformanceMark(name\x2C options);\n  enqueue(mark);\n  bufferUserTiming(mark);\n  return mark;\n}\n\nfunction calculateStartDuration(startOrMeasureOptions\x2C endMark) {\n  startOrMeasureOptions ??= 0;\n  let start;\n  let end;\n  let duration;\n  let optionsValid = false;\n  if (typeof startOrMeasureOptions === 'object') {\n    ({ start\x2C end\x2C duration } = startOrMeasureOptions);\n    optionsValid = start !== undefined || end !== undefined;\n  }\n  if (optionsValid) {\n    if (endMark !== undefined) {\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\n        'endMark must not be specified');\n    }\n\n    if (start === undefined && end === undefined) {\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\n        'One of options.start or options.end is required');\n    }\n    if (start !== undefined && end !== undefined && duration !== undefined) {\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\n        'Must not have options.start\x2C options.end\x2C and ' +\n        'options.duration specified');\n    }\n  }\n\n  if (endMark !== undefined) {\n    end = getMark(endMark);\n  } else if (optionsValid && end !== undefined) {\n    end = getMark(end);\n  } else if (optionsValid && start !== undefined && duration !== undefined) {\n    end = getMark(start) + getMark(duration);\n  } else {\n    end = now();\n  }\n\n  if (typeof startOrMeasureOptions === 'string') {\n    start = getMark(startOrMeasureOptions);\n  } else if (optionsValid && start !== undefined) {\n    start = getMark(start);\n  } else if (optionsValid && duration !== undefined && end !== undefined) {\n    start = end - getMark(duration);\n  } else {\n    start = 0;\n  }\n\n  duration = end - start;\n  return { start\x2C duration };\n}\n\nfunction measure(name\x2C startOrMeasureOptions\x2C endMark) {\n  validateString(name\x2C 'name');\n  const {\n    start\x2C\n    duration\x2C\n  } = calculateStartDuration(startOrMeasureOptions\x2C endMark);\n  let detail = startOrMeasureOptions?.detail;\n  detail = detail != null ? structuredClone(detail) : null;\n  const measure = createPerformanceMeasure(name\x2C start\x2C duration\x2C detail);\n  enqueue(measure);\n  bufferUserTiming(measure);\n  return measure;\n}\n\nfunction clearMarkTimings(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n    if (nodeTimingReadOnlyAttributes.has(name))\n      throw new ERR_INVALID_ARG_VALUE('name'\x2C name);\n    markTimings.delete(name);\n    return;\n  }\n  markTimings.clear();\n}\n\nmodule.exports = {\n  PerformanceMark\x2C\n  PerformanceMeasure\x2C\n  clearMarkTimings\x2C\n  mark\x2C\n  measure\x2C\n};\n
code-source-info,0xbd5782469f0,163,0,6460,C0O0C4O6460,,
code-creation,JS,9,176625,0xbd578246c50,528, node:internal/perf/usertiming:1:1,0x29e0963949b8,~
code-source-info,0xbd578246c50,163,0,6460,C0O0C101O25C106O51C111O72C116O83C121O94C126O104C131O182C134O182C139O149C144O167C150O242C153O242C158O234C164O312C167O312C172O282C178O291C184O365C187O365C191O365C193O494C196O494C201O413C207O431C213O449C219O467C225O717C228O717C233O544C238O550C244O579C250O606C256O628C262O667C268O774C271O774C276O754C282O873C285O873C290O828C296O848C301O916C304O916C308O916C310O956C312O956C317O956C319O1025C326O1021C334O1009C339O1009C341O1632C374O1602C376O2684C379O2723C391O2746C397O2770C399O2790C408O2684C413O2910C446O2877C448O3530C451O3572C463O3595C469O3619C471O3639C480O3530C485O6358C492O6379C498O6398C504O6420C510O6440C516O6448C522O6373C527O6459,,
code-creation,Eval,9,176792,0xbd578246f80,5, node:internal/perf/nodetiming:1:1,0x29e096395bb0,~
script-source,164,node:internal/perf/nodetiming,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst { PerformanceEntry } = require('internal/perf/performance_entry');\n\nconst {\n  now\x2C\n  getMilestoneTimestamp\x2C\n} = require('internal/perf/utils');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('util');\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_MILESTONE_NODE_START\x2C\n    NODE_PERFORMANCE_MILESTONE_V8_START\x2C\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\n    NODE_PERFORMANCE_MILESTONE_LOOP_EXIT\x2C\n    NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\x2C\n    NODE_PERFORMANCE_MILESTONE_ENVIRONMENT\x2C\n  }\x2C\n  loopIdleTime\x2C\n  uvMetricsInfo\x2C\n} = internalBinding('performance');\n\nclass PerformanceNodeTiming {\n  constructor() {\n    ObjectDefineProperties(this\x2C {\n      name: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        value: 'node'\x2C\n      }\x2C\n\n      entryType: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        value: 'node'\x2C\n      }\x2C\n\n      startTime: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        value: 0\x2C\n      }\x2C\n\n      duration: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get: now\x2C\n      }\x2C\n\n      nodeStart: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_NODE_START);\n        }\x2C\n      }\x2C\n\n      v8Start: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_V8_START);\n        }\x2C\n      }\x2C\n\n      environment: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_ENVIRONMENT);\n        }\x2C\n      }\x2C\n\n      loopStart: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_START);\n        }\x2C\n      }\x2C\n\n      loopExit: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_EXIT);\n        }\x2C\n      }\x2C\n\n      bootstrapComplete: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get() {\n          return getMilestoneTimestamp(\n            NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE);\n        }\x2C\n      }\x2C\n\n      idleTime: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get: loopIdleTime\x2C\n      }\x2C\n\n      uvMetricsInfo: {\n        __proto__: null\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        get: () => {\n          const metrics = uvMetricsInfo();\n          return {\n            loopCount: metrics[0]\x2C\n            events: metrics[1]\x2C\n            eventsWaiting: metrics[2]\x2C\n          };\n        }\x2C\n      }\x2C\n    });\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceNodeTiming ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  toJSON() {\n    return {\n      name: 'node'\x2C\n      entryType: 'node'\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      nodeStart: this.nodeStart\x2C\n      v8Start: this.v8Start\x2C\n      bootstrapComplete: this.bootstrapComplete\x2C\n      environment: this.environment\x2C\n      loopStart: this.loopStart\x2C\n      loopExit: this.loopExit\x2C\n      idleTime: this.idleTime\x2C\n    };\n  }\n}\n\nObjectSetPrototypeOf(\n  PerformanceNodeTiming.prototype\x2C\n  PerformanceEntry.prototype);\n\nmodule.exports = new PerformanceNodeTiming();\n
code-source-info,0xbd578246f80,164,0,3858,C0O0C4O3858,,
code-creation,JS,9,176917,0xbd5782470d0,236, node:internal/perf/nodetiming:1:1,0x29e096395d38,~
code-source-info,0xbd5782470d0,164,0,3858,C0O0C41O25C47O51C52O120C55O120C60O99C65O209C68O209C73O175C79O182C85O287C88O287C93O273C98O334C101O334C106O322C112O681C115O681C120O373C125O379C131O422C137O463C143O506C149O548C155O599C161O646C167O662C182O3089C208O3769C213O3799C218O3723C223O3812C225O3829C230O3827C235O3857,,
code-creation,JS,9,177000,0xbd578247370,188,PerformanceNodeTiming node:internal/perf/nodetiming:35:14,0x29e096395da0,~
code-source-info,0xbd578247370,164,757,3084,C0O766C10O1196C17O1290C29O1322C34O1411C48O1534C53O1623C67O1748C72O1837C86O1963C91O2052C105O2176C110O2265C124O2397C129O2486C143O2631C150O2725C162O2770C167O2864C181O766C187O3083,,
code-creation,Eval,9,177167,0xbd5782474e0,5, node:internal/perf/performance:1:1,0x29e096398a20,~
script-source,165,node:internal/perf/performance,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ReflectConstruct\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n  initEventTarget\x2C\n  defineEventHandler\x2C\n} = require('internal/event_target');\n\nconst { now\x2C getTimeOriginTimestamp } = require('internal/perf/utils');\n\nconst { markResourceTiming } = require('internal/perf/resource_timing');\n\nconst {\n  mark\x2C\n  measure\x2C\n  clearMarkTimings\x2C\n} = require('internal/perf/usertiming');\nconst {\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n} = require('internal/perf/observe');\n\nconst { eventLoopUtilization } = require('internal/perf/event_loop_utilization');\nconst nodeTiming = require('internal/perf/nodetiming');\nconst timerify = require('internal/perf/timerify');\nconst { customInspectSymbol: kInspect\x2C kEnumerableProperty\x2C kEmptyObject } = require('internal/util');\nconst { inspect } = require('util');\nconst { validateInternalField } = require('internal/validators');\nconst { convertToInt } = require('internal/webidl');\n\nconst kPerformanceBrand = Symbol('performance');\n\nclass Performance extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `Performance ${inspect({\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n    }\x2C opts)}`;\n  }\n\n  clearMarks(name = undefined) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (name !== undefined) {\n      name = `${name}`;\n    }\n    clearMarkTimings(name);\n    clearEntriesFromBuffer('mark'\x2C name);\n  }\n\n  clearMeasures(name = undefined) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (name !== undefined) {\n      name = `${name}`;\n    }\n    clearEntriesFromBuffer('measure'\x2C name);\n  }\n\n  clearResourceTimings(name = undefined) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (name !== undefined) {\n      name = `${name}`;\n    }\n    clearEntriesFromBuffer('resource'\x2C name);\n  }\n\n  getEntries() {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    return filterBufferMapByNameAndType();\n  }\n\n  getEntriesByName(name\x2C type = undefined) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (type !== undefined) {\n      type = `${type}`;\n    }\n    return filterBufferMapByNameAndType(name\x2C type);\n  }\n\n  getEntriesByType(type) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('type');\n    }\n    type = `${type}`;\n    return filterBufferMapByNameAndType(undefined\x2C type);\n  }\n\n  mark(name\x2C options = kEmptyObject) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    return mark(name\x2C options);\n  }\n\n  measure(name\x2C startOrMeasureOptions = kEmptyObject\x2C endMark = undefined) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    return measure(name\x2C startOrMeasureOptions\x2C endMark);\n  }\n\n  now() {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    return now();\n  }\n\n  setResourceTimingBufferSize(maxSize) {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('maxSize');\n    }\n    // unsigned long\n    maxSize = convertToInt('maxSize'\x2C maxSize\x2C 32);\n    return setResourceTimingBufferSize(maxSize);\n  }\n\n  get timeOrigin() {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    return getTimeOriginTimestamp();\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\n    return {\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n      eventLoopUtilization: this.eventLoopUtilization()\x2C\n    };\n  }\n}\n\nObjectDefineProperties(Performance.prototype\x2C {\n  clearMarks: kEnumerableProperty\x2C\n  clearMeasures: kEnumerableProperty\x2C\n  clearResourceTimings: kEnumerableProperty\x2C\n  getEntries: kEnumerableProperty\x2C\n  getEntriesByName: kEnumerableProperty\x2C\n  getEntriesByType: kEnumerableProperty\x2C\n  mark: kEnumerableProperty\x2C\n  measure: kEnumerableProperty\x2C\n  now: kEnumerableProperty\x2C\n  timeOrigin: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n  setResourceTimingBufferSize: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'Performance'\x2C\n  }\x2C\n\n  // Node.js specific extensions.\n  eventLoopUtilization: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    // Node.js specific extensions.\n    enumerable: false\x2C\n    writable: true\x2C\n    value: eventLoopUtilization\x2C\n  }\x2C\n  nodeTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    // Node.js specific extensions.\n    enumerable: false\x2C\n    writable: true\x2C\n    value: nodeTiming\x2C\n  }\x2C\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\n  // which is a Node.js dependency\x2C not a internal module\n  markResourceTiming: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    // Node.js specific extensions.\n    enumerable: false\x2C\n    writable: true\x2C\n    value: markResourceTiming\x2C\n  }\x2C\n  timerify: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    // Node.js specific extensions.\n    enumerable: false\x2C\n    writable: true\x2C\n    value: timerify\x2C\n  }\x2C\n});\ndefineEventHandler(Performance.prototype\x2C 'resourcetimingbufferfull');\n\nfunction createPerformance() {\n  return ReflectConstruct(function Performance() {\n    initEventTarget(this);\n    this[kPerformanceBrand] = true;\n  }\x2C []\x2C Performance);\n}\n\nconst performance = createPerformance();\n\nfunction dispatchBufferFull(type) {\n  const event = new Event(type\x2C {\n    [kTrustEvent]: true\x2C\n  });\n  performance.dispatchEvent(event);\n}\nsetDispatchBufferFull(dispatchBufferFull);\n\nmodule.exports = {\n  Performance\x2C\n  performance\x2C\n};\n
code-source-info,0xbd5782474e0,165,0,6391,C0O0C4O6391,,
code-creation,JS,9,177417,0xbd5782477e8,729, node:internal/perf/performance:1:1,0x29e096398c38,~
code-source-info,0xbd5782477e
tick,0x192400c00,177458,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57824625b,0x107f89188,0x107f88e30,0x107f921e8,0xbd578242e78,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,177542,0xbd578247c28,5, node:internal/perf/event_loop_utilization:1:1,0x29e09639a008,~
script-source,166,node:internal/perf/event_loop_utilization,'use strict';\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\n  }\x2C\n  loopIdleTime\x2C\n  milestones\x2C\n} = internalBinding('performance');\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // Get the original milestone timestamps that calculated from the beginning\n  // of the process.\n  return internalEventLoopUtilization(\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\n    loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\n  if (loopStart <= 0) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\n  // and offset it by the loopStart time (which is also calculated from the\n  // beginning of the process).\n  const now = process.hrtime();\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\n\n  if (!util1) {\n    return {\n      idle: loopIdleTime\x2C\n      active\x2C\n      utilization: active / (loopIdleTime + active)\x2C\n    };\n  }\n\n  const idleDelta = loopIdleTime - util1.idle;\n  const activeDelta = active - util1.active;\n  const utilization = activeDelta / (idleDelta + activeDelta);\n  return {\n    idle: idleDelta\x2C\n    active: activeDelta\x2C\n    utilization\x2C\n  };\n}\n\nmodule.exports = {\n  internalEventLoopUtilization\x2C\n  eventLoopUtilization\x2C\n};\n
code-source-info,0xbd578247c28,166,0,1527,C0O0C4O1527,,
code-creation,JS,9,177583,0xbd578247cf8,85, node:internal/perf/event_loop_utilization:1:1,0x29e09639a120,~
code-source-info,0xbd578247cf8,166,0,1527,C0O0C29O120C32O120C37O36C42O42C48O88C54O104C60O1449C67O1470C73O1502C79O1464C84O1526,,
code-creation,Eval,9,177667,0xbd578247de0,5, node:internal/perf/timerify:1:1,0x29e09639a898,~
script-source,167,node:internal/perf/timerify,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  MathCeil\x2C\n  ObjectDefineProperties\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nconst { createPerformanceNodeEntry } = require('internal/perf/performance_entry');\nconst { now } = require('internal/perf/utils');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst {\n  isHistogram\x2C\n} = require('internal/histogram');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  enqueue\x2C\n} = require('internal/perf/observe');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nfunction processComplete(name\x2C start\x2C args\x2C histogram) {\n  const duration = now() - start;\n  if (histogram !== undefined)\n    histogram.record(MathCeil(duration * 1e6));\n  const entry =\n    createPerformanceNodeEntry(\n      name\x2C\n      'function'\x2C\n      start\x2C\n      duration\x2C\n      args);\n\n  for (let n = 0; n < args.length; n++)\n    entry[n] = args[n];\n\n  enqueue(entry);\n}\n\nfunction timerify(fn\x2C options = kEmptyObject) {\n  validateFunction(fn\x2C 'fn');\n\n  validateObject(options\x2C 'options');\n  const {\n    histogram\x2C\n  } = options;\n\n  if (histogram !== undefined &&\n      (!isHistogram(histogram) || typeof histogram.record !== 'function')) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.histogram'\x2C\n      'RecordableHistogram'\x2C\n      histogram);\n  }\n\n  function timerified(...args) {\n    const isConstructorCall = new.target !== undefined;\n    const start = now();\n    const result = isConstructorCall ?\n      ReflectConstruct(fn\x2C args\x2C fn) :\n      ReflectApply(fn\x2C this\x2C args);\n    if (!isConstructorCall && typeof result?.finally === 'function') {\n      return result.finally(\n        FunctionPrototypeBind(\n          processComplete\x2C\n          result\x2C\n          fn.name\x2C\n          start\x2C\n          args\x2C\n          histogram));\n    }\n    processComplete(fn.name\x2C start\x2C args\x2C histogram);\n    return result;\n  }\n\n  ObjectDefineProperties(timerified\x2C {\n    length: {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: true\x2C\n      value: fn.length\x2C\n    }\x2C\n    name: {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: true\x2C\n      value: `timerified ${fn.name}`\x2C\n    }\x2C\n  });\n\n  return timerified;\n}\n\nmodule.exports = timerify;\n
code-source-info,0xbd578247de0,167,0,2280,C0O0C4O2280,,
code-creation,JS,9,177750,0xbd578247f18,202, node:internal/perf/timerify:1:1,0x29e09639aa40,~
code-source-info,0xbd578247f18,167,0,2280,C0O0C55O25C61O50C67O62C73O88C79O104C85O179C88O179C93O148C99O239C102O239C107O231C113O322C116O322C121O282C127O302C133O382C136O382C141O365C147O468C150O468C155O431C160O437C166O520C169O520C174O507C180O583C183O583C188O565C194O2253C196O2268C201O2279,,
code-creation,Eval,9,177917,0xbd5782480a0,5, node:internal/histogram:1:1,0x29e09639bba8,~
script-source,168,node:internal/histogram,'use strict';\n\nconst {\n  MapPrototypeEntries\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFromEntries\x2C\n  ReflectConstruct\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  Histogram: _Histogram\x2C\n} = internalBinding('performance');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst { inspect } = require('util');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst kDestroy = Symbol('kDestroy');\nconst kHandle = Symbol('kHandle');\nconst kMap = Symbol('kMap');\nconst kRecordable = Symbol('kRecordable');\n\nconst {\n  kClone\x2C\n  kDeserialize\x2C\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nfunction isHistogram(object) {\n  return object?.[kHandle] !== undefined;\n}\n\nconst kSkipThrow = Symbol('kSkipThrow');\n\nclass Histogram {\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `Histogram ${inspect({\n      min: this.min\x2C\n      max: this.max\x2C\n      mean: this.mean\x2C\n      exceeds: this.exceeds\x2C\n      stddev: this.stddev\x2C\n      count: this.count\x2C\n      percentiles: this.percentiles\x2C\n    }\x2C opts)}`;\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get count() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.count();\n  }\n\n  /**\n   * @readonly\n   * @type {bigint}\n   */\n  get countBigInt() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.countBigInt();\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get min() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.min();\n  }\n\n  /**\n   * @readonly\n   * @type {bigint}\n   */\n  get minBigInt() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.minBigInt();\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get max() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.max();\n  }\n\n  /**\n   * @readonly\n   * @type {bigint}\n   */\n  get maxBigInt() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.maxBigInt();\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get mean() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.mean();\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get exceeds() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.exceeds();\n  }\n\n  /**\n   * @readonly\n   * @type {bigint}\n   */\n  get exceedsBigInt() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.exceedsBigInt();\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get stddev() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    return this[kHandle]?.stddev();\n  }\n\n  /**\n   * @param {number} percentile\n   * @returns {number}\n   */\n  percentile(percentile) {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    validateNumber(percentile\x2C 'percentile');\n    if (NumberIsNaN(percentile) || percentile <= 0 || percentile > 100)\n      throw new ERR_OUT_OF_RANGE('percentile'\x2C '> 0 && <= 100'\x2C percentile);\n\n    return this[kHandle]?.percentile(percentile);\n  }\n\n  /**\n   * @param {number} percentile\n   * @returns {bigint}\n   */\n  percentileBigInt(percentile) {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    validateNumber(percentile\x2C 'percentile');\n    if (NumberIsNaN(percentile) || percentile <= 0 || percentile > 100)\n      throw new ERR_OUT_OF_RANGE('percentile'\x2C '> 0 && <= 100'\x2C percentile);\n\n    return this[kHandle]?.percentileBigInt(percentile);\n  }\n\n  /**\n   * @readonly\n   * @type {Map<number\x2Cnumber>}\n   */\n  get percentiles() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    this[kMap].clear();\n    this[kHandle]?.percentiles(this[kMap]);\n    return this[kMap];\n  }\n\n  /**\n   * @readonly\n   * @type {Map<number\x2Cbigint>}\n   */\n  get percentilesBigInt() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    this[kMap].clear();\n    this[kHandle]?.percentilesBigInt(this[kMap]);\n    return this[kMap];\n  }\n\n  /**\n   * @returns {void}\n   */\n  reset() {\n    if (!isHistogram(this))\n      throw new ERR_INVALID_THIS('Histogram');\n    this[kHandle]?.reset();\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/histogram:ClonedHistogram'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n\n  toJSON() {\n    return {\n      count: this.count\x2C\n      min: this.min\x2C\n      max: this.max\x2C\n      mean: this.mean\x2C\n      exceeds: this.exceeds\x2C\n      stddev: this.stddev\x2C\n      percentiles: ObjectFromEntries(MapPrototypeEntries(this.percentiles))\x2C\n    };\n  }\n}\n\nclass RecordableHistogram extends Histogram {\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    super(skipThrowSymbol);\n  }\n\n  /**\n   * @param {number|bigint} val\n   * @returns {void}\n   */\n  record(val) {\n    if (this[kRecordable] === undefined)\n      throw new ERR_INVALID_THIS('RecordableHistogram');\n    if (typeof val === 'bigint') {\n      this[kHandle]?.record(val);\n      return;\n    }\n\n    validateInteger(val\x2C 'val'\x2C 1);\n\n    this[kHandle]?.record(val);\n  }\n\n  /**\n   * @returns {void}\n   */\n  recordDelta() {\n    if (this[kRecordable] === undefined)\n      throw new ERR_INVALID_THIS('RecordableHistogram');\n    this[kHandle]?.recordDelta();\n  }\n\n  /**\n   * @param {RecordableHistogram} other\n   */\n  add(other) {\n    if (this[kRecordable] === undefined)\n      throw new ERR_INVALID_THIS('RecordableHistogram');\n    if (other[kRecordable] === undefined)\n      throw new ERR_INVALID_ARG_TYPE('other'\x2C 'RecordableHistogram'\x2C other);\n    this[kHandle]?.add(other[kHandle]);\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/histogram:ClonedRecordableHistogram'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n}\n\nfunction ClonedHistogram(handle) {\n  return ReflectConstruct(\n    function() {\n      markTransferMode(this\x2C true\x2C false);\n      this[kHandle] = handle;\n      this[kMap] = new SafeMap();\n    }\x2C []\x2C Histogram);\n}\n\nClonedHistogram.prototype[kDeserialize] = () => { };\n\nfunction ClonedRecordableHistogram(handle) {\n  const histogram = new RecordableHistogram(kSkipThrow);\n\n  markTransferMode(histogram\x2C true\x2C false);\n  histogram[kRecordable] = true;\n  histogram[kMap] = new SafeMap();\n  histogram[kHandle] = handle;\n  histogram.constructor = RecordableHistogram;\n\n  return histogram;\n}\n\nClonedRecordableHistogram.prototype[kDeserialize] = () => { };\n\nfunction createRecordableHistogram(handle) {\n  return new ClonedRecordableHistogram(handle);\n}\n\n/**\n * @param {{\n *   lowest? : number\x2C\n *   highest? : number\x2C\n *   figures? : number\n * }} [options]\n * @returns {RecordableHistogram}\n */\nfunction createHistogram(options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const {\n    lowest = 1\x2C\n    highest = NumberMAX_SAFE_INTEGER\x2C\n    figures = 3\x2C\n  } = options;\n  if (typeof lowest !== 'bigint')\n    validateInteger(lowest\x2C 'options.lowest'\x2C 1\x2C NumberMAX_SAFE_INTEGER);\n  if (typeof highest !== 'bigint') {\n    validateInteger(highest\x2C 'options.highest'\x2C\n                    2 * lowest\x2C NumberMAX_SAFE_INTEGER);\n  } else if (highest < 2n * lowest) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('options.highest'\x2C highest);\n  }\n  validateInteger(figures\x2C 'options.figures'\x2C 1\x2C 5);\n  return createRecordableHistogram(new _Histogram(lowest\x2C highest\x2C figures));\n}\n\nmodule.exports = {\n  Histogram\x2C\n  RecordableHistogram\x2C\n  ClonedHistogram\x2C\n  ClonedRecordableHistogram\x2C\n  isHistogram\x2C\n  kDestroy\x2C\n  kHandle\x2C\n  kMap\x2C\n  createHistogram\x2C\n};\n
code-source-info,0xbd5782480a0,168,0,8467,C0O0C4O8467,,
code-creation,JS,9,178208,0xbd578248380,632, node:internal/histogram:1:1,0x29e09639be20,~
code-source-info,0xbd578248380,168,0,8467,C0O0C105O25C111O48C117O63C123O89C129O110C135O130C141O141C146O204C149O204C154O188C160O298C163O298C168O268C173O280C179O345C182O345C187O333C193O517C196O517C201O380C206O386C212O415C218O441C224O468C230O490C236O613C239O613C244O556C250O575C256O593C262O663C265O663C270O699C273O699C277O699C279O731C282O731C286O731C288O767C291O767C295O767C297O849C300O849C305O801C310O811C315O827C321O989C324O989C328O989C339O1174C435O4931C446O5090C475O1012C480O5448C502O6493C511O6662C534O5414C536O6953C541O6963C545O6977C549O7308C552O7334C557O7344C561O7358C565O8296C572O8317C578O8330C584O8353C590O8372C596O8401C602O8416C608O8428C614O8439C620O8447C626O8311C631O8466,,
code-creation,JS,9,178333,0xbd578248730,24,createPerformance node:internal/perf/performance:226:27,0x29e096398ca0,~
code-source-info,0xbd578248730,165,5969,6112,C0O5976C15O6097C18O5983C23O6110,,
code-creation,JS,9,178333,0xbd5782487c8,21,Performance node:internal/perf/performance:227:47,0x29e09639e820,~
code-source-info,0xbd5782487c8,165,6020,6091,C0O6029C5O6029C9O6056C11O6061C15O6080C20O6090,,
code-creation,JS,9,178375,0xbd578248858,11,Performance node:internal/perf/performance:52:14,0x29e096398d78,~
code-source-info,0xbd578248858,165,1302,1351,C0O1311C5O1317C10O1311,,
code-creation,JS,9,178417,0xbd5782488e0,10,setDispatchBufferFull node:internal/perf/observe:483:31,0x2858598838c0,~
code-source-info,0xbd5782488e0,116,13248,13283,C0O13257C2O13276C9O13282,,
code-creation,Eval,9,178458,0xbd578248968,5, node:internal/perf/event_loop_delay:1:1,0x29e0963a0fd0,~
script-source,169,node:internal/perf/event_loop_delay,'use strict';\nconst {\n  ReflectConstruct\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  createELDHistogram\x2C\n} = internalBinding('performance');\n\nconst {\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst {\n  Histogram\x2C\n  kHandle\x2C\n  kMap\x2C\n} = require('internal/histogram');\n\nconst {\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst kEnabled = Symbol('kEnabled');\n\nclass ELDHistogram extends Histogram {\n  constructor(i) {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  enable() {\n    if (this[kEnabled] === undefined)\n      throw new ERR_INVALID_THIS('ELDHistogram');\n    if (this[kEnabled]) return false;\n    this[kEnabled] = true;\n    this[kHandle].start();\n    return true;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  disable() {\n    if (this[kEnabled] === undefined)\n      throw new ERR_INVALID_THIS('ELDHistogram');\n    if (!this[kEnabled]) return false;\n    this[kEnabled] = false;\n    this[kHandle].stop();\n    return true;\n  }\n}\n\n/**\n * @param {{\n *   resolution : number\n * }} [options]\n * @returns {ELDHistogram}\n */\nfunction monitorEventLoopDelay(options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n\n  const { resolution = 10 } = options;\n  validateInteger(resolution\x2C 'options.resolution'\x2C 1);\n\n  return ReflectConstruct(\n    function() {\n      markTransferMode(this\x2C true\x2C false);\n      this[kEnabled] = false;\n      this[kHandle] = createELDHistogram(resolution);\n      this[kMap] = new SafeMap();\n    }\x2C []\x2C ELDHistogram);\n}\n\nmodule.exports = monitorEventLoopDelay;\n
code-source-info,0xbd578248968,169,0,1749,C0O0C4O1749,,
code-creation,JS,9,178542,0xbd578248ab8,228, node:internal/perf/event_loop_delay:1:1,0x29e0963a1168,~
code-source-info,0xbd578248ab8,169,0,1749,C0O0C49O24C55O44C61O55C66O160C69O160C74O98C79O104C85O133C91O223C94O223C99O199C105O305C108O305C113O266C119O285C125O382C128O382C133O348C138O361C144O372C150O442C153O442C158O424C164O501C167O501C172O479C178O563C181O563C185O563C187O611C218O584C220O1709C222O1724C227O1748,,
tick,0x19252adc4,178542,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57824627a,0x107f89188,0x107f88e30,0x107f921e8,0xbd578242e78,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,178667,0xbd578248c60,5, node:util/types:1:1,0x29e0963a1b60,~
script-source,170,node:util/types,'use strict';\n\nmodule.exports = require('internal/util/types');\n
code-source-info,0xbd578248c60,170,0,64,C0O0C4O64,,
code-creation,JS,9,178667,0xbd578248ce0,13, node:util/types:1:1,0x29e0963a1c28,~
code-source-info,0xbd578248ce0,170,0,64,C0O15C3O32C7O30C12O63,,
code-creation,JS,9,178750,0xbd578248fa0,662,lib/web/fetch/webidl.js node:internal/deps/undici/undici:3600:28,0x38a74a567cb0,~
code-source-info,0xbd578248fa
code-creation,Eval,9,178875,0xbd5782493d0,5, node:worker_threads:1:1,0x29e0963a3d00,~
script-source,171,node:worker_threads,'use strict';\n\nconst {\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUncloneable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  postMessageToThread\x2C\n} = require('internal/worker/messaging');\n\nconst {\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUncloneable\x2C\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  postMessageToThread\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n};\n
code-source-info,0xbd5782493d0,171,0,882,C0O0C4O882,,
code-creation,JS,9,178917,0xbd5782494f0,230, node:worker_threads:1:1,0x29e0963a3dc8,~
code-source-info,0xbd5782494f0,171,0,882,C0O140C4O140C10O25C15O41C20O54C25O72C30O94C35O116C40O128C45O307C49O307C55O179C60O194C65O212C70O233C75O261C80O285C85O374C89O374C95O349C100O477C104O477C110O423C115O447C120O506C128O527C134O543C140O558C146O576C152O597C158O621C164O649C170O677C176O701C182O719C188O742C194O754C200O767C206O817C212O837C218O859C224O521C229O881,,
code-creation,Eval,9,179208,0xbd5782496a8,5, node:internal/worker:1:1,0x29e0963a5a70,~
script-source,172,node:internal/worker,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  AtomicsAdd\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  JSONStringify\x2C\n  MathMax\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst {\n  internalEventLoopUtilization\x2C\n} = require('internal/perf/event_loop_utilization');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  receiveMessageOnPort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n} = workerIo;\nconst { createMainThreadPort\x2C destroyMainThreadPort } = require('internal/worker/messaging');\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURL\x2C pathToFileURL } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\nconst { validateArray\x2C validateString } = require('internal/validators');\nconst {\n  throwIfBuildingSnapshot\x2C\n} = require('internal/v8/startup_snapshot');\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\x2C\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsInternal = Symbol('kIsInternal');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst workerThreadsChannel = dc.channel('worker_threads');\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\n// SharedArrayBuffers can be disabled with --enable-sharedarraybuffer-per-context.\nif (isMainThread && SharedArrayBuffer !== undefined) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    AtomicsAdd(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = kEmptyObject) {\n    throwIfBuildingSnapshot('Creating workers');\n    super();\n    const isInternal = arguments[2] === kIsInternal;\n    debug(\n      `[${threadId}] create new worker`\x2C\n      filename\x2C\n      options\x2C\n      `isInternal: ${isInternal}`\x2C\n    );\n    if (options.execArgv)\n      validateArray(options.execArgv\x2C 'options.execArgv');\n\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (isInternal) {\n      doEval = 'internal';\n      url = `node:${filename}`;\n    } else if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\x2C\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURL(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'module';\n      filename = `import ${JSONStringify(`${filename}`)}`;\n    } else {\n      doEval = false;\n      if (isURL(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\x2C\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = { __proto__: null };\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    let name = '';\n    if (options.name) {\n      validateString(options.name\x2C 'options.name');\n      name = StringPrototypeTrim(options.name);\n    }\n\n    debug('instantiating Worker.'\x2C `url: ${url}`\x2C `doEval: ${doEval}`);\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\n                                   isInternal\x2C\n                                   name);\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const mainThreadPortToWorker = createMainThreadPort(this.threadId);\n    const {\n      port1: publicPortToParent\x2C\n      port2: publicPortToWorker\x2C\n    } = new MessageChannel();\n    const transferList = [mainThreadPortToWorker\x2C publicPortToWorker];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = publicPortToParent;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      isInternal\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      hasStdin: !!options.stdin\x2C\n      publicPort: publicPortToWorker\x2C\n      mainThreadPort: mainThreadPortToWorker\x2C\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n    if (workerThreadsChannel.hasSubscribers) {\n      workerThreadsChannel.publish({\n        worker: this\x2C\n      });\n    }\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    destroyMainThreadPort(this.threadId);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\n          readable.push(chunk\x2C encoding);\n        });\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot(options) {\n    const {\n      HeapSnapshotStream\x2C\n      getHeapSnapshotOptions\x2C\n    } = require('internal/heap_utils');\n    const optionsArray = getHeapSnapshotOptions(options);\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n}\n\n/**\n * A worker which has an internal module for entry point (e.g. internal/module/esm/worker).\n * Internal workers bypass the permission model.\n */\nclass InternalWorker extends Worker {\n  constructor(filename\x2C options) {\n    super(filename\x2C options\x2C kIsInternal);\n  }\n\n  receiveMessageSync() {\n    return receiveMessageOnPort(this[kPublicPort]);\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  return internalEventLoopUtilization(\n    this[kLoopStartTime]\x2C\n    this[kHandle].loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  kIsOnline\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  InternalWorker\x2C\n  Worker\x2C\n};\n
code-source-info,0xbd5782496a8,172,0,16398,C0O0C4O16398,,
code-creation,JS,9,179792,0xbd578249b30,1353, node:internal/worker:1:1,0x29e0963a6608,~
code-source-info,0xbd578249b
tick,0x1027123d0,179875,0,0x0,3,0x107f890bc,0x107f88e30,0xbd5782494f4,0x107f89188,0x107f88e30,0x107f921e8,0xbd578248fc6,0x107f91dc4,0xbd578242ed0,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,180167,0xbd57824a298,5, node:internal/worker/io:1:1,0x29e0963a9170,~
script-source,173,node:internal/worker/io,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n} = require('internal/util');\n\nconst {\n  handle_onclose: handleOnCloseSymbol\x2C\n  oninit: onInitSymbol\x2C\n  no_message_symbol: noMessageSymbol\x2C\n} = internalBinding('symbols');\nconst {\n  privateSymbols: {\n    transfer_mode_private_symbol\x2C\n  }\x2C\n  constants: {\n    kCloneable\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  broadcastChannel\x2C\n  drainMessagePort\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\n  stopMessagePort\x2C\n  DOMException\x2C\n} = internalBinding('messaging');\nconst {\n  getEnvMessagePort\x2C\n} = internalBinding('worker');\n\nconst { Readable\x2C Writable } = require('stream');\nconst {\n  Event\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n} = require('internal/event_target');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_INVALID_THIS\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst kHandle = Symbol('kHandle');\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\nconst kName = Symbol('kName');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnMessageError = Symbol('kOnMessageError');\nconst kPort = Symbol('kPort');\nconst kWaitingStreams = Symbol('kWaitingStreams');\nconst kWritableCallbacks = Symbol('kWritableCallbacks');\nconst kStartedReading = Symbol('kStartedReading');\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\nconst kCurrentlyReceivingPorts =\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\nconst kType = Symbol('kType');\n\nconst messageTypes = {\n  UP_AND_RUNNING: 'upAndRunning'\x2C\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\n  ERROR_MESSAGE: 'errorMessage'\x2C\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\n  LOAD_SCRIPT: 'loadScript'\x2C\n};\n\n// createFastMessageEvent skips webidl argument validation when the arguments\n// passed are known to be valid.\nlet fastCreateMessageEvent;\nfunction lazyMessageEvent(type\x2C init) {\n  fastCreateMessageEvent ??= require('internal/deps/undici/undici').createFastMessageEvent;\n  return fastCreateMessageEvent(type\x2C init);\n}\n\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\n// not provide methods that are not present in the Browser and not documented\n// on our side (e.g. stopMessagePort).\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\nfor (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n}\n// Save a copy of the original set of methods as a shallow clone.\nconst MessagePortPrototype = ObjectCreate(\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\n  messagePortPrototypePropertyDescriptors);\n// Set up the new inheritance chain.\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\n// Copy methods that are inherited from HandleWrap\x2C because\n// changing the prototype of MessagePort.prototype implicitly removed them.\nMessagePort.prototype.ref = MessagePortPrototype.ref;\nMessagePort.prototype.unref = MessagePortPrototype.unref;\nMessagePort.prototype.hasRef = function() {\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n};\n\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\nObjectDefineProperty(\n  MessagePort.prototype\x2C\n  kCreateEvent\x2C\n  {\n    __proto__: null\x2C\n    value: function(data\x2C type) {\n      if (type !== 'message' && type !== 'messageerror') {\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\n      }\n      const ports = this[kCurrentlyReceivingPorts];\n      this[kCurrentlyReceivingPorts] = undefined;\n      return lazyMessageEvent(type\x2C { data\x2C ports });\n    }\x2C\n    configurable: false\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n  });\n\n// This is called from inside the `MessagePort` constructor.\nfunction oninit() {\n  initNodeEventTarget(this);\n  setupPortReferencing(this\x2C this\x2C 'message');\n  this[kCurrentlyReceivingPorts] = undefined;\n}\n\ndefineEventHandler(MessagePort.prototype\x2C 'message');\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\n\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  value: oninit\x2C\n});\n\nclass MessagePortCloseEvent extends Event {\n  constructor() {\n    super('close');\n  }\n}\n\n// This is called after the underlying `uv_async_t` has been closed.\nfunction onclose() {\n  this.dispatchEvent(new MessagePortCloseEvent());\n}\n\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: onclose\x2C\n});\n\nMessagePort.prototype.close = function(cb) {\n  if (typeof cb === 'function')\n    this.once('close'\x2C cb);\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\n};\n\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: function inspect() {  // eslint-disable-line func-name-matching\n    let ref;\n    try {\n      // This may throw when `this` does not refer to a native object\x2C\n      // e.g. when accessing the prototype directly.\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n    } catch { return this; }\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\n                        ref === undefined ? {\n                          active: false\x2C\n                        } : {\n                          active: true\x2C\n                          refed: ref\x2C\n                        }\x2C\n                        this);\n  }\x2C\n});\n\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\n  // Keep track of whether there are any workerMessage listeners:\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\n  // If there are none or all are removed\x2C unref() the channel so the worker\n  // can shutdown gracefully.\n  port.unref();\n  eventEmitter.on('newListener'\x2C function(name) {\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\n  });\n  eventEmitter.on('removeListener'\x2C function(name) {\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\n  });\n  const origNewListener = eventEmitter[kNewListener];\n  setOwnProperty(eventEmitter\x2C kNewListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) newListener(size - 1);\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\n  });\n  const origRemoveListener = eventEmitter[kRemoveListener];\n  setOwnProperty(eventEmitter\x2C kRemoveListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) removeListener(size);\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\n  });\n\n  function newListener(size) {\n    if (size === 0) {\n      port.ref();\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\n    }\n  }\n\n  function removeListener(size) {\n    if (size === 0) {\n      stopMessagePort(port);\n      port.unref();\n    }\n  }\n}\n\n\nclass ReadableWorkerStdio extends Readable {\n  constructor(port\x2C name) {\n    super();\n    this[kPort] = port;\n    this[kName] = name;\n    this[kIncrementsPortRef] = true;\n    this[kStartedReading] = false;\n    this.on('end'\x2C () => {\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\n        if (--this[kPort][kWaitingStreams] === 0)\n          this[kPort].unref();\n      }\n    });\n  }\n\n  _read() {\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\n      this[kStartedReading] = true;\n      if (this[kPort][kWaitingStreams]++ === 0)\n        this[kPort].ref();\n    }\n\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\n      stream: this[kName]\x2C\n    });\n  }\n}\n\nclass WritableWorkerStdio extends Writable {\n  constructor(port\x2C name) {\n    super({ decodeStrings: false });\n    this[kPort] = port;\n    this[kName] = name;\n    this[kWritableCallbacks] = [];\n  }\n\n  _writev(chunks\x2C cb) {\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: ArrayPrototypeMap(chunks\x2C\n                                ({ chunk\x2C encoding }) => ({ chunk\x2C encoding }))\x2C\n    });\n    ArrayPrototypePush(this[kWritableCallbacks]\x2C cb);\n    if (this[kPort][kWaitingStreams]++ === 0)\n      this[kPort].ref();\n  }\n\n  _final(cb) {\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\n    });\n    cb();\n  }\n\n  [kStdioWantsMoreDataCallback]() {\n    const cbs = this[kWritableCallbacks];\n    this[kWritableCallbacks] = [];\n    ArrayPrototypeForEach(cbs\x2C (cb) => cb());\n    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)\n      this[kPort].unref();\n  }\n}\n\nfunction createWorkerStdio() {\n  const port = getEnvMessagePort();\n  port[kWaitingStreams] = 0;\n  return {\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\n  };\n}\n\nfunction receiveMessageOnPort(port) {\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\n  if (message === noMessageSymbol) return undefined;\n  return { message };\n}\n\nfunction onMessageEvent(type\x2C data) {\n  this.dispatchEvent(lazyMessageEvent(type\x2C { data }));\n}\n\nfunction isBroadcastChannel(value) {\n  return value?.[kType] === 'BroadcastChannel';\n}\n\nclass BroadcastChannel extends EventTarget {\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('name');\n    super();\n    this[kType] = 'BroadcastChannel';\n    this[kName] = `${name}`;\n    this[kHandle] = broadcastChannel(this[kName]);\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\n    this[kOnMessageError] =\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\n    this[kHandle].on('message'\x2C this[kOnMessage]);\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\n  }\n\n  [inspect.custom](depth\x2C options) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (depth < 0)\n      return 'BroadcastChannel';\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `BroadcastChannel ${inspect({\n      name: this[kName]\x2C\n      active: this[kHandle] !== undefined\x2C\n    }\x2C opts)}`;\n  }\n\n  /**\n   * @type {string}\n   */\n  get name() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    return this[kName];\n  }\n\n  /**\n   * @returns {void}\n   */\n  close() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle] === undefined)\n      return;\n    this[kHandle].off('message'\x2C this[kOnMessage]);\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\n    this[kOnMessage] = undefined;\n    this[kOnMessageError] = undefined;\n    this[kHandle].close();\n    this[kHandle] = undefined;\n  }\n\n  /**\n   *\n   * @param {any} message\n   * @returns {void}\n   */\n  postMessage(message) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('message');\n    if (this[kHandle] === undefined)\n      throw new DOMException('BroadcastChannel is closed.'\x2C 'InvalidStateError');\n    if (this[kHandle].postMessage(message) === undefined)\n      throw new DOMException('Message could not be posted.');\n  }\n\n  // The ref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  ref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].ref();\n    return this;\n  }\n\n  // The unref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  unref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].unref();\n    return this;\n  }\n}\n\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  postMessage: kEnumerableProperty\x2C\n});\n\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\n\nfunction markAsUncloneable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null) {\n    return;\n  }\n  obj[transfer_mode_private_symbol] &= ~kCloneable;\n}\n\nmodule.exports = {\n  drainMessagePort\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  markAsUncloneable\x2C\n  moveMessagePortToContext\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  receiveMessageOnPort\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n  createWorkerStdio\x2C\n  BroadcastChannel\x2C\n};\n
code-source-info,0xbd57824a298,173,0,13887,C0O0C4O13887,,
code-creation,JS,9,180708,0xbd57824a708,1421, node:internal/worker/io:1:1,0x29e0963a9518,~
code-source-info,0xbd57824a
tick,0x1012a4c24,181083,0,0x0,5,0x107f890bc,0x107f88e30,0xbd578249d92,0x107f89188,0x107f88e30,0xbd5782494f4,0x107f89188,0x107f88e30,0x107f921e8,0xbd578248fc6,0x107f91dc4,0xbd578242ed0,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,181167,0xbd57824af08,5, node:internal/worker/messaging:1:1,0x29e0963acc60,~
script-source,174,node:internal/worker/messaging,'use strict';\n\nconst {\n  AtomicsNotify\x2C\n  AtomicsStore\x2C\n  AtomicsWaitAsync\x2C\n  Int32Array\x2C\n  SafeMap\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  SharedArrayBuffer\x2C\n} = globalThis;\n\nconst {\n  isMainThread\x2C\n  threadId: currentThreadId\x2C\n} = internalBinding('worker');\n\nconst {\n  codes: {\n    ERR_WORKER_MESSAGING_ERRORED\x2C\n    ERR_WORKER_MESSAGING_FAILED\x2C\n    ERR_WORKER_MESSAGING_SAME_THREAD\x2C\n    ERR_WORKER_MESSAGING_TIMEOUT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst { MessageChannel } = require('internal/worker/io');\n\nconst { validateNumber } = require('internal/validators');\n\nconst messageTypes = {\n  REGISTER_MAIN_THREAD_PORT: 'registerMainThreadPort'\x2C\n  UNREGISTER_MAIN_THREAD_PORT: 'unregisterMainThreadPort'\x2C\n  SEND_MESSAGE_TO_WORKER: 'sendMessageToWorker'\x2C\n  RECEIVE_MESSAGE_FROM_WORKER: 'receiveMessageFromWorker'\x2C\n};\n\n// This is only populated by main thread and always empty in other threads\nconst threadsPorts = new SafeMap();\n\n// This is only populated in child threads and always undefined in main thread\nlet mainThreadPort;\n\n// SharedArrayBuffer must always be Int32\x2C so it's * 4.\n// We need one for the operation status (performing / performed) and one for the result (success / failure).\nconst WORKER_MESSAGING_SHARED_DATA = 2 * 4;\nconst WORKER_MESSAGING_STATUS_INDEX = 0;\nconst WORKER_MESSAGING_RESULT_INDEX = 1;\n\n// Response codes\nconst WORKER_MESSAGING_RESULT_DELIVERED = 0;\nconst WORKER_MESSAGING_RESULT_NO_LISTENERS = 1;\nconst WORKER_MESSAGING_RESULT_LISTENER_ERROR = 2;\n\n// This event handler is always executed on the main thread only\nfunction handleMessageFromThread(message) {\n  switch (message.type) {\n    case messageTypes.REGISTER_MAIN_THREAD_PORT:\n      {\n        const { threadId\x2C port } = message;\n\n        // Register the port\n        threadsPorts.set(threadId\x2C port);\n\n        // Handle messages on this port\n        // When a new thread wants to register a children\n        // this take care of doing that.\n        // This way any thread can be linked to the main one.\n        port.on('message'\x2C handleMessageFromThread);\n\n        // Never block the thread on this port\n        port.unref();\n      }\n\n      break;\n    case messageTypes.UNREGISTER_MAIN_THREAD_PORT:\n      threadsPorts.get(message.threadId).close();\n      threadsPorts.delete(message.threadId);\n      break;\n    case messageTypes.SEND_MESSAGE_TO_WORKER:\n      {\n        // Send the message to the target thread\n        const { source\x2C destination\x2C value\x2C transferList\x2C memory } = message;\n        sendMessageToWorker(source\x2C destination\x2C value\x2C transferList\x2C memory);\n      }\n      break;\n  }\n}\n\nfunction handleMessageFromMainThread(message) {\n  switch (message.type) {\n    case messageTypes.RECEIVE_MESSAGE_FROM_WORKER:\n      receiveMessageFromWorker(message.source\x2C message.value\x2C message.memory);\n      break;\n  }\n}\n\nfunction sendMessageToWorker(source\x2C destination\x2C value\x2C transferList\x2C memory) {\n  // We are on the main thread\x2C we can directly process the message\n  if (destination === 0) {\n    receiveMessageFromWorker(source\x2C value\x2C memory);\n    return;\n  }\n\n  // Search the port to the target thread\n  const port = threadsPorts.get(destination);\n\n  if (!port) {\n    const status = new Int32Array(memory);\n    AtomicsStore(status\x2C WORKER_MESSAGING_RESULT_INDEX\x2C WORKER_MESSAGING_RESULT_NO_LISTENERS);\n    AtomicsStore(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n    AtomicsNotify(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n    return;\n  }\n\n  port.postMessage(\n    {\n      type: messageTypes.RECEIVE_MESSAGE_FROM_WORKER\x2C\n      source\x2C\n      destination\x2C\n      value\x2C\n      memory\x2C\n    }\x2C\n    transferList\x2C\n  );\n}\n\nfunction receiveMessageFromWorker(source\x2C value\x2C memory) {\n  let response = WORKER_MESSAGING_RESULT_NO_LISTENERS;\n\n  try {\n    if (process.emit('workerMessage'\x2C value\x2C source)) {\n      response = WORKER_MESSAGING_RESULT_DELIVERED;\n    }\n  } catch {\n    response = WORKER_MESSAGING_RESULT_LISTENER_ERROR;\n  }\n\n  // Populate the result\n  const status = new Int32Array(memory);\n  AtomicsStore(status\x2C WORKER_MESSAGING_RESULT_INDEX\x2C response);\n  AtomicsStore(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n  AtomicsNotify(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n}\n\nfunction createMainThreadPort(threadId) {\n  // Create a channel that links the new thread to the main thread\n  const {\n    port1: mainThreadPortToMain\x2C\n    port2: mainThreadPortToThread\x2C\n  } = new MessageChannel();\n\n  const registrationMessage = {\n    type: messageTypes.REGISTER_MAIN_THREAD_PORT\x2C\n    threadId\x2C\n    port: mainThreadPortToMain\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(registrationMessage);\n  } else {\n    mainThreadPort.postMessage(registrationMessage\x2C [mainThreadPortToMain]);\n  }\n\n  return mainThreadPortToThread;\n}\n\nfunction destroyMainThreadPort(threadId) {\n  const unregistrationMessage = {\n    type: messageTypes.UNREGISTER_MAIN_THREAD_PORT\x2C\n    threadId\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(unregistrationMessage);\n  } else {\n    mainThreadPort.postMessage(unregistrationMessage);\n  }\n}\n\nfunction setupMainThreadPort(port) {\n  mainThreadPort = port;\n  mainThreadPort.on('message'\x2C handleMessageFromMainThread);\n\n  // Never block the process on this port\n  mainThreadPort.unref();\n}\n\nasync function postMessageToThread(threadId\x2C value\x2C transferList\x2C timeout) {\n  if (typeof transferList === 'number' && typeof timeout === 'undefined') {\n    timeout = transferList;\n    transferList = [];\n  }\n\n  if (typeof timeout !== 'undefined') {\n    validateNumber(timeout\x2C 'timeout'\x2C 0);\n  }\n\n  if (threadId === currentThreadId) {\n    throw new ERR_WORKER_MESSAGING_SAME_THREAD();\n  }\n\n  const memory = new SharedArrayBuffer(WORKER_MESSAGING_SHARED_DATA);\n  const status = new Int32Array(memory);\n  const promise = AtomicsWaitAsync(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 0\x2C timeout).value;\n\n  const message = {\n    type: messageTypes.SEND_MESSAGE_TO_WORKER\x2C\n    source: currentThreadId\x2C\n    destination: threadId\x2C\n    value\x2C\n    memory\x2C\n    transferList\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(message);\n  } else {\n    mainThreadPort.postMessage(message\x2C transferList);\n  }\n\n  // Wait for the response\n  const response = await promise;\n\n  if (response === 'timed-out') {\n    throw new ERR_WORKER_MESSAGING_TIMEOUT();\n  } else if (status[WORKER_MESSAGING_RESULT_INDEX] === WORKER_MESSAGING_RESULT_NO_LISTENERS) {\n    throw new ERR_WORKER_MESSAGING_FAILED();\n  } else if (status[WORKER_MESSAGING_RESULT_INDEX] === WORKER_MESSAGING_RESULT_LISTENER_ERROR) {\n    throw new ERR_WORKER_MESSAGING_ERRORED();\n  }\n}\n\nmodule.exports = {\n  createMainThreadPort\x2C\n  destroyMainThreadPort\x2C\n  setupMainThreadPort\x2C\n  postMessageToThread\x2C\n};\n
code-source-info,0xbd57824af08,174,0,6666,C0O0C4O6666,,
code-creation,JS,9,181458,0xbd57824b098,321, node:internal/worker/messaging:1:1,0x29e0963aced8,~
code-source-info,0xbd57824b098,174,0,6666,C0O0C119O25C125O42C131O58C137O78C143O92C148O103C153O143C159O236C162O236C167O189C173O215C179O431C182O431C187O281C192O287C198O321C204O354C210O392C216O487C219O487C224O468C230O546C233O546C238O527C244O600C248O600C250O924C252O924C257O924C259O1023C260O1023C262O1242C264O1242C266O1287C267O1287C269O1328C271O1328C273O1392C274O1392C276O1440C278O1440C280O1490C282O1490C284O6549C291O6570C297O6594C303O6619C309O6642C315O6564C320O6665,,
code-creation,Eval,9,181625,0xbd57824b2c8,5, node:internal/error_serdes:1:1,0x29e0963adf98,~
script-source,175,node:internal/error_serdes,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  StringFromCharCode\x2C\n  StringPrototypeSubstring\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  URIError\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { inspect: { custom: customInspectSymbol } } = require('util');\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\nconst kInspectedSymbol = 3;\nconst kCustomInspectedObject = 4;\n\nconst kSymbolStringLength = 'Symbol('.length;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object) {\n  const all = { __proto__: null };\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      // TODO: create a null-prototype descriptor with needed properties only\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n        delete descriptor.get;\n        delete descriptor.set;\n      } catch {\n        // Continue regardless of error.\n      }\n    }\n    if (key === 'cause') {\n      descriptor.value = serializeError(descriptor.value);\n      all[key] = descriptor;\n    } else if ('value' in descriptor &&\n            typeof descriptor.value !== 'function' && typeof descriptor.value !== 'symbol') {\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc?.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        __proto__: null\x2C\n        value: desc.value\x2C enumerable: true\x2C\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc?.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error) {\n  serialize ??= require('v8').serialize;\n  if (typeof error === 'symbol') {\n    return Buffer.from(StringFromCharCode(kInspectedSymbol) + inspect(error)\x2C 'utf8');\n  }\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error)\x2C\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    if (error != null && customInspectSymbol in error) {\n      return Buffer.from(StringFromCharCode(kCustomInspectedObject) + inspect(error)\x2C 'utf8');\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {\n    // Continue regardless of error.\n  }\n  return Buffer.from(StringFromCharCode(kInspectedError) + inspect(error)\x2C 'utf8');\n}\n\nfunction fromBuffer(error) {\n  return Buffer.from(TypedArrayPrototypeGetBuffer(error)\x2C\n                     TypedArrayPrototypeGetByteOffset(error) + 1\x2C\n                     TypedArrayPrototypeGetByteLength(error) - 1);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  deserialize ??= require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError: {\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        __proto__: null\x2C\n        value: { __proto__: null\x2C value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\x2C\n      });\n      if ('cause' in properties && 'value' in properties.cause) {\n        properties.cause.value = deserializeError(properties.cause.value);\n      }\n      return ObjectCreate(ctor.prototype\x2C properties);\n    }\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError:\n      return fromBuffer(error).toString('utf8');\n    case kInspectedSymbol: {\n      const buf = fromBuffer(error);\n      return SymbolFor(StringPrototypeSubstring(buf.toString('utf8')\x2C kSymbolStringLength\x2C buf.length - 1));\n    }\n    case kCustomInspectedObject:\n      return {\n        __proto__: null\x2C\n        [customInspectSymbol]: () => fromBuffer(error).toString('utf8')\x2C\n      };\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0xbd57824b2c8,175,0,5643,C0O0C4O5643,,
code-creation,JS,9,181833,0xbd57824b4a0,448, node:internal/error_serdes:1:1,0x29e0963ae2b0,~
code-source-info,0xbd57824b4a0,175,0,5643,C0O0C138O25C144O50C149O59C154O72C160O97C166O113C172O129C178O153C184O187C190O216C196O240C201O254C207O281C212O295C217O313C222O324C228O346C234O374C240O387C246O408C251O423C256O436C262O468C268O504C274O540C279O587C285O587C290O576C296O659C302O659C307O623C312O633C318O702C319O702C321O731C323O731C325O758C327O758C329O786C331O786C333O820C335O820C337O852C340O862C344O852C346O886C353O890C359O897C365O908C371O920C377O930C383O943C389O959C395O886C397O1003C400O1015C407O1003C412O1003C414O2700C415O2700C417O2863C418O2863C420O4384C421O4384C423O5588C430O5607C436O5623C442O5603C447O5642,,
code-creation,JS,9,181958,0xbd57824b778,14,webidl.sequenceConverter node:internal/deps/undici/undici:3756:40,0x29e0963a28f0,~
code-source-info,0xbd57824b778,125,252257,253145,C0O252257C9O252277C13O253139,,
code-creation,JS,9,182000,0xbd57824b808,18,webidl.recordConverter node:internal/deps/undici/undici:3783:38,0x29e0963a2988,~
code-source-info,0xbd57824b808,125,253184,254316,C0O253184C13O253223C17O254310,,
code-creation,JS,9,182042,0xbd57824b8a0,19, node:internal/crypto/util:119:32,0x31c3bc697b8,~
code-source-info,0xbd57824b8a0,139,2649,2691,C0O2655C7O2678C10O2678C14O2655C18O2691,,
tick,0x101a00198,182333,0,0x0,0,0xbd57824b8aa,0x1a7c5b2167f9,0xbd578242f0d,0x107f91dc4,0xbd578242115,0x107f91dc4,0xbd57824176e,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,182667,0xbd57824b938,16, node:internal/deps/undici/undici:4036:51,0x2ffc889c9d88,~
code-source-info,0xbd57824b938,125,262757,262804,C0O262790C5O262790C10O262790C15O262804,,
code-creation,JS,9,182750,0xbd57824b9c0,16,EnvironmentSettingsObject node:internal/deps/undici/undici:4879:37,0x2ffc889ca130,~
code-source-info,0xbd57824b9c0,125,293257,293257,C0O293257C15O293257,,
code-creation,JS,9,182750,0xbd57824ba40,16,EnvironmentSettingsObjectBase node:internal/deps/undici/undici:4867:41,0x2ffc889c9f68,~
code-source-info,0xbd57824ba40,125,292951,292951,C0O292951C15O292951,,
code-creation,JS,9,182792,0xbd57824bac0,5,makePolicyContainer node:internal/deps/undici/undici:4221:33,0x2ffc889c91c0,~
code-source-info,0xbd57824bac0,125,270404,270496,C0O270415C4O270490,,
code-creation,JS,9,182875,0xbd57824bbe8,282,iteratorMixin node:internal/deps/undici/undici:4539:27,0x2ffc889c9800,~
code-source-info,0xbd57824bbe8,125,281901,283939,C0O281901C50O281994C69O281994C74O281994C76O282082C81O282098C91O282217C99O282217C114O282381C124O282500C132O282500C147O282671C157O282790C165O282790C180O282967C190O283086C198O283086C216O283684C220O283698C230O283722C235O283746C240O283767C244O283774C250O283785C255O283900C260O283908C275O283698C281O283933,,
code-creation,JS,9,182917,0xbd57824be88,266,createIterator node:internal/deps/undici/undici:4467:28,0x2ffc889c97a0,~
code-source-info,0xbd57824be88,125,279590,281828,C0O279590C142O279654C144O281278C147O281306C156O281335C160O281342C168O281378C178O281342C184O281417C188O281424C196O281462C206O281484C210O281491C216O281505C225O281613C246O281654C255O281424C261O281727C265O281822,,
code-creation,JS,9,182958,0xbd57824c038,15,FastIterableIterator node:internal/deps/undici/undici:4468:34,0x29e0963b45e8,~
code-source-info,0xbd57824c038,125,279681,281271,C0O279710C8O279710C14O281271,,
code-creation,JS,9,182958,0xbd57824c0a8,29,FastIterableIterator node:internal/deps/undici/undici:4468:34,0x29e0963b45a8,~
code-source-info,0xbd57824c0a8,125,279681,281271,C4O279793C13O279863C22O279908C28O281271,,
code-creation,JS,9,183042,0xbd57824c2f0,583,lib/web/fetch/body.js node:internal/deps/undici/undici:5437:26,0x38a74a568438,~
code-source-info,0xbd57824c2f
code-creation,JS,9,183125,0xbd57824c7d8,383,lib/web/fetch/formdata.js node:internal/deps/undici/undici:5025:30,0x38a74a5682a8,~
code-source-info,0xbd57824c7d
code-creation,JS,9,183125,0xbd57824ca48,15,_FormData node:internal/deps/undici/undici:5035:36,0x29e0963b6308,~
code-source-info,0xbd57824ca48,125,297810,302149,C0O297835C8O297835C14O302149,,
code-creation,JS,9,183167,0xbd57824cb30,88,lib/web/fetch/symbols.js node:internal/deps/undici/undici:4944:29,0x38a74a568170,~
code-source-info,0xbd57824cb30,125,294945,295185,C0O294989C5O295021C12O295021C20O295052C27O295052C35O295086C42O295086C50O295118C57O295118C65O295154C72O295154C82O295005C87O295184,,
code-creation,JS,9,183208,0xbd57824ccf0,229,lib/web/fetch/file.js node:internal/deps/undici/undici:4958:26,0x38a74a5681c8,~
code-source-info,0xbd57824ccf0,125,295273,297255,C0O295273C10O295345C18O295345C23O295329C28O295336C34O295390C39O295390C43O295379C49O295431C54O295431C58O295420C68O295468C122O296835C127O296835C166O296894C169O296901C177O296926C182O296926C187O296917C191O297170C199O297170C204O297208C211O297228C217O297238C223O297224C228O297254,,
code-creation,JS,9,183208,0xbd57824ce80,15,_FileLike node:internal/deps/undici/undici:4963:36,0x29e0963b72e8,~
code-source-info,0xbd57824ce80,125,295484,296888,C0O295509C8O295509C14O296888,,
code-creation,Eval,9,183292,0xbd57824cf08,5, node:internal/file:1:1,0x29e0963b7d38,~
script-source,176,node:internal/file,'use strict';\n\nconst {\n  DateNow\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperties\x2C\n  StringPrototypeToWellFormed\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  Blob\x2C\n} = require('internal/blob');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  inspect\x2C\n} = require('internal/util/inspect');\n\nclass File extends Blob {\n  /** @type {string} */\n  #name;\n\n  /** @type {number} */\n  #lastModified;\n\n  constructor(fileBits\x2C fileName\x2C options = kEmptyObject) {\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('fileBits'\x2C 'fileName');\n    }\n\n    super(fileBits\x2C options);\n\n    let { lastModified } = options ?? kEmptyObject;\n\n    if (lastModified !== undefined) {\n      // Using Number(...) will not throw an error for bigints.\n      lastModified = +lastModified;\n\n      if (NumberIsNaN(lastModified)) {\n        lastModified = 0;\n      }\n    } else {\n      lastModified = DateNow();\n    }\n\n    this.#name = StringPrototypeToWellFormed(`${fileName}`);\n    this.#lastModified = lastModified;\n  }\n\n  get name() {\n    return this.#name;\n  }\n\n  get lastModified() {\n    return this.#lastModified;\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) {\n      return this;\n    }\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `File ${inspect({\n      size: this.size\x2C\n      type: this.type\x2C\n      name: this.#name\x2C\n      lastModified: this.#lastModified\x2C\n    }\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(File.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  lastModified: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'File'\x2C\n  }\x2C\n});\n\nmodule.exports = {\n  File\x2C\n};\n
code-source-info,0xbd57824cf08,176,0,1838,C0O0C4O1838,,
code-creation,JS,9,183333,0xbd57824d090,261, node:internal/file:1:1,0x29e0963b7f08,~
code-source-info,0xbd57824d090,176,0,1838,C0O0C23O25C29O36C35O51C40O77C46O108C51O165C54O165C59O155C64O276C67O276C72O223C77O235C82O258C88O353C91O353C96O320C101O326C107O405C110O405C115O392C151O459C168O1257C202O1630C214O1651C220O1688C226O1712C228O1732C237O1602C242O1808C249O1829C255O1823C260O1837,,
code-creation,JS,9,183375,0xbd57824d238,20,File node:internal/file:31:25,0x29e0963b8108,~
code-source-info,0xbd57824d238,176,464,1600,C4O492C13O526C19O1600,,
code-creation,JS,9,183417,0xbd57824d2d0,14,webidl.interfaceConverter node:internal/deps/undici/undici:3813:41,0x29e0963a2a20,~
code-source-info,0xbd57824d2d0,125,254358,254703,C0O254358C9O254370C13O254697,,
code-creation,JS,9,183500,0xbd57824d470,409,lib/web/fetch/formdata-parser.js node:internal/deps/undici/undici:5176:37,0x38a74a568378,~
code-source-info,0xbd57824d
tick,0x101197fac,183583,0,0x0,0,0x1a7c5b22ded5,0x1a7c5b22d29c,0xbd57824d55c,0x107f91dc4,0xbd57824c405,0x107f91dc4,0xbd57824179b,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,10,183667,0x107f96220,744,fromString node:buffer:479:20,0x22b216cee7d0,^
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayBufferIsView\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeSlice\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  copy: _copy\x2C\n  fill: bindingFill\x2C\n  isAscii: bindingIsAscii\x2C\n  isUtf8: bindingIsUtf8\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  atob: _atob\x2C\n  btoa: _btoa\x2C\n} = internalBinding('buffer');\nconst {\n  constants: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\x2C\n  }\x2C\n  getOwnNonIndexProperties\x2C\n  isInsideNodeModules\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\x2C\n  defineLazyProperties\x2C\n  encodingsMap\x2C\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isTypedArray\x2C\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\x2C\n} = require('internal/util/inspect');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateString\x2C\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\x2C\n} = require('internal/buffer');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool\x2C allocBuffer;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocBuffer = createUnsafeBuffer(poolSize);\n  allocPool = allocBuffer.buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules(100\x2C true))) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    // - We found node_modules in up to the topmost 100 frames\x2C or\n    //   there are more than 100 frames and we don't want to search anymore.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction copyImpl(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!ArrayBufferIsView(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!ArrayBufferIsView(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = NumberIsInteger(targetStart) ? targetStart : toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = NumberIsInteger(sourceStart) ? sourceStart : toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0 || sourceStart > source.byteLength)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.byteLength}`\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.byteLength;\n  } else {\n    sourceEnd = NumberIsInteger(sourceEnd) ? sourceEnd : toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.byteLength || sourceStart >= sourceEnd)\n    return 0;\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.byteLength - targetStart)\n    sourceEnd = sourceStart + target.byteLength - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.byteLength - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (nb <= 0)\n    return 0;\n\n  _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C nb);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\x2C\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\x2C\n  );\n};\n\n/**\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\n * rather than the contents of the view.\n * @param {TypedArray} view\n * @param {number} [offset]\n * @param {number} [length]\n * @returns {Buffer}\n */\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\n  if (!isTypedArray(view)) {\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\n  }\n\n  const viewLength = TypedArrayPrototypeGetLength(view);\n  if (viewLength === 0) {\n    return Buffer.alloc(0);\n  }\n\n  if (offset !== undefined || length !== undefined) {\n    if (offset !== undefined) {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n      if (offset >= viewLength) return Buffer.alloc(0);\n    } else {\n      offset = 0;\n    }\n    let end;\n    if (length !== undefined) {\n      validateInteger(length\x2C 'length'\x2C 0);\n      end = offset + length;\n    } else {\n      end = viewLength;\n    }\n\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\n  }\n\n  return fromArrayLike(new Uint8Array(\n    TypedArrayPrototypeGetBuffer(view)\x2C\n    TypedArrayPrototypeGetByteOffset(view)\x2C\n    TypedArrayPrototypeGetByteLength(view)));\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const maxLength = Buffer.poolSize >>> 1;\n\n  let length = string.length; // Min length\n\n  if (length >= maxLength)\n    return createFromString(string\x2C ops);\n\n  length *= 4; // Max length (4 bytes per character)\n\n  if (length >= maxLength)\n    length = ops.byteLength(string); // Actual length\n\n  if (length >= maxLength)\n    return createFromString(string\x2C ops\x2C length);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n\n  const actual = ops.write(allocBuffer\x2C string\x2C poolOffset\x2C length);\n  const b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction createFromString(string\x2C ops\x2C length = ops.byteLength(string)) {\n  const buf = Buffer.allocUnsafeSlow(length);\n  const actual = ops.write(buf\x2C string\x2C 0\x2C length);\n  return actual < length ? new FastBuffer(buf.buffer\x2C 0\x2C actual) : buf;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (!encoding || encoding === 'utf8' || typeof encoding !== 'string') {\n    ops = encodingOps.utf8;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n  }\n\n  return string.length === 0 ? new FastBuffer() : fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length !== undefined) {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\x2C\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\x2C\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\x2C\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\x2C\n  }\x2C\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\n    );\n  }\n\n  const len = string.length;\n  if (len === 0)\n    return 0;\n\n  if (!encoding || encoding === 'utf8') {\n    return byteLengthUtf8(string);\n  }\n\n  if (encoding === 'ascii') {\n    return len;\n  }\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined) {\n    // TODO (ronag): Makes more sense to throw here.\n    // throw new ERR_UNKNOWN_ENCODING(encoding);\n    return byteLengthUtf8(string);\n  }\n\n  return ops.byteLength(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\x2C\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\x2C\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return copyImpl(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start = MathTrunc(start) || 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end = MathTrunc(end) || 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n  const len = TypedArrayPrototypeGetByteLength(this);\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\n    return false;\n\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = { __proto__: null };\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\x2C\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding || encoding === 'utf8')\n    return this.utf8Write(string\x2C offset\x2C length);\n  if (encoding === 'ascii')\n    return this.asciiWrite(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\x2C\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\x2C\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  const result = _btoa(`${input}`);\n  if (result === -1) {\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  return result;\n}\n\nfunction atob(input) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n\n  const result = _atob(`${input}`);\n\n  switch (result) {\n    case -2: // Invalid character\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n    case -1: // Single character remained\n      throw lazyDOMException(\n        'The string to be decoded is not correctly encoded.'\x2C\n        'InvalidCharacterError');\n    case -3: // Possible overflow\n      // TODO(@anonrig): Throw correct error in here.\n      throw lazyDOMException('The input causes overflow.'\x2C 'InvalidCharacterError');\n    default:\n      return result;\n  }\n}\n\nfunction isUtf8(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsUtf8(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nfunction isAscii(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsAscii(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nmodule.exports = {\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  isUtf8\x2C\n  isAscii\x2C\n\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) {\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\n      INSPECT_MAX_BYTES = val;\n    }\x2C\n  }\x2C\n});\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/blob'\x2C\n  ['Blob'\x2C 'resolveObjectURL']\x2C\n);\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/file'\x2C\n  ['File']\x2C\n);\n
code-source-info,0x107f96220,24,13921,14262,,,
tick,0x1924a5f34,185000,0,0x0,0,0x1a7c5b22ded5,0x1a7c5b22d29c,0xbd57824d55c,0x107f91dc4,0xbd57824c405,0x107f91dc4,0xbd57824179b,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,10,185042,0x107f96540,104, node:internal/deps/undici/undici:2926:68,0x38a74a57b018,^
code-source-info,0x107f96540,125,97196,97211,,,
code-creation,JS,10,185333,0x107f965e0,408,FastBuffer node:internal/buffer:960:14,0x22b216cf7738,^
script-source,25,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWriteStatic\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1WriteStatic\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8WriteStatic\x2C\n  getZeroFillToggle\x2C\n} = internalBinding('buffer');\n\nconst {\n  privateSymbols: {\n    untransferable_object_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = function(string\x2C offset = 0\x2C length = this.byteLength) {\n    if (offset < 0 || offset > this.byteLength) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n    }\n    if (length < 0) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    }\n    return asciiWriteStatic(this\x2C string\x2C offset\x2C length);\n  };\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = function(string\x2C offset = 0\x2C length = this.byteLength) {\n    if (offset < 0 || offset > this.byteLength) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n    }\n    if (length < 0) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    }\n    return latin1WriteStatic(this\x2C string\x2C offset\x2C length);\n  };\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = function(string\x2C offset = 0\x2C length = this.byteLength) {\n    if (offset < 0 || offset > this.byteLength) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n    }\n    if (length < 0) {\n      throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    }\n    return utf8WriteStatic(this\x2C string\x2C offset\x2C length);\n  };\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  obj[untransferable_object_private_symbol] = true;\n}\n\n// This simply checks if the object is marked as untransferable and doesn't\n// check whether we are able to transfer it.\nfunction isMarkedAsUntransferable(obj) {\n  if (obj == null)\n    return false;\n  // Private symbols are not inherited.\n  return obj[untransferable_object_private_symbol] !== undefined;\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\x2C\n};\n
code-source-info,0x107f965e0,25,26394,26483,,,
tick,0x19241c694,186500,0,0x0,0,0x1a7c5b22ded5,0x1a7c5b22d29c,0xbd57824d55c,0x107f91dc4,0xbd57824c405,0x107f91dc4,0xbd57824179b,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,10,186542,0x107f967a0,312, node:internal/validators:459:42,0x22b216cd4810,^
code-source-info,0x107f967a0,12,13109,13225,,,
code-creation,JS,10,186542,0x107f96900,200,makeMethodProxy node:_tls_wrap:621:25,0x31c3bc75af8,^
code-source-info,0x107f96900,141,17652,17803,,,
code-creation,JS,10,186542,0x107f96a00,200,makeSocketMethodProxy node:_tls_wrap:1159:31,0x31c3bc75d30,^
code-source-info,0x107f96a00,141,33002,33170,,,
code-creation,JS,10,186542,0x107f96b00,184, node:_tls_wrap:1178:11,0x31c3bc76d90,^
code-source-info,0x107f96b00,141,33373,33451,,,
code-creation,JS,10,186583,0x107f96be0,232, node:zlib:783:10,0x2ffc889cf9c0,^
code-source-info,0x107f96be0,160,23744,23815,,,
code-creation,JS,10,186583,0x107f96d00,264,createConvenienceMethod node:zlib:766:33,0x2ffc889cf160,^
code-source-info,0x107f96d00,160,23313,23670,,,
code-creation,JS,10,186583,0x107f96e40,272,createProperty node:zlib:841:24,0x2ffc889cf2f0,^
code-source-info,0x107f96e40,160,25735,25898,,,
code-creation,JS,10,186625,0x107f96f80,1048,filterDuplicateStrings node:internal/util:287:32,0x22b216cd6b98,^
code-source-info,0x107f96f80,13,8246,8554,,,
code-creation,JS,10,186625,0x107f973c0,192, node:internal/deps/undici/undici:4036:51,0x2ffc889c9d88,^
code-source-info,0x107f973c0,125,262757,262804,,,
code-creation,JS,10,186667,0x107f974a0,1344,fromStringFast node:buffer:446:24,0x22b216cee638,^
code-source-info,0x107f974a0,24,13024,13653,,,
code-creation,JS,9,186750,0xbd57824ddb0,30,mixinBody node:internal/deps/undici/undici:5698:23,0x29e0963b59f8,~
code-source-info,0xbd57824ddb0,125,322245,322335,C0O322265C4O322272C9O322289C17O322300C22O322272C29O322334,,
code-creation,JS,9,186792,0xbd57824deb8,68,bodyMixinMethods node:internal/deps/undici/undici:5636:30,0x29e0963b5998,~
code-source-info,0xbd57824deb8,125,320080,322172,C0O320080C9O320115C14O320125C22O320501C30O320657C38O320748C46O320842C54O322002C65O322151C67O322166,,
tick,0x192562950,187375,0,0x0,5,0x107f890bc,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1011fcb28,188625,0,0x0,2,0x107f890bc,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,188917,0xbd57824df88,5, node:internal/webstreams/readablestream:1:1,0x38b0a839e6e8,~
script-source,177,node:internal/webstreams/readablestream,'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayBufferPrototypeGetDetached\x2C\n  ArrayBufferPrototypeSlice\x2C\n  ArrayBufferPrototypeTransfer\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  DataView\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsInteger\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  PromiseWithResolvers\x2C\n  SafePromiseAll\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetLength\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_STATE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  isArrayBufferView\x2C\n  isDataView\x2C\n} = require('internal/util/types');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\n\nconst {\n  validateAbortSignal\x2C\n  validateBuffer\x2C\n  validateObject\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n} = require('internal/validators');\n\nconst {\n  MessageChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  kDeserialize\x2C\n  kTransfer\x2C\n  kTransferList\x2C\n  markTransferMode\x2C\n  structuredClone\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  queueMicrotask\x2C\n} = require('internal/process/task_queues');\n\nconst {\n  kIsDisturbed\x2C\n  kIsErrored\x2C\n  kIsReadable\x2C\n  kIsClosedPromise\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst {\n  ArrayBufferViewGetBuffer\x2C\n  ArrayBufferViewGetByteLength\x2C\n  ArrayBufferViewGetByteOffset\x2C\n  AsyncIterator\x2C\n  cloneAsUint8Array\x2C\n  copyArrayBuffer\x2C\n  createPromiseCallback\x2C\n  customInspect\x2C\n  dequeueValue\x2C\n  enqueueValueWithSize\x2C\n  extractHighWaterMark\x2C\n  extractSizeAlgorithm\x2C\n  lazyTransfer\x2C\n  isBrandCheck\x2C\n  resetQueue\x2C\n  setPromiseHandled\x2C\n  nonOpCancel\x2C\n  nonOpPull\x2C\n  nonOpStart\x2C\n  getIterator\x2C\n  iteratorNext\x2C\n  kType\x2C\n  kState\x2C\n} = require('internal/webstreams/util');\n\nconst {\n  WritableStreamDefaultWriter\x2C\n\n  isWritableStream\x2C\n  isWritableStreamLocked\x2C\n  isWritableStreamDefaultController\x2C\n  isWritableStreamDefaultWriter\x2C\n\n  writableStreamAbort\x2C\n  writableStreamCloseQueuedOrInFlight\x2C\n  writableStreamDefaultWriterCloseWithErrorPropagation\x2C\n  writableStreamDefaultWriterRelease\x2C\n  writableStreamDefaultWriterWrite\x2C\n} = require('internal/webstreams/writablestream');\n\nconst { Buffer } = require('buffer');\n\nconst assert = require('internal/assert');\n\nconst kCancel = Symbol('kCancel');\nconst kClose = Symbol('kClose');\nconst kChunk = Symbol('kChunk');\nconst kError = Symbol('kError');\nconst kPull = Symbol('kPull');\nconst kRelease = Symbol('kRelease');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nlet releasedError;\nlet releasingError;\nlet addAbortListener;\n\nconst userModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\()(?!node:(.+):\\d+:\\d+\\)$).*/gm;\n\nfunction lazyReadableReleasedError() {\n  if (releasedError) {\n    return releasedError;\n  }\n\n  releasedError = new ERR_INVALID_STATE.TypeError('Reader released');\n  // Avoid V8 leak and remove userland stackstrace\n  releasedError.stack = SideEffectFreeRegExpPrototypeSymbolReplace(userModuleRegExp\x2C releasedError.stack\x2C '');\n  return releasedError;\n}\n\nfunction lazyReadableReleasingError() {\n  if (releasingError) {\n    return releasingError;\n  }\n  releasingError = new ERR_INVALID_STATE.TypeError('Releasing reader');\n  // Avoid V8 leak and remove userland stackstrace\n  releasingError.stack = SideEffectFreeRegExpPrototypeSymbolReplace(userModuleRegExp\x2C releasingError.stack\x2C '');\n  return releasingError;\n}\n\nconst getNonWritablePropertyDescriptor = (value) => {\n  return {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value\x2C\n  };\n};\n\n/**\n * @typedef {import('../abort_controller').AbortSignal} AbortSignal\n * @typedef {import('./queuingstrategies').QueuingStrategy} QueuingStrategy\n * @typedef {import('./queuingstrategies').QueuingStrategySize\n * } QueuingStrategySize\n * @typedef {import('./writablestream').WritableStream} WritableStream\n */\n\n/**\n * @typedef {ReadableStreamDefaultController | ReadableByteStreamController\n * } ReadableStreamController\n */\n\n/**\n * @typedef {ReadableStreamDefaultReader | ReadableStreamBYOBReader\n * } ReadableStreamReader\n */\n\n/**\n * @callback UnderlyingSourceStartCallback\n * @param {ReadableStreamController} controller\n * @returns { any | Promise<void> }\n */\n\n/**\n * @callback UnderlyingSourcePullCallback\n * @param {ReadableStreamController} controller\n * @returns { Promise<void> }\n */\n\n/**\n * @callback UnderlyingSourceCancelCallback\n * @param {any} reason\n * @returns { Promise<void> }\n */\n\n/**\n * @typedef {{\n *   readable: ReadableStream\x2C\n *   writable: WritableStream\x2C\n * }} ReadableWritablePair\n */\n\n/**\n * @typedef {{\n *   preventClose? : boolean\x2C\n *   preventAbort? : boolean\x2C\n *   preventCancel? : boolean\x2C\n *   signal? : AbortSignal\x2C\n * }} StreamPipeOptions\n */\n\n/**\n * @typedef {{\n *   start? : UnderlyingSourceStartCallback\x2C\n *   pull? : UnderlyingSourcePullCallback\x2C\n *   cancel? : UnderlyingSourceCancelCallback\x2C\n *   type? : "bytes"\x2C\n *   autoAllocateChunkSize? : number\n * }} UnderlyingSource\n */\n\nclass ReadableStream {\n  [kType] = 'ReadableStream';\n\n  /**\n   * @param {UnderlyingSource} [source]\n   * @param {QueuingStrategy} [strategy]\n   */\n  constructor(source = kEmptyObject\x2C strategy = kEmptyObject) {\n    markTransferMode(this\x2C false\x2C true);\n    validateObject(source\x2C 'source'\x2C kValidateObjectAllowObjects);\n    validateObject(strategy\x2C 'strategy'\x2C kValidateObjectAllowObjectsAndNull);\n    this[kState] = createReadableStreamState();\n\n    this[kIsClosedPromise] = PromiseWithResolvers();\n    this[kControllerErrorFunction] = () => {};\n\n    // The spec requires handling of the strategy first\n    // here. Specifically\x2C if getting the size and\n    // highWaterMark from the strategy fail\x2C that has\n    // to trigger a throw before getting the details\n    // from the source. So be sure to keep these in\n    // this order.\n    const size = strategy?.size;\n    const highWaterMark = strategy?.highWaterMark;\n    const type = source.type;\n\n    if (`${type}` === 'bytes') {\n      if (size !== undefined)\n        throw new ERR_INVALID_ARG_VALUE.RangeError('strategy.size'\x2C size);\n      setupReadableByteStreamControllerFromSource(\n        this\x2C\n        source\x2C\n        extractHighWaterMark(highWaterMark\x2C 0));\n    } else {\n      if (type !== undefined)\n        throw new ERR_INVALID_ARG_VALUE('source.type'\x2C type);\n      setupReadableStreamDefaultControllerFromSource(\n        this\x2C\n        source\x2C\n        extractHighWaterMark(highWaterMark\x2C 1)\x2C\n        extractSizeAlgorithm(size));\n    }\n  }\n\n  get [kIsDisturbed]() {\n    return this[kState].disturbed;\n  }\n\n  get [kIsErrored]() {\n    return this[kState].state === 'errored';\n  }\n\n  get [kIsReadable]() {\n    return this[kState].state === 'readable';\n  }\n\n  /**\n   * @readonly\n   * @type {boolean}\n   */\n  get locked() {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    return isReadableStreamLocked(this);\n  }\n\n  static from(iterable) {\n    return readableStreamFromIterable(iterable);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns { Promise<void> }\n   */\n  cancel(reason = undefined) {\n    if (!isReadableStream(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStream'));\n    if (isReadableStreamLocked(this)) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError('ReadableStream is locked'));\n    }\n    return readableStreamCancel(this\x2C reason);\n  }\n\n  /**\n   * @param {{\n   *   mode? : "byob"\n   * }} [options]\n   * @returns {ReadableStreamReader}\n   */\n  getReader(options = kEmptyObject) {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n    const mode = options?.mode;\n\n    if (mode === undefined)\n      // eslint-disable-next-line no-use-before-define\n      return new ReadableStreamDefaultReader(this);\n\n    if (`${mode}` !== 'byob')\n      throw new ERR_INVALID_ARG_VALUE('options.mode'\x2C mode);\n    // eslint-disable-next-line no-use-before-define\n    return new ReadableStreamBYOBReader(this);\n  }\n\n  /**\n   * @param {ReadableWritablePair} transform\n   * @param {StreamPipeOptions} [options]\n   * @returns {ReadableStream}\n   */\n  pipeThrough(transform\x2C options = kEmptyObject) {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    const readable = transform?.readable;\n    if (!isReadableStream(readable)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'transform.readable'\x2C\n        'ReadableStream'\x2C\n        readable);\n    }\n    const writable = transform?.writable;\n    if (!isWritableStream(writable)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'transform.writable'\x2C\n        'WritableStream'\x2C\n        writable);\n    }\n\n    // The web platform tests require that these be handled one at a\n    // time and in a specific order. options can be null or undefined.\n    validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n    const preventAbort = options?.preventAbort;\n    const preventCancel = options?.preventCancel;\n    const preventClose = options?.preventClose;\n    const signal = options?.signal;\n\n    if (signal !== undefined) {\n      validateAbortSignal(signal\x2C 'options.signal');\n    }\n\n    if (isReadableStreamLocked(this))\n      throw new ERR_INVALID_STATE.TypeError('The ReadableStream is locked');\n    if (isWritableStreamLocked(writable))\n      throw new ERR_INVALID_STATE.TypeError('The WritableStream is locked');\n\n    const promise = readableStreamPipeTo(\n      this\x2C\n      writable\x2C\n      !!preventClose\x2C\n      !!preventAbort\x2C\n      !!preventCancel\x2C\n      signal);\n    setPromiseHandled(promise);\n\n    return readable;\n  }\n\n  /**\n   * @param {WritableStream} destination\n   * @param {StreamPipeOptions} [options]\n   * @returns {Promise<void>}\n   */\n  pipeTo(destination\x2C options = kEmptyObject) {\n    try {\n      if (!isReadableStream(this))\n        throw new ERR_INVALID_THIS('ReadableStream');\n      if (!isWritableStream(destination)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'transform.writable'\x2C\n          'WritableStream'\x2C\n          destination);\n      }\n\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n      const preventAbort = options?.preventAbort;\n      const preventCancel = options?.preventCancel;\n      const preventClose = options?.preventClose;\n      const signal = options?.signal;\n\n      if (signal !== undefined) {\n        validateAbortSignal(signal\x2C 'options.signal');\n      }\n\n      if (isReadableStreamLocked(this))\n        throw new ERR_INVALID_STATE.TypeError('The ReadableStream is locked');\n      if (isWritableStreamLocked(destination))\n        throw new ERR_INVALID_STATE.TypeError('The WritableStream is locked');\n\n      return readableStreamPipeTo(\n        this\x2C\n        destination\x2C\n        !!preventClose\x2C\n        !!preventAbort\x2C\n        !!preventCancel\x2C\n        signal);\n    } catch (error) {\n      return PromiseReject(error);\n    }\n  }\n\n  /**\n   * @returns {ReadableStream[]}\n   */\n  tee() {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    return readableStreamTee(this\x2C false);\n  }\n\n  /**\n   * @param {{\n   *   preventCancel? : boolean\x2C\n   * }} [options]\n   * @returns {AsyncIterable}\n   */\n  values(options = kEmptyObject) {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n    const preventCancel = !!(options?.preventCancel);\n\n    // eslint-disable-next-line no-use-before-define\n    const reader = new ReadableStreamDefaultReader(this);\n\n    // No __proto__ here to avoid the performance hit.\n    const state = {\n      done: false\x2C\n      current: undefined\x2C\n    };\n    let started = false;\n\n    // The nextSteps function is not an async function in order\n    // to make it more efficient. Because nextSteps explicitly\n    // creates a Promise and returns it in the common case\x2C\n    // making it an async function just causes two additional\n    // unnecessary Promise allocations to occur\x2C which just add\n    // cost.\n    function nextSteps() {\n      if (state.done)\n        return PromiseResolve({ done: true\x2C value: undefined });\n\n      if (reader[kState].stream === undefined) {\n        return PromiseReject(\n          new ERR_INVALID_STATE.TypeError(\n            'The reader is not bound to a ReadableStream'));\n      }\n      const promise = PromiseWithResolvers();\n\n      // eslint-disable-next-line no-use-before-define\n      readableStreamDefaultReaderRead(reader\x2C new ReadableStreamAsyncIteratorReadRequest(reader\x2C state\x2C promise));\n      return promise.promise;\n    }\n\n    async function returnSteps(value) {\n      if (state.done)\n        return { done: true\x2C value }; // eslint-disable-line node-core/avoid-prototype-pollution\n      state.done = true;\n\n      if (reader[kState].stream === undefined) {\n        throw new ERR_INVALID_STATE.TypeError(\n          'The reader is not bound to a ReadableStream');\n      }\n      assert(!reader[kState].readRequests.length);\n      if (!preventCancel) {\n        const result = readableStreamReaderGenericCancel(reader\x2C value);\n        readableStreamReaderGenericRelease(reader);\n        await result;\n        return { done: true\x2C value }; // eslint-disable-line node-core/avoid-prototype-pollution\n      }\n\n      readableStreamReaderGenericRelease(reader);\n      return { done: true\x2C value }; // eslint-disable-line node-core/avoid-prototype-pollution\n    }\n\n    // TODO(@jasnell): Explore whether an async generator\n    // can be used here instead of a custom iterator object.\n    return ObjectSetPrototypeOf({\n      // Changing either of these functions (next or return)\n      // to async functions causes a failure in the streams\n      // Web Platform Tests that check for use of a modified\n      // Promise.prototype.then. Since the await keyword\n      // uses Promise.prototype.then\x2C it is open to prototype\n      // pollution\x2C which causes the test to fail. The other\n      // await uses here do not trigger that failure because\n      // the test that fails does not trigger those code paths.\n      next() {\n        // If this is the first read\x2C delay by one microtask\n        // to ensure that the controller has had an opportunity\n        // to properly start and perform the initial pull.\n        // TODO(@jasnell): The spec doesn't call this out so\n        // need to investigate if it's a bug in our impl or\n        // the spec.\n        if (!started) {\n          state.current = PromiseResolve();\n          started = true;\n        }\n        state.current = state.current !== undefined ?\n          PromisePrototypeThen(state.current\x2C nextSteps\x2C nextSteps) :\n          nextSteps();\n        return state.current;\n      }\x2C\n\n      return(error) {\n        started = true;\n        state.current = state.current !== undefined ?\n          PromisePrototypeThen(\n            state.current\x2C\n            () => returnSteps(error)\x2C\n            () => returnSteps(error)) :\n          returnSteps(error);\n        return state.current;\n      }\x2C\n\n      [SymbolAsyncIterator]() { return this; }\x2C\n    }\x2C AsyncIterator);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      locked: this.locked\x2C\n      state: this[kState].state\x2C\n      supportsBYOB:\n        // eslint-disable-next-line no-use-before-define\n        this[kState].controller instanceof ReadableByteStreamController\x2C\n    });\n  }\n\n  [kTransfer]() {\n    if (!isReadableStream(this))\n      throw new ERR_INVALID_THIS('ReadableStream');\n    if (this.locked) {\n      this[kState].transfer.port1?.close();\n      this[kState].transfer.port1 = undefined;\n      this[kState].transfer.port2 = undefined;\n      throw new DOMException(\n        'Cannot transfer a locked ReadableStream'\x2C\n        'DataCloneError');\n    }\n\n    const {\n      writable\x2C\n      promise\x2C\n    } = lazyTransfer().newCrossRealmWritableSink(\n      this\x2C\n      this[kState].transfer.port1);\n\n    this[kState].transfer.writable = writable;\n    this[kState].transfer.promise = promise;\n\n    return {\n      data: { port: this[kState].transfer.port2 }\x2C\n      deserializeInfo:\n        'internal/webstreams/readablestream:TransferredReadableStream'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    const { port1\x2C port2 } = new MessageChannel();\n    this[kState].transfer.port1 = port1;\n    this[kState].transfer.port2 = port2;\n    return [ port2 ];\n  }\n\n  [kDeserialize]({ port }) {\n    const transfer = lazyTransfer();\n    setupReadableStreamDefaultControllerFromSource(\n      this\x2C\n      // The MessagePort is set to be referenced when reading.\n      // After two MessagePorts are closed\x2C there is a problem with\n      // lingering promise not being properly resolved.\n      // https://github.com/nodejs/node/issues/51486\n      new transfer.CrossRealmTransformReadableSource(port\x2C true)\x2C\n      0\x2C () => 1);\n  }\n}\n\nObjectDefineProperties(ReadableStream.prototype\x2C {\n  [SymbolAsyncIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    value: ReadableStream.prototype.values\x2C\n  }\x2C\n  locked: kEnumerableProperty\x2C\n  cancel: kEnumerableProperty\x2C\n  getReader: kEnumerableProperty\x2C\n  pipeThrough: kEnumerableProperty\x2C\n  pipeTo: kEnumerableProperty\x2C\n  tee: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableStream.name)\x2C\n});\nObjectDefineProperties(ReadableStream\x2C {\n  from: kEnumerableProperty\x2C\n});\n\nfunction InternalTransferredReadableStream() {\n  ObjectSetPrototypeOf(this\x2C ReadableStream.prototype);\n  markTransferMode(this\x2C false\x2C true);\n  this[kType] = 'ReadableStream';\n  this[kState] = createReadableStreamState();\n\n  this[kIsClosedPromise] = PromiseWithResolvers();\n}\n\nObjectSetPrototypeOf(InternalTransferredReadableStream.prototype\x2C ReadableStream.prototype);\nObjectSetPrototypeOf(InternalTransferredReadableStream\x2C ReadableStream);\n\nfunction TransferredReadableStream() {\n  const stream = new InternalTransferredReadableStream();\n\n  stream.constructor = ReadableStream;\n\n  return stream;\n}\n\nTransferredReadableStream.prototype[kDeserialize] = () => {};\n\nclass ReadableStreamBYOBRequest {\n  [kType] = 'ReadableStreamBYOBRequest';\n\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  /**\n   * @readonly\n   * @type {ArrayBufferView}\n   */\n  get view() {\n    if (!isReadableStreamBYOBRequest(this))\n      throw new ERR_INVALID_THIS('ReadableStreamBYOBRequest');\n    return this[kState].view;\n  }\n\n  /**\n   * @param {number} bytesWritten\n   */\n  respond(bytesWritten) {\n    if (!isReadableStreamBYOBRequest(this))\n      throw new ERR_INVALID_THIS('ReadableStreamBYOBRequest');\n    const {\n      view\x2C\n      controller\x2C\n    } = this[kState];\n    if (controller === undefined) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'This BYOB request has been invalidated');\n    }\n\n    const viewByteLength = ArrayBufferViewGetByteLength(view);\n    const viewBuffer = ArrayBufferViewGetBuffer(view);\n    const viewBufferByteLength = ArrayBufferPrototypeGetByteLength(viewBuffer);\n\n    if (ArrayBufferPrototypeGetDetached(viewBuffer)) {\n      throw new ERR_INVALID_STATE.TypeError('Viewed ArrayBuffer is detached');\n    }\n\n    assert(viewByteLength > 0);\n    assert(viewBufferByteLength > 0);\n\n    readableByteStreamControllerRespond(controller\x2C bytesWritten);\n  }\n\n  /**\n   * @param {ArrayBufferView} view\n   */\n  respondWithNewView(view) {\n    if (!isReadableStreamBYOBRequest(this))\n      throw new ERR_INVALID_THIS('ReadableStreamBYOBRequest');\n    const {\n      controller\x2C\n    } = this[kState];\n\n    if (controller === undefined) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'This BYOB request has been invalidated');\n    }\n\n    validateBuffer(view\x2C 'view');\n\n    if (ArrayBufferPrototypeGetDetached(view.buffer)) {\n      throw new ERR_INVALID_STATE.TypeError('Viewed ArrayBuffer is detached');\n    }\n\n    readableByteStreamControllerRespondWithNewView(controller\x2C view);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      view: this.view\x2C\n      controller: this[kState].controller\x2C\n    });\n  }\n}\n\nObjectDefineProperties(ReadableStreamBYOBRequest.prototype\x2C {\n  view: kEnumerableProperty\x2C\n  respond: kEnumerableProperty\x2C\n  respondWithNewView: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableStreamBYOBRequest.name)\x2C\n});\n\nfunction createReadableStreamBYOBRequest(controller\x2C view) {\n  const stream = new ReadableStreamBYOBRequest(kSkipThrow);\n\n  stream[kState] = {\n    controller\x2C\n    view\x2C\n  };\n\n  return stream;\n}\n\nclass ReadableStreamAsyncIteratorReadRequest {\n  constructor(reader\x2C state\x2C promise) {\n    this.reader = reader;\n    this.state = state;\n    this.promise = promise;\n  }\n\n  [kChunk](chunk) {\n    this.state.current = undefined;\n    this.promise.resolve({ value: chunk\x2C done: false });\n  }\n\n  [kClose]() {\n    this.state.current = undefined;\n    this.state.done = true;\n    readableStreamReaderGenericRelease(this.reader);\n    this.promise.resolve({ done: true\x2C value: undefined });\n  }\n\n  [kError](error) {\n    this.state.current = undefined;\n    this.state.done = true;\n    readableStreamReaderGenericRelease(this.reader);\n    this.promise.reject(error);\n  }\n}\n\nclass DefaultReadRequest {\n  constructor() {\n    this[kState] = PromiseWithResolvers();\n  }\n\n  [kChunk](value) {\n    this[kState].resolve?.({ value\x2C done: false });\n  }\n\n  [kClose]() {\n    this[kState].resolve?.({ value: undefined\x2C done: true });\n  }\n\n  [kError](error) {\n    this[kState].reject?.(error);\n  }\n\n  get promise() { return this[kState].promise; }\n}\n\nclass ReadIntoRequest {\n  constructor() {\n    this[kState] = PromiseWithResolvers();\n  }\n\n  [kChunk](value) {\n    this[kState].resolve?.({ value\x2C done: false });\n  }\n\n  [kClose](value) {\n    this[kState].resolve?.({ value\x2C done: true });\n  }\n\n  [kError](error) {\n    this[kState].reject?.(error);\n  }\n\n  get promise() { return this[kState].promise; }\n}\n\nclass ReadableStreamDefaultReader {\n  [kType] = 'ReadableStreamDefaultReader';\n\n  /**\n   * @param {ReadableStream} stream\n   */\n  constructor(stream) {\n    if (!isReadableStream(stream))\n      throw new ERR_INVALID_ARG_TYPE('stream'\x2C 'ReadableStream'\x2C stream);\n    this[kState] = {\n      readRequests: []\x2C\n      stream: undefined\x2C\n      close: {\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n    };\n    setupReadableStreamDefaultReader(this\x2C stream);\n  }\n\n  /**\n   * @returns {Promise<{\n   *   value : any\x2C\n   *   done : boolean\n   * }>}\n   */\n  read() {\n    if (!isReadableStreamDefaultReader(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStreamDefaultReader'));\n    if (this[kState].stream === undefined) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError(\n          'The reader is not attached to a stream'));\n    }\n    const readRequest = new DefaultReadRequest();\n    readableStreamDefaultReaderRead(this\x2C readRequest);\n    return readRequest.promise;\n  }\n\n  releaseLock() {\n    if (!isReadableStreamDefaultReader(this))\n      throw new ERR_INVALID_THIS('ReadableStreamDefaultReader');\n    if (this[kState].stream === undefined)\n      return;\n    readableStreamDefaultReaderRelease(this);\n  }\n\n  /**\n   * @readonly\n   * @type {Promise<void>}\n   */\n  get closed() {\n    if (!isReadableStreamDefaultReader(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStreamDefaultReader'));\n    return this[kState].close.promise;\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {Promise<void>}\n   */\n  cancel(reason = undefined) {\n    if (!isReadableStreamDefaultReader(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStreamDefaultReader'));\n    if (this[kState].stream === undefined) {\n      return PromiseReject(new ERR_INVALID_STATE.TypeError(\n        'The reader is not attached to a stream'));\n    }\n    return readableStreamReaderGenericCancel(this\x2C reason);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      stream: this[kState].stream\x2C\n      readRequests: this[kState].readRequests.length\x2C\n      close: this[kState].close.promise\x2C\n    });\n  }\n}\n\nObjectDefineProperties(ReadableStreamDefaultReader.prototype\x2C {\n  closed: kEnumerableProperty\x2C\n  read: kEnumerableProperty\x2C\n  releaseLock: kEnumerableProperty\x2C\n  cancel: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableStreamDefaultReader.name)\x2C\n});\n\nclass ReadableStreamBYOBReader {\n  [kType] = 'ReadableStreamBYOBReader';\n\n  /**\n   * @param {ReadableStream} stream\n   */\n  constructor(stream) {\n    if (!isReadableStream(stream))\n      throw new ERR_INVALID_ARG_TYPE('stream'\x2C 'ReadableStream'\x2C stream);\n    this[kState] = {\n      stream: undefined\x2C\n      requestIntoRequests: []\x2C\n      close: {\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n    };\n    setupReadableStreamBYOBReader(this\x2C stream);\n  }\n\n  /**\n   * @param {ArrayBufferView} view\n   * @param {{\n   *   min? : number\n   * }} [options]\n   * @returns {Promise<{\n   *   value : ArrayBufferView\x2C\n   *   done : boolean\x2C\n   * }>}\n   */\n  async read(view\x2C options = kEmptyObject) {\n    if (!isReadableStreamBYOBReader(this))\n      throw new ERR_INVALID_THIS('ReadableStreamBYOBReader');\n    if (!isArrayBufferView(view)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'view'\x2C\n        [\n          'Buffer'\x2C\n          'TypedArray'\x2C\n          'DataView'\x2C\n        ]\x2C\n        view\x2C\n      );\n    }\n    validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n\n    const viewByteLength = ArrayBufferViewGetByteLength(view);\n    const viewBuffer = ArrayBufferViewGetBuffer(view);\n    const viewBufferByteLength = ArrayBufferPrototypeGetByteLength(viewBuffer);\n\n    if (viewByteLength === 0 || viewBufferByteLength === 0) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'View or Viewed ArrayBuffer is zero-length or detached');\n    }\n\n    // Supposed to assert here that the view's buffer is not\n    // detached\x2C but there's no API available to use to check that.\n\n    const min = options?.min ?? 1;\n    if (typeof min !== 'number')\n      throw new ERR_INVALID_ARG_TYPE('options.min'\x2C 'number'\x2C min);\n    if (!NumberIsInteger(min))\n      throw new ERR_INVALID_ARG_VALUE('options.min'\x2C min\x2C 'must be an integer');\n    if (min <= 0)\n      throw new ERR_INVALID_ARG_VALUE('options.min'\x2C min\x2C 'must be greater than 0');\n    if (!isDataView(view)) {\n      if (min > TypedArrayPrototypeGetLength(view)) {\n        throw new ERR_OUT_OF_RANGE('options.min'\x2C '<= view.length'\x2C min);\n      }\n    } else if (min > viewByteLength) {\n      throw new ERR_OUT_OF_RANGE('options.min'\x2C '<= view.byteLength'\x2C min);\n    }\n\n    if (this[kState].stream === undefined) {\n      throw new ERR_INVALID_STATE.TypeError('The reader is not attached to a stream');\n    }\n    const readIntoRequest = new ReadIntoRequest();\n    readableStreamBYOBReaderRead(this\x2C view\x2C min\x2C readIntoRequest);\n    return readIntoRequest.promise;\n  }\n\n  releaseLock() {\n    if (!isReadableStreamBYOBReader(this))\n      throw new ERR_INVALID_THIS('ReadableStreamBYOBReader');\n    if (this[kState].stream === undefined)\n      return;\n    readableStreamBYOBReaderRelease(this);\n  }\n\n  /**\n   * @readonly\n   * @type {Promise<void>}\n   */\n  get closed() {\n    if (!isReadableStreamBYOBReader(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStreamBYOBReader'));\n    return this[kState].close.promise;\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {Promise<void>}\n   */\n  cancel(reason = undefined) {\n    if (!isReadableStreamBYOBReader(this))\n      return PromiseReject(new ERR_INVALID_THIS('ReadableStreamBYOBReader'));\n    if (this[kState].stream === undefined) {\n      return PromiseReject(new ERR_INVALID_STATE.TypeError(\n        'The reader is not attached to a stream'));\n    }\n    return readableStreamReaderGenericCancel(this\x2C reason);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      stream: this[kState].stream\x2C\n      requestIntoRequests: this[kState].requestIntoRequests.length\x2C\n      close: this[kState].close.promise\x2C\n    });\n  }\n}\n\nObjectDefineProperties(ReadableStreamBYOBReader.prototype\x2C {\n  closed: kEnumerableProperty\x2C\n  read: kEnumerableProperty\x2C\n  releaseLock: kEnumerableProperty\x2C\n  cancel: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableStreamBYOBReader.name)\x2C\n});\n\nclass ReadableStreamDefaultController {\n  [kType] = 'ReadableStreamDefaultController';\n  [kState] = {};\n\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get desiredSize() {\n    return readableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (!readableStreamDefaultControllerCanCloseOrEnqueue(this))\n      throw new ERR_INVALID_STATE.TypeError('Controller is already closed');\n    readableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * @param {any} [chunk]\n   */\n  enqueue(chunk = undefined) {\n    if (!readableStreamDefaultControllerCanCloseOrEnqueue(this))\n      throw new ERR_INVALID_STATE.TypeError('Controller is already closed');\n    readableStreamDefaultControllerEnqueue(this\x2C chunk);\n  }\n\n  /**\n   * @param {any} [error]\n   */\n  error(error = undefined) {\n    readableStreamDefaultControllerError(this\x2C error);\n  }\n\n  [kCancel](reason) {\n    return readableStreamDefaultControllerCancelSteps(this\x2C reason);\n  }\n\n  [kPull](readRequest) {\n    readableStreamDefaultControllerPullSteps(this\x2C readRequest);\n  }\n\n  [kRelease]() {}\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C { });\n  }\n}\n\nObjectDefineProperties(ReadableStreamDefaultController.prototype\x2C {\n  desiredSize: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  enqueue: kEnumerableProperty\x2C\n  error: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableStreamDefaultController.name)\x2C\n});\n\nclass ReadableByteStreamController {\n  [kType] = 'ReadableByteStreamController';\n  [kState] = {};\n\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  /**\n   * @readonly\n   * @type {ReadableStreamBYOBRequest}\n   */\n  get byobRequest() {\n    if (!isReadableByteStreamController(this))\n      throw new ERR_INVALID_THIS('ReadableByteStreamController');\n    if (this[kState].byobRequest === null &&\n        this[kState].pendingPullIntos.length) {\n      const {\n        buffer\x2C\n        byteOffset\x2C\n        bytesFilled\x2C\n        byteLength\x2C\n      } = this[kState].pendingPullIntos[0];\n      const view =\n        new Uint8Array(\n          buffer\x2C\n          byteOffset + bytesFilled\x2C\n          byteLength - bytesFilled);\n      this[kState].byobRequest = createReadableStreamBYOBRequest(this\x2C view);\n    }\n    return this[kState].byobRequest;\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get desiredSize() {\n    if (!isReadableByteStreamController(this))\n      throw new ERR_INVALID_THIS('ReadableByteStreamController');\n    return readableByteStreamControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (!isReadableByteStreamController(this))\n      throw new ERR_INVALID_THIS('ReadableByteStreamController');\n    if (this[kState].closeRequested)\n      throw new ERR_INVALID_STATE.TypeError('Controller is already closed');\n    if (this[kState].stream[kState].state !== 'readable')\n      throw new ERR_INVALID_STATE.TypeError('ReadableStream is already closed');\n    readableByteStreamControllerClose(this);\n  }\n\n  /**\n   * @param {ArrayBufferView} chunk\n   */\n  enqueue(chunk) {\n    if (!isReadableByteStreamController(this))\n      throw new ERR_INVALID_THIS('ReadableByteStreamController');\n    validateBuffer(chunk);\n    const chunkByteLength = ArrayBufferViewGetByteLength(chunk);\n    const chunkBuffer = ArrayBufferViewGetBuffer(chunk);\n    const chunkBufferByteLength = ArrayBufferPrototypeGetByteLength(chunkBuffer);\n    if (chunkByteLength === 0 || chunkBufferByteLength === 0) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'chunk ArrayBuffer is zero-length or detached');\n    }\n    if (this[kState].closeRequested)\n      throw new ERR_INVALID_STATE.TypeError('Controller is already closed');\n    if (this[kState].stream[kState].state !== 'readable')\n      throw new ERR_INVALID_STATE.TypeError('ReadableStream is already closed');\n    readableByteStreamControllerEnqueue(this\x2C chunk);\n  }\n\n  /**\n   * @param {any} [error]\n   */\n  error(error = undefined) {\n    if (!isReadableByteStreamController(this))\n      throw new ERR_INVALID_THIS('ReadableByteStreamController');\n    readableByteStreamControllerError(this\x2C error);\n  }\n\n  [kCancel](reason) {\n    return readableByteStreamControllerCancelSteps(this\x2C reason);\n  }\n\n  [kPull](readRequest) {\n    readableByteStreamControllerPullSteps(this\x2C readRequest);\n  }\n\n  [kRelease]() {\n    const {\n      pendingPullIntos\x2C\n    } = this[kState];\n    if (pendingPullIntos.length > 0) {\n      const firstPendingPullInto = pendingPullIntos[0];\n      firstPendingPullInto.type = 'none';\n      this[kState].pendingPullIntos = [firstPendingPullInto];\n    }\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C { });\n  }\n}\n\nObjectDefineProperties(ReadableByteStreamController.prototype\x2C {\n  byobRequest: kEnumerableProperty\x2C\n  desiredSize: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  enqueue: kEnumerableProperty\x2C\n  error: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ReadableByteStreamController.name)\x2C\n});\n\nfunction InternalReadableStream(start\x2C pull\x2C cancel\x2C highWaterMark\x2C size) {\n  ObjectSetPrototypeOf(this\x2C ReadableStream.prototype);\n  markTransferMode(this\x2C false\x2C true);\n  this[kType] = 'ReadableStream';\n  this[kState] = createReadableStreamState();\n  this[kIsClosedPromise] = PromiseWithResolvers();\n  const controller = new ReadableStreamDefaultController(kSkipThrow);\n  setupReadableStreamDefaultController(\n    this\x2C\n    controller\x2C\n    start\x2C\n    pull\x2C\n    cancel\x2C\n    highWaterMark\x2C\n    size);\n}\n\nObjectSetPrototypeOf(InternalReadableStream.prototype\x2C ReadableStream.prototype);\nObjectSetPrototypeOf(InternalReadableStream\x2C ReadableStream);\n\nfunction createReadableStream(start\x2C pull\x2C cancel\x2C highWaterMark = 1\x2C size = () => 1) {\n  const stream = new InternalReadableStream(start\x2C pull\x2C cancel\x2C highWaterMark\x2C size);\n\n  // For spec compliance the InternalReadableStream must be a ReadableStream\n  stream.constructor = ReadableStream;\n  return stream;\n}\n\nfunction InternalReadableByteStream(start\x2C pull\x2C cancel) {\n  ObjectSetPrototypeOf(this\x2C ReadableStream.prototype);\n  markTransferMode(this\x2C false\x2C true);\n  this[kType] = 'ReadableStream';\n  this[kState] = createReadableStreamState();\n  this[kIsClosedPromise] = PromiseWithResolvers();\n  const controller = new ReadableByteStreamController(kSkipThrow);\n  setupReadableByteStreamController(\n    this\x2C\n    controller\x2C\n    start\x2C\n    pull\x2C\n    cancel\x2C\n    0\x2C\n    undefined);\n}\n\nObjectSetPrototypeOf(InternalReadableByteStream.prototype\x2C ReadableStream.prototype);\nObjectSetPrototypeOf(InternalReadableByteStream\x2C ReadableStream);\n\nfunction createReadableByteStream(start\x2C pull\x2C cancel) {\n  const stream = new InternalReadableByteStream(start\x2C pull\x2C cancel);\n\n  // For spec compliance the InternalReadableByteStream must be a ReadableStream\n  stream.constructor = ReadableStream;\n  return stream;\n}\n\nconst isReadableStream =\n  isBrandCheck('ReadableStream');\nconst isReadableByteStreamController =\n  isBrandCheck('ReadableByteStreamController');\nconst isReadableStreamBYOBRequest =\n  isBrandCheck('ReadableStreamBYOBRequest');\nconst isReadableStreamDefaultReader =\n  isBrandCheck('ReadableStreamDefaultReader');\nconst isReadableStreamBYOBReader =\n  isBrandCheck('ReadableStreamBYOBReader');\n\n// ---- ReadableStream Implementation\n\nfunction createReadableStreamState() {\n  return {\n    __proto__: null\x2C\n    disturbed: false\x2C\n    reader: undefined\x2C\n    state: 'readable'\x2C\n    storedError: undefined\x2C\n    transfer: {\n      __proto__: null\x2C\n      writable: undefined\x2C\n      port1: undefined\x2C\n      port2: undefined\x2C\n      promise: undefined\x2C\n    }\x2C\n  };\n}\n\nfunction readableStreamFromIterable(iterable) {\n  let stream;\n  const iteratorRecord = getIterator(iterable\x2C 'async');\n\n  const startAlgorithm = nonOpStart;\n\n  async function pullAlgorithm() {\n    const nextResult = iteratorNext(iteratorRecord);\n    const nextPromise = PromiseResolve(nextResult);\n    return PromisePrototypeThen(nextPromise\x2C (iterResult) => {\n      if (typeof iterResult !== 'object' || iterResult === null) {\n        throw new ERR_INVALID_STATE.TypeError(\n          'The promise returned by the iterator.next() method must fulfill with an object');\n      }\n      if (iterResult.done) {\n        readableStreamDefaultControllerClose(stream[kState].controller);\n      } else {\n        readableStreamDefaultControllerEnqueue(stream[kState].controller\x2C iterResult.value);\n      }\n    });\n  }\n\n  async function cancelAlgorithm(reason) {\n    const iterator = iteratorRecord.iterator;\n    const returnMethod = iterator.return;\n    if (returnMethod === undefined) {\n      return PromiseResolve();\n    }\n    const returnResult = FunctionPrototypeCall(returnMethod\x2C iterator\x2C reason);\n    const returnPromise = PromiseResolve(returnResult);\n    return PromisePrototypeThen(returnPromise\x2C (iterResult) => {\n      if (typeof iterResult !== 'object' || iterResult === null) {\n        throw new ERR_INVALID_STATE.TypeError(\n          'The promise returned by the iterator.return() method must fulfill with an object');\n      }\n      return undefined;\n    });\n  }\n\n  stream = createReadableStream(\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    0\x2C\n  );\n\n  return stream;\n}\n\nfunction readableStreamPipeTo(\n  source\x2C\n  dest\x2C\n  preventClose\x2C\n  preventAbort\x2C\n  preventCancel\x2C\n  signal) {\n\n  let reader;\n  let writer;\n  let disposable;\n  // Both of these can throw synchronously. We want to capture\n  // the error and return a rejected promise instead.\n  try {\n    reader = new ReadableStreamDefaultReader(source);\n    writer = new WritableStreamDefaultWriter(dest);\n  } catch (error) {\n    return PromiseReject(error);\n  }\n\n  source[kState].disturbed = true;\n\n  let shuttingDown = false;\n\n  if (signal !== undefined) {\n    try {\n      validateAbortSignal(signal\x2C 'options.signal');\n    } catch (error) {\n      return PromiseReject(error);\n    }\n  }\n\n  const promise = PromiseWithResolvers();\n\n  const state = {\n    currentWrite: PromiseResolve()\x2C\n  };\n\n  // The error here can be undefined. The rejected arg\n  // tells us that the promise must be rejected even\n  // when error is undefine.\n  function finalize(rejected\x2C error) {\n    writableStreamDefaultWriterRelease(writer);\n    readableStreamReaderGenericRelease(reader);\n    if (signal !== undefined)\n      disposable?.[SymbolDispose]();\n    if (rejected)\n      promise.reject(error);\n    else\n      promise.resolve();\n  }\n\n  async function waitForCurrentWrite() {\n    const write = state.currentWrite;\n    await write;\n    if (write !== state.currentWrite)\n      await waitForCurrentWrite();\n  }\n\n  function shutdownWithAnAction(action\x2C rejected\x2C originalError) {\n    if (shuttingDown) return;\n    shuttingDown = true;\n    if (dest[kState].state === 'writable' &&\n        !writableStreamCloseQueuedOrInFlight(dest)) {\n      PromisePrototypeThen(\n        waitForCurrentWrite()\x2C\n        complete\x2C\n        (error) => finalize(true\x2C error));\n      return;\n    }\n    complete();\n\n    function complete() {\n      PromisePrototypeThen(\n        action()\x2C\n        () => finalize(rejected\x2C originalError)\x2C\n        (error) => finalize(true\x2C error));\n    }\n  }\n\n  function shutdown(rejected\x2C error) {\n    if (shuttingDown) return;\n    shuttingDown = true;\n    if (dest[kState].state === 'writable' &&\n        !writableStreamCloseQueuedOrInFlight(dest)) {\n      PromisePrototypeThen(\n        waitForCurrentWrite()\x2C\n        () => finalize(rejected\x2C error)\x2C\n        (error) => finalize(true\x2C error));\n      return;\n    }\n    finalize(rejected\x2C error);\n  }\n\n  function abortAlgorithm() {\n    let error;\n    if (signal.reason instanceof AbortError) {\n      // Cannot use the AbortError class here. It must be a DOMException.\n      error = new DOMException(signal.reason.message\x2C 'AbortError');\n    } else {\n      error = signal.reason;\n    }\n\n    const actions = [];\n    if (!preventAbort) {\n      ArrayPrototypePush(\n        actions\x2C\n        () => {\n          if (dest[kState].state === 'writable')\n            return writableStreamAbort(dest\x2C error);\n          return PromiseResolve();\n        });\n    }\n    if (!preventCancel) {\n      ArrayPrototypePush(\n        actions\x2C\n        () => {\n          if (source[kState].state === 'readable')\n            return readableStreamCancel(source\x2C error);\n          return PromiseResolve();\n        });\n    }\n\n    shutdownWithAnAction(\n      () => SafePromiseAll(actions\x2C (action) => action())\x2C\n      true\x2C\n      error);\n  }\n\n  function watchErrored(stream\x2C promise\x2C action) {\n    if (stream[kState].state === 'errored')\n      action(stream[kState].storedError);\n    else\n      PromisePrototypeThen(promise\x2C undefined\x2C action);\n  }\n\n  function watchClosed(stream\x2C promise\x2C action) {\n    if (stream[kState].state === 'closed')\n      action();\n    else\n      PromisePrototypeThen(promise\x2C action\x2C () => {});\n  }\n\n  async function step() {\n    if (shuttingDown)\n      return true;\n\n    await writer[kState].ready.promise;\n\n    const promise = PromiseWithResolvers();\n    // eslint-disable-next-line no-use-before-define\n    readableStreamDefaultReaderRead(reader\x2C new PipeToReadableStreamReadRequest(writer\x2C state\x2C promise));\n\n    return promise.promise;\n  }\n\n  async function run() {\n    // Run until step resolves as true\n    while (!await step());\n  }\n\n  if (signal !== undefined) {\n    if (signal.aborted) {\n      abortAlgorithm();\n      return promise.promise;\n    }\n    addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n    disposable = addAbortListener(signal\x2C abortAlgorithm);\n  }\n\n  setPromiseHandled(run());\n\n  watchErrored(source\x2C reader[kState].close.promise\x2C (error) => {\n    if (!preventAbort) {\n      return shutdownWithAnAction(\n        () => writableStreamAbort(dest\x2C error)\x2C\n        true\x2C\n        error);\n    }\n    shutdown(true\x2C error);\n  });\n\n  watchErrored(dest\x2C writer[kState].close.promise\x2C (error) => {\n    if (!preventCancel) {\n      return shutdownWithAnAction(\n        () => readableStreamCancel(source\x2C error)\x2C\n        true\x2C\n        error);\n    }\n    shutdown(true\x2C error);\n  });\n\n  watchClosed(source\x2C reader[kState].close.promise\x2C () => {\n    if (!preventClose) {\n      return shutdownWithAnAction(\n        () => writableStreamDefaultWriterCloseWithErrorPropagation(writer));\n    }\n    shutdown();\n  });\n\n  if (writableStreamCloseQueuedOrInFlight(dest) ||\n      dest[kState].state === 'closed') {\n    const error = new ERR_INVALID_STATE.TypeError(\n      'Destination WritableStream is closed');\n    if (!preventCancel) {\n      shutdownWithAnAction(\n        () => readableStreamCancel(source\x2C error)\x2C true\x2C error);\n    } else {\n      shutdown(true\x2C error);\n    }\n  }\n\n  return promise.promise;\n}\n\nclass PipeToReadableStreamReadRequest {\n  constructor(writer\x2C state\x2C promise) {\n    this.writer = writer;\n    this.state = state;\n    this.promise = promise;\n  }\n\n  [kChunk](chunk) {\n    this.state.currentWrite = writableStreamDefaultWriterWrite(this.writer\x2C chunk);\n    setPromiseHandled(this.state.currentWrite);\n    this.promise.resolve(false);\n  }\n\n  [kClose]() {\n    this.promise.resolve(true);\n  }\n\n  [kError](error) {\n    this.promise.reject(error);\n  }\n}\n\nfunction readableStreamTee(stream\x2C cloneForBranch2) {\n  if (isReadableByteStreamController(stream[kState].controller)) {\n    return readableByteStreamTee(stream);\n  }\n  return readableStreamDefaultTee(stream\x2C cloneForBranch2);\n}\n\nfunction readableStreamDefaultTee(stream\x2C cloneForBranch2) {\n  const reader = new ReadableStreamDefaultReader(stream);\n  let reading = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1;\n  let reason2;\n  let branch1;\n  let branch2;\n  const cancelPromise = PromiseWithResolvers();\n\n  async function pullAlgorithm() {\n    if (reading) return;\n    reading = true;\n    const readRequest = {\n      [kChunk](value) {\n        queueMicrotask(() => {\n          reading = false;\n          const value1 = value;\n          let value2 = value;\n          if (!canceled2 && cloneForBranch2) {\n            value2 = structuredClone(value2);\n          }\n          if (!canceled1) {\n            readableStreamDefaultControllerEnqueue(\n              branch1[kState].controller\x2C\n              value1);\n          }\n          if (!canceled2) {\n            readableStreamDefaultControllerEnqueue(\n              branch2[kState].controller\x2C\n              value2);\n          }\n        });\n      }\x2C\n      [kClose]() {\n        // The `process.nextTick()` is not part of the spec.\n        // This approach was needed to avoid a race condition working with esm\n        // Further information\x2C see: https://github.com/nodejs/node/issues/39758\n        process.nextTick(() => {\n          reading = false;\n          if (!canceled1)\n            readableStreamDefaultControllerClose(branch1[kState].controller);\n          if (!canceled2)\n            readableStreamDefaultControllerClose(branch2[kState].controller);\n          if (!canceled1 || !canceled2)\n            cancelPromise.resolve();\n        });\n      }\x2C\n      [kError]() {\n        reading = false;\n      }\x2C\n    };\n    readableStreamDefaultReaderRead(reader\x2C readRequest);\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = [reason1\x2C reason2];\n      cancelPromise.resolve(readableStreamCancel(stream\x2C compositeReason));\n    }\n    return cancelPromise.promise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = [reason1\x2C reason2];\n      cancelPromise.resolve(readableStreamCancel(stream\x2C compositeReason));\n    }\n    return cancelPromise.promise;\n  }\n\n  branch1 =\n    createReadableStream(nonOpStart\x2C pullAlgorithm\x2C cancel1Algorithm);\n  branch2 =\n    createReadableStream(nonOpStart\x2C pullAlgorithm\x2C cancel2Algorithm);\n\n  PromisePrototypeThen(\n    reader[kState].close.promise\x2C\n    undefined\x2C\n    (error) => {\n      readableStreamDefaultControllerError(branch1[kState].controller\x2C error);\n      readableStreamDefaultControllerError(branch2[kState].controller\x2C error);\n      if (!canceled1 || !canceled2)\n        cancelPromise.resolve();\n    });\n\n  return [branch1\x2C branch2];\n}\n\nfunction readableByteStreamTee(stream) {\n  assert(isReadableStream(stream));\n  assert(isReadableByteStreamController(stream[kState].controller));\n\n  let reader = new ReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1;\n  let reason2;\n  let branch1;\n  let branch2;\n  const cancelDeferred = PromiseWithResolvers();\n\n  function forwardReaderError(thisReader) {\n    PromisePrototypeThen(\n      thisReader[kState].close.promise\x2C\n      undefined\x2C\n      (error) => {\n        if (thisReader !== reader) {\n          return;\n        }\n        readableStreamDefaultControllerError(branch1[kState].controller\x2C error);\n        readableStreamDefaultControllerError(branch2[kState].controller\x2C error);\n        if (!canceled1 || !canceled2) {\n          cancelDeferred.resolve();\n        }\n      }\x2C\n    );\n  }\n\n  function pullWithDefaultReader() {\n    if (isReadableStreamBYOBReader(reader)) {\n      readableStreamBYOBReaderRelease(reader);\n      reader = new ReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest = {\n      [kChunk](chunk) {\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = cloneAsUint8Array(chunk);\n            } catch (error) {\n              readableByteStreamControllerError(\n                branch1[kState].controller\x2C\n                error\x2C\n              );\n              readableByteStreamControllerError(\n                branch2[kState].controller\x2C\n                error\x2C\n              );\n              cancelDeferred.resolve(readableStreamCancel(stream\x2C error));\n              return;\n            }\n          }\n          if (!canceled1) {\n            readableByteStreamControllerEnqueue(\n              branch1[kState].controller\x2C\n              chunk1\x2C\n            );\n          }\n          if (!canceled2) {\n            readableByteStreamControllerEnqueue(\n              branch2[kState].controller\x2C\n              chunk2\x2C\n            );\n          }\n          reading = false;\n\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      }\x2C\n      [kClose]() {\n        reading = false;\n\n        if (!canceled1) {\n          readableByteStreamControllerClose(branch1[kState].controller);\n        }\n        if (!canceled2) {\n          readableByteStreamControllerClose(branch2[kState].controller);\n        }\n        if (branch1[kState].controller[kState].pendingPullIntos.length > 0) {\n          readableByteStreamControllerRespond(branch1[kState].controller\x2C 0);\n        }\n        if (branch2[kState].controller[kState].pendingPullIntos.length > 0) {\n          readableByteStreamControllerRespond(branch2[kState].controller\x2C 0);\n        }\n        if (!canceled1 || !canceled2) {\n          cancelDeferred.resolve();\n        }\n      }\x2C\n      [kError]() {\n        reading = false;\n      }\x2C\n    };\n\n    readableStreamDefaultReaderRead(reader\x2C readRequest);\n  }\n\n  function pullWithBYOBReader(view\x2C forBranch2) {\n    if (isReadableStreamDefaultReader(reader)) {\n      readableStreamDefaultReaderRelease(reader);\n      reader = new ReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 === true ? branch2 : branch1;\n    const otherBranch = forBranch2 === false ? branch2 : branch1;\n    const readIntoRequest = {\n      [kChunk](chunk) {\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n          const byobCanceled = forBranch2 === true ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 === false ? canceled2 : canceled1;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n\n            try {\n              clonedChunk = cloneAsUint8Array(chunk);\n            } catch (error) {\n              readableByteStreamControllerError(\n                byobBranch[kState].controller\x2C\n                error\x2C\n              );\n              readableByteStreamControllerError(\n                otherBranch[kState].controller\x2C\n                error\x2C\n              );\n              cancelDeferred.resolve(readableStreamCancel(stream\x2C error));\n              return;\n            }\n            if (!byobCanceled) {\n              readableByteStreamControllerRespondWithNewView(\n                byobBranch[kState].controller\x2C\n                chunk\x2C\n              );\n            }\n\n            readableByteStreamControllerEnqueue(\n              otherBranch[kState].controller\x2C\n              clonedChunk\x2C\n            );\n          } else if (!byobCanceled) {\n            readableByteStreamControllerRespondWithNewView(\n              byobBranch[kState].controller\x2C\n              chunk\x2C\n            );\n          }\n          reading = false;\n\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      }\x2C\n      [kClose](chunk) {\n        reading = false;\n\n        const byobCanceled = forBranch2 === true ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 === false ? canceled2 : canceled1;\n\n        if (!byobCanceled) {\n          readableByteStreamControllerClose(byobBranch[kState].controller);\n        }\n        if (!otherCanceled) {\n          readableByteStreamControllerClose(otherBranch[kState].controller);\n        }\n        if (chunk !== undefined) {\n          if (!byobCanceled) {\n            readableByteStreamControllerRespondWithNewView(\n              byobBranch[kState].controller\x2C\n              chunk\x2C\n            );\n          }\n          if (\n            !otherCanceled &&\n            otherBranch[kState].controller[kState].pendingPullIntos.length > 0\n          ) {\n            readableByteStreamControllerRespond(\n              otherBranch[kState].controller\x2C\n              0\x2C\n            );\n          }\n        }\n        if (!byobCanceled || !otherCanceled) {\n          cancelDeferred.resolve();\n        }\n      }\x2C\n      [kError]() {\n        reading = false;\n      }\x2C\n    };\n    readableStreamBYOBReaderRead(reader\x2C view\x2C 1\x2C readIntoRequest);\n  }\n\n  function pull1Algorithm() {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return PromiseResolve();\n    }\n    reading = true;\n\n    const byobRequest = branch1[kState].controller.byobRequest;\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest[kState].view\x2C false);\n    }\n    return PromiseResolve();\n  }\n\n  function pull2Algorithm() {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return PromiseResolve();\n    }\n    reading = true;\n\n    const byobRequest = branch2[kState].controller.byobRequest;\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest[kState].view\x2C true);\n    }\n    return PromiseResolve();\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      cancelDeferred.resolve(readableStreamCancel(stream\x2C [reason1\x2C reason2]));\n    }\n    return cancelDeferred.promise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      cancelDeferred.resolve(readableStreamCancel(stream\x2C [reason1\x2C reason2]));\n    }\n    return cancelDeferred.promise;\n  }\n\n  branch1 =\n    createReadableByteStream(nonOpStart\x2C pull1Algorithm\x2C cancel1Algorithm);\n  branch2 =\n    createReadableByteStream(nonOpStart\x2C pull2Algorithm\x2C cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1\x2C branch2];\n}\n\nfunction readableByteStreamControllerConvertPullIntoDescriptor(desc) {\n  const {\n    buffer\x2C\n    bytesFilled\x2C\n    byteLength\x2C\n    byteOffset\x2C\n    ctor\x2C\n    elementSize\x2C\n  } = desc;\n  if (bytesFilled > byteLength)\n    throw new ERR_INVALID_STATE.RangeError('The buffer size is invalid');\n  assert(!(bytesFilled % elementSize));\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n\n  if (ctor === Buffer) {\n    return Buffer.from(transferredBuffer\x2C byteOffset\x2C bytesFilled / elementSize);\n  }\n\n  return new ctor(transferredBuffer\x2C byteOffset\x2C bytesFilled / elementSize);\n}\n\nfunction isReadableStreamLocked(stream) {\n  return stream[kState].reader !== undefined;\n}\n\nfunction readableStreamCancel(stream\x2C reason) {\n  stream[kState].disturbed = true;\n  switch (stream[kState].state) {\n    case 'closed':\n      return PromiseResolve();\n    case 'errored':\n      return PromiseReject(stream[kState].storedError);\n  }\n  readableStreamClose(stream);\n  const {\n    reader\x2C\n  } = stream[kState];\n  if (reader !== undefined && readableStreamHasBYOBReader(stream)) {\n    for (let n = 0; n < reader[kState].readIntoRequests.length; n++)\n      reader[kState].readIntoRequests[n][kClose]();\n    reader[kState].readIntoRequests = [];\n  }\n\n  return PromisePrototypeThen(\n    stream[kState].controller[kCancel](reason)\x2C\n    () => {});\n}\n\nfunction readableStreamClose(stream) {\n  assert(stream[kState].state === 'readable');\n  stream[kState].state = 'closed';\n  stream[kIsClosedPromise].resolve();\n  const {\n    reader\x2C\n  } = stream[kState];\n\n  if (reader === undefined)\n    return;\n\n  reader[kState].close.resolve();\n\n  if (readableStreamHasDefaultReader(stream)) {\n    for (let n = 0; n < reader[kState].readRequests.length; n++)\n      reader[kState].readRequests[n][kClose]();\n    reader[kState].readRequests = [];\n  }\n}\n\nfunction readableStreamError(stream\x2C error) {\n  assert(stream[kState].state === 'readable');\n  stream[kState].state = 'errored';\n  stream[kState].storedError = error;\n  setPromiseHandled(stream[kIsClosedPromise].promise);\n  stream[kIsClosedPromise].reject(error);\n\n  const {\n    reader\x2C\n  } = stream[kState];\n\n  if (reader === undefined)\n    return;\n\n  setPromiseHandled(reader[kState].close.promise);\n  reader[kState].close.reject(error);\n\n  if (readableStreamHasDefaultReader(stream)) {\n    for (let n = 0; n < reader[kState].readRequests.length; n++)\n      reader[kState].readRequests[n][kError](error);\n    reader[kState].readRequests = [];\n  } else {\n    assert(readableStreamHasBYOBReader(stream));\n    for (let n = 0; n < reader[kState].readIntoRequests.length; n++)\n      reader[kState].readIntoRequests[n][kError](error);\n    reader[kState].readIntoRequests = [];\n  }\n}\n\nfunction readableStreamHasDefaultReader(stream) {\n  const {\n    reader\x2C\n  } = stream[kState];\n\n  if (reader === undefined)\n    return false;\n\n  return reader[kState] !== undefined &&\n         reader[kType] === 'ReadableStreamDefaultReader';\n}\n\nfunction readableStreamGetNumReadRequests(stream) {\n  assert(readableStreamHasDefaultReader(stream));\n  return stream[kState].reader[kState].readRequests.length;\n}\n\nfunction readableStreamHasBYOBReader(stream) {\n  const {\n    reader\x2C\n  } = stream[kState];\n\n  if (reader === undefined)\n    return false;\n\n  return reader[kState] !== undefined &&\n         reader[kType] === 'ReadableStreamBYOBReader';\n}\n\nfunction readableStreamGetNumReadIntoRequests(stream) {\n  assert(readableStreamHasBYOBReader(stream));\n  return stream[kState].reader[kState].readIntoRequests.length;\n}\n\nfunction readableStreamFulfillReadRequest(stream\x2C chunk\x2C done) {\n  assert(readableStreamHasDefaultReader(stream));\n  const {\n    reader\x2C\n  } = stream[kState];\n  assert(reader[kState].readRequests.length);\n  const readRequest = ArrayPrototypeShift(reader[kState].readRequests);\n\n  // TODO(@jasnell): It's not clear under what exact conditions done\n  // will be true here. The spec requires this check but none of the\n  // WPT's or other tests trigger it. Will need to investigate how to\n  // get coverage for this.\n  if (done)\n    readRequest[kClose]();\n  else\n    readRequest[kChunk](chunk);\n}\n\nfunction readableStreamFulfillReadIntoRequest(stream\x2C chunk\x2C done) {\n  assert(readableStreamHasBYOBReader(stream));\n  const {\n    reader\x2C\n  } = stream[kState];\n  assert(reader[kState].readIntoRequests.length);\n  const readIntoRequest = ArrayPrototypeShift(reader[kState].readIntoRequests);\n  if (done)\n    readIntoRequest[kClose](chunk);\n  else\n    readIntoRequest[kChunk](chunk);\n}\n\nfunction readableStreamAddReadRequest(stream\x2C readRequest) {\n  assert(readableStreamHasDefaultReader(stream));\n  assert(stream[kState].state === 'readable');\n  ArrayPrototypePush(stream[kState].reader[kState].readRequests\x2C readRequest);\n}\n\nfunction readableStreamAddReadIntoRequest(stream\x2C readIntoRequest) {\n  assert(readableStreamHasBYOBReader(stream));\n  assert(stream[kState].state !== 'errored');\n  ArrayPrototypePush(\n    stream[kState].reader[kState].readIntoRequests\x2C\n    readIntoRequest);\n}\n\nfunction readableStreamReaderGenericCancel(reader\x2C reason) {\n  const {\n    stream\x2C\n  } = reader[kState];\n  assert(stream !== undefined);\n  return readableStreamCancel(stream\x2C reason);\n}\n\nfunction readableStreamReaderGenericInitialize(reader\x2C stream) {\n  reader[kState].stream = stream;\n  stream[kState].reader = reader;\n  switch (stream[kState].state) {\n    case 'readable':\n      reader[kState].close = PromiseWithResolvers();\n      break;\n    case 'closed':\n      reader[kState].close = {\n        promise: PromiseResolve()\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      break;\n    case 'errored':\n      reader[kState].close = {\n        promise: PromiseReject(stream[kState].storedError)\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      setPromiseHandled(reader[kState].close.promise);\n      break;\n  }\n}\n\nfunction readableStreamDefaultReaderRelease(reader) {\n  readableStreamReaderGenericRelease(reader);\n  readableStreamDefaultReaderErrorReadRequests(\n    reader\x2C\n    lazyReadableReleasingError()\x2C\n  );\n}\n\nfunction readableStreamDefaultReaderErrorReadRequests(reader\x2C e) {\n  for (let n = 0; n < reader[kState].readRequests.length; ++n) {\n    reader[kState].readRequests[n][kError](e);\n  }\n  reader[kState].readRequests = [];\n}\n\nfunction readableStreamBYOBReaderRelease(reader) {\n  readableStreamReaderGenericRelease(reader);\n  readableStreamBYOBReaderErrorReadIntoRequests(\n    reader\x2C\n    lazyReadableReleasingError()\x2C\n  );\n}\n\nfunction readableStreamBYOBReaderErrorReadIntoRequests(reader\x2C e) {\n  for (let n = 0; n < reader[kState].readIntoRequests.length; ++n) {\n    reader[kState].readIntoRequests[n][kError](e);\n  }\n  reader[kState].readIntoRequests = [];\n}\n\nfunction readableStreamReaderGenericRelease(reader) {\n  const {\n    stream\x2C\n  } = reader[kState];\n  assert(stream !== undefined);\n  assert(stream[kState].reader === reader);\n\n  const releasedStateError = lazyReadableReleasedError();\n  if (stream[kState].state === 'readable') {\n    reader[kState].close.reject?.(releasedStateError);\n  } else {\n    reader[kState].close = {\n      promise: PromiseReject(releasedStateError)\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    };\n  }\n  setPromiseHandled(reader[kState].close.promise);\n\n  stream[kState].controller[kRelease]();\n\n  stream[kState].reader = undefined;\n  reader[kState].stream = undefined;\n}\n\nfunction readableStreamBYOBReaderRead(reader\x2C view\x2C min\x2C readIntoRequest) {\n  const {\n    stream\x2C\n  } = reader[kState];\n  assert(stream !== undefined);\n  stream[kState].disturbed = true;\n  if (stream[kState].state === 'errored') {\n    readIntoRequest[kError](stream[kState].storedError);\n    return;\n  }\n  readableByteStreamControllerPullInto(\n    stream[kState].controller\x2C\n    view\x2C\n    min\x2C\n    readIntoRequest);\n}\n\nfunction readableStreamDefaultReaderRead(reader\x2C readRequest) {\n  const {\n    stream\x2C\n  } = reader[kState];\n  assert(stream !== undefined);\n  stream[kState].disturbed = true;\n  switch (stream[kState].state) {\n    case 'closed':\n      readRequest[kClose]();\n      break;\n    case 'errored':\n      readRequest[kError](stream[kState].storedError);\n      break;\n    case 'readable':\n      stream[kState].controller[kPull](readRequest);\n  }\n}\n\nfunction setupReadableStreamBYOBReader(reader\x2C stream) {\n  if (isReadableStreamLocked(stream))\n    throw new ERR_INVALID_STATE.TypeError('ReadableStream is locked');\n  const {\n    controller\x2C\n  } = stream[kState];\n  if (!isReadableByteStreamController(controller))\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be a byte stream');\n  readableStreamReaderGenericInitialize(reader\x2C stream);\n  reader[kState].readIntoRequests = [];\n}\n\nfunction setupReadableStreamDefaultReader(reader\x2C stream) {\n  if (isReadableStreamLocked(stream))\n    throw new ERR_INVALID_STATE.TypeError('ReadableStream is locked');\n  readableStreamReaderGenericInitialize(reader\x2C stream);\n  reader[kState].readRequests = [];\n}\n\nfunction readableStreamDefaultControllerClose(controller) {\n  if (!readableStreamDefaultControllerCanCloseOrEnqueue(controller))\n    return;\n  controller[kState].closeRequested = true;\n  if (!controller[kState].queue.length) {\n    readableStreamDefaultControllerClearAlgorithms(controller);\n    readableStreamClose(controller[kState].stream);\n  }\n}\n\nfunction readableStreamDefaultControllerEnqueue(controller\x2C chunk) {\n  if (!readableStreamDefaultControllerCanCloseOrEnqueue(controller))\n    return;\n\n  const {\n    stream\x2C\n  } = controller[kState];\n\n  if (isReadableStreamLocked(stream) &&\n      readableStreamGetNumReadRequests(stream)) {\n    readableStreamFulfillReadRequest(stream\x2C chunk\x2C false);\n  } else {\n    try {\n      const chunkSize =\n        FunctionPrototypeCall(\n          controller[kState].sizeAlgorithm\x2C\n          undefined\x2C\n          chunk);\n      enqueueValueWithSize(controller\x2C chunk\x2C chunkSize);\n    } catch (error) {\n      readableStreamDefaultControllerError(controller\x2C error);\n      throw error;\n    }\n  }\n  readableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nfunction readableStreamDefaultControllerHasBackpressure(controller) {\n  return !readableStreamDefaultControllerShouldCallPull(controller);\n}\n\nfunction readableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  return !controller[kState].closeRequested &&\n         stream[kState].state === 'readable';\n}\n\nfunction readableStreamDefaultControllerGetDesiredSize(controller) {\n  const {\n    stream\x2C\n    highWaterMark\x2C\n    queueTotalSize\x2C\n  } = controller[kState];\n  switch (stream[kState].state) {\n    case 'errored': return null;\n    case 'closed': return 0;\n    default:\n      return highWaterMark - queueTotalSize;\n  }\n}\n\nfunction readableStreamDefaultControllerShouldCallPull(controller) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (!readableStreamDefaultControllerCanCloseOrEnqueue(controller) ||\n      !controller[kState].started)\n    return false;\n\n  if (isReadableStreamLocked(stream) &&\n      readableStreamGetNumReadRequests(stream)) {\n    return true;\n  }\n\n  const desiredSize = readableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n\n  return desiredSize > 0;\n}\n\nfunction readableStreamDefaultControllerCallPullIfNeeded(controller) {\n  if (!readableStreamDefaultControllerShouldCallPull(controller))\n    return;\n  if (controller[kState].pulling) {\n    controller[kState].pullAgain = true;\n    return;\n  }\n  assert(!controller[kState].pullAgain);\n  controller[kState].pulling = true;\n  PromisePrototypeThen(\n    controller[kState].pullAlgorithm(controller)\x2C\n    () => {\n      controller[kState].pulling = false;\n      if (controller[kState].pullAgain) {\n        controller[kState].pullAgain = false;\n        readableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    }\x2C\n    (error) => readableStreamDefaultControllerError(controller\x2C error));\n}\n\nfunction readableStreamDefaultControllerClearAlgorithms(controller) {\n  controller[kState].pullAlgorithm = undefined;\n  controller[kState].cancelAlgorithm = undefined;\n  controller[kState].sizeAlgorithm = undefined;\n}\n\nfunction readableStreamDefaultControllerError(controller\x2C error) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (stream[kState].state === 'readable') {\n    resetQueue(controller);\n    readableStreamDefaultControllerClearAlgorithms(controller);\n    readableStreamError(stream\x2C error);\n  }\n}\n\nfunction readableStreamDefaultControllerCancelSteps(controller\x2C reason) {\n  resetQueue(controller);\n  const result = controller[kState].cancelAlgorithm(reason);\n  readableStreamDefaultControllerClearAlgorithms(controller);\n  return result;\n}\n\nfunction readableStreamDefaultControllerPullSteps(controller\x2C readRequest) {\n  const {\n    stream\x2C\n    queue\x2C\n  } = controller[kState];\n  if (queue.length) {\n    const chunk = dequeueValue(controller);\n    if (controller[kState].closeRequested && !queue.length) {\n      readableStreamDefaultControllerClearAlgorithms(controller);\n      readableStreamClose(stream);\n    } else {\n      readableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    readRequest[kChunk](chunk);\n    return;\n  }\n  readableStreamAddReadRequest(stream\x2C readRequest);\n  readableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nfunction setupReadableStreamDefaultController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n  highWaterMark\x2C\n  sizeAlgorithm) {\n  assert(stream[kState].controller === undefined);\n  controller[kState] = {\n    cancelAlgorithm\x2C\n    closeRequested: false\x2C\n    highWaterMark\x2C\n    pullAgain: false\x2C\n    pullAlgorithm\x2C\n    pulling: false\x2C\n    queue: []\x2C\n    queueTotalSize: 0\x2C\n    started: false\x2C\n    sizeAlgorithm\x2C\n    stream\x2C\n  };\n  stream[kState].controller = controller;\n  stream[kControllerErrorFunction] = FunctionPrototypeBind(controller.error\x2C controller);\n\n  const startResult = startAlgorithm();\n\n  PromisePrototypeThen(\n    new Promise((r) => r(startResult))\x2C\n    () => {\n      controller[kState].started = true;\n      assert(!controller[kState].pulling);\n      assert(!controller[kState].pullAgain);\n      readableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\x2C\n    (error) => readableStreamDefaultControllerError(controller\x2C error));\n}\n\nfunction setupReadableStreamDefaultControllerFromSource(\n  stream\x2C\n  source\x2C\n  highWaterMark\x2C\n  sizeAlgorithm) {\n  const controller = new ReadableStreamDefaultController(kSkipThrow);\n  const start = source?.start;\n  const pull = source?.pull;\n  const cancel = source?.cancel;\n  const startAlgorithm = start ?\n    FunctionPrototypeBind(start\x2C source\x2C controller) :\n    nonOpStart;\n  const pullAlgorithm = pull ?\n    createPromiseCallback('source.pull'\x2C pull\x2C source) :\n    nonOpPull;\n  const cancelAlgorithm = cancel ?\n    createPromiseCallback('source.cancel'\x2C cancel\x2C source) :\n    nonOpCancel;\n\n  setupReadableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm);\n}\n\nfunction readableByteStreamControllerClose(controller) {\n  const {\n    closeRequested\x2C\n    pendingPullIntos\x2C\n    queueTotalSize\x2C\n    stream\x2C\n  } = controller[kState];\n\n  if (closeRequested || stream[kState].state !== 'readable')\n    return;\n\n  if (queueTotalSize) {\n    controller[kState].closeRequested = true;\n    return;\n  }\n\n  if (pendingPullIntos.length) {\n    const firstPendingPullInto = pendingPullIntos[0];\n    if (firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0) {\n      const error = new ERR_INVALID_STATE.TypeError('Partial read');\n      readableByteStreamControllerError(controller\x2C error);\n      throw error;\n    }\n  }\n\n  readableByteStreamControllerClearAlgorithms(controller);\n  readableStreamClose(stream);\n}\n\nfunction readableByteStreamControllerCommitPullIntoDescriptor(stream\x2C desc) {\n  assert(stream[kState].state !== 'errored');\n  assert(desc.type !== 'none');\n\n  let done = false;\n  if (stream[kState].state === 'closed') {\n    assert(desc.bytesFilled % desc.elementSize === 0);\n    done = true;\n  }\n\n  const filledView =\n    readableByteStreamControllerConvertPullIntoDescriptor(desc);\n\n  if (desc.type === 'default') {\n    readableStreamFulfillReadRequest(stream\x2C filledView\x2C done);\n  } else {\n    assert(desc.type === 'byob');\n    readableStreamFulfillReadIntoRequest(stream\x2C filledView\x2C done);\n  }\n}\n\nfunction readableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller[kState].byobRequest === null)\n    return;\n  controller[kState].byobRequest[kState].controller = undefined;\n  controller[kState].byobRequest[kState].view = null;\n  controller[kState].byobRequest = null;\n}\n\nfunction readableByteStreamControllerClearAlgorithms(controller) {\n  controller[kState].pullAlgorithm = undefined;\n  controller[kState].cancelAlgorithm = undefined;\n}\n\nfunction readableByteStreamControllerClearPendingPullIntos(controller) {\n  readableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller[kState].pendingPullIntos = [];\n}\n\nfunction readableByteStreamControllerGetDesiredSize(controller) {\n  const {\n    stream\x2C\n    highWaterMark\x2C\n    queueTotalSize\x2C\n  } = controller[kState];\n  switch (stream[kState].state) {\n    case 'errored': return null;\n    case 'closed': return 0;\n    default: return highWaterMark - queueTotalSize;\n  }\n}\n\nfunction readableByteStreamControllerShouldCallPull(controller) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (stream[kState].state !== 'readable' ||\n      controller[kState].closeRequested ||\n      !controller[kState].started) {\n    return false;\n  }\n  if (readableStreamHasDefaultReader(stream) &&\n      readableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (readableStreamHasBYOBReader(stream) &&\n      readableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = readableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n\n  return desiredSize > 0;\n}\n\nfunction readableByteStreamControllerHandleQueueDrain(controller) {\n  const {\n    closeRequested\x2C\n    queueTotalSize\x2C\n    stream\x2C\n  } = controller[kState];\n  assert(stream[kState].state === 'readable');\n  if (!queueTotalSize && closeRequested) {\n    readableByteStreamControllerClearAlgorithms(controller);\n    readableStreamClose(stream);\n    return;\n  }\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction readableByteStreamControllerPullInto(\n  controller\x2C\n  view\x2C\n  min\x2C\n  readIntoRequest) {\n  const {\n    closeRequested\x2C\n    stream\x2C\n    pendingPullIntos\x2C\n  } = controller[kState];\n  let elementSize = 1;\n  let ctor = DataView;\n  if (isArrayBufferView(view) && !isDataView(view)) {\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\n    ctor = view.constructor;\n  }\n\n  const minimumFill = min * elementSize;\n  assert(minimumFill >= elementSize && minimumFill <= view.byteLength);\n  assert(minimumFill % elementSize === 0);\n\n  const buffer = ArrayBufferViewGetBuffer(view);\n  const byteOffset = ArrayBufferViewGetByteOffset(view);\n  const byteLength = ArrayBufferViewGetByteLength(view);\n  const bufferByteLength = ArrayBufferPrototypeGetByteLength(buffer);\n\n  let transferredBuffer;\n  try {\n    transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n  } catch (error) {\n    readIntoRequest[kError](error);\n    return;\n  }\n  const desc = {\n    buffer: transferredBuffer\x2C\n    bufferByteLength\x2C\n    byteOffset\x2C\n    byteLength\x2C\n    bytesFilled: 0\x2C\n    minimumFill\x2C\n    elementSize\x2C\n    ctor\x2C\n    type: 'byob'\x2C\n  };\n  if (pendingPullIntos.length) {\n    ArrayPrototypePush(pendingPullIntos\x2C desc);\n    readableStreamAddReadIntoRequest(stream\x2C readIntoRequest);\n    return;\n  }\n  if (stream[kState].state === 'closed') {\n    const emptyView = new ctor(desc.buffer\x2C byteOffset\x2C 0);\n    readIntoRequest[kClose](emptyView);\n    return;\n  }\n  if (controller[kState].queueTotalSize) {\n    if (readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n      controller\x2C\n      desc)) {\n      const filledView =\n        readableByteStreamControllerConvertPullIntoDescriptor(desc);\n      readableByteStreamControllerHandleQueueDrain(controller);\n      readIntoRequest[kChunk](filledView);\n      return;\n    }\n    if (closeRequested) {\n      const error = new ERR_INVALID_STATE.TypeError('ReadableStream closed');\n      readableByteStreamControllerError(controller\x2C error);\n      readIntoRequest[kError](error);\n      return;\n    }\n  }\n  ArrayPrototypePush(pendingPullIntos\x2C desc);\n  readableStreamAddReadIntoRequest(stream\x2C readIntoRequest);\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction readableByteStreamControllerRespondInternal(controller\x2C bytesWritten) {\n  const {\n    stream\x2C\n    pendingPullIntos\x2C\n  } = controller[kState];\n  const desc = pendingPullIntos[0];\n  readableByteStreamControllerInvalidateBYOBRequest(controller);\n  if (stream[kState].state === 'closed') {\n    if (bytesWritten)\n      throw new ERR_INVALID_STATE.TypeError(\n        'Controller is closed but view is not zero-length');\n    readableByteStreamControllerRespondInClosedState(controller\x2C desc);\n  } else {\n    assert(stream[kState].state === 'readable');\n    if (!bytesWritten)\n      throw new ERR_INVALID_STATE.TypeError('View cannot be zero-length');\n    readableByteStreamControllerRespondInReadableState(\n      controller\x2C\n      bytesWritten\x2C\n      desc);\n  }\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction readableByteStreamControllerRespond(controller\x2C bytesWritten) {\n  const {\n    pendingPullIntos\x2C\n    stream\x2C\n  } = controller[kState];\n  assert(pendingPullIntos.length);\n  const desc = pendingPullIntos[0];\n\n  if (stream[kState].state === 'closed') {\n    if (bytesWritten !== 0)\n      throw new ERR_INVALID_ARG_VALUE('bytesWritten'\x2C bytesWritten);\n  } else {\n    assert(stream[kState].state === 'readable');\n\n    if (!bytesWritten)\n      throw new ERR_INVALID_ARG_VALUE('bytesWritten'\x2C bytesWritten);\n\n    if ((desc.bytesFilled + bytesWritten) > desc.byteLength)\n      throw new ERR_INVALID_ARG_VALUE.RangeError('bytesWritten'\x2C bytesWritten);\n  }\n\n  desc.buffer = ArrayBufferPrototypeTransfer(desc.buffer);\n\n  readableByteStreamControllerRespondInternal(controller\x2C bytesWritten);\n}\n\nfunction readableByteStreamControllerRespondInClosedState(controller\x2C desc) {\n  assert(desc.bytesFilled % desc.elementSize === 0);\n  if (desc.type === 'none') {\n    readableByteStreamControllerShiftPendingPullInto(controller);\n  }\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (readableStreamHasBYOBReader(stream)) {\n    while (readableStreamGetNumReadIntoRequests(stream) > 0) {\n      readableByteStreamControllerCommitPullIntoDescriptor(\n        stream\x2C\n        readableByteStreamControllerShiftPendingPullInto(controller));\n    }\n  }\n}\n\nfunction readableByteStreamControllerFillHeadPullIntoDescriptor(\n  controller\x2C\n  size\x2C\n  desc) {\n  const {\n    pendingPullIntos\x2C\n    byobRequest\x2C\n  } = controller[kState];\n  assert(!pendingPullIntos.length || pendingPullIntos[0] === desc);\n  assert(byobRequest === null);\n  desc.bytesFilled += size;\n}\n\nfunction readableByteStreamControllerEnqueue(controller\x2C chunk) {\n  const {\n    closeRequested\x2C\n    pendingPullIntos\x2C\n    queue\x2C\n    stream\x2C\n  } = controller[kState];\n\n  const buffer = ArrayBufferViewGetBuffer(chunk);\n  const byteOffset = ArrayBufferViewGetByteOffset(chunk);\n  const byteLength = ArrayBufferViewGetByteLength(chunk);\n\n  if (closeRequested || stream[kState].state !== 'readable')\n    return;\n\n  const transferredBuffer = ArrayBufferPrototypeTransfer(buffer);\n\n  if (pendingPullIntos.length) {\n    const firstPendingPullInto = pendingPullIntos[0];\n\n    if (ArrayBufferPrototypeGetDetached(firstPendingPullInto.buffer)) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'Destination ArrayBuffer is detached'\x2C\n      );\n    }\n\n    readableByteStreamControllerInvalidateBYOBRequest(controller);\n\n    firstPendingPullInto.buffer = ArrayBufferPrototypeTransfer(\n      firstPendingPullInto.buffer\x2C\n    );\n\n    if (firstPendingPullInto.type === 'none') {\n      readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n        controller\x2C\n        firstPendingPullInto\x2C\n      );\n    }\n  }\n\n  if (readableStreamHasDefaultReader(stream)) {\n    readableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n    if (!readableStreamGetNumReadRequests(stream)) {\n      readableByteStreamControllerEnqueueChunkToQueue(\n        controller\x2C\n        transferredBuffer\x2C\n        byteOffset\x2C\n        byteLength);\n    } else {\n      assert(!queue.length);\n      if (pendingPullIntos.length) {\n        assert(pendingPullIntos[0].type === 'default');\n        readableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView =\n        new Uint8Array(transferredBuffer\x2C byteOffset\x2C byteLength);\n      readableStreamFulfillReadRequest(stream\x2C transferredView\x2C false);\n    }\n  } else if (readableStreamHasBYOBReader(stream)) {\n    readableByteStreamControllerEnqueueChunkToQueue(\n      controller\x2C\n      transferredBuffer\x2C\n      byteOffset\x2C\n      byteLength);\n    readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n      controller);\n  } else {\n    assert(!isReadableStreamLocked(stream));\n    readableByteStreamControllerEnqueueChunkToQueue(\n      controller\x2C\n      transferredBuffer\x2C\n      byteOffset\x2C\n      byteLength);\n  }\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction readableByteStreamControllerEnqueueClonedChunkToQueue(\n  controller\x2C\n  buffer\x2C\n  byteOffset\x2C\n  byteLength\x2C\n) {\n  let cloneResult;\n  try {\n    cloneResult = ArrayBufferPrototypeSlice(\n      buffer\x2C\n      byteOffset\x2C\n      byteOffset + byteLength\x2C\n    );\n  } catch (error) {\n    readableByteStreamControllerError(controller\x2C error);\n    throw error;\n  }\n  readableByteStreamControllerEnqueueChunkToQueue(\n    controller\x2C\n    cloneResult\x2C\n    0\x2C\n    byteLength\x2C\n  );\n}\n\nfunction readableByteStreamControllerEnqueueChunkToQueue(\n  controller\x2C\n  buffer\x2C\n  byteOffset\x2C\n  byteLength) {\n  ArrayPrototypePush(\n    controller[kState].queue\x2C\n    {\n      buffer\x2C\n      byteOffset\x2C\n      byteLength\x2C\n    });\n  controller[kState].queueTotalSize += byteLength;\n}\n\nfunction readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n  controller\x2C\n  desc\x2C\n) {\n  const {\n    buffer\x2C\n    byteOffset\x2C\n    bytesFilled\x2C\n    type\x2C\n  } = desc;\n  assert(type === 'none');\n\n  if (bytesFilled > 0) {\n    readableByteStreamControllerEnqueueClonedChunkToQueue(\n      controller\x2C\n      buffer\x2C\n      byteOffset\x2C\n      bytesFilled\x2C\n    );\n  }\n  readableByteStreamControllerShiftPendingPullInto(controller);\n}\n\nfunction readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n  controller\x2C\n  desc) {\n  const {\n    buffer\x2C\n    byteLength\x2C\n    byteOffset\x2C\n    bytesFilled\x2C\n    minimumFill\x2C\n    elementSize\x2C\n  } = desc;\n  const maxBytesToCopy = MathMin(\n    controller[kState].queueTotalSize\x2C\n    byteLength - bytesFilled);\n  const maxBytesFilled = bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - (maxBytesFilled % elementSize);\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  assert(bytesFilled < minimumFill);\n  if (maxAlignedBytes >= minimumFill) {\n    totalBytesToCopyRemaining = maxAlignedBytes - bytesFilled;\n    ready = true;\n  }\n  const {\n    queue\x2C\n  } = controller[kState];\n\n  while (totalBytesToCopyRemaining) {\n    const headOfQueue = queue[0];\n    const bytesToCopy = MathMin(\n      totalBytesToCopyRemaining\x2C\n      headOfQueue.byteLength);\n    const destStart = byteOffset + desc.bytesFilled;\n    const arrayBufferByteLength = ArrayBufferPrototypeGetByteLength(buffer);\n    if (arrayBufferByteLength - destStart < bytesToCopy) {\n      throw new ERR_INVALID_STATE.RangeError(\n        'view ArrayBuffer size is invalid');\n    }\n    assert(arrayBufferByteLength - destStart >= bytesToCopy);\n    copyArrayBuffer(\n      buffer\x2C\n      destStart\x2C\n      headOfQueue.buffer\x2C\n      headOfQueue.byteOffset\x2C\n      bytesToCopy);\n    if (headOfQueue.byteLength === bytesToCopy) {\n      ArrayPrototypeShift(queue);\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller[kState].queueTotalSize -= bytesToCopy;\n    readableByteStreamControllerFillHeadPullIntoDescriptor(\n      controller\x2C\n      bytesToCopy\x2C\n      desc);\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(!controller[kState].queueTotalSize);\n    assert(desc.bytesFilled > 0);\n    assert(desc.bytesFilled < minimumFill);\n  }\n  return ready;\n}\n\nfunction readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n  controller) {\n  const {\n    closeRequested\x2C\n    pendingPullIntos\x2C\n    stream\x2C\n  } = controller[kState];\n  assert(!closeRequested);\n  while (pendingPullIntos.length) {\n    if (!controller[kState].queueTotalSize)\n      return;\n    const desc = pendingPullIntos[0];\n    if (readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n      controller\x2C\n      desc)) {\n      readableByteStreamControllerShiftPendingPullInto(controller);\n      readableByteStreamControllerCommitPullIntoDescriptor(stream\x2C desc);\n    }\n  }\n}\n\nfunction readableByteStreamControllerRespondInReadableState(\n  controller\x2C\n  bytesWritten\x2C\n  desc) {\n  const {\n    buffer\x2C\n    bytesFilled\x2C\n    byteLength\x2C\n    type\x2C\n  } = desc;\n\n  if (bytesFilled + bytesWritten > byteLength)\n    throw new ERR_INVALID_STATE.RangeError('The buffer size is invalid');\n\n  readableByteStreamControllerFillHeadPullIntoDescriptor(\n    controller\x2C\n    bytesWritten\x2C\n    desc);\n\n  if (type === 'none') {\n    readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n      controller\x2C\n      desc\x2C\n    );\n    readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n      controller\x2C\n    );\n    return;\n  }\n\n  if (desc.bytesFilled < desc.minimumFill)\n    return;\n\n  readableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = desc.bytesFilled % desc.elementSize;\n\n  if (remainderSize) {\n    const end = desc.byteOffset + desc.bytesFilled;\n    const start = end - remainderSize;\n    const remainder =\n      ArrayBufferPrototypeSlice(\n        buffer\x2C\n        start\x2C\n        end);\n    readableByteStreamControllerEnqueueChunkToQueue(\n      controller\x2C\n      remainder\x2C\n      0\x2C\n      ArrayBufferPrototypeGetByteLength(remainder));\n  }\n  desc.bytesFilled -= remainderSize;\n  readableByteStreamControllerCommitPullIntoDescriptor(\n    controller[kState].stream\x2C\n    desc);\n  readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction readableByteStreamControllerRespondWithNewView(controller\x2C view) {\n  const {\n    stream\x2C\n    pendingPullIntos\x2C\n  } = controller[kState];\n  assert(pendingPullIntos.length);\n\n  const desc = pendingPullIntos[0];\n  assert(stream[kState].state !== 'errored');\n\n  const viewByteLength = ArrayBufferViewGetByteLength(view);\n  const viewByteOffset = ArrayBufferViewGetByteOffset(view);\n  const viewBuffer = ArrayBufferViewGetBuffer(view);\n  const viewBufferByteLength = ArrayBufferPrototypeGetByteLength(viewBuffer);\n\n  if (stream[kState].state === 'closed') {\n    if (viewByteLength !== 0)\n      throw new ERR_INVALID_STATE.TypeError('View is not zero-length');\n  } else {\n    assert(stream[kState].state === 'readable');\n    if (viewByteLength === 0)\n      throw new ERR_INVALID_STATE.TypeError('View is zero-length');\n  }\n\n  const {\n    byteOffset\x2C\n    byteLength\x2C\n    bytesFilled\x2C\n    bufferByteLength\x2C\n  } = desc;\n\n  if (byteOffset + bytesFilled !== viewByteOffset)\n    throw new ERR_INVALID_ARG_VALUE.RangeError('view'\x2C view);\n\n  if (bytesFilled + viewByteLength > byteLength)\n    throw new ERR_INVALID_ARG_VALUE.RangeError('view'\x2C view);\n\n  if (bufferByteLength !== viewBufferByteLength)\n    throw new ERR_INVALID_ARG_VALUE.RangeError('view'\x2C view);\n\n  desc.buffer = ArrayBufferPrototypeTransfer(viewBuffer);\n\n  readableByteStreamControllerRespondInternal(controller\x2C viewByteLength);\n}\n\nfunction readableByteStreamControllerShiftPendingPullInto(controller) {\n  assert(controller[kState].byobRequest === null);\n  return ArrayPrototypeShift(controller[kState].pendingPullIntos);\n}\n\nfunction readableByteStreamControllerCallPullIfNeeded(controller) {\n  if (!readableByteStreamControllerShouldCallPull(controller))\n    return;\n  if (controller[kState].pulling) {\n    controller[kState].pullAgain = true;\n    return;\n  }\n  assert(!controller[kState].pullAgain);\n  controller[kState].pulling = true;\n  PromisePrototypeThen(\n    controller[kState].pullAlgorithm(controller)\x2C\n    () => {\n      controller[kState].pulling = false;\n      if (controller[kState].pullAgain) {\n        controller[kState].pullAgain = false;\n        readableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }\x2C\n    (error) => readableByteStreamControllerError(controller\x2C error));\n}\n\nfunction readableByteStreamControllerError(controller\x2C error) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (stream[kState].state !== 'readable')\n    return;\n  readableByteStreamControllerClearPendingPullIntos(controller);\n  resetQueue(controller);\n  readableByteStreamControllerClearAlgorithms(controller);\n  readableStreamError(stream\x2C error);\n}\n\nfunction readableByteStreamControllerCancelSteps(controller\x2C reason) {\n  readableByteStreamControllerClearPendingPullIntos(controller);\n  resetQueue(controller);\n  const result = controller[kState].cancelAlgorithm(reason);\n  readableByteStreamControllerClearAlgorithms(controller);\n  return result;\n}\n\nfunction readableByteStreamControllerFillReadRequestFromQueue(controller\x2C readRequest) {\n  const {\n    queue\x2C\n    queueTotalSize\x2C\n  } = controller[kState];\n  assert(queueTotalSize > 0);\n  const {\n    buffer\x2C\n    byteOffset\x2C\n    byteLength\x2C\n  } = ArrayPrototypeShift(queue);\n\n  controller[kState].queueTotalSize -= byteLength;\n  readableByteStreamControllerHandleQueueDrain(controller);\n  const view = new Uint8Array(buffer\x2C byteOffset\x2C byteLength);\n  readRequest[kChunk](view);\n}\n\nfunction readableByteStreamControllerProcessReadRequestsUsingQueue(controller) {\n  const {\n    stream\x2C\n    queueTotalSize\x2C\n  } = controller[kState];\n  const { reader } = stream[kState];\n  assert(isReadableStreamDefaultReader(reader));\n\n  while (reader[kState].readRequests.length > 0) {\n    if (queueTotalSize === 0) {\n      return;\n    }\n    readableByteStreamControllerFillReadRequestFromQueue(\n      controller\x2C\n      ArrayPrototypeShift(reader[kState].readRequests)\x2C\n    );\n  }\n}\n\nfunction readableByteStreamControllerPullSteps(controller\x2C readRequest) {\n  const {\n    pendingPullIntos\x2C\n    queueTotalSize\x2C\n    stream\x2C\n  } = controller[kState];\n  assert(readableStreamHasDefaultReader(stream));\n  if (queueTotalSize) {\n    assert(!readableStreamGetNumReadRequests(stream));\n    readableByteStreamControllerFillReadRequestFromQueue(\n      controller\x2C\n      readRequest\x2C\n    );\n    return;\n  }\n  const {\n    autoAllocateChunkSize\x2C\n  } = controller[kState];\n  if (autoAllocateChunkSize !== undefined) {\n    try {\n      const buffer = new ArrayBuffer(autoAllocateChunkSize);\n      ArrayPrototypePush(\n        pendingPullIntos\x2C\n        {\n          buffer\x2C\n          bufferByteLength: autoAllocateChunkSize\x2C\n          byteOffset: 0\x2C\n          byteLength: autoAllocateChunkSize\x2C\n          bytesFilled: 0\x2C\n          minimumFill: 1\x2C\n          elementSize: 1\x2C\n          ctor: Uint8Array\x2C\n          type: 'default'\x2C\n        });\n    } catch (error) {\n      readRequest[kError](error);\n      return;\n    }\n  }\n\n  readableStreamAddReadRequest(stream\x2C readRequest);\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction setupReadableByteStreamController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n  highWaterMark\x2C\n  autoAllocateChunkSize) {\n  assert(stream[kState].controller === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n  controller[kState] = {\n    byobRequest: null\x2C\n    closeRequested: false\x2C\n    pullAgain: false\x2C\n    pulling: false\x2C\n    started: false\x2C\n    stream\x2C\n    queue: []\x2C\n    queueTotalSize: 0\x2C\n    highWaterMark\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    autoAllocateChunkSize\x2C\n    pendingPullIntos: []\x2C\n  };\n  stream[kState].controller = controller;\n\n  const startResult = startAlgorithm();\n\n  PromisePrototypeThen(\n    new Promise((r) => r(startResult))\x2C\n    () => {\n      controller[kState].started = true;\n      assert(!controller[kState].pulling);\n      assert(!controller[kState].pullAgain);\n      readableByteStreamControllerCallPullIfNeeded(controller);\n    }\x2C\n    (error) => readableByteStreamControllerError(controller\x2C error));\n}\n\nfunction setupReadableByteStreamControllerFromSource(\n  stream\x2C\n  source\x2C\n  highWaterMark) {\n  const controller = new ReadableByteStreamController(kSkipThrow);\n  const start = source?.start;\n  const pull = source?.pull;\n  const cancel = source?.cancel;\n  const autoAllocateChunkSize = source?.autoAllocateChunkSize;\n  const startAlgorithm = start ?\n    FunctionPrototypeBind(start\x2C source\x2C controller) :\n    nonOpStart;\n  const pullAlgorithm = pull ?\n    createPromiseCallback('source.pull'\x2C pull\x2C source\x2C controller) :\n    nonOpPull;\n  const cancelAlgorithm = cancel ?\n    createPromiseCallback('source.cancel'\x2C cancel\x2C source) :\n    nonOpCancel;\n\n  if (autoAllocateChunkSize === 0) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'source.autoAllocateChunkSize'\x2C\n      autoAllocateChunkSize);\n  }\n  setupReadableByteStreamController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    highWaterMark\x2C\n    autoAllocateChunkSize);\n}\n\nmodule.exports = {\n  ReadableStream\x2C\n  ReadableStreamDefaultReader\x2C\n  ReadableStreamBYOBReader\x2C\n  ReadableStreamBYOBRequest\x2C\n  ReadableByteStreamController\x2C\n  ReadableStreamDefaultController\x2C\n  TransferredReadableStream\x2C\n\n  // Exported Brand Checks\n  isReadableStream\x2C\n  isReadableByteStreamController\x2C\n  isReadableStreamBYOBRequest\x2C\n  isReadableStreamDefaultReader\x2C\n  isReadableStreamBYOBReader\x2C\n  isWritableStreamDefaultWriter\x2C\n  isWritableStreamDefaultController\x2C\n\n  readableStreamPipeTo\x2C\n  readableStreamTee\x2C\n  readableByteStreamControllerConvertPullIntoDescriptor\x2C\n  isReadableStreamLocked\x2C\n  readableStreamCancel\x2C\n  readableStreamClose\x2C\n  readableStreamError\x2C\n  readableStreamHasDefaultReader\x2C\n  readableStreamGetNumReadRequests\x2C\n  readableStreamHasBYOBReader\x2C\n  readableStreamGetNumReadIntoRequests\x2C\n  readableStreamFulfillReadRequest\x2C\n  readableStreamFulfillReadIntoRequest\x2C\n  readableStreamAddReadRequest\x2C\n  readableStreamAddReadIntoRequest\x2C\n  readableStreamReaderGenericCancel\x2C\n  readableStreamReaderGenericInitialize\x2C\n  readableStreamReaderGenericRelease\x2C\n  readableStreamBYOBReaderRead\x2C\n  readableStreamDefaultReaderRead\x2C\n  setupReadableStreamBYOBReader\x2C\n  setupReadableStreamDefaultReader\x2C\n  readableStreamDefaultControllerClose\x2C\n  readableStreamDefaultControllerEnqueue\x2C\n  readableStreamDefaultControllerHasBackpressure\x2C\n  readableStreamDefaultControllerCanCloseOrEnqueue\x2C\n  readableStreamDefaultControllerGetDesiredSize\x2C\n  readableStreamDefaultControllerShouldCallPull\x2C\n  readableStreamDefaultControllerCallPullIfNeeded\x2C\n  readableStreamDefaultControllerClearAlgorithms\x2C\n  readableStreamDefaultControllerError\x2C\n  readableStreamDefaultControllerCancelSteps\x2C\n  readableStreamDefaultControllerPullSteps\x2C\n  setupReadableStreamDefaultController\x2C\n  setupReadableStreamDefaultControllerFromSource\x2C\n  readableByteStreamControllerClose\x2C\n  readableByteStreamControllerCommitPullIntoDescriptor\x2C\n  readableByteStreamControllerInvalidateBYOBRequest\x2C\n  readableByteStreamControllerClearAlgorithms\x2C\n  readableByteStreamControllerClearPendingPullIntos\x2C\n  readableByteStreamControllerGetDesiredSize\x2C\n  readableByteStreamControllerShouldCallPull\x2C\n  readableByteStreamControllerHandleQueueDrain\x2C\n  readableByteStreamControllerPullInto\x2C\n  readableByteStreamControllerRespondInternal\x2C\n  readableByteStreamControllerRespond\x2C\n  readableByteStreamControllerRespondInClosedState\x2C\n  readableByteStreamControllerFillHeadPullIntoDescriptor\x2C\n  readableByteStreamControllerEnqueue\x2C\n  readableByteStreamControllerEnqueueChunkToQueue\x2C\n  readableByteStreamControllerFillPullIntoDescriptorFromQueue\x2C\n  readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue\x2C\n  readableByteStreamControllerRespondInReadableState\x2C\n  readableByteStreamControllerRespondWithNewView\x2C\n  readableByteStreamControllerShiftPendingPullInto\x2C\n  readableByteStreamControllerCallPullIfNeeded\x2C\n  readableByteStreamControllerError\x2C\n  readableByteStreamControllerCancelSteps\x2C\n  readableByteStreamControllerPullSteps\x2C\n  setupReadableByteStreamController\x2C\n  setupReadableByteStreamControllerFromSource\x2C\n  createReadableStream\x2C\n  createReadableByteStream\x2C\n};\n
code-source-info,0xbd57824df88,177,0,95900,C0O0C4O95900,,
code-creation,JS,9,192333,0xbd57824ec68,4559, node:internal/webstreams/readablestream:1:1,0x38b0a83a1160,~
code-source-info,0xbd57824ec
code-creation,JS,9,192458,0xbd578250288,21,ReadableByteStreamController node:internal/webstreams/readablestream:1110:36,0x38b0a83a4a58,~
code-source-info,0xbd578250288,177,30524,33792,C3O30538C13O30583C20O33792,,
code-creation,JS,9,192500,0xbd578250318,21,ReadableStreamDefaultController node:internal/webstreams/readablestream:1047:39,0x38b0a83a4668,~
code-source-info,0xbd578250318,177,28932,30191,C3O28946C13O28994C20O30191,,
code-creation,JS,9,192500,0xbd5782503a8,12,ReadableStreamBYOBReader node:internal/webstreams/readablestream:916:32,0x38b0a83a42f0,~
code-source-info,0xbd5782503a8,177,24917,28611,C3O24931C11O28611,,
code-creation,JS,9,192500,0xbd578250430,12,ReadableStreamDefaultReader node:internal/webstreams/readablestream:827:35,0x38b0a83a4080,~
code-source-info,0xbd578250430,177,22422,24597,C3O22436C11O24597,,
code-creation,JS,9,192542,0xbd5782504b8,12,ReadableStreamBYOBRequest node:internal/webstreams/readablestream:662:33,0x38b0a83a3900,~
code-source-info,0xbd5782504b8,177,18497,20553,C3O18511C11O20553,,
code-creation,JS,9,192542,0xbd578250540,12,ReadableStream node:internal/webstreams/readablestream:242:22,0x38b0a83a3658,~
code-source-info,0xbd578250540,177,5354,17204,C3O5368C11O17204,,
tick,0x1924a5f2c,192542,0,0x0,3,0x107f890bc,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1009ee424,192583,0,0x0,3,0x107f890bc,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
tick,0x1923ff370,192583,0,0x0,3,0x107f890bc,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,Eval,9,193208,0xbd5782505c8,5, node:internal/webstreams/writablestream:1:1,0x38b0a83ac170,~
script-source,178,node:internal/webstreams/writablestream,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  PromiseWithResolvers\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_STATE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n} = require('internal/util');\n\nconst {\n  validateObject\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n} = require('internal/validators');\n\nconst {\n  MessageChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  kDeserialize\x2C\n  kTransfer\x2C\n  kTransferList\x2C\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  createPromiseCallback\x2C\n  customInspect\x2C\n  dequeueValue\x2C\n  enqueueValueWithSize\x2C\n  extractHighWaterMark\x2C\n  extractSizeAlgorithm\x2C\n  lazyTransfer\x2C\n  isBrandCheck\x2C\n  isPromisePending\x2C\n  peekQueueValue\x2C\n  resetQueue\x2C\n  setPromiseHandled\x2C\n  nonOpCancel\x2C\n  nonOpStart\x2C\n  nonOpWrite\x2C\n  kType\x2C\n  kState\x2C\n} = require('internal/webstreams/util');\n\nconst {\n  kIsClosedPromise\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst {\n  AbortController\x2C\n} = require('internal/abort_controller');\n\nconst assert = require('internal/assert');\n\nconst kAbort = Symbol('kAbort');\nconst kCloseSentinel = Symbol('kCloseSentinel');\nconst kError = Symbol('kError');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nlet releasedError;\n\nfunction lazyWritableReleasedError() {\n  if (releasedError) {\n    return releasedError;\n  }\n  const userModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\()(?!node:(.+):\\d+:\\d+\\)$).*/gm;\n\n  releasedError = new ERR_INVALID_STATE.TypeError('Writer has been released');\n  // Avoid V8 leak and remove userland stackstrace\n  releasedError.stack = SideEffectFreeRegExpPrototypeSymbolReplace(userModuleRegExp\x2C releasedError.stack\x2C '');\n  return releasedError;\n}\n\nconst getNonWritablePropertyDescriptor = (value) => {\n  return {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value\x2C\n  };\n};\n\n/**\n * @typedef {import('../abort_controller').AbortSignal} AbortSignal\n * @typedef {import('./queuingstrategies').QueuingStrategy\n * } QueuingStrategy\n * @typedef {import('./queuingstrategies').QueuingStrategySize\n * } QueuingStrategySize\n */\n\n/**\n * @callback UnderlyingSinkStartCallback\n * @param {WritableStreamDefaultController} controller\n */\n\n/**\n * @callback UnderlyingSinkWriteCallback\n * @param {any} chunk\n * @param {WritableStreamDefaultController} controller\n * @returns {Promise<void>}\n */\n\n/**\n * @callback UnderlyingSinkCloseCallback\n * @returns {Promise<void>}\n */\n\n/**\n * @callback UnderlyingSinkAbortCallback\n * @param {any} reason\n * @returns {Promise<void>}\n */\n\n/**\n * @typedef {{\n *   start? : UnderlyingSinkStartCallback\x2C\n *   write? : UnderlyingSinkWriteCallback\x2C\n *   close? : UnderlyingSinkCloseCallback\x2C\n *   abort? : UnderlyingSinkAbortCallback\x2C\n *   type? : any\x2C\n * }} UnderlyingSink\n */\n\nclass WritableStream {\n  [kType] = 'WritableStream';\n\n  /**\n   * @param {UnderlyingSink} [sink]\n   * @param {QueuingStrategy} [strategy]\n   */\n  constructor(sink = kEmptyObject\x2C strategy = kEmptyObject) {\n    markTransferMode(this\x2C false\x2C true);\n    validateObject(sink\x2C 'sink'\x2C kValidateObjectAllowObjects);\n    validateObject(strategy\x2C 'strategy'\x2C kValidateObjectAllowObjectsAndNull);\n    const type = sink?.type;\n    if (type !== undefined)\n      throw new ERR_INVALID_ARG_VALUE.RangeError('type'\x2C type);\n\n    this[kState] = createWritableStreamState();\n\n    this[kIsClosedPromise] = PromiseWithResolvers();\n    this[kControllerErrorFunction] = () => {};\n\n    const size = extractSizeAlgorithm(strategy?.size);\n    const highWaterMark = extractHighWaterMark(strategy?.highWaterMark\x2C 1);\n\n    setupWritableStreamDefaultControllerFromSink(\n      this\x2C\n      sink\x2C\n      highWaterMark\x2C\n      size);\n  }\n\n  /**\n   * @readonly\n   * @type {boolean}\n   */\n  get locked() {\n    if (!isWritableStream(this))\n      throw new ERR_INVALID_THIS('WritableStream');\n    return isWritableStreamLocked(this);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {Promise<void>}\n   */\n  abort(reason = undefined) {\n    if (!isWritableStream(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStream'));\n    if (isWritableStreamLocked(this)) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError('WritableStream is locked'));\n    }\n    return writableStreamAbort(this\x2C reason);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close() {\n    if (!isWritableStream(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStream'));\n    if (isWritableStreamLocked(this)) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError('WritableStream is locked'));\n    }\n    if (writableStreamCloseQueuedOrInFlight(this)) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError('Failure closing WritableStream'));\n    }\n    return writableStreamClose(this);\n  }\n\n  /**\n   * @returns {WritableStreamDefaultWriter}\n   */\n  getWriter() {\n    if (!isWritableStream(this))\n      throw new ERR_INVALID_THIS('WritableStream');\n    // eslint-disable-next-line no-use-before-define\n    return new WritableStreamDefaultWriter(this);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      locked: this.locked\x2C\n      state: this[kState].state\x2C\n    });\n  }\n\n  [kTransfer]() {\n    if (!isWritableStream(this))\n      throw new ERR_INVALID_THIS('WritableStream');\n    if (this.locked) {\n      this[kState].transfer.port1?.close();\n      this[kState].transfer.port1 = undefined;\n      this[kState].transfer.port2 = undefined;\n      throw new DOMException(\n        'Cannot transfer a locked WritableStream'\x2C\n        'DataCloneError');\n    }\n\n    const {\n      readable\x2C\n      promise\x2C\n    } = lazyTransfer().newCrossRealmReadableStream(\n      this\x2C\n      this[kState].transfer.port1);\n\n    this[kState].transfer.readable = readable;\n    this[kState].transfer.promise = promise;\n\n    return {\n      data: { port: this[kState].transfer.port2 }\x2C\n      deserializeInfo:\n        'internal/webstreams/writablestream:TransferredWritableStream'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    const { port1\x2C port2 } = new MessageChannel();\n    this[kState].transfer.port1 = port1;\n    this[kState].transfer.port2 = port2;\n    return [ port2 ];\n  }\n\n  [kDeserialize]({ port }) {\n    const transfer = lazyTransfer();\n    setupWritableStreamDefaultControllerFromSink(\n      this\x2C\n      // The MessagePort is set to be referenced when reading.\n      // After two MessagePorts are closed\x2C there is a problem with\n      // lingering promise not being properly resolved.\n      // https://github.com/nodejs/node/issues/51486\n      new transfer.CrossRealmTransformWritableSink(port\x2C true)\x2C\n      1\x2C\n      () => 1);\n  }\n}\n\nObjectDefineProperties(WritableStream.prototype\x2C {\n  locked: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  getWriter: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(WritableStream.name)\x2C\n});\n\nfunction InternalTransferredWritableStream() {\n  ObjectSetPrototypeOf(this\x2C WritableStream.prototype);\n  markTransferMode(this\x2C false\x2C true);\n  this[kType] = 'WritableStream';\n  this[kState] = createWritableStreamState();\n\n  this[kIsClosedPromise] = PromiseWithResolvers();\n}\n\nObjectSetPrototypeOf(InternalTransferredWritableStream.prototype\x2C WritableStream.prototype);\nObjectSetPrototypeOf(InternalTransferredWritableStream\x2C WritableStream);\n\nfunction TransferredWritableStream() {\n  const stream = new InternalTransferredWritableStream();\n\n  stream.constructor = WritableStream;\n\n  return stream;\n}\n\nTransferredWritableStream.prototype[kDeserialize] = () => {};\n\nclass WritableStreamDefaultWriter {\n  [kType] = 'WritableStreamDefaultWriter';\n\n  /**\n   * @param {WritableStream} stream\n   */\n  constructor(stream) {\n    if (!isWritableStream(stream))\n      throw new ERR_INVALID_ARG_TYPE('stream'\x2C 'WritableStream'\x2C stream);\n    this[kState] = {\n      stream: undefined\x2C\n      close: {\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n      ready: {\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n    };\n    setupWritableStreamDefaultWriter(this\x2C stream);\n  }\n\n  /**\n   * @readonly\n   * @type {Promise<void>}\n   */\n  get closed() {\n    if (!isWritableStreamDefaultWriter(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStreamDefaultWriter'));\n    return this[kState].close.promise;\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get desiredSize() {\n    if (!isWritableStreamDefaultWriter(this))\n      throw new ERR_INVALID_THIS('WritableStreamDefaultWriter');\n    if (this[kState].stream === undefined) {\n      throw new ERR_INVALID_STATE.TypeError(\n        'Writer is not bound to a WritableStream');\n    }\n    return writableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * @readonly\n   * @type {Promise<void>}\n   */\n  get ready() {\n    if (!isWritableStreamDefaultWriter(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStreamDefaultWriter'));\n    return this[kState].ready.promise;\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {Promise<void>}\n   */\n  abort(reason = undefined) {\n    if (!isWritableStreamDefaultWriter(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStreamDefaultWriter'));\n    if (this[kState].stream === undefined) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError(\n          'Writer is not bound to a WritableStream'));\n    }\n    return writableStreamDefaultWriterAbort(this\x2C reason);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close() {\n    if (!isWritableStreamDefaultWriter(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStreamDefaultWriter'));\n    const {\n      stream\x2C\n    } = this[kState];\n    if (stream === undefined) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError(\n          'Writer is not bound to a WritableStream'));\n    }\n    if (writableStreamCloseQueuedOrInFlight(stream)) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError('Failure to close WritableStream'));\n    }\n    return writableStreamDefaultWriterClose(this);\n  }\n\n  releaseLock() {\n    if (!isWritableStreamDefaultWriter(this))\n      throw new ERR_INVALID_THIS('WritableStreamDefaultWriter');\n    const {\n      stream\x2C\n    } = this[kState];\n    if (stream === undefined)\n      return;\n    assert(stream[kState].writer !== undefined);\n    writableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * @param {any} [chunk]\n   * @returns {Promise<void>}\n   */\n  write(chunk = undefined) {\n    if (!isWritableStreamDefaultWriter(this))\n      return PromiseReject(new ERR_INVALID_THIS('WritableStreamDefaultWriter'));\n    if (this[kState].stream === undefined) {\n      return PromiseReject(\n        new ERR_INVALID_STATE.TypeError(\n          'Writer is not bound to a WritableStream'));\n    }\n    return writableStreamDefaultWriterWrite(this\x2C chunk);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      stream: this[kState].stream\x2C\n      close: this[kState].close.promise\x2C\n      ready: this[kState].ready.promise\x2C\n      desiredSize: this.desiredSize\x2C\n    });\n  }\n}\n\nObjectDefineProperties(WritableStreamDefaultWriter.prototype\x2C {\n  closed: kEnumerableProperty\x2C\n  ready: kEnumerableProperty\x2C\n  desiredSize: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  releaseLock: kEnumerableProperty\x2C\n  write: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(WritableStreamDefaultWriter.name)\x2C\n});\n\nclass WritableStreamDefaultController {\n  [kType] = 'WritableStreamDefaultController';\n\n  constructor(skipThrowSymbol = undefined) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  [kAbort](reason) {\n    const result = this[kState].abortAlgorithm(reason);\n    writableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [kError]() {\n    resetQueue(this);\n  }\n\n  /**\n   * @type {AbortSignal}\n   */\n  get signal() {\n    if (!isWritableStreamDefaultController(this))\n      throw new ERR_INVALID_THIS('WritableStreamDefaultController');\n    return this[kState].abortController.signal;\n  }\n\n  /**\n   * @param {any} [error]\n   */\n  error(error = undefined) {\n    if (!isWritableStreamDefaultController(this))\n      throw new ERR_INVALID_THIS('WritableStreamDefaultController');\n    if (this[kState].stream[kState].state !== 'writable')\n      return;\n    writableStreamDefaultControllerError(this\x2C error);\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      stream: this[kState].stream\x2C\n    });\n  }\n}\n\nObjectDefineProperties(WritableStreamDefaultController.prototype\x2C {\n  signal: kEnumerableProperty\x2C\n  error: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(WritableStreamDefaultController.name)\x2C\n});\n\nfunction InternalWritableStream(start\x2C write\x2C close\x2C abort\x2C highWaterMark\x2C size) {\n  ObjectSetPrototypeOf(this\x2C WritableStream.prototype);\n  markTransferMode(this\x2C false\x2C true);\n  this[kType] = 'WritableStream';\n  this[kState] = createWritableStreamState();\n  this[kIsClosedPromise] = PromiseWithResolvers();\n\n  const controller = new WritableStreamDefaultController(kSkipThrow);\n  setupWritableStreamDefaultController(\n    this\x2C\n    controller\x2C\n    start\x2C\n    write\x2C\n    close\x2C\n    abort\x2C\n    highWaterMark\x2C\n    size\x2C\n  );\n}\n\nObjectSetPrototypeOf(InternalWritableStream.prototype\x2C WritableStream.prototype);\nObjectSetPrototypeOf(InternalWritableStream\x2C WritableStream);\n\nfunction createWritableStream(start\x2C write\x2C close\x2C abort\x2C highWaterMark = 1\x2C size = () => 1) {\n  const stream = new InternalWritableStream(start\x2C write\x2C close\x2C abort\x2C highWaterMark\x2C size);\n\n  // For spec compliance the InternalWritableStream must be a WritableStream\n  stream.constructor = WritableStream;\n  return stream;\n}\n\nconst isWritableStream =\n  isBrandCheck('WritableStream');\nconst isWritableStreamDefaultWriter =\n  isBrandCheck('WritableStreamDefaultWriter');\nconst isWritableStreamDefaultController =\n  isBrandCheck('WritableStreamDefaultController');\n\nfunction createWritableStreamState() {\n  return {\n    __proto__: null\x2C\n    close: PromiseWithResolvers()\x2C\n    closeRequest: {\n      __proto__: null\x2C\n      promise: undefined\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    }\x2C\n    inFlightWriteRequest: {\n      __proto__: null\x2C\n      promise: undefined\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    }\x2C\n    inFlightCloseRequest: {\n      __proto__: null\x2C\n      promise: undefined\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    }\x2C\n    pendingAbortRequest: {\n      __proto__: null\x2C\n      abort: {\n        __proto__: null\x2C\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n      reason: undefined\x2C\n      wasAlreadyErroring: false\x2C\n    }\x2C\n    backpressure: false\x2C\n    controller: undefined\x2C\n    state: 'writable'\x2C\n    storedError: undefined\x2C\n    writeRequests: []\x2C\n    writer: undefined\x2C\n    transfer: {\n      __proto__: null\x2C\n      readable: undefined\x2C\n      port1: undefined\x2C\n      port2: undefined\x2C\n      promise: undefined\x2C\n    }\x2C\n  };\n}\n\nfunction isWritableStreamLocked(stream) {\n  return stream[kState].writer !== undefined;\n}\n\nfunction setupWritableStreamDefaultWriter(writer\x2C stream) {\n  if (isWritableStreamLocked(stream))\n    throw new ERR_INVALID_STATE.TypeError('WritableStream is locked');\n  writer[kState].stream = stream;\n  stream[kState].writer = writer;\n  switch (stream[kState].state) {\n    case 'writable':\n      if (!writableStreamCloseQueuedOrInFlight(stream) &&\n          stream[kState].backpressure) {\n        writer[kState].ready = PromiseWithResolvers();\n      } else {\n        writer[kState].ready = {\n          promise: PromiseResolve()\x2C\n          resolve: undefined\x2C\n          reject: undefined\x2C\n        };\n      }\n      setClosedPromiseToNewPromise();\n      break;\n    case 'erroring':\n      writer[kState].ready = {\n        promise: PromiseReject(stream[kState].storedError)\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      setPromiseHandled(writer[kState].ready.promise);\n      setClosedPromiseToNewPromise();\n      break;\n    case 'closed':\n      writer[kState].ready = {\n        promise: PromiseResolve()\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      writer[kState].close = {\n        promise: PromiseResolve()\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      break;\n    default:\n      writer[kState].ready = {\n        promise: PromiseReject(stream[kState].storedError)\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      writer[kState].close = {\n        promise: PromiseReject(stream[kState].storedError)\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      };\n      setPromiseHandled(writer[kState].ready.promise);\n      setPromiseHandled(writer[kState].close.promise);\n  }\n\n  function setClosedPromiseToNewPromise() {\n    writer[kState].close = PromiseWithResolvers();\n  }\n}\n\nfunction writableStreamAbort(stream\x2C reason) {\n  const {\n    state\x2C\n    controller\x2C\n  } = stream[kState];\n  if (state === 'closed' || state === 'errored')\n    return PromiseResolve();\n\n  controller[kState].abortController.abort(reason);\n\n  if (stream[kState].pendingAbortRequest.abort.promise !== undefined)\n    return stream[kState].pendingAbortRequest.abort.promise;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    reason = undefined;\n  }\n\n  const abort = PromiseWithResolvers();\n\n  stream[kState].pendingAbortRequest = {\n    abort\x2C\n    reason\x2C\n    wasAlreadyErroring\x2C\n  };\n\n  if (!wasAlreadyErroring)\n    writableStreamStartErroring(stream\x2C reason);\n\n  return abort.promise;\n}\n\nfunction writableStreamClose(stream) {\n  const {\n    state\x2C\n    writer\x2C\n    backpressure\x2C\n    controller\x2C\n  } = stream[kState];\n  if (state === 'closed' || state === 'errored') {\n    return PromiseReject(\n      new ERR_INVALID_STATE.TypeError('WritableStream is closed'));\n  }\n  assert(state === 'writable' || state === 'erroring');\n  assert(!writableStreamCloseQueuedOrInFlight(stream));\n  stream[kState].closeRequest = PromiseWithResolvers();\n  const { promise } = stream[kState].closeRequest;\n  if (writer !== undefined && backpressure && state === 'writable')\n    writer[kState].ready.resolve?.();\n  writableStreamDefaultControllerClose(controller);\n  return promise;\n}\n\nfunction writableStreamUpdateBackpressure(stream\x2C backpressure) {\n  assert(stream[kState].state === 'writable');\n  assert(!writableStreamCloseQueuedOrInFlight(stream));\n  const {\n    writer\x2C\n  } = stream[kState];\n  if (writer !== undefined && stream[kState].backpressure !== backpressure) {\n    if (backpressure) {\n      writer[kState].ready = PromiseWithResolvers();\n    } else {\n      writer[kState].ready.resolve?.();\n    }\n  }\n  stream[kState].backpressure = backpressure;\n}\n\nfunction writableStreamStartErroring(stream\x2C reason) {\n  assert(stream[kState].storedError === undefined);\n  assert(stream[kState].state === 'writable');\n  const {\n    controller\x2C\n    writer\x2C\n  } = stream[kState];\n  assert(controller !== undefined);\n  stream[kState].state = 'erroring';\n  stream[kState].storedError = reason;\n  if (writer !== undefined) {\n    writableStreamDefaultWriterEnsureReadyPromiseRejected(writer\x2C reason);\n  }\n  if (!writableStreamHasOperationMarkedInFlight(stream) &&\n      controller[kState].started) {\n    writableStreamFinishErroring(stream);\n  }\n}\n\nfunction writableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n  assert(stream[kState].state === 'errored');\n  if (stream[kState].closeRequest.promise !== undefined) {\n    assert(stream[kState].inFlightCloseRequest.promise === undefined);\n    stream[kState].closeRequest.reject?.(stream[kState].storedError);\n    stream[kState].closeRequest = {\n      promise: undefined\x2C\n      reject: undefined\x2C\n      resolve: undefined\x2C\n    };\n  }\n\n  setPromiseHandled(stream[kIsClosedPromise].promise);\n  stream[kIsClosedPromise].reject(stream[kState]?.storedError);\n\n  const {\n    writer\x2C\n  } = stream[kState];\n  if (writer !== undefined) {\n    setPromiseHandled(writer[kState].close.promise);\n    writer[kState].close.reject?.(stream[kState].storedError);\n  }\n}\n\nfunction writableStreamMarkFirstWriteRequestInFlight(stream) {\n  assert(stream[kState].inFlightWriteRequest.promise === undefined);\n  assert(stream[kState].writeRequests.length);\n  const writeRequest = ArrayPrototypeShift(stream[kState].writeRequests);\n  stream[kState].inFlightWriteRequest = writeRequest;\n}\n\nfunction writableStreamMarkCloseRequestInFlight(stream) {\n  assert(stream[kState].inFlightWriteRequest.promise === undefined);\n  assert(stream[kState].closeRequest.promise !== undefined);\n  stream[kState].inFlightCloseRequest = stream[kState].closeRequest;\n  stream[kState].closeRequest = {\n    promise: undefined\x2C\n    resolve: undefined\x2C\n    reject: undefined\x2C\n  };\n}\n\nfunction writableStreamHasOperationMarkedInFlight(stream) {\n  const {\n    inFlightWriteRequest\x2C\n    inFlightCloseRequest\x2C\n  } = stream[kState];\n  if (inFlightWriteRequest.promise === undefined &&\n      inFlightCloseRequest.promise === undefined) {\n    return false;\n  }\n  return true;\n}\n\nfunction writableStreamFinishInFlightWriteWithError(stream\x2C error) {\n  assert(stream[kState].inFlightWriteRequest.promise !== undefined);\n  stream[kState].inFlightWriteRequest.reject?.(error);\n  stream[kState].inFlightWriteRequest = {\n    promise: undefined\x2C\n    resolve: undefined\x2C\n    reject: undefined\x2C\n  };\n  assert(stream[kState].state === 'writable' ||\n         stream[kState].state === 'erroring');\n  writableStreamDealWithRejection(stream\x2C error);\n}\n\nfunction writableStreamFinishInFlightWrite(stream) {\n  assert(stream[kState].inFlightWriteRequest.promise !== undefined);\n  stream[kState].inFlightWriteRequest.resolve?.();\n  stream[kState].inFlightWriteRequest = {\n    promise: undefined\x2C\n    resolve: undefined\x2C\n    reject: undefined\x2C\n  };\n}\n\nfunction writableStreamFinishInFlightCloseWithError(stream\x2C error) {\n  assert(stream[kState].inFlightCloseRequest.promise !== undefined);\n  stream[kState].inFlightCloseRequest.reject?.(error);\n  stream[kState].inFlightCloseRequest = {\n    promise: undefined\x2C\n    resolve: undefined\x2C\n    reject: undefined\x2C\n  };\n  assert(stream[kState].state === 'writable' ||\n         stream[kState].state === 'erroring');\n  if (stream[kState].pendingAbortRequest.abort.promise !== undefined) {\n    stream[kState].pendingAbortRequest.abort.reject?.(error);\n    stream[kState].pendingAbortRequest = {\n      abort: {\n        promise: undefined\x2C\n        resolve: undefined\x2C\n        reject: undefined\x2C\n      }\x2C\n      reason: undefined\x2C\n      wasAlreadyErroring: false\x2C\n    };\n  }\n  writableStreamDealWithRejection(stream\x2C error);\n}\n\nfunction writableStreamFinishInFlightClose(stream) {\n  assert(stream[kState].inFlightCloseRequest.promise !== undefined);\n  stream[kState].inFlightCloseRequest.resolve?.();\n  stream[kState].inFlightCloseRequest = {\n    promise: undefined\x2C\n    resolve: undefined\x2C\n    reject: undefined\x2C\n  };\n  if (stream[kState].state === 'erroring') {\n    stream[kState].storedError = undefined;\n    if (stream[kState].pendingAbortRequest.abort.promise !== undefined) {\n      stream[kState].pendingAbortRequest.abort.resolve?.();\n      stream[kState].pendingAbortRequest = {\n        abort: {\n          promise: undefined\x2C\n          resolve: undefined\x2C\n          reject: undefined\x2C\n        }\x2C\n        reason: undefined\x2C\n        wasAlreadyErroring: false\x2C\n      };\n    }\n  }\n  stream[kState].state = 'closed';\n  if (stream[kState].writer !== undefined)\n    stream[kState].writer[kState].close.resolve?.();\n  stream[kIsClosedPromise].resolve?.();\n  assert(stream[kState].pendingAbortRequest.abort.promise === undefined);\n  assert(stream[kState].storedError === undefined);\n}\n\nfunction writableStreamFinishErroring(stream) {\n  assert(stream[kState].state === 'erroring');\n  assert(!writableStreamHasOperationMarkedInFlight(stream));\n  stream[kState].state = 'errored';\n  stream[kState].controller[kError]();\n  const storedError = stream[kState].storedError;\n  for (let n = 0; n < stream[kState].writeRequests.length; n++)\n    stream[kState].writeRequests[n].reject?.(storedError);\n  stream[kState].writeRequests = [];\n\n  if (stream[kState].pendingAbortRequest.abort.promise === undefined) {\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream[kState].pendingAbortRequest;\n  stream[kState].pendingAbortRequest = {\n    abort: {\n      promise: undefined\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    }\x2C\n    reason: undefined\x2C\n    wasAlreadyErroring: false\x2C\n  };\n  if (abortRequest.wasAlreadyErroring) {\n    abortRequest.abort.reject?.(storedError);\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n  PromisePrototypeThen(\n    stream[kState].controller[kAbort](abortRequest.reason)\x2C\n    () => {\n      abortRequest.abort.resolve?.();\n      writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }\x2C\n    (error) => {\n      abortRequest.abort.reject?.(error);\n      writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction writableStreamDealWithRejection(stream\x2C error) {\n  const {\n    state\x2C\n  } = stream[kState];\n  if (state === 'writable') {\n    writableStreamStartErroring(stream\x2C error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  writableStreamFinishErroring(stream);\n}\n\nfunction writableStreamCloseQueuedOrInFlight(stream) {\n  if (stream[kState].closeRequest.promise === undefined &&\n      stream[kState].inFlightCloseRequest.promise === undefined) {\n    return false;\n  }\n  return true;\n}\n\nfunction writableStreamAddWriteRequest(stream) {\n  assert(isWritableStreamLocked(stream));\n  assert(stream[kState].state === 'writable');\n  const {\n    promise\x2C\n    resolve\x2C\n    reject\x2C\n  } = PromiseWithResolvers();\n  ArrayPrototypePush(\n    stream[kState].writeRequests\x2C\n    {\n      promise\x2C\n      resolve\x2C\n      reject\x2C\n    });\n  return promise;\n}\n\nfunction writableStreamDefaultWriterWrite(writer\x2C chunk) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  assert(stream !== undefined);\n  const {\n    controller\x2C\n  } = stream[kState];\n  const chunkSize = writableStreamDefaultControllerGetChunkSize(\n    controller\x2C\n    chunk);\n  if (stream !== writer[kState].stream) {\n    return PromiseReject(\n      new ERR_INVALID_STATE.TypeError('Mismatched WritableStreams'));\n  }\n  const {\n    state\x2C\n  } = stream[kState];\n\n  if (state === 'errored')\n    return PromiseReject(stream[kState].storedError);\n\n  if (writableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return PromiseReject(\n      new ERR_INVALID_STATE.TypeError('WritableStream is closed'));\n  }\n\n  if (state === 'erroring')\n    return PromiseReject(stream[kState].storedError);\n\n  assert(state === 'writable');\n\n  const promise = writableStreamAddWriteRequest(stream);\n  writableStreamDefaultControllerWrite(controller\x2C chunk\x2C chunkSize);\n  return promise;\n}\n\nfunction writableStreamDefaultWriterRelease(writer) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  assert(stream !== undefined);\n  assert(stream[kState].writer === writer);\n  const releasedStateError = lazyWritableReleasedError();\n  writableStreamDefaultWriterEnsureReadyPromiseRejected(writer\x2C releasedStateError);\n  writableStreamDefaultWriterEnsureClosedPromiseRejected(writer\x2C releasedStateError);\n  stream[kState].writer = undefined;\n  writer[kState].stream = undefined;\n}\n\nfunction writableStreamDefaultWriterGetDesiredSize(writer) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  switch (stream[kState].state) {\n    case 'errored':\n      // Fall through\n    case 'erroring':\n      return null;\n    case 'closed':\n      return 0;\n  }\n  return writableStreamDefaultControllerGetDesiredSize(\n    stream[kState].controller);\n}\n\nfunction writableStreamDefaultWriterEnsureReadyPromiseRejected(writer\x2C error) {\n  if (isPromisePending(writer[kState].ready.promise)) {\n    writer[kState].ready.reject?.(error);\n  } else {\n    writer[kState].ready = {\n      promise: PromiseReject(error)\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    };\n  }\n  setPromiseHandled(writer[kState].ready.promise);\n}\n\nfunction writableStreamDefaultWriterEnsureClosedPromiseRejected(writer\x2C error) {\n  if (isPromisePending(writer[kState].close.promise)) {\n    writer[kState].close.reject?.(error);\n  } else {\n    writer[kState].close = {\n      promise: PromiseReject(error)\x2C\n      resolve: undefined\x2C\n      reject: undefined\x2C\n    };\n  }\n  setPromiseHandled(writer[kState].close.promise);\n}\n\nfunction writableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  assert(stream !== undefined);\n  const {\n    state\x2C\n  } = stream[kState];\n  if (writableStreamCloseQueuedOrInFlight(stream) || state === 'closed')\n    return PromiseResolve();\n\n  if (state === 'errored')\n    return PromiseReject(stream[kState].storedError);\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return writableStreamDefaultWriterClose(writer);\n}\n\nfunction writableStreamDefaultWriterClose(writer) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  assert(stream !== undefined);\n  return writableStreamClose(stream);\n}\n\nfunction writableStreamDefaultWriterAbort(writer\x2C reason) {\n  const {\n    stream\x2C\n  } = writer[kState];\n  assert(stream !== undefined);\n  return writableStreamAbort(stream\x2C reason);\n}\n\nfunction writableStreamDefaultControllerWrite(controller\x2C chunk\x2C chunkSize) {\n  try {\n    enqueueValueWithSize(controller\x2C chunk\x2C chunkSize);\n  } catch (error) {\n    writableStreamDefaultControllerErrorIfNeeded(controller\x2C error);\n    return;\n  }\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (!writableStreamCloseQueuedOrInFlight(stream) &&\n      stream[kState].state === 'writable') {\n    writableStreamUpdateBackpressure(\n      stream\x2C\n      writableStreamDefaultControllerGetBackpressure(controller));\n  }\n  writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction writableStreamDefaultControllerProcessWrite(controller\x2C chunk) {\n  const {\n    stream\x2C\n    writeAlgorithm\x2C\n  } = controller[kState];\n  writableStreamMarkFirstWriteRequestInFlight(stream);\n\n  PromisePrototypeThen(\n    writeAlgorithm(chunk\x2C controller)\x2C\n    () => {\n      writableStreamFinishInFlightWrite(stream);\n      const {\n        state\x2C\n      } = stream[kState];\n      assert(state === 'writable' || state === 'erroring');\n      dequeueValue(controller);\n      if (!writableStreamCloseQueuedOrInFlight(stream) &&\n          state === 'writable') {\n        writableStreamUpdateBackpressure(\n          stream\x2C\n          writableStreamDefaultControllerGetBackpressure(controller));\n      }\n      writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\x2C\n    (error) => {\n      if (stream[kState].state === 'writable')\n        writableStreamDefaultControllerClearAlgorithms(controller);\n      writableStreamFinishInFlightWriteWithError(stream\x2C error);\n    });\n\n}\n\nfunction writableStreamDefaultControllerProcessClose(controller) {\n  const {\n    closeAlgorithm\x2C\n    queue\x2C\n    stream\x2C\n  } = controller[kState];\n  writableStreamMarkCloseRequestInFlight(stream);\n  dequeueValue(controller);\n  assert(!queue.length);\n  const sinkClosePromise = closeAlgorithm();\n  writableStreamDefaultControllerClearAlgorithms(controller);\n  PromisePrototypeThen(\n    sinkClosePromise\x2C\n    () => writableStreamFinishInFlightClose(stream)\x2C\n    (error) => writableStreamFinishInFlightCloseWithError(stream\x2C error));\n}\n\nfunction writableStreamDefaultControllerGetDesiredSize(controller) {\n  const {\n    highWaterMark\x2C\n    queueTotalSize\x2C\n  } = controller[kState];\n  return highWaterMark - queueTotalSize;\n}\n\nfunction writableStreamDefaultControllerGetChunkSize(controller\x2C chunk) {\n  try {\n    return FunctionPrototypeCall(\n      controller[kState].sizeAlgorithm\x2C\n      undefined\x2C\n      chunk);\n  } catch (error) {\n    writableStreamDefaultControllerErrorIfNeeded(controller\x2C error);\n    return 1;\n  }\n}\n\nfunction writableStreamDefaultControllerErrorIfNeeded(controller\x2C error) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  if (stream[kState].state === 'writable')\n    writableStreamDefaultControllerError(controller\x2C error);\n}\n\nfunction writableStreamDefaultControllerError(controller\x2C error) {\n  const {\n    stream\x2C\n  } = controller[kState];\n  assert(stream[kState].state === 'writable');\n  writableStreamDefaultControllerClearAlgorithms(controller);\n  writableStreamStartErroring(stream\x2C error);\n}\n\nfunction writableStreamDefaultControllerClose(controller) {\n  enqueueValueWithSize(controller\x2C kCloseSentinel\x2C 0);\n  writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction writableStreamDefaultControllerClearAlgorithms(controller) {\n  controller[kState].writeAlgorithm = undefined;\n  controller[kState].closeAlgorithm = undefined;\n  controller[kState].abortAlgorithm = undefined;\n  controller[kState].sizeAlgorithm = undefined;\n}\n\nfunction writableStreamDefaultControllerGetBackpressure(controller) {\n  return writableStreamDefaultControllerGetDesiredSize(controller) <= 0;\n}\n\nfunction writableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  const {\n    queue\x2C\n    started\x2C\n    stream\x2C\n  } = controller[kState];\n  if (!started || stream[kState].inFlightWriteRequest.promise !== undefined)\n    return;\n\n  if (stream[kState].state === 'erroring') {\n    writableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (!queue.length)\n    return;\n\n  const value = peekQueueValue(controller);\n  if (value === kCloseSentinel)\n    writableStreamDefaultControllerProcessClose(controller);\n  else\n    writableStreamDefaultControllerProcessWrite(controller\x2C value);\n}\n\nfunction setupWritableStreamDefaultControllerFromSink(\n  stream\x2C\n  sink\x2C\n  highWaterMark\x2C\n  sizeAlgorithm) {\n  const controller = new WritableStreamDefaultController(kSkipThrow);\n  const start = sink?.start;\n  const write = sink?.write;\n  const close = sink?.close;\n  const abort = sink?.abort;\n  const startAlgorithm = start ?\n    FunctionPrototypeBind(start\x2C sink\x2C controller) :\n    nonOpStart;\n  const writeAlgorithm = write ?\n    createPromiseCallback('sink.write'\x2C write\x2C sink) :\n    nonOpWrite;\n  const closeAlgorithm = close ?\n    createPromiseCallback('sink.close'\x2C close\x2C sink) :\n    nonOpCancel;\n  const abortAlgorithm = abort ?\n    createPromiseCallback('sink.abort'\x2C abort\x2C sink) :\n    nonOpCancel;\n  setupWritableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    writeAlgorithm\x2C\n    closeAlgorithm\x2C\n    abortAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm);\n}\n\nfunction setupWritableStreamDefaultController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  writeAlgorithm\x2C\n  closeAlgorithm\x2C\n  abortAlgorithm\x2C\n  highWaterMark\x2C\n  sizeAlgorithm) {\n  assert(isWritableStream(stream));\n  assert(stream[kState].controller === undefined);\n  controller[kState] = {\n    abortAlgorithm\x2C\n    closeAlgorithm\x2C\n    highWaterMark\x2C\n    queue: []\x2C\n    queueTotalSize: 0\x2C\n    abortController: new AbortController()\x2C\n    sizeAlgorithm\x2C\n    started: false\x2C\n    stream\x2C\n    writeAlgorithm\x2C\n  };\n  stream[kState].controller = controller;\n  stream[kControllerErrorFunction] = FunctionPrototypeBind(controller.error\x2C controller);\n\n  writableStreamUpdateBackpressure(\n    stream\x2C\n    writableStreamDefaultControllerGetBackpressure(controller));\n\n  const startResult = startAlgorithm();\n\n  PromisePrototypeThen(\n    new Promise((r) => r(startResult))\x2C\n    () => {\n      assert(stream[kState].state === 'writable' ||\n             stream[kState].state === 'erroring');\n      controller[kState].started = true;\n      writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\x2C\n    (error) => {\n      assert(stream[kState].state === 'writable' ||\n             stream[kState].state === 'erroring');\n      controller[kState].started = true;\n      writableStreamDealWithRejection(stream\x2C error);\n    });\n}\n\nmodule.exports = {\n  WritableStream\x2C\n  WritableStreamDefaultWriter\x2C\n  WritableStreamDefaultController\x2C\n  TransferredWritableStream\x2C\n\n  // Exported Brand Checks\n  isWritableStream\x2C\n  isWritableStreamDefaultController\x2C\n  isWritableStreamDefaultWriter\x2C\n\n  isWritableStreamLocked\x2C\n  setupWritableStreamDefaultWriter\x2C\n  writableStreamAbort\x2C\n  writableStreamClose\x2C\n  writableStreamUpdateBackpressure\x2C\n  writableStreamStartErroring\x2C\n  writableStreamRejectCloseAndClosedPromiseIfNeeded\x2C\n  writableStreamMarkFirstWriteRequestInFlight\x2C\n  writableStreamMarkCloseRequestInFlight\x2C\n  writableStreamHasOperationMarkedInFlight\x2C\n  writableStreamFinishInFlightWriteWithError\x2C\n  writableStreamFinishInFlightWrite\x2C\n  writableStreamFinishInFlightCloseWithError\x2C\n  writableStreamFinishInFlightClose\x2C\n  writableStreamFinishErroring\x2C\n  writableStreamDealWithRejection\x2C\n  writableStreamCloseQueuedOrInFlight\x2C\n  writableStreamAddWriteRequest\x2C\n  writableStreamDefaultWriterWrite\x2C\n  writableStreamDefaultWriterRelease\x2C\n  writableStreamDefaultWriterGetDesiredSize\x2C\n  writableStreamDefaultWriterEnsureReadyPromiseRejected\x2C\n  writableStreamDefaultWriterEnsureClosedPromiseRejected\x2C\n  writableStreamDefaultWriterCloseWithErrorPropagation\x2C\n  writableStreamDefaultWriterClose\x2C\n  writableStreamDefaultWriterAbort\x2C\n  writableStreamDefaultControllerWrite\x2C\n  writableStreamDefaultControllerProcessWrite\x2C\n  writableStreamDefaultControllerProcessClose\x2C\n  writableStreamDefaultControllerGetDesiredSize\x2C\n  writableStreamDefaultControllerGetChunkSize\x2C\n  writableStreamDefaultControllerErrorIfNeeded\x2C\n  writableStreamDefaultControllerError\x2C\n  writableStreamDefaultControllerClose\x2C\n  writableStreamDefaultControllerClearAlgorithms\x2C\n  writableStreamDefaultControllerGetBackpressure\x2C\n  writableStreamDefaultControllerAdvanceQueueIfNeeded\x2C\n  setupWritableStreamDefaultControllerFromSink\x2C\n  setupWritableStreamDefaultController\x2C\n  createWritableStream\x2C\n};\n
code-source-info,0xbd5782505c8,178,0,38372,C0O0C4O38372,,
code-creation,JS,9,194625,0xbd578250ce0,1925, node:internal/webstreams/writablestream:1:1,0x38b0a83ad730,~
code-source-info,0xbd578250ce
code-creation,JS,9,194667,0xbd5782516e8,12,WritableStreamDefaultController node:internal/webstreams/writablestream:467:39,0x38b0a83af188,~
code-source-info,0xbd5782516e8,178,12035,13106,C3O12049C11O13106,,
code-creation,JS,9,194667,0xbd578251770,12,WritableStreamDefaultWriter node:internal/webstreams/writablestream:324:35,0x38b0a83aef18,~
code-source-info,0xbd578251770,178,8070,11612,C3O8084C11O11612,,
code-creation,JS,9,194708,0xbd5782517f8,12,WritableStream node:internal/webstreams/writablestream:156:22,0x38b0a83aeac8,~
code-source-info,0xbd5782517f8,178,3275,7110,C3O3289C11O7110,,
tick,0x192562efc,194708,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57824f202,0x107f89188,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,194875,0xbd578251880,14,getNonWritablePropertyDescriptor node:internal/webstreams/writablestream:107:42,0x38b0a83ae738,~
code-source-info,0xbd578251880,178,2246,2332,C0O2261C7O2319C13O2330,,
tick,0x100e6a37c,194917,0,0x0,0,0xbd578251180,0x107f89188,0x107f88e30,0xbd57824f202,0x107f89188,0x107f88e30,0x1a7c5b218296,0x101701af4,0xbd578241a74,0x107f91dc4,0x12ea9867fb9f,0x107f91dc4,0x12ea98660641,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,195083,0xbd578251910,14,getNonWritablePropertyDescriptor node:internal/webstreams/readablestream:172:42,0x38b0a83a3018,~
code-source-info,0xbd578251910,177,3822,3908,C0O3837C7O3895C13O3906,,
code-creation,JS,9,195292,0xbd5782519a0,14,webidl.dictionaryConverter node:internal/deps/undici/undici:3824:42,0x29e0963a2ab8,~
code-source-info,0xbd5782519a0,125,254746,256290,C0O254746C9O254767C13O256284,,
new,MemoryChunk,0x1ec6b0f40000,262144
code-creation,JS,9,195458,0xbd578251e88,1636,lib/web/fetch/request.js node:internal/deps/undici/undici:9477:29,0x38a74a5694d8,~
code-source-info,0xbd578251e
code-creation,JS,9,195500,0xbd578252730,15,_Request node:internal/deps/undici/undici:9538:34,0x1ec6b0f41198,~
code-source-info,0xbd578252730,125,457691,475804,C0O457716C8O457716C14O475804,,
code-creation,JS,9,195542,0xbd578252820,113,lib/web/fetch/dispatcher-weakref.js node:internal/deps/undici/undici:9429:40,0x38a74a569428,~
code-source-info,0xbd578252820,125,453990,455213,C0O453990C5O454062C10O454062C14O454040C20O454052C26O454105C60O454105C62O454389C101O454389C103O454844C107O454860C112O455212,,
code-creation,JS,9,195542,0xbd578252928,15, node:internal/deps/undici/undici:9443:33,0x1ec6b0f427b0,~
code-source-info,0xbd578252928,125,454395,454838,C0O454420C8O454420C14O454838,,
code-creation,JS,9,195542,0xbd5782529b0,15, node:internal/deps/undici/undici:9432:31,0x1ec6b0f42668,~
code-source-info,0xbd5782529b0,125,454111,454361,C0O454136C8O454136C14O454361,,
code-creation,JS,9,195583,0xbd578252a88,101,module2.exports node:internal/deps/undici/undici:9462:31,0x1ec6b0f427f0,~
code-source-info,0xbd578252a88,125,454870,455208,C0O454881C5O454893C10O454897C21O454925C26O454933C34O454933C41O454962C46O454970C54O454970C59O455045C66O455073C72O455120C78O455146C79O455161C84O455170C91O455179C100O455202,,
code-creation,JS,9,195667,0xbd578252b88,14,webidl.nullableConverter node:internal/deps/undici/undici:3865:40,0x29e0963a2b50,~
code-source-info,0xbd578252b88,125,256331,256502,C0O256331C9O256351C13O256496,,
code-creation,JS,9,195875,0xbd578252fb8,1480,lib/web/websocket/events.js node:internal/deps/undici/undici:11263:32,0x38a74a569878,~
code-source-info,0xbd578252fb
code-creation,JS,9,195917,0xbd578253760,15,_ErrorEvent node:internal/deps/undici/undici:11364:55,0x1ec6b0f456c8,~
code-source-info,0xbd578253760,125,528854,529933,C0O528879C8O528879C14O529933,,
code-creation,JS,9,195917,0xbd5782537d0,11,_ErrorEvent node:internal/deps/undici/undici:11364:55,0x1ec6b0f45688,~
code-source-info,0xbd5782537d0,125,528854,529933,C4O528921C10O529933,,
code-creation,JS,9,195958,0xbd578253858,15,_CloseEvent node:internal/deps/undici/undici:11337:55,0x1ec6b0f45398,~
code-source-info,0xbd578253858,125,527950,528798,C0O527975C8O527975C14O528798,,
code-creation,JS,9,195958,0xbd5782538c8,11,_CloseEvent node:internal/deps/undici/undici:11337:55,0x1ec6b0f45358,~
code-source-info,0xbd5782538c8,125,527950,528798,C4O528017C10O528798,,
code-creation,JS,9,195958,0xbd578253950,15,_MessageEvent node:internal/deps/undici/undici:11269:59,0x1ec6b0f45160,~
code-source-info,0xbd578253950,125,525476,527768,C0O525501C8O525501C14O527768,,
code-creation,JS,9,195958,0xbd5782539c0,11,_MessageEvent node:internal/deps/undici/undici:11269:59,0x1ec6b0f45120,~
code-source-info,0xbd5782539c0,125,525476,527768,C4O525545C10O527768,,
tick,0x1924008a0,196000,0,0x0,3,0x107f91dc4,0x12ea98660707,0x107f89188,0x107f88e30,0x12ea9865fa9e,0x12ea9865fa03,0x101779e2c,0x107f912b4,0x107f8fabc,0x1a7c5b205db2,0x10166ef98,0x1a7c5b205c88,0x12ea9865098a,0x12ea9864ff3c,0x12ea9864742d,0x1016a9290
code-creation,JS,9,196125,0xbd578253de0,1101,lib/web/websocket/websocket.js node:internal/deps/undici/undici:12521:35,0x38a74a569ef8,~
code-source-info,0xbd578253de
code-creation,JS,9,196208,0xbd578254408,15,_WebSocket node:internal/deps/undici/undici:12550:58,0x1ec6b0f49b10,~
code-source-info,0xbd578254408,125,569234,578299,C0O569259C8O569259C14O578299,,
code-creation,JS,9,196208,0xbd578254498,52,_WebSocket node:internal/deps/undici/undici:12550:58,0x1ec6b0f49ad0,~
code-source-info,0xbd578254498,125,569234,578299,C3O569310C15O569429C24O569450C34O569474C45O569515C51O578299,,
code-creation,JS,9,196250,0xbd5782545e8,124,lib/web/websocket/constants.js node:internal/deps/undici/undici:11538:35,0x38a74a5699b8,~
code-source-info,0xbd5782545e8,125,533791,534841,C0O533845C3O533921C8O534020C13O534129C18O534210C23O534347C30O534383C35O534502C39O534509C46O534509C52O534545C57O534632C64O534658C70O534669C76O534696C82O534729C88O534743C94O534758C100O534782C106O534802C112O534821C118O534648C123O534840,,
code-creation,JS,9,196292,0xbd5782547a0,133,lib/web/websocket/symbols.js node:internal/deps/undici/undici:11595:33,0x38a74a569a10,~
code-source-info,0xbd5782547a0,125,534947,535348,C0O534991C5O535032C12O535032C20O535066C27O535066C35O535108C42O535108C50O535147C57O535147C65O535186C72O535186C80O535227C87O535227C95O535271C102O535271C110O535316C117O535316C127O535007C132O535347,,
code-creation,JS,9,196375,0xbd578254a88,616,lib/web/websocket/util.js node:internal/deps/undici/undici:11612:30,0x38a74a569a68,~
code-source-info,0xbd578254a
code-creation,JS,9,196458,0xbd578254f78,389,lib/web/websocket/connection.js node:internal/deps/undici/undici:11878:36,0x38a74a569c20,~
code-source-info,0xbd578254f
code-creation,JS,9,196500,0xbd578255298,161,lib/web/websocket/frame.js node:internal/deps/undici/undici:11797:31,0x38a74a569b80,~
code-source-info,0xbd578255298,125,541820,544257,C0O541820C11O541891C16O541891C20O541870C26O541935C30O541935C32O541975C33O541975C35O541998C37O541998C42O542027C50O542036C54O542034C60O542080C70O542179C78O542179C89O542087C91O542704C102O542704C107O542771C142O544202C149O544228C155O544218C160O544256,,
code-creation,JS,9,196500,0xbd5782553e8,15, node:internal/deps/undici/undici:11825:36,0x1ec6b0f4d8a8,~
code-source-info,0xbd5782553e8,125,542777,544196,C0O542802C8O542802C14O544196,,
code-creation,JS,9,196583,0xbd5782555e0,411,lib/web/websocket/receiver.js node:internal/deps/undici/undici:12126:34,0x38a74a569d88,~
code-source-info,0xbd5782555e
code-creation,JS,9,196583,0xbd578255860,15, node:internal/deps/undici/undici:12146:45,0x1ec6b0f4e370,~
code-source-info,0xbd578255860,125,554821,565499,C0O554846C8O554846C14O565499,,
code-creation,JS,9,196625,0xbd5782558e8,75, node:internal/deps/undici/undici:12146:45,0x1ec6b0f4e330,~
code-source-info,0xbd5782558e8,125,554821,565499,C3O554899C13O554923C22O554940C31O554975C36O554975C48O554995C57O555018C68O555080C74O565499,,
code-creation,JS,9,196667,0xbd578255a70,186,lib/web/websocket/permessage-deflate.js node:internal/deps/undici/undici:12068:44,0x38a74a569cf8,~
code-source-info,0xbd578255a70,125,551915,553902,C0O551915C5O552008C13O552008C18O551965C24O551983C30O552068C35O552068C39O552040C45O552100C49O552107C59O552107C64O552100C66O552149C73O552149C77O552149C79O552186C86O552186C90O552186C96O552233C167O553858C174O553878C180O553874C185O553901,,
code-creation,JS,9,196667,0xbd578255bd8,15, node:internal/deps/undici/undici:12075:35,0x1ec6b0f4ea30,~
code-source-info,0xbd578255bd8,125,552239,553852,C0O552264C8O552264C14O553852,,
code-creation,JS,9,196667,0xbd578255c48,20, node:internal/deps/undici/undici:12075:35,0x1ec6b0f4e9f0,~
code-source-info,0xbd578255c48,125,552239,553852,C4O552365C12O552392C19O553852,,
code-creation,JS,9,196750,0xbd578255da0,235,lib/web/websocket/sender.js node:internal/deps/undici/undici:12434:32,0x38a74a569e48,~
code-source-info,0xbd578255da0,125,565654,568038,C0O565654C17O565727C22O565727C26O565704C32O565777C37O565777C41O565754C47O565763C53O565820C58O565820C61O565820C63O565864C67O565871C71O565878C75O565870C78O565864C84O565908C184O567570C195O567570C200O567968C211O567968C216O568002C223O568022C229O568018C234O568037,,
code-creation,JS,9,196792,0xbd578255f38,15, node:internal/deps/undici/undici:12440:27,0x1ec6b0f4f5d8,~
code-source-info,0xbd578255f38,125,565914,567389,C0O565939C8O565939C14O567389,,
code-creation,JS,9,196792,0xbd578255fa8,38, node:internal/deps/undici/undici:12440:27,0x1ec6b0f4f598,~
code-source-info,0xbd578255fa8,125,565914,567389,C3O566037C8O566037C21O566117C31O566177C37O567389,,
code-creation,JS,9,196917,0xbd5782562b0,716,lib/web/eventsource/eventsource.js node:internal/deps/undici/undici:13175:39,0x38a74a56a190,~
code-source-info,0xbd5782562b
code-creation,JS,9,196958,0xbd5782566d0,15,_EventSource node:internal/deps/undici/undici:13195:62,0x1ec6b0f512b0,~
code-source-info,0xbd5782566d0,125,590280,598013,C0O590305C8O590305C14O598013,,
code-creation,JS,9,196958,0xbd578256758,80,_EventSource node:internal/deps/undici/undici:13195:62,0x1ec6b0f51270,~
code-source-info,0xbd578256758,125,590280,598013,C3O590358C15O590445C24O590476C33O590503C45O590532C54O590558C64O590570C73O590677C79O598013,,
code-creation,JS,9,197000,0xbd5782568b8,144,lib/web/eventsource/eventsource-stream.js node:internal/deps/undici/undici:12942:46,0x38a74a56a0e8,~
code-source-info,0xbd5782568b8,125,582753,589288,C0O582753C5O582817C13O582817C18O582803C23O582889C28O582889C32O582851C38O582866C44O582920C48O582920C50O582950C52O582950C54O582967C56O582967C58O582987C60O582987C62O583007C64O583007C66O583039C125O589234C132O589260C138O589250C143O589287,,
code-creation,JS,9,197000,0xbd5782569f0,15, node:internal/deps/undici/undici:12951:53,0x1ec6b0f52098,~
code-source-info,0xbd5782569f0,125,583063,589228,C0O583088C8O583088C14O589228,,
code-creation,JS,9,197000,0xbd578256ac8,63, node:internal/deps/undici/undici:12951:53,0x1ec6b0f52058,~
code-source-info,0xbd578256ac8,125,583063,589228,C0O583202C5O583310C10O583379C15O583453C20O583519C25O583537C30O583554C36O583570C41O583593C46O583613C51O583636C62O589228,,
code-creation,JS,9,197042,0xbd578256bd0,79,lib/web/eventsource/util.js node:internal/deps/undici/undici:12910:32,0x38a74a56a058,~
code-source-info,0xbd578256bd0,125,581884,582611,C0O581884C15O582016C21O582016C26O582328C32O582328C37O582494C43O582494C48O582522C55O582548C61O582574C67O582595C73O582538C78O582610,,
code-creation,JS,9,197083,0xbd578256cb0,12,get node:http:186:6,0xcb65973e468,~
code-source-info,0xbd578256cb0,94,6198,6242,C0O6207C3O6214C7O6226C11O6238,,
code-creation,JS,9,197125,0xbd578256d38,12,get node:http:195:6,0xcb65973e4c0,~
code-source-info,0xbd578256d38,94,6370,6416,C0O6379C3O6386C7O6398C11O6412,,
code-creation,JS,9,197167,0xbd578256dc0,19,createServer node:http:62:22,0xcb65973e150,~
code-source-info,0xbd578256dc0,94,2147,2218,C0O2175C13O2182C18O2216,,
tick,0x1925629f4,197208,0,0x0,3,0x12ea98650376,0x1016ab5a4,0x10166ef98,0x12ea9864e44d,0x1016a9290
code-creation,JS,9,197292,0xbd578256ef8,244,Server node:_http_server:535:16,0x2858598a7670,~
code-source-info,0xbd578256ef8,124,18192,19371,C0O18223C2O18234C7O18254C18O18261C23O18298C24O18302C30O18343C33O18374C41O18407C46O18434C54O18473C62O18473C67O18516C70O18533C75O18533C81O18556C86O18560C91O18567C101O18627C117O18669C125O18717C133O18769C141O18567C147O18790C151O18822C159O18822C165O19082C166O19105C170O19122C181O19122C187O19167C198O19167C204O19213C205O19226C209O19233C210O19254C214O19264C215O19290C219O19298C221O19303C226O19321C229O19354C234O19321C238O19319C243O19370,,
code-creation,JS,9,197333,0xbd578257190,365,Server node:net:1741:16,0x15988e449cb0,~
code-source-info,0xbd
code-creation,JS,9,197417,0xbd5782574c8,435,storeHTTPOptions node:_http_server:444:26,0x2858598a7568,~
code-source-info,0xbd5782574c
code-creation,JS,9,197542,0xbd5782577e8,76,parseUniqueHeadersOption node:_http_outgoing:683:34,0x28585989d848,~
code-source-info,0xbd5782577e8,122,20973,21196,C0O20987C5O20992C11O21021C12O21033C13O21056C18O21056C24O21091C29O21114C31O21119C33O21119C38O21142C45O21153C49O21157C54O21157C59O21142C64O21125C69O21101C73O21180C75O21194,,
code-creation,JS,9,197625,0xbd578257a20,853,Server.listen node:net:2010:35,0x15988e44b578,~
code-source-info,0xbd578257a
code-creation,JS,9,197708,0xbd578257f80,183,normalizeArgs node:net:285:23,0x15988e449450,~
code-source-info,0xbd578257f80,96,7461,8165,C0O7476C2O7493C8O7500C13O7513C18O7535C20O7539C24O7561C28O7573C30O7584C31O7605C32O7609C36O7630C38O7636C48O7717C55O7742C58O7746C64O7795C66O7808C72O7866C74O7879C78O7900C85O7907C92O7925C99O7951C101O7970C104O7964C108O8009C112O8016C115O8003C119O8024C123O8058C132O8065C143O8092C152O8099C161O8108C170O8116C172O8120C176O8142C180O8152C182O8163,,
code-creation,JS,9,197750,0xbd5782580e8,18,isPipeName node:net:203:20,0x15988e4491e8,~
code-source-info,0xbd5782580e8,96,5463,5527,C0O5471C9O5503C17O5525,,
code-creation,JS,9,197792,0xbd578258178,23,toNumber node:net:1799:18,0x15988e449d08,~
code-source-info,0xbd578258178,96,49594,49642,C0O49600C5O49612C12O49623C22O49640,,
code-creation,JS,9,197833,0xbd578258228,57,getFlags node:net:167:18,0x15988e4490e0,~
code-source-info,0xbd578258228,96,4703,4915,C0O4729C2O4746C12O4771C14O4780C17O4793C28O4828C38O4854C40O4863C43O4876C54O4900C56O4913,,
code-creation,JS,9,197833,0xbd578258340,122,addServerAbortSignalOption node:net:1724:36,0x15988e449c58,~
code-source-info,0xbd578258340,96,47457,47852,C0O47457C9O47477C16O47488C25O47518C26O47525C27O47532C34O47560C42O47532C47O47597C52O47637C57O47681C63O47696C68O47704C73O47704C80O47759C87O47759C93O47800C96O47805C108O47830C110O47829C114O47805C121O47851,,
code-creation,JS,9,197875,0xbd578258488,91,lookupAndListen node:net:2163:25,0x15988e449ff0,~
code-source-info,0xbd578258488,96,61145,61742,C0O61145C28O61223C36O61246C44O61252C48O61250C52O61290C55O61295C59O61290C61O61312C66O61316C71O61323C84O61316C90O61741,,
code-creation,Eval,9,198042,0xbd578258578,5, node:dns:1:1,0x1ec6b0f5b390,~
script-source,179,node:dns,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst cares = internalBinding('cares_wrap');\nconst { isIP } = require('internal/net');\nconst { customPromisifyArgs } = require('internal/util');\nconst {\n  DNSException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  bindDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultResultOrder\x2C\n  setDefaultResultOrder\x2C\n  errorCodes: dnsErrorCodes\x2C\n} = require('internal/dns/utils');\nconst {\n  Resolver\x2C\n} = require('internal/dns/callback_resolver');\nconst {\n  NODATA\x2C\n  FORMERR\x2C\n  SERVFAIL\x2C\n  NOTFOUND\x2C\n  NOTIMP\x2C\n  REFUSED\x2C\n  BADQUERY\x2C\n  BADNAME\x2C\n  BADFAMILY\x2C\n  BADRESP\x2C\n  CONNREFUSED\x2C\n  TIMEOUT\x2C\n  EOF\x2C\n  FILE\x2C\n  NOMEM\x2C\n  DESTRUCTION\x2C\n  BADSTR\x2C\n  BADFLAGS\x2C\n  NONAME\x2C\n  BADHINTS\x2C\n  NOTINITIALIZED\x2C\n  LOADIPHLPAPI\x2C\n  ADDRGETNETWORKPARAMS\x2C\n  CANCELLED\x2C\n} = dnsErrorCodes;\nconst {\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateNumber\x2C\n  validateOneOf\x2C\n  validatePort\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  GetAddrInfoReqWrap\x2C\n  GetNameInfoReqWrap\x2C\n  DNS_ORDER_VERBATIM\x2C\n  DNS_ORDER_IPV4_FIRST\x2C\n  DNS_ORDER_IPV6_FIRST\x2C\n} = cares;\n\nconst kPerfHooksDnsLookupContext = Symbol('kPerfHooksDnsLookupContext');\nconst kPerfHooksDnsLookupServiceContext = Symbol('kPerfHooksDnsLookupServiceContext');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nlet promises = null; // Lazy loaded\n\nfunction onlookup(err\x2C addresses) {\n  if (err) {\n    return this.callback(new DNSException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n  this.callback(null\x2C addresses[0]\x2C this.family || isIP(addresses[0]));\n  if (this[kPerfHooksDnsLookupContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupContext\x2C { detail: { addresses } });\n  }\n}\n\n\nfunction onlookupall(err\x2C addresses) {\n  if (err) {\n    return this.callback(new DNSException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n\n  const family = this.family;\n  for (let i = 0; i < addresses.length; i++) {\n    const addr = addresses[i];\n    addresses[i] = {\n      address: addr\x2C\n      family: family || isIP(addr)\x2C\n    };\n  }\n\n  this.callback(null\x2C addresses);\n  if (this[kPerfHooksDnsLookupContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupContext\x2C { detail: { addresses } });\n  }\n}\n\n\n// Easy DNS A/AAAA look up\n// lookup(hostname\x2C [options\x2C] callback)\nconst validFamilies = [0\x2C 4\x2C 6];\nfunction lookup(hostname\x2C options\x2C callback) {\n  let hints = 0;\n  let family = 0;\n  let all = false;\n  let dnsOrder = getDefaultResultOrder();\n\n  // Parse arguments\n  if (hostname) {\n    validateString(hostname\x2C 'hostname');\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n    family = 0;\n  } else if (typeof options === 'number') {\n    validateFunction(callback\x2C 'callback');\n\n    validateOneOf(options\x2C 'family'\x2C validFamilies);\n    family = options;\n  } else if (options !== undefined && typeof options !== 'object') {\n    validateFunction(arguments.length === 2 ? options : callback\x2C 'callback');\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['integer'\x2C 'object']\x2C options);\n  } else {\n    validateFunction(callback\x2C 'callback');\n\n    if (options?.hints != null) {\n      validateNumber(options.hints\x2C 'options.hints');\n      hints = options.hints >>> 0;\n      validateHints(hints);\n    }\n    if (options?.family != null) {\n      switch (options.family) {\n        case 'IPv4':\n          family = 4;\n          break;\n        case 'IPv6':\n          family = 6;\n          break;\n        default:\n          validateOneOf(options.family\x2C 'options.family'\x2C validFamilies);\n          family = options.family;\n          break;\n      }\n    }\n    if (options?.all != null) {\n      validateBoolean(options.all\x2C 'options.all');\n      all = options.all;\n    }\n    if (options?.verbatim != null) {\n      validateBoolean(options.verbatim\x2C 'options.verbatim');\n      dnsOrder = options.verbatim ? 'verbatim' : 'ipv4first';\n    }\n    if (options?.order != null) {\n      validateOneOf(options.order\x2C 'options.order'\x2C ['ipv4first'\x2C 'ipv6first'\x2C 'verbatim']);\n      dnsOrder = options.order;\n    }\n  }\n\n  if (!hostname) {\n    emitInvalidHostnameWarning(hostname);\n    if (all) {\n      process.nextTick(callback\x2C null\x2C []);\n    } else {\n      process.nextTick(callback\x2C null\x2C null\x2C family === 6 ? 6 : 4);\n    }\n    return {};\n  }\n\n  const matchedFamily = isIP(hostname);\n  if (matchedFamily) {\n    if (all) {\n      process.nextTick(\n        callback\x2C null\x2C [{ address: hostname\x2C family: matchedFamily }]);\n    } else {\n      process.nextTick(callback\x2C null\x2C hostname\x2C matchedFamily);\n    }\n    return {};\n  }\n\n  const req = new GetAddrInfoReqWrap();\n  req.callback = callback;\n  req.family = family;\n  req.hostname = hostname;\n  req.oncomplete = all ? onlookupall : onlookup;\n\n  let order = DNS_ORDER_VERBATIM;\n\n  if (dnsOrder === 'ipv4first') {\n    order = DNS_ORDER_IPV4_FIRST;\n  } else if (dnsOrder === 'ipv6first') {\n    order = DNS_ORDER_IPV6_FIRST;\n  }\n\n  const err = cares.getaddrinfo(\n    req\x2C hostname\x2C family\x2C hints\x2C order\x2C\n  );\n  if (err) {\n    process.nextTick(callback\x2C new DNSException(err\x2C 'getaddrinfo'\x2C hostname));\n    return {};\n  }\n  if (hasObserver('dns')) {\n    const detail = {\n      hostname\x2C\n      family\x2C\n      hints\x2C\n      verbatim: order === DNS_ORDER_VERBATIM\x2C\n      order: dnsOrder\x2C\n    };\n\n    startPerf(req\x2C kPerfHooksDnsLookupContext\x2C { type: 'dns'\x2C name: 'lookup'\x2C detail });\n  }\n  return req;\n}\n\nObjectDefineProperty(lookup\x2C customPromisifyArgs\x2C\n                     { __proto__: null\x2C value: ['address'\x2C 'family']\x2C enumerable: false });\n\n\nfunction onlookupservice(err\x2C hostname\x2C service) {\n  if (err)\n    return this.callback(new DNSException(err\x2C 'getnameinfo'\x2C this.hostname));\n\n  this.callback(null\x2C hostname\x2C service);\n  if (this[kPerfHooksDnsLookupServiceContext] && hasObserver('dns')) {\n    stopPerf(this\x2C kPerfHooksDnsLookupServiceContext\x2C { detail: { hostname\x2C service } });\n  }\n}\n\n\nfunction lookupService(address\x2C port\x2C callback) {\n  if (arguments.length !== 3)\n    throw new ERR_MISSING_ARGS('address'\x2C 'port'\x2C 'callback');\n\n  if (isIP(address) === 0)\n    throw new ERR_INVALID_ARG_VALUE('address'\x2C address);\n\n  validatePort(port);\n\n  validateFunction(callback\x2C 'callback');\n\n  port = +port;\n\n  const req = new GetNameInfoReqWrap();\n  req.callback = callback;\n  req.hostname = address;\n  req.port = port;\n  req.oncomplete = onlookupservice;\n\n  const err = cares.getnameinfo(req\x2C address\x2C port);\n  if (err) throw new DNSException(err\x2C 'getnameinfo'\x2C address);\n  if (hasObserver('dns')) {\n    startPerf(req\x2C kPerfHooksDnsLookupServiceContext\x2C {\n      type: 'dns'\x2C\n      name: 'lookupService'\x2C\n      detail: {\n        host: address\x2C\n        port\x2C\n      }\x2C\n    });\n  }\n  return req;\n}\n\nObjectDefineProperty(lookupService\x2C customPromisifyArgs\x2C\n                     { __proto__: null\x2C value: ['hostname'\x2C 'service']\x2C enumerable: false });\n\nfunction defaultResolverSetServers(servers) {\n  const resolver = new Resolver();\n\n  resolver.setServers(servers);\n  setDefaultResolver(resolver);\n  bindDefaultResolver(module.exports\x2C Resolver.prototype);\n\n  if (promises !== null)\n    bindDefaultResolver(promises\x2C promises.Resolver.prototype);\n}\n\nmodule.exports = {\n  lookup\x2C\n  lookupService\x2C\n\n  Resolver\x2C\n  getDefaultResultOrder\x2C\n  setDefaultResultOrder\x2C\n  setServers: defaultResolverSetServers\x2C\n\n  // uv_getaddrinfo flags\n  ADDRCONFIG: cares.AI_ADDRCONFIG\x2C\n  ALL: cares.AI_ALL\x2C\n  V4MAPPED: cares.AI_V4MAPPED\x2C\n\n  // ERROR CODES\n  NODATA\x2C\n  FORMERR\x2C\n  SERVFAIL\x2C\n  NOTFOUND\x2C\n  NOTIMP\x2C\n  REFUSED\x2C\n  BADQUERY\x2C\n  BADNAME\x2C\n  BADFAMILY\x2C\n  BADRESP\x2C\n  CONNREFUSED\x2C\n  TIMEOUT\x2C\n  EOF\x2C\n  FILE\x2C\n  NOMEM\x2C\n  DESTRUCTION\x2C\n  BADSTR\x2C\n  BADFLAGS\x2C\n  NONAME\x2C\n  BADHINTS\x2C\n  NOTINITIALIZED\x2C\n  LOADIPHLPAPI\x2C\n  ADDRGETNETWORKPARAMS\x2C\n  CANCELLED\x2C\n};\n\nbindDefaultResolver(module.exports\x2C Resolver.prototype);\n\nObjectDefineProperties(module.exports\x2C {\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      if (promises === null) {\n        promises = require('internal/dns/promises');\n      }\n      return promises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0xbd578258578,179,0,9350,C0O0C4O9350,,
code-creation,JS,9,198375,0xbd5782588d0,942, node:dns:1:1,0x1ec6b0f5b698,~
code-source-info,0xbd5782588d
tick,0x19259ebec,198458,0,0x0,0,0x107f890bc,0x107f88e30,0xbd5782584b4,0xbd578257bed,0x12ea9865038e,0x1016ab5a4,0x10166ef98,0x12ea9864e44d,0x1016a9290
code-creation,Eval,9,198583,0xbd578258e20,5, node:internal/dns/callback_resolver:1:1,0x1ec6b0f5c3f0,~
script-source,180,node:internal/dns/callback_resolver,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  DNSException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  createResolverClass\x2C\n} = require('internal/dns/utils');\n\nconst {\n  validateFunction\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  QueryReqWrap\x2C\n} = internalBinding('cares_wrap');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\n\nconst kPerfHooksDnsLookupResolveContext = Symbol('kPerfHooksDnsLookupResolveContext');\n\nfunction onresolve(err\x2C result\x2C ttls) {\n  if (ttls && this.ttl)\n    result = ArrayPrototypeMap(\n      result\x2C (address\x2C index) => ({ address\x2C ttl: ttls[index] }));\n\n  if (err)\n    this.callback(new DNSException(err\x2C this.bindingName\x2C this.hostname));\n  else {\n    this.callback(null\x2C result);\n    if (this[kPerfHooksDnsLookupResolveContext] && hasObserver('dns')) {\n      stopPerf(this\x2C kPerfHooksDnsLookupResolveContext\x2C { detail: { result } });\n    }\n  }\n}\n\nfunction resolver(bindingName) {\n  function query(name\x2C /* options\x2C */ callback) {\n    let options;\n    if (arguments.length > 2) {\n      options = callback;\n      callback = arguments[2];\n    }\n\n    validateString(name\x2C 'name');\n    validateFunction(callback\x2C 'callback');\n\n    const req = new QueryReqWrap();\n    req.bindingName = bindingName;\n    req.callback = callback;\n    req.hostname = name;\n    req.oncomplete = onresolve;\n    req.ttl = !!(options?.ttl);\n    const err = this._handle[bindingName](req\x2C name);\n    if (err) throw new DNSException(err\x2C bindingName\x2C name);\n    if (hasObserver('dns')) {\n      startPerf(req\x2C kPerfHooksDnsLookupResolveContext\x2C {\n        type: 'dns'\x2C\n        name: bindingName\x2C\n        detail: {\n          host: name\x2C\n          ttl: req.ttl\x2C\n        }\x2C\n      });\n    }\n    return req;\n  }\n  ObjectDefineProperty(query\x2C 'name'\x2C { __proto__: null\x2C value: bindingName });\n  return query;\n}\n\n// This is the callback-based resolver. There is another similar\n// resolver in dns/promises.js with resolve methods that are based\n// on promises instead.\nconst { Resolver\x2C resolveMap } = createResolverClass(resolver);\nResolver.prototype.resolve = resolve;\n\nfunction resolve(hostname\x2C rrtype\x2C callback) {\n  let resolver;\n  if (typeof rrtype === 'string') {\n    resolver = resolveMap[rrtype];\n  } else if (typeof rrtype === 'function') {\n    resolver = resolveMap.A;\n    callback = rrtype;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('rrtype'\x2C 'string'\x2C rrtype);\n  }\n\n  if (typeof resolver === 'function') {\n    return ReflectApply(resolver\x2C this\x2C [hostname\x2C callback]);\n  }\n  throw new ERR_INVALID_ARG_VALUE('rrtype'\x2C rrtype);\n}\n\nmodule.exports = {\n  Resolver\x2C\n};\n
code-source-info,0xbd578258e20,180,0,2775,C0O0C4O2775,,
code-creation,JS,9,198708,0xbd578258f88,245, node:internal/dns/callback_resolver:1:1,0x1ec6b0f5c5a8,~
code-source-info,0xbd578258f88,180,0,2775,C0O0C63O25C69O46C75O70C81O86C86O209C89O209C94O122C100O145C105O151C111O177C117O273C120O273C125O248C130O355C133O355C138O315C144O335C150O416C153O416C158O398C164O500C167O500C172O458C178O473C184O486C190O577C193O577C197O577C199O2197C204O2172C209O2182C215O2237C222O2255C226O2741C233O2762C239O2756C244O2774,,
code-creation,JS,9,198750,0xbd578259170,46,resolver node:internal/dns/callback_resolver:54:18,0x1ec6b0f5c668,~
code-source-info,0xbd578259170,180,1100,2006,C0O1100C14O1911C24O1932C31O1973C38O1911C43O1991C45O2004,,
tick,0x192335af0,199708,1,0x1009c7bdc,6,0x0,0x7769ed8c264,0x7769ed8c190,0x7769ed8d0d3,0x7769ed8d205,0xbd578258c4e,0x107f89188,0x107f88e30,0xbd5782584b4,0xbd578257bed,0x12ea9865038e,0x1016ab5a4,0x10166ef98,0x12ea9864e44d,0x1016a9290
code-creation,JS,9,199833,0xbd5782593b8,840,lookup node:dns:142:16,0x1ec6b0f5b7b0,~
code-source-info,0xbd5782593b
code-creation,JS,9,200125,0xbd5782598e0,104, node:net:2168:38,0x1ec6b0f5a3d0,~
code-source-info,0xbd5782598e0,96,61347,61738,C0O61373C8O61398C12O61389C17O61420C18O61427C19O61438C23O61455C26O61460C34O61460C42O61520C47O61520C52O61576C55O61588C67O61610C75O61645C97O61610C103O61737,,
code-creation,JS,9,200167,0xbd578259a40,145,filterOnlyValidAddress node:net:2151:32,0x15988e449f98,~
code-source-info,0xbd578259a40,96,60865,61119,C0O60964C17O60953C45O60953C48O60981C51O61010C56O60986C62O61028C70O60942C140O61097C141O61113C144O61117,,
code-creation,JS,9,200208,0xbd578259b68,66,isIpv6LinkLocal node:net:2134:25,0x15988e449f40,~
code-source-info,0xbd578259b68,96,60218,60832,C0O60227C5O60232C11O60246C12O60259C13O60284C18O60284C23O60335C24O60345C28O60392C30O60402C34O60652C38O60663C42O60726C44O60738C55O60746C59O60781C65O60830,,
tick,0x10123888c,200958,0,0x0,0,0x101788218,0x7769ed8db5a,0xbd578259b6d,0xbd578259a78,0xbd57825990f,0x1a7c5b23c1f4
code-creation,JS,9,202083,0xbd578259cb0,207,listenInCluster node:net:1959:25,0x15988e449ec0,~
code-source-info,0xbd578259cb0,96,54168,55726,C0O54168C41O54274C46O54302C54O54329C62O54339C66O54337C70O54362C75O54374C83O54387C85O54562C88O54569C111O54569C116O54631C117O54638C118O54666C125O54681C131O54700C137O54723C143O54744C149O54752C155O54763C165O54779C172O54815C175O54822C179O54815C181O54893C186O54901C200O54901C206O55725,,
code-creation,Eval,9,202125,0xbd578259e30,5, node:cluster:1:1,0x1ec6b0f60128,~
script-source,181,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\n} = primordials;\n\nconst childOrPrimary = ObjectHasOwn(process.env\x2C 'NODE_UNIQUE_ID') ? 'child' : 'primary';\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\n
code-source-info,0xbd578259e30,181,0,1376,C0O0C4O1376,,
code-creation,JS,9,202167,0xbd578259ed8,47, node:cluster:1:1,0x1ec6b0f601f0,~
code-source-info,0xbd578259ed8,181,0,1376,C0O1190C5O1266C13O1245C27O1312C32O1357C37O1329C41O1327C46O1375,,
tick,0x1017d85fc,202208,0,0x0,0,0xbd578259ee5,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
code-creation,Eval,9,202583,0xbd578259f88,5, node:internal/cluster/primary:1:1,0x1ec6b0f61438,~
script-source,182,node:internal/cluster/primary,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSome\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst assert = require('internal/assert');\nconst { fork } = require('child_process');\nconst path = require('path');\nconst EventEmitter = require('events');\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\nconst SharedHandle = require('internal/cluster/shared_handle');\nconst Worker = require('internal/cluster/worker');\nconst { getInspectPort\x2C isUsingInspector } = require('internal/util/inspector');\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\nconst cluster = new EventEmitter();\nconst intercom = new EventEmitter();\nconst SCHED_NONE = 1;\nconst SCHED_RR = 2;\n\nmodule.exports = cluster;\n\nconst handles = new SafeMap();\ncluster.isWorker = false;\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\ncluster.isPrimary = true;\ncluster.Worker = Worker;\ncluster.workers = {};\ncluster.settings = {};\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\n\nlet ids = 0;\nlet initialized = false;\n\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\nif (schedulingPolicy === 'rr')\n  schedulingPolicy = SCHED_RR;\nelse if (schedulingPolicy === 'none')\n  schedulingPolicy = SCHED_NONE;\nelse if (process.platform === 'win32') {\n  // Round-robin doesn't perform well on\n  // Windows due to the way IOCP is wired up.\n  schedulingPolicy = SCHED_NONE;\n} else\n  schedulingPolicy = SCHED_RR;\n\ncluster.schedulingPolicy = schedulingPolicy;\n\ncluster.setupPrimary = function(options) {\n  const settings = {\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\n    exec: process.argv[1]\x2C\n    execArgv: process.execArgv\x2C\n    silent: false\x2C\n    ...cluster.settings\x2C\n    ...options\x2C\n  };\n\n  // Tell V8 to write profile data for each process to a separate file.\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\n  // file. (Unusable because what V8 logs are memory addresses and each\n  // process has its own memory mappings.)\n  if (ArrayPrototypeSome(settings.execArgv\x2C\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\n      !ArrayPrototypeSome(settings.execArgv\x2C\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\n  }\n\n  cluster.settings = settings;\n\n  if (initialized === true)\n    return process.nextTick(setupSettingsNT\x2C settings);\n\n  initialized = true;\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\n\n  process.nextTick(setupSettingsNT\x2C settings);\n\n  process.on('internalMessage'\x2C (message) => {\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\n      return;\n\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.state === 'online' || worker.state === 'listening') {\n        process._debugProcess(worker.process.pid);\n      } else {\n        worker.once('online'\x2C function() {\n          process._debugProcess(this.process.pid);\n        });\n      }\n    }\n  });\n};\n\n// Deprecated alias must be same as setupPrimary\ncluster.setupMaster = cluster.setupPrimary;\n\nfunction setupSettingsNT(settings) {\n  cluster.emit('setup'\x2C settings);\n}\n\nfunction createWorkerProcess(id\x2C env) {\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\n  const execArgv = [...cluster.settings.execArgv];\n\n  if (cluster.settings.inspectPort === null) {\n    throw new ERR_SOCKET_BAD_PORT('Port'\x2C null\x2C true);\n  }\n  if (isUsingInspector(cluster.settings.execArgv)) {\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${getInspectPort(cluster.settings.inspectPort)}`);\n  }\n\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\n    cwd: cluster.settings.cwd\x2C\n    env: workerEnv\x2C\n    serialization: cluster.settings.serialization\x2C\n    silent: cluster.settings.silent\x2C\n    windowsHide: cluster.settings.windowsHide\x2C\n    execArgv: execArgv\x2C\n    stdio: cluster.settings.stdio\x2C\n    gid: cluster.settings.gid\x2C\n    uid: cluster.settings.uid\x2C\n  });\n}\n\nfunction removeWorker(worker) {\n  assert(worker);\n  delete cluster.workers[worker.id];\n\n  if (ObjectKeys(cluster.workers).length === 0) {\n    assert(handles.size === 0\x2C 'Resource leak detected.');\n    intercom.emit('disconnect');\n  }\n}\n\nfunction removeHandlesForWorker(worker) {\n  assert(worker);\n\n  for (const { 0: key\x2C 1: handle } of handles) {\n    if (handle.remove(worker))\n      handles.delete(key);\n  }\n}\n\ncluster.fork = function(env) {\n  cluster.setupPrimary();\n  const id = ++ids;\n  const workerProcess = createWorkerProcess(id\x2C env);\n  const worker = new Worker({\n    id: id\x2C\n    process: workerProcess\x2C\n  });\n\n  worker.on('message'\x2C function(message\x2C handle) {\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\n  });\n\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\n    /*\n     * Remove the worker from the workers list only\n     * if it has disconnected\x2C otherwise we might\n     * still want to access it.\n     */\n    if (!worker.isConnected()) {\n      removeHandlesForWorker(worker);\n      removeWorker(worker);\n    }\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'dead';\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\n  });\n\n  worker.process.once('disconnect'\x2C () => {\n    /*\n     * Now is a good time to remove the handles\n     * associated with this worker because it is\n     * not connected to the primary anymore.\n     */\n    removeHandlesForWorker(worker);\n\n    /*\n     * Remove the worker from the workers list only\n     * if its process has exited. Otherwise\x2C we might\n     * still want to access it.\n     */\n    if (worker.isDead())\n      removeWorker(worker);\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'disconnected';\n    worker.emit('disconnect');\n    cluster.emit('disconnect'\x2C worker);\n  });\n\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\n  process.nextTick(emitForkNT\x2C worker);\n  cluster.workers[worker.id] = worker;\n  return worker;\n};\n\nfunction emitForkNT(worker) {\n  cluster.emit('fork'\x2C worker);\n}\n\ncluster.disconnect = function(cb) {\n  const workers = ObjectValues(cluster.workers);\n\n  if (workers.length === 0) {\n    process.nextTick(() => intercom.emit('disconnect'));\n  } else {\n    for (const worker of workers) {\n      if (worker.isConnected()) {\n        worker.disconnect();\n      }\n    }\n  }\n\n  if (typeof cb === 'function')\n    intercom.once('disconnect'\x2C cb);\n};\n\nconst methodMessageMapping = {\n  close\x2C\n  exitedAfterDisconnect\x2C\n  listening\x2C\n  online\x2C\n  queryServer\x2C\n};\n\nfunction onmessage(message\x2C handle) {\n  const worker = this;\n\n  const fn = methodMessageMapping[message.act];\n\n  if (typeof fn === 'function')\n    fn(worker\x2C message);\n}\n\nfunction online(worker) {\n  worker.state = 'online';\n  worker.emit('online');\n  cluster.emit('online'\x2C worker);\n}\n\nfunction exitedAfterDisconnect(worker\x2C message) {\n  worker.exitedAfterDisconnect = true;\n  send(worker\x2C { ack: message.seq });\n}\n\nfunction queryServer(worker\x2C message) {\n  // Stop processing if worker already disconnecting\n  if (worker.exitedAfterDisconnect)\n    return;\n\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\n              `${message.fd}:${message.index}`;\n  let handle = handles.get(key);\n\n  if (handle === undefined) {\n    let address = message.address;\n\n    // Find shortest path for unix sockets because of the ~100 byte limit\n    if (message.port < 0 && typeof address === 'string' &&\n        process.platform !== 'win32') {\n\n      address = path.relative(process.cwd()\x2C address);\n\n      if (message.address.length < address.length)\n        address = message.address;\n    }\n\n    // UDP is exempt from round-robin connection balancing for what should\n    // be obvious reasons: it's connectionless. There is nothing to send to\n    // the workers except raw datagrams and that's pointless.\n    if (schedulingPolicy !== SCHED_RR ||\n        message.addressType === 'udp4' ||\n        message.addressType === 'udp6') {\n      handle = new SharedHandle(key\x2C address\x2C message);\n    } else {\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\n    }\n\n    handles.set(key\x2C handle);\n  }\n\n  handle.data ||= message.data;\n\n  // Set custom server data\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\n    const { data } = handles.get(key);\n\n    if (errno)\n      handles.delete(key);  // Gives other workers a chance to retry.\n\n    send(worker\x2C {\n      errno\x2C\n      key\x2C\n      ack: message.seq\x2C\n      data\x2C\n      ...reply\x2C\n    }\x2C handle);\n  });\n}\n\nfunction listening(worker\x2C message) {\n  const info = {\n    addressType: message.addressType\x2C\n    address: message.address\x2C\n    port: message.port\x2C\n    fd: message.fd\x2C\n  };\n\n  worker.state = 'listening';\n  worker.emit('listening'\x2C info);\n  cluster.emit('listening'\x2C worker\x2C info);\n}\n\n// Server in worker is closing\x2C remove from list. The handle may have been\n// removed by a prior call to removeHandlesForWorker() so guard against that.\nfunction close(worker\x2C message) {\n  const key = message.key;\n  const handle = handles.get(key);\n\n  if (handle && handle.remove(worker))\n    handles.delete(key);\n}\n\nfunction send(worker\x2C message\x2C handle\x2C cb) {\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\n}\n\n// Extend generic Worker with methods specific to the primary process.\nWorker.prototype.disconnect = function() {\n  this.exitedAfterDisconnect = true;\n  send(this\x2C { act: 'disconnect' });\n  removeHandlesForWorker(this);\n  removeWorker(this);\n  return this;\n};\n\nWorker.prototype.destroy = function(signo) {\n  const signal = signo || 'SIGTERM';\n  this.process.kill(signal);\n};\n
code-source-info,0xbd578259f88,182,0,10075,C0O0C4O10075,,
code-creation,JS,9,202917,0xbd57825a220,632, node:internal/cluster/primary:1:1,0x1ec6b0f61720,~
code-source-info,0xbd57825a
code-creation,Eval,9,203292,0xbd57825a610,5, node:child_process:1:1,0x1ec6b0f64950,~
script-source,183,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  PromiseWithResolvers\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  convertToValidSignal\x2C\n  getSystemErrorName\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\x2C\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n    ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\x2C\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\nconst isZOS = process.platform === 'os390';\nlet addAbortListener;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string|URL} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   detached?: boolean;\n *   env?: Record<string\x2C string>;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath\x2C args = []\x2C options) {\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n\n  if (args == null) {\n    args = [];\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\n    options = args;\n    args = [];\n  } else {\n    validateArray(args\x2C 'args');\n  }\n\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  options = { __proto__: null\x2C ...options\x2C shell: false };\n  options.execPath ||= process.execPath;\n  validateArgumentNullCheck(options.execPath\x2C 'options.execPath');\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n  validateArgumentsNullCheck(execArgv\x2C 'options.execArgv');\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  validateString(command\x2C 'command');\n  validateArgumentNullCheck(command\x2C 'command');\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { __proto__: null\x2C ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\x2C\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = PromiseWithResolvers();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\x2C\n});\n\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === 'object') {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = null;\n    args = null;\n  }\n\n  args ??= [];\n\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n\n  options ??= kEmptyObject;\n\n  if (callback != null) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  return { file\x2C args\x2C options\x2C callback };\n}\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file\x2C args\x2C options\x2C callback) {\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\n\n  options = {\n    __proto__: null\x2C\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\x2C\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x2C\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout?.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr?.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args?.length)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    ex ||= genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\n      code: code < 0 ? getSystemErrorName(code) : code\x2C\n      killed: child.killed || killed\x2C\n      signal: signal\x2C\n    });\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\x2C\n});\n\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\n  if (process.env[name] &&\n      (!optionEnv ||\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\n    env[name] = process.env[name];\n  }\n}\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n  validateArgumentNullCheck(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  validateArgumentsNullCheck(args\x2C 'args');\n\n  if (options === undefined)\n    options = kEmptyObject;\n  else\n    validateObject(options\x2C 'options');\n\n  options = { __proto__: null\x2C ...options };\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    validateArgumentNullCheck(options.shell\x2C 'options.shell');\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\n\n  if (isZOS) {\n    // The following environment variables must always propagate if set.\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\x2C\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      validateArgumentNullCheck(key\x2C `options.env['${key}']`);\n      validateArgumentNullCheck(value\x2C `options.env['${key}']`);\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    __proto__: null\x2C\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal\x2C reason) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError(undefined\x2C { cause: reason }));\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(signal\x2C onAbortListener);\n      child.once('exit'\x2C disposable[SymbolDispose]);\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal\x2C options.signal.reason);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    __proto__: null\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x2C\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i]?.input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const errArgs = [options.argv0 || file];\n  ArrayPrototypePushApply(errArgs\x2C args);\n  const err = checkExecSyncError(ret\x2C errArgs);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C undefined\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateArgumentNullCheck(arg\x2C propName) {\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg\x2C '\\u0000')) {\n    throw new ERR_INVALID_ARG_VALUE(propName\x2C arg\x2C 'must be a string without null bytes');\n  }\n}\n\n\nfunction validateArgumentsNullCheck(args\x2C propName) {\n  for (let i = 0; i < args.length; ++i) {\n    validateArgumentNullCheck(args[i]\x2C `${propName}[${i}]`);\n  }\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\x2C\n};\n
code-source-info,0xbd57825a610,183,0,27079,C0O0C4O27079,,
code-creation,JS,9,204208,0xbd57825a9b0,881, node:child_process:1:1,0x1ec6b0f64e78,~
code-source-info,0xbd57825a9b
tick,0x192562efc,204250,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57825a302,0x107f89188,0x107f88e30,0xbd578259efd,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
tick,0x101197fbc,204750,0,0x0,5,0x107f890bc,0x107f88e30,0xbd57825ac67,0x107f89188,0x107f88e30,0xbd57825a302,0x107f89188,0x107f88e30,0xbd578259efd,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
code-creation,Eval,9,205083,0xbd57825ae90,5, node:internal/child_process:1:1,0x1ec6b0f687a0,~
script-source,184,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate\x2C SymbolDispose } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\nconst dc = require('diagnostics_channel');\nconst childProcessChannel = dc.channel('child_process');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\x2C\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\nconst kPendingMessages = Symbol('kPendingMessages');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\x2C\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\x2C\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\x2C\n        });\n      }\n\n      emit(socket);\n    }\x2C\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\x2C\n  }\x2C\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = new ErrnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n  if (childProcessChannel.hasSubscribers) {\n    childProcessChannel.publish({\n      process: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw new ErrnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw new ErrnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C new ErrnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\nChildProcess.prototype[SymbolDispose] = function() {\n  if (!this.killed) {\n    this.kill();\n  }\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n    this[kPendingMessages] = [];\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    __proto__: null\x2C\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\x2C\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.on('newListener'\x2C function() {\n\n    process.nextTick(() => {\n      if (!target.channel || !target.listenerCount('message'))\n        return;\n\n      const messages = target.channel[kPendingMessages];\n      const { length } = messages;\n      if (!length) return;\n\n      for (let i = 0; i < length; i++) {\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\n      }\n\n      target.channel[kPendingMessages] = [];\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\x2C\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        this._handleQueue ||= [];\n        if (obj?.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj?.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = new ErrnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    if ('internalMessage' === event || target.listenerCount('message')) {\n      target.emit(event\x2C message\x2C handle);\n      return;\n    }\n\n    ArrayPrototypePush(\n      target.channel[kPendingMessages]\x2C\n      [event\x2C message\x2C handle]\x2C\n    );\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    stdio ??= i < 3 ? 'pipe' : 'ignore';\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\x2C\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\x2C\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\x2C\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x2C\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\x2C\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output?.[1];\n  result.stderr = result.output?.[2];\n\n  if (result.error) {\n    result.error = new ErrnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\x2C\n};\n
code-source-info,0xbd57825ae90,184,0,31694,C0O0C4O31694,,
code-creation,JS,9,206208,0xbd57825b3d8,1312, node:internal/child_process:1:1,0x1ec6b0f693e0,~
code-source-info,0xbd57825b3d
code-creation,JS,9,206250,0xbd57825baf8,29,Control node:internal/child_process:535:36,0x1ec6b0f6a2a8,~
code-source-info,0xbd57825baf8,184,13939,14901,C3O13954C12O13970C21O13995C28O14901,,
tick,0x1924009d8,206292,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57825ac67,0x107f89188,0x107f88e30,0xbd57825a302,0x107f89188,0x107f88e30,0xbd578259efd,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
code-creation,Eval,9,206667,0xbd57825bb90,5, node:dgram:1:1,0x1ec6b0f6dc20,~
script-source,185,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_SOCKET_ALREADY_BOUND\x2C\n    ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n    ERR_SOCKET_BUFFER_SIZE\x2C\n    ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n    ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n    ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate\x2C guessHandleType\x2C promisify\x2C SymbolAsyncDispose\x2C SymbolDispose } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY\x2C UV_UDP_REUSEPORT }\x2C\n  UDP\x2C\n  SendWrap\x2C\n} = internalBinding('udp_wrap');\n\nconst dc = require('diagnostics_channel');\nconst udpSocketChannel = dc.channel('udp.socket');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  return _cluster ??= require('cluster');\n}\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options?.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    reusePort: options?.reusePort\x2C\n    ipv6Only: options?.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\x2C\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      if (this[kStateSymbol].handle) this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      const disposable = addAbortListener(signal\x2C onAborted);\n      this.once('close'\x2C disposable[SymbolDispose]);\n    }\n  }\n  if (udpSocketChannel.hasSubscribers) {\n    udpSocketChannel.publish({\n      socket: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  state.handle.onerror = onError;\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n  // Sync the old handle state to new handle\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\n    newHandle.unref();\n  }\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      // Do not call callback if socket is closed\n      if (state.handle) {\n        errCb(err);\n      }\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ErrnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (!state.handle)\n      return; // Handle has been closed in the mean time\n\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n    if (state.reusePort) {\n      exclusive = true;\n      flags |= UV_UDP_REUSEPORT;\n    }\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw new ErrnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n  if (offset > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n  }\n\n  if (offset + length > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n  }\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address != null) {\n    validateString(address\x2C 'address');\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = new ExceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = new ExceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\nSocket.prototype[SymbolAsyncDispose] = async function() {\n  if (!this[kStateSymbol].handle) {\n    return;\n  }\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw new ErrnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw new ErrnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C new ErrnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nfunction onError(nread\x2C handle\x2C error) {\n  const self = handle[owner_symbol];\n  return self.emit('error'\x2C error);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\nSocket.prototype.getSendQueueSize = function() {\n  return this[kStateSymbol].handle.getSendQueueSize();\n};\n\nSocket.prototype.getSendQueueCount = function() {\n  return this[kStateSymbol].handle.getSendQueueCount();\n};\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\x2C\n  )\x2C\n  createSocket\x2C\n  Socket\x2C\n};\n
code-source-info,0xbd57825bb90,185,0,28510,C0O0C4O28510,,
code-creation,JS,9,207625,0xbd57825c198,1662, node:dgram:1:1,0x1ec6b0f6e168,~
code-source-info,0xbd57825c
tick,0x192562fa8,207708,0,0x0,3,0x107f890bc,0x107f88e30,0xbd57825b5d5,0x107f89188,0x107f88e30,0xbd57825ac67,0x107f89188,0x107f88e30,0xbd57825a302,0x107f89188,0x107f88e30,0xbd578259efd,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
code-creation,Eval,9,207833,0xbd57825cab8,5, node:internal/dgram:1:1,0x1ec6b0f70a60,~
script-source,186,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes: {\n  ERR_SOCKET_BAD_TYPE\x2C\n} } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = require('internal/util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n};\n
code-source-info,0xbd57825cab8,186,0,1837,C0O0C4O1837,,
code-creation,JS,9,207875,0xbd57825cbf0,199, node:internal/dgram:1:1,0x1ec6b0f70be8,~
code-source-info,0xbd57825cbf0,186,0,1837,C0O0C56O25C62O50C67O122C73O122C78O91C83O95C89O166C92O166C97O158C103O223C109O223C114O203C120O292C126O292C131O259C137O270C143O346C146O346C151O332C157O390C160O390C165O418C166O418C168O1763C175O1784C181O1800C187O1823C193O1778C198O1836,,
code-creation,Eval,9,208083,0xbd57825cd68,5, node:internal/socket_list:1:1,0x1ec6b0f75480,~
script-source,187,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\x2C\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\x2C\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0xbd57825cd68,187,0,2709,C0O0C4O2709,,
code-creation,JS,9,208167,0xbd57825ce60,124, node:internal/socket_list:1:1,0x1ec6b0f75558,~
code-source-info,0xbd57825ce60,187,0,2709,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C72O1527C99O2653C106O2672C112O2688C118O2668C123O2708,,
code-creation,JS,9,208292,0xbd57825cf78,14,customPromiseExecFunction node:child_process:238:35,0x1ec6b0f65670,~
code-source-info,0xbd57825cf78,183,6894,7257,C0O6894C9O6908C13O7255,,
code-creation,Eval,9,208333,0xbd57825d000,5, node:internal/cluster/round_robin_handle:1:1,0x1ec6b0f79408,~
script-source,188,node:internal/cluster/round_robin_handle,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst net = require('net');\nconst { sendHelper } = require('internal/cluster/utils');\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\nconst { constants } = internalBinding('tcp_wrap');\n\nmodule.exports = RoundRobinHandle;\n\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\n  this.key = key;\n  this.all = new SafeMap();\n  this.free = new SafeMap();\n  this.handles = init({ __proto__: null });\n  this.handle = null;\n  this.server = net.createServer(assert.fail);\n\n  if (fd >= 0)\n    this.server.listen({ fd\x2C backlog });\n  else if (port >= 0) {\n    this.server.listen({\n      port\x2C\n      host: address\x2C\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\n      backlog\x2C\n    });\n  } else\n    this.server.listen({\n      path: address\x2C\n      backlog\x2C\n      readableAll\x2C\n      writableAll\x2C\n    });  // UNIX socket path.\n  this.server.once('listening'\x2C () => {\n    this.handle = this.server._handle;\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\n    this.server._handle = null;\n    this.server = null;\n  });\n}\n\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\n  assert(this.all.has(worker.id) === false);\n  this.all.set(worker.id\x2C worker);\n\n  const done = () => {\n    if (this.handle.getsockname) {\n      const out = {};\n      this.handle.getsockname(out);\n      // TODO(bnoordhuis) Check err.\n      send(null\x2C { sockname: out }\x2C null);\n    } else {\n      send(null\x2C null\x2C null);  // UNIX socket.\n    }\n\n    this.handoff(worker);  // In case there are connections pending.\n  };\n\n  if (this.server === null)\n    return done();\n\n  // Still busy binding.\n  this.server.once('listening'\x2C done);\n  this.server.once('error'\x2C (err) => {\n    send(err.errno\x2C null);\n  });\n};\n\nRoundRobinHandle.prototype.remove = function(worker) {\n  const existed = this.all.delete(worker.id);\n\n  if (!existed)\n    return false;\n\n  this.free.delete(worker.id);\n\n  if (this.all.size !== 0)\n    return false;\n\n  while (!isEmpty(this.handles)) {\n    const handle = peek(this.handles);\n    handle.close();\n    remove(handle);\n  }\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\n  // If `accept` fails just skip it (handle is undefined)\n  if (err) {\n    return;\n  }\n  append(this.handles\x2C handle);\n  // eslint-disable-next-line node-core/no-array-destructuring\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\n\n  if (ArrayIsArray(workerEntry)) {\n    const { 0: workerId\x2C 1: worker } = workerEntry;\n    this.free.delete(workerId);\n    this.handoff(worker);\n  }\n};\n\nRoundRobinHandle.prototype.handoff = function(worker) {\n  if (!this.all.has(worker.id)) {\n    return;  // Worker is closing (or has closed) the server.\n  }\n\n  const handle = peek(this.handles);\n\n  if (handle === null) {\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\n    return;\n  }\n\n  remove(handle);\n\n  const message = { act: 'newconn'\x2C key: this.key };\n\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\n    if (reply.accepted)\n      handle.close();\n    else\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\n\n    this.handoff(worker);\n  });\n};\n
code-source-info,0xbd57825d000,188,0,3453,C0O0C4O3453,,
code-creation,JS,9,208458,0xbd57825d140,208, node:internal/cluster/round_robin_handle:1:1,0x1ec6b0f79590,~
code-source-info,0xbd57825d140,188,0,3453,C0O0C46O25C52O41C58O52C64O94C67O94C71O94C73O134C76O134C80O134C82O173C85O173C90O158C96O256C99O256C104O216C110O224C116O230C122O239C128O245C134O310C137O310C142O296C148O340C150O355C154O1336C163O1350C167O2001C176O2018C180O2399C189O2420C193O2862C202O2880C207O3452,,
tick,0x100cef794,208542,0,0x0,5,0x107f890bc,0x107f88e30,0xbd57825d195,0x107f89188,0x107f88e30,0xbd57825a321,0x107f89188,0x107f88e30,0xbd578259efd,0x107f89188,0x107f88e30,0xbd578259cee,0xbd578259941,0x1a7c5b23c1f4
code-creation,Eval,9,208583,0xbd57825d2d0,5, node:internal/cluster/utils:1:1,0x1ec6b0f79c48,~
script-source,189,node:internal/cluster/utils,'use strict';\n\nconst {\n  ReflectApply\x2C\n  SafeMap\x2C\n} = primordials;\n\nmodule.exports = {\n  sendHelper\x2C\n  internal\x2C\n};\n\nconst callbacks = new SafeMap();\nlet seq = 0;\n\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\n  if (!proc.connected)\n    return false;\n\n  // Mark message as internal. See INTERNAL_PREFIX\n  // in lib/internal/child_process.js\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\n\n  if (typeof cb === 'function')\n    callbacks.set(seq\x2C cb);\n\n  seq += 1;\n  return proc.send(message\x2C handle);\n}\n\n// Returns an internalMessage listener that hands off normal messages\n// to the callback but intercepts and redirects ACK messages.\nfunction internal(worker\x2C cb) {\n  return function onInternalMessage(message\x2C handle) {\n    if (message.cmd !== 'NODE_CLUSTER')\n      return;\n\n    let fn = cb;\n\n    if (message.ack !== undefined) {\n      const callback = callbacks.get(message.ack);\n\n      if (callback !== undefined) {\n        fn = callback;\n        callbacks.delete(message.ack);\n      }\n    }\n\n    ReflectApply(fn\x2C worker\x2C arguments);\n  };\n}\n
code-source-info,0xbd57825d2d0,189,0,1054,C0O0C4O1054,,
code-creation,JS,9,208625,0xbd57825d388,72, node:internal/cluster/utils:1:1,0x1ec6b0f79d40,~
code-source-info,0xbd57825d388,189,0,1054,C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O135C60O135C65O135C67O160C68O160C71O1053,,
code-creation,Eval,9,208708,0xbd57825d458,5, node:internal/cluster/shared_handle:1:1,0x1ec6b0f7a3a0,~
script-source,190,node:internal/cluster/shared_handle,'use strict';\n\nconst {\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst dgram = require('internal/dgram');\nconst net = require('net');\n\nmodule.exports = SharedHandle;\n\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\n  this.key = key;\n  this.workers = new SafeMap();\n  this.handle = null;\n  this.errno = 0;\n\n  let rval;\n  if (addressType === 'udp4' || addressType === 'udp6')\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n  else\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n  if (typeof rval === 'number')\n    this.errno = rval;\n  else\n    this.handle = rval;\n}\n\nSharedHandle.prototype.add = function(worker\x2C send) {\n  assert(!this.workers.has(worker.id));\n  this.workers.set(worker.id\x2C worker);\n  send(this.errno\x2C null\x2C this.handle);\n};\n\nSharedHandle.prototype.remove = function(worker) {\n  if (!this.workers.has(worker.id))\n    return false;\n\n  this.workers.delete(worker.id);\n\n  if (this.workers.size !== 0)\n    return false;\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n
code-source-info,0xbd57825d458,190,0,1107,C0O0C4O1107,,
code-creation,JS,9,208750,0xbd57825d528,89, node:internal/cluster/shared_handle:1:1,0x1ec6b0f7a4a8,~
code-source-info,0xbd57825d528,190,0,1107,C0O0C22O25C28O67C31O67C35O67C37O109C40O109C44O109C46O148C49O148C53O148C55O165C57O180C61O690C70O704C74O866C83O883C88O1106,,
code-creation,Eval,9,208792,0xbd57825d620,5, node:internal/cluster/worker:1:1,0x1ec6b0f7ab08,~
script-source,191,node:internal/cluster/worker,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\n\nconst { kEmptyObject } = require('internal/util');\n\nmodule.exports = Worker;\n\n// Common Worker implementation shared between the cluster primary and workers.\nfunction Worker(options) {\n  if (!(this instanceof Worker))\n    return new Worker(options);\n\n  ReflectApply(EventEmitter\x2C this\x2C []);\n\n  if (options === null || typeof options !== 'object')\n    options = kEmptyObject;\n\n  this.exitedAfterDisconnect = undefined;\n\n  this.state = options.state || 'none';\n  this.id = options.id | 0;\n\n  if (options.process) {\n    this.process = options.process;\n    this.process.on('error'\x2C (code\x2C signal) =>\n      this.emit('error'\x2C code\x2C signal)\x2C\n    );\n    this.process.on('message'\x2C (message\x2C handle) =>\n      this.emit('message'\x2C message\x2C handle)\x2C\n    );\n  }\n}\n\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\n\nWorker.prototype.kill = function() {\n  ReflectApply(this.destroy\x2C this\x2C arguments);\n};\n\nWorker.prototype.send = function() {\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\n};\n\nWorker.prototype.isDead = function() {\n  return this.process.exitCode != null || this.process.signalCode != null;\n};\n\nWorker.prototype.isConnected = function() {\n  return this.process.connected;\n};\n
code-source-info,0xbd57825d620,191,0,1379,C0O0C4O1379,,
code-creation,JS,9,208875,0xbd57825d718,158, node:internal/cluster/worker:1:1,0x1ec6b0f7ac10,~
code-source-info,0xbd57825d718,191,0,1379,C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O876C63O904C71O928C76O876C81O940C87O940C92O985C95O992C104O1007C108O1073C111O1080C120O1095C124O1181C127O1188C136O1205C140O1299C143O1306C152O1328C157O1378,,
code-creation,JS,9,208958,0xbd57825d948,569,setupListenHandle node:net:1860:27,0x15988e449db8,~
code-source-info,0xbd57825d948,96,51226,53894,C0O51279C23O51279C28O51496C34O51511C40O51511C46O51577C52O51577C56O51638C58O51726C68O51774C73O51800C88O51781C94O51847C98O51887C100O51908C106O51945C112O51985C116O52022C120O52058C124O52083C142O52090C148O52154C154O52206C173O52206C179O52273C184O52293C190O52319C193O52335C198O52341C210O52359C216O52365C220O52341C225O52390C228O52398C242O52398C247O52440C248O52447C249O52458C251O52471C255O52486C257O52491C263O52529C268O52510C272O52508C276O52546C283O52567C287O52590C294O52598C299O52612C303O52844C308O52852C315O52859C322O52852C328O52879C330O52905C349O52905C355O52973C360O52981C365O52981C369O52994C370O53007C374O53020C379O53040C385O53064C388O53080C393O53086C405O53104C411O53117C415O53086C420O53135C427O53166C434O53224C448O53135C453O53355C454O53362C455O53370C460O53390C466O53412C469O53428C474O53437C486O53455C490O53437C495O53541C497O53575C503O53581C509O53591C515O53597C518O53561C522O53685C528O53702C533O53702C537O53714C544O53745C551O53801C562O53714C568O53893,,
code-creation,JS,9,209000,0xbd57825dcd8,10, node:net:44:63,0x15988e44a0f8,~
code-source-info,0xbd57825dcd8,96,1645,1670,C0O1657C2O1663C9O1669,,
code-creation,JS,9,209042,0xbd57825de40,400,createServerHandle node:net:1802:28,0x15988e449d60,~
code-source-info,0xbd57825de
code-creation,JS,9,209167,0xbd57825e0f8,21,emitListeningNT node:net:1952:25,0x15988e449e68,~
code-source-info,0xbd57825e0f8,96,54050,54141,C0O54103C6O54121C14O54121C20O54140,,
code-creation,JS,9,209208,0xbd57825e1c0,99,setupConnectionsTracking node:_http_server:517:34,0x2858598a75c0,~
code-source-info,0xbd57825e1c0,124,17538,18046,C0O17576C2O17581C15O17603C18O17599C23O17595C27O17625C29O17634C31O17633C36O17671C43O17689C47O17671C51O17920C56O17961C62O17990C67O17990C73O18007C78O17961C84O18035C89O18036C93O17955C98O18045,,
code-creation,JS,9,209250,0xbd57825e2f8,49, file:///Users/hsulzz/Playground/hello-world/src/index.mjs:11:29,0xcb65973c0a8,~
code-source-info,0xbd57825e2f8,93,266,339,C0O276C4O284C14O316C29O328C42O284C48O338,,
tick,0x1925329b8,209792,1,0x100bb1a68,6,0x0,0x12ea986662c9,0x3a8f561369ec,0x3a8f56137027,0x3a8f5612dc89,0x3a8f5612e560,0x3a8f5612e9c8,0x10166ef98,0xbd57825e322,0x1a7c5b229481,0x1a7c5b228df1,0xbd57825e106,0x1a7c5b23c1e3
code-creation,JS,10,210250,0x107f97a00,384,set node:internal/streams/readable:133:8,0x15988e467018,^
code-source-info,0x107f97a00,106,3899,3985,,,
code-creation,JS,10,210250,0x107f97ba0,344,alignPool node:buffer:163:19,0x22b216ced9d0,^
code-source-info,0x107f97ba0,24,4151,4255,,,
code-creation,JS,10,210417,0x107f97d20,128,get node:internal/bootstrap/node:463:8,0x22b216cce710,^
script-source,9,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\n// and is responsible for setting up Node.js core before main scripts\n// under `lib/internal/main/` are executed.\n//\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\n// that is generated at build-time with a `node_mksnapshot` executable.\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\n// from `src/node_snapshotable.cc`.\n// This snapshot captures the V8 heap initialized by scripts under\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\n// running this script and others in `lib/internal/bootstrap/`. To disable this\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\n// Node.js actually runs this script to initialize the heap.\n//\n// This script is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\n// query any run-time states (e.g. command line arguments\x2C environment\n// variables) when being executed - functions in this script that are invoked\n// at a later time can\x2C however\x2C query those states lazily.\n// The majority of the code here focuses on setting up the global object and\n// the process object in a synchronous\x2C environment-independent manner.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/per_context/domexception.js`: implementation of the\n//   `DOMException` class.\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\n//   `MessagePort` implementation.\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\n//   and bindings\x2C including `prepare_stack_trace_callback`.\n//\n// The initialization done in this script is included in both the main thread\n// and the worker threads. After this\x2C further initialization is done based\n// on the configuration of the Node.js instance by executing the scripts in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by `BuiltinLoader::CompileAndCall()`.\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nconst {\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst {\n  defineOperation\x2C\n  deprecate\x2C\n} = require('internal/util');\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst {\n  constants: {\n    kExitCode\x2C\n    kExiting\x2C\n    kHasExitCode\x2C\n  }\x2C\n  privateSymbols: {\n    exit_info_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\n\n// process._exiting and process.exitCode\n{\n  const fields = process[exit_info_private_symbol];\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\n    __proto__: null\x2C\n    get() {\n      return fields[kExiting] === 1;\n    }\x2C\n    set(value) {\n      fields[kExiting] = value ? 1 : 0;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n\n  let exitCode;\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitCode;\n    }\x2C\n    set(code) {\n      if (code !== null && code !== undefined) {\n        let value = code;\n        if (typeof code === 'string' && code !== '' &&\n          NumberIsNaN((value = Number(code)))) {\n          value = code;\n        }\n        validateInteger(value\x2C 'code');\n        fields[kExitCode] = value;\n        fields[kHasExitCode] = 1;\n      } else {\n        fields[kHasExitCode] = 0;\n      }\n      exitCode = code;\n    }\x2C\n    enumerable: true\x2C\n    configurable: false\x2C\n  });\n}\nprocess._exiting = false;\n\n// process.config is serialized config.gypi\nconst binding = internalBinding('builtins');\n\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\n  // The `reviver` argument of the JSONParse method will visit all the values of\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\n  // explicitly freeze the config outside of this method\n  return ObjectFreeze(value);\n});\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  value: processConfig\x2C\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process.loadEnvFile = wrapped.loadEnvFile;\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.constrainedMemory = rawMethods.constrainedMemory;\n  process.availableMemory = rawMethods.availableMemory;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  let finalizationMod;\n  ObjectDefineProperty(process\x2C 'finalization'\x2C {\n    __proto__: null\x2C\n    get() {\n      if (finalizationMod !== undefined) {\n        return finalizationMod;\n      }\n\n      const { createFinalization } = require('internal/process/finalization');\n      finalizationMod = createFinalization();\n\n      return finalizationMod;\n    }\x2C\n    set(value) {\n      finalizationMod = value;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n} = require('internal/process/task_queues');\nconst timers = require('timers');\n// Non-standard extensions:\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because --no-node-snapshot disables the\n  // code cache even if the binary is built with embedded code cache.\n  get cached_builtins() {\n    return binding.hasCachedBuiltins();\n  }\x2C\n  get require_module() {\n    return getOptionValue('--experimental-require-module');\n  }\x2C\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\x2C\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\x2C\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning\x2C emitWarningSync } = require('internal/process/warning');\nconst { getOptionValue } = require('internal/options');\n\nlet kTypeStrippingMode = process.config.variables.node_use_amaro ? null : false;\n// This must be a getter\x2C as getOptionValue does not work\n// before bootstrapping.\nObjectDefineProperty(process.features\x2C 'typescript'\x2C {\n  __proto__: null\x2C\n  get() {\n    if (kTypeStrippingMode === null) {\n      if (getOptionValue('--experimental-transform-types')) {\n        kTypeStrippingMode = 'transform';\n      } else if (getOptionValue('--experimental-strip-types')) {\n        kTypeStrippingMode = 'strip';\n      } else {\n        kTypeStrippingMode = false;\n      }\n    }\n    return kTypeStrippingMode;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nprocess.emitWarning = emitWarning;\ninternalBinding('process_methods').setEmitWarningSync(emitWarningSync);\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\n{\n  const {\n    getSourceMapsEnabled\x2C\n    setSourceMapsEnabled\x2C\n    maybeCacheGeneratedSourceMap\x2C\n  } = require('internal/source_map/source_map_cache');\n  const {\n    setMaybeCacheGeneratedSourceMap\x2C\n  } = internalBinding('errors');\n\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return getSourceMapsEnabled();\n    }\x2C\n  });\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\n  // when code is generated by user with eval() or new Function()\n  // to cache the source maps from the evaluated code\x2C if any.\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n}\n\n{\n  const { getBuiltinModule } = require('internal/modules/helpers');\n  process.getBuiltinModule = getBuiltinModule;\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\x2C\n  });\n\n  // Create global.process as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n\n  // Create global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n
code-source-info,0x107f97d20,9,15241,15273,,,
code-creation,JS,10,211000,0x107f97dc0,64,noop node:internal/util/debuglog:57:14,0x22b216ce3f70,^
code-source-info,0x107f97dc0,19,1733,1741,,,
code-creation,JS,10,211000,0x107f97e20,64,get hasSubscribers node:diagnostics_channel:208:21,0x2ddc31effa48,^
code-source-info,0x107f97e20,65,4701,4727,,,
tick,0x101197f94,211083,0,0x0,0,0x12ea986686e1,0x101701af4,0x12ea9866854f,0x12ea9866837d,0x12ea98666952,0x12ea986662fc,0x3a8f561369ec,0x3a8f56137027,0x3a8f5612dc89,0x3a8f5612e560,0x3a8f5612e9c8,0x10166ef98,0xbd57825e322,0x1a7c5b229481,0x1a7c5b228df1,0xbd57825e106,0x1a7c5b23c1e3
new,MemoryChunk,0x3234759c0000,262144
code-creation,JS,10,211167,0x107f97e80,200,checkListener node:events:274:23,0x22b216ce8268,^
script-source,22,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolFor\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\n\nconst { SymbolDispose\x2C kEmptyObject\x2C spliceOne } = require('internal/util');\n\nconst {\n  inspect\x2C\n  identicalSequenceRange\x2C\n} = require('internal/util/inspect');\n\nlet FixedQueue;\nlet kFirstEventParam;\nlet kResistStopPropagation;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_UNHANDLED_ERROR\x2C\n  }\x2C\n  genericNodeError\x2C\n  kEnhanceStackBeforeInspector\x2C\n} = require('internal/errors');\n\nconst {\n  validateInteger\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst { addAbortListener } = require('internal/events/abort_listener');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kShapeMode = Symbol('shapeMode');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\nconst kWatermarkData = SymbolFor('nodejs.watermarkData');\n\nlet EventEmitterAsyncResource;\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\n//\n// This implementation was adapted straight from addaleax's\n// eventemitter-asyncresource MIT-licensed userland module.\n// https://github.com/addaleax/eventemitter-asyncresource\nfunction lazyEventEmitterAsyncResource() {\n  if (EventEmitterAsyncResource === undefined) {\n    const {\n      AsyncResource\x2C\n    } = require('async_hooks');\n\n    const kEventEmitter = Symbol('kEventEmitter');\n    const kAsyncResource = Symbol('kAsyncResource');\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\n      /**\n       * @param {EventEmitter} ee\n       * @param {string} [type]\n       * @param {{\n       *   triggerAsyncId?: number\x2C\n       *   requireManualDestroy?: boolean\x2C\n       * }} [options]\n       */\n      constructor(ee\x2C type\x2C options) {\n        super(type\x2C options);\n        this[kEventEmitter] = ee;\n      }\n\n      /**\n       * @type {EventEmitter}\n       */\n      get eventEmitter() {\n        if (this[kEventEmitter] === undefined)\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\n        return this[kEventEmitter];\n      }\n    }\n\n    EventEmitterAsyncResource =\n      class EventEmitterAsyncResource extends EventEmitter {\n        /**\n         * @param {{\n         *   name?: string\x2C\n         *   triggerAsyncId?: number\x2C\n         *   requireManualDestroy?: boolean\x2C\n         * }} [options]\n         */\n        constructor(options = undefined) {\n          let name;\n          if (typeof options === 'string') {\n            name = options;\n            options = undefined;\n          } else {\n            if (new.target === EventEmitterAsyncResource) {\n              validateString(options?.name\x2C 'options.name');\n            }\n            name = options?.name || new.target.name;\n          }\n          super(options);\n\n          this[kAsyncResource] =\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\n        }\n\n        /**\n         * @param {symbol\x2Cstring} event\n         * @param  {...any} args\n         * @returns {boolean}\n         */\n        emit(event\x2C ...args) {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          const { asyncResource } = this;\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\n                              args);\n        }\n\n        /**\n         * @returns {void}\n         */\n        emitDestroy() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          this.asyncResource.emitDestroy();\n        }\n\n        /**\n         * @type {number}\n         */\n        get asyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.asyncId();\n        }\n\n        /**\n         * @type {number}\n         */\n        get triggerAsyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.triggerAsyncId();\n        }\n\n        /**\n         * @type {EventEmitterReferencingAsyncResource}\n         */\n        get asyncResource() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this[kAsyncResource];\n        }\n      };\n  }\n  return EventEmitterAsyncResource;\n}\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @constructs {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.addAbortListener = addAbortListener;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\nmodule.exports.getMaxListeners = getMaxListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  __proto__: null\x2C\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\x2C\n});\n\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: lazyEventEmitterAsyncResource\x2C\n  set: undefined\x2C\n  configurable: true\x2C\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  __proto__: null\x2C\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\x2C\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    validateNumber(arg\x2C 'defaultMaxListeners'\x2C 0);\n    defaultMaxListeners = arg;\n  }\x2C\n});\n\nfunction hasEventListener(self\x2C type) {\n  if (type === undefined)\n    return self._events !== undefined;\n  return self._events !== undefined && self._events[type] !== undefined;\n};\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    validateNumber(n\x2C 'setMaxListeners'\x2C 0);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\n// If you're updating this function definition\x2C please also update any\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = { __proto__: null };\n    this._eventsCount = 0;\n    this[kShapeMode] = false;\n  } else {\n    this[kShapeMode] = true;\n  }\n\n  this._maxListeners ||= undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catchable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  validateNumber(n\x2C 'setMaxListeners'\x2C 0);\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {\n    // Continue regardless of error.\n  }\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError &&= events.error === undefined;\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          __proto__: null\x2C\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\x2C\n        });\n      } catch {\n        // Continue regardless of error.\n      }\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = { __proto__: null };\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      const w = genericNodeError(\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\n        `added to ${inspect(target\x2C { depth: -1 })}. MaxListeners is ${m}. Use emitter.setMaxListeners() to increase limit`\x2C\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      if (!hasEventListener(this\x2C type))\n        return this;\n\n      const events = this._events;\n      const list = events[type];\n\n      if (list === listener || list.listener === listener) {\n        this._eventsCount -= 1;\n\n        if (this[kShapeMode]) {\n          events[type] = undefined;\n        } else if (this._eventsCount === 0) {\n          this._events = { __proto__: null };\n        } else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      if (!hasEventListener(this))\n        return this;\n      const events = this._events;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = { __proto__: null };\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = { __proto__: null };\n          else\n            delete events[type];\n        }\n        this[kShapeMode] = false;\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = { __proto__: null };\n        this._eventsCount = 0;\n        this[kShapeMode] = false;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  if (!hasEventListener(target\x2C type))\n    return [];\n\n  const evlistener = target._events[type];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {number}\n */\nfunction listenerCount(type\x2C listener) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      if (listener != null) {\n        return listener === evlistener || listener === evlistener.listener ? 1 : 0;\n      }\n\n      return 1;\n    } else if (evlistener !== undefined) {\n      if (listener != null) {\n        let matching = 0;\n\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\n            matching++;\n          }\n        }\n\n        return matching;\n      }\n\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Returns the max listeners set.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @returns {number}\n */\nfunction getMaxListeners(emitterOrTarget) {\n  if (typeof emitterOrTarget?.getMaxListeners === 'function') {\n    return _getMaxListeners(emitterOrTarget);\n  } else if (emitterOrTarget?.[kMaxEventTargetListeners]) {\n    return emitterOrTarget[kMaxEventTargetListeners];\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string | symbol} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const { signal } = options;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal.reason });\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n    const opts = { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C opts);\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      // EventTarget does not have `error` event semantics like Node\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    emitter.addEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{\n *    signal: AbortSignal;\n *    close?: string[];\n *    highWaterMark?: number\x2C\n *    lowWaterMark?: number\n *   }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\n  // Parameters validation\n  validateObject(options\x2C 'options');\n  const signal = options.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal.reason });\n  // Support both highWaterMark and highWatermark for backward compatibility\n  const highWatermark = options.highWaterMark ?? options.highWatermark ?? NumberMAX_SAFE_INTEGER;\n  validateInteger(highWatermark\x2C 'options.highWaterMark'\x2C 1);\n  // Support both lowWaterMark and lowWatermark for backward compatibility\n  const lowWatermark = options.lowWaterMark ?? options.lowWatermark ?? 1;\n  validateInteger(lowWatermark\x2C 'options.lowWaterMark'\x2C 1);\n\n  // Preparing controlling queues and variables\n  FixedQueue ??= require('internal/fixed_queue');\n  const unconsumedEvents = new FixedQueue();\n  const unconsumedPromises = new FixedQueue();\n  let paused = false;\n  let error = null;\n  let finished = false;\n  let size = 0;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      if (size) {\n        const value = unconsumedEvents.shift();\n        size--;\n        if (paused && size < lowWatermark) {\n          emitter.resume();\n          paused = false;\n        }\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) return closeHandler();\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      return closeHandler();\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      errorHandler(err);\n    }\x2C\n    [SymbolAsyncIterator]() {\n      return this;\n    }\x2C\n    [kWatermarkData]: {\n      /**\n       * The current queue size\n       */\n      get size() {\n        return size;\n      }\x2C\n      /**\n       * The low watermark. The emitter is resumed every time size is lower than it\n       */\n      get low() {\n        return lowWatermark;\n      }\x2C\n      /**\n       * The high watermark. The emitter is paused every time size is higher than it\n       */\n      get high() {\n        return highWatermark;\n      }\x2C\n      /**\n       * It checks whether the emitter is paused by the watermark controller or not\n       */\n      get isPaused() {\n        return paused;\n      }\x2C\n    }\x2C\n  }\x2C AsyncIteratorPrototype);\n\n  // Adding event handlers\n  const { addEventListener\x2C removeAll } = listenersController();\n  kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\n  addEventListener(emitter\x2C event\x2C options[kFirstEventParam] ? eventHandler : function(...args) {\n    return eventHandler(args);\n  });\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    addEventListener(emitter\x2C 'error'\x2C errorHandler);\n  }\n  const closeEvents = options?.close;\n  if (closeEvents?.length) {\n    for (let i = 0; i < closeEvents.length; i++) {\n      addEventListener(emitter\x2C closeEvents[i]\x2C closeHandler);\n    }\n  }\n\n  const abortListenerDisposable = signal ? addAbortListener(signal\x2C abortListener) : null;\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\n  }\n\n  function eventHandler(value) {\n    if (unconsumedPromises.isEmpty()) {\n      size++;\n      if (!paused && size > highWatermark) {\n        paused = true;\n        emitter.pause();\n      }\n      unconsumedEvents.push(value);\n    } else unconsumedPromises.shift().resolve(createIterResult(value\x2C false));\n  }\n\n  function errorHandler(err) {\n    if (unconsumedPromises.isEmpty()) error = err;\n    else unconsumedPromises.shift().reject(err);\n\n    closeHandler();\n  }\n\n  function closeHandler() {\n    abortListenerDisposable?.[SymbolDispose]();\n    removeAll();\n    finished = true;\n    const doneResult = createIterResult(undefined\x2C true);\n    while (!unconsumedPromises.isEmpty()) {\n      unconsumedPromises.shift().resolve(doneResult);\n    }\n\n    return PromiseResolve(doneResult);\n  }\n}\n\nfunction listenersController() {\n  const listeners = [];\n\n  return {\n    addEventListener(emitter\x2C event\x2C handler\x2C flags) {\n      eventTargetAgnosticAddListener(emitter\x2C event\x2C handler\x2C flags);\n      ArrayPrototypePush(listeners\x2C [emitter\x2C event\x2C handler\x2C flags]);\n    }\x2C\n    removeAll() {\n      while (listeners.length > 0) {\n        ReflectApply(eventTargetAgnosticRemoveListener\x2C undefined\x2C ArrayPrototypePop(listeners));\n      }\n    }\x2C\n  };\n}\n
code-source-info,0x107f97e80,22,8131,8187,,,
tick,0x100fb323c,213667,0,0x0,0,0x12ea986686e1,0x101701af4,0x12ea9866854f,0x12ea9866837d,0x12ea98666952,0x12ea986662fc,0x3a8f561369ec,0x3a8f56137027,0x3a8f5612dc89,0x3a8f5612e560,0x3a8f5612e9c8,0x10166ef98,0xbd57825e322,0x1a7c5b229481,0x1a7c5b228df1,0xbd57825e106,0x1a7c5b23c1e3
tick,0x19252adc4,213667,0,0x0,0,0x12ea986686e1,0x101701af4,0x12ea9866854f,0x12ea9866837d,0x12ea98666952,0x12ea986662fc,0x3a8f561369ec,0x3a8f56137027,0x3a8f5612dc89,0x3a8f5612e560,0x3a8f5612e9c8,0x10166ef98,0xbd57825e322,0x1a7c5b229481,0x1a7c5b228df1,0xbd57825e106,0x1a7c5b23c1e3
code-creation,JS,10,213708,0x107f97f80,2352,_addListener node:events:552:22,0x22b216ce8e10,^
code-source-info,0x107f97f80,22,15928,17823,,,
code-creation,JS,10,213750,0x107f988e0,168,addListener node:events:615:58,0x22b216ce8ff8,^
code-source-info,0x107f988e0,22,18021,18093,,,
code-creation,JS,10,213750,0x107f989c0,424,resolver node:internal/dns/callback_resolver:54:18,0x1ec6b0f5c668,^
code-source-info,0x107f989c0,180,1100,2006,,,
code-creation,JS,10,213833,0x107f98ba0,328, node:internal/dns/utils:257:39,0x6ba9c788e38,^
script-source,70,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_DNS_SET_SERVERS_FAILED\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n  }\x2C\n} = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nlet binding;\nfunction lazyBinding() {\n  binding ??= internalBinding('cares_wrap');\n  return binding;\n}\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\n\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    addDeserializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\n  return tries;\n}\n\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\nconst kSnapshotStates = Symbol('dns:resolver:config');\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\nconst kSetServersInternal = Symbol('dns:resolver:setServers');\n\n// Resolver instances correspond 1:1 to c-ares channels.\n\nclass ResolverBase {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    // If we are building snapshot\x2C save the states of the resolver along\n    // the way.\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates] = { timeout\x2C tries };\n    }\n    this[kInitializeHandle](timeout\x2C tries);\n  }\n\n  [kInitializeHandle](timeout\x2C tries) {\n    const { ChannelWrap } = lazyBinding();\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const newSet = [];\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    this[kSetServersInternal](newSet\x2C servers);\n  }\n\n  [kSetServersInternal](newSet\x2C servers) {\n    const orig = ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      val.unshift(isIP(val[0]));\n      return val;\n    });\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(orig);\n      const { strerror } = lazyBinding();\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].servers = newSet;\n    }\n  }\n\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (ipv6 !== undefined) {\n      validateString(ipv6\x2C 'ipv6');\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\n    }\n  }\n\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\n  // end up being useful for snapshot users.\n  [kSerializeResolver]() {\n    this._handle = null;  // We'll restore it during deserialization.\n    addDeserializeCallback(function deserializeResolver(resolver) {\n      resolver[kDeserializeResolver]();\n    }\x2C this);\n  }\n\n  [kDeserializeResolver]() {\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\n    this[kInitializeHandle](timeout\x2C tries);\n    if (localAddress) {\n      const { ipv4\x2C ipv6 } = localAddress;\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\n    }\n    if (servers) {\n      this[kSetServersInternal](servers\x2C servers);\n    }\n  }\n}\n\nlet defaultResolver;\nlet dnsOrder;\n\nfunction initializeDns() {\n  const orderFromCLI = getOptionValue('--dns-result-order');\n  if (!orderFromCLI) {\n    dnsOrder ??= 'verbatim';\n  } else {\n    // Allow the deserialized application to override order from CLI.\n    validateOneOf(orderFromCLI\x2C '--dns-result-order'\x2C ['verbatim'\x2C 'ipv4first'\x2C 'ipv6first']);\n    dnsOrder = orderFromCLI;\n  }\n\n  if (!isBuildingSnapshot()) {\n    return;\n  }\n\n  addSerializeCallback(() => {\n    defaultResolver?.[kSerializeResolver]();\n  });\n}\n\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  // We do this here instead of pre-execution so that the default resolver is\n  // only ever created when the user loads any dns module.\n  if (defaultResolver === undefined) {\n    defaultResolver = new ResolverBase();\n  }\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  const defaultResolver = getDefaultResolver();\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\nfunction emitInvalidHostnameWarning(hostname) {\n  if (!invalidHostnameWarningEmitted) {\n    process.emitWarning(\n      `The provided hostname "${hostname}" is not a valid ` +\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0118'\x2C\n    );\n    invalidHostnameWarningEmitted = true;\n  }\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first'\x2C 'ipv6first']);\n  dnsOrder = value;\n}\n\nfunction getDefaultResultOrder() {\n  return dnsOrder;\n}\n\nfunction createResolverClass(resolver) {\n  const resolveMap = { __proto__: null };\n\n  class Resolver extends ResolverBase {}\n\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\n  Resolver.prototype.reverse = resolver('getHostByAddr');\n\n  return {\n    resolveMap\x2C\n    Resolver\x2C\n  };\n}\n\n// ERROR CODES\nconst errorCodes = {\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\x2C\n};\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultResultOrder\x2C\n  setDefaultResultOrder\x2C\n  errorCodes\x2C\n  createResolverClass\x2C\n  initializeDns\x2C\n};\n
code-source-info,0x107f98ba0,70,6696,6781,,,
code-creation,JS,10,214167,0x107f98d20,64,testEnabled node:internal/util/debuglog:42:19,0x22b216ce3d90,^
code-source-info,0x107f98d20,19,1287,1298,,,
code-creation,JS,10,214167,0x107f98d80,144,get node:net:2410:6,0x15988e44bb20,^
code-source-info,0x107f98d80,96,67240,67268,,,
code-creation,JS,9,214292,0xbd57825e9c0,42,Writable.write node:internal/streams/writable:504:36,0x15988e470a98,~
code-source-info,0xbd57825e9c0,110,15421,15604,C0O15447C11O15509C14O15528C17O15552C32O15559C41O15602,,
code-creation,JS,9,214333,0xbd57825eb40,401,_write node:internal/streams/writable:453:16,0x15988e46fed0,~
code-source-info,0xbd57825eb40,110,14001,15384,C0O14056C5O14075C16O14125C20O14142C24O14168C29O14174C34O14168C35O14211C37O14222C39O14221C45O14232C47O14230C52O14245C57O14258C61O14281C63O14298C69O14309C71O14307C76O14331C85O14354C93O14382C95O14395C102O14412C105O14419C110O14419C117O14449C124O14455C129O14449C130O14502C136O14541C138O14551C144O14562C146O14560C151O14578C156O14595C161O14610C166O14610C174O14641C180O14681C182O14702C184O14691C189O14718C195O14750C200O14761C205O14761C212O14796C215O14811C220O14811C227O14845C233O14885C251O14891C256O14885C257O15007C259O15014C261O15024C267O15035C269O15033C274O15044C279O15057C284O15063C292O15106C294O15116C300O15127C302O15125C307O15139C312O15152C322O15158C328O15200C332O15215C335O15223C340O15223C346O15246C359O15246C364O15285C366O15296C367O15304C373O15319C377O15325C395O15332C400O15382,,
code-creation,JS,9,214458,0xbd57825eec0,436,writeOrBuffer node:internal/streams/writable:548:23,0x15988e46ff28,~
code-source-info,0xbd57825eec
code-creation,JS,9,214500,0xbd57825f1c8,61,set node:internal/streams/writable:262:8,0x15988e4706b8,~
code-source-info,0xbd57825f1c8,110,8377,8538,C0O8393C2O8398C7O8413C11O8428C15O8449C17O8454C26O8465C31O8462C37O8498C39O8503C48O8515C50O8514C55O8511C60O8537,,
code-creation,JS,9,214542,0xbd57825f298,26,Socket._write node:net:975:35,0x15988e44b230,~
code-source-info,0xbd57825f298,96,25379,25452,C0O25409C19O25409C25O25451,,
code-creation,JS,9,214583,0xbd57825f3c0,217,Socket._writeGeneric node:net:933:42,0x15988e44b0d8,~
code-source-info,0xbd57825f3c0,96,24338,25242,C0O24338C21O24540C37O24558C41O24576C45O24588C49O24610C53O24631C66O24631C72O24857C83O24857C89O24885C90O24892C91O24899C92O24917C96O24927C98O24949C102O24968C108O24983C115O24990C118O24986C124O24983C128O25016C129O25029C130O25042C135O25042C139O25064C141O25071C145O25087C161O25093C169O25135C188O25141C194O25191C200O25202C204O25207C207O25234C211O25228C216O25241,,
code-creation,JS,9,214625,0xbd57825f570,44,_unrefTimer node:net:518:52,0x15988e44a1a8,~
code-source-info,0xbd57825f570,96,14254,14364,C0O14274C5O14282C9O14313C11O14319C13O14318C18O14336C20O14337C24O14348C29O14348C33O14298C38O14261C43O14363,,
code-creation,JS,9,214625,0xbd57825f628,55,writeGeneric node:internal/stream_base_commons:146:22,0x3564d12be240,~
code-source-info,0xbd57825f628,115,3551,3735,C0O3594C5O3615C7O3614C11O3594C17O3644C29O3644C35O3684C47O3684C52O3722C54O3733,,
code-creation,JS,9,214667,0xbd57825f718,47,createWriteWrap node:internal/stream_base_commons:108:25,0x3564d12be190,~
code-source-info,0xbd57825f718,115,2673,2887,C0O2708C5O2708C11O2728C13O2739C17O2751C19O2766C23O2787C24O2797C28O2808C29O2818C33O2825C34O2836C38O2846C40O2859C44O2874C46O2885,,
code-creation,JS,9,214708,0xbd57825f870,215,handleWriteReq node:internal/stream_base_commons:46:24,0x3564d12be0e0,~
code-source-info,0xbd57825f870,115,1224,2056,C0O1258C5O1277C80O1347C85O1347C92O1377C99O1397C101O1396C106O1426C108O1437C112O1451C114O1462C115O1527C120O1527C126O1556C127O1612C132O1612C138O1639C139O1678C144O1678C150O1706C151O1803C156O1803C162O1830C163O1871C168O1878C173O1878C180O1925C185O1925C192O1957C199O1977C201O1976C206O2006C208O2017C212O2033C214O2044,,
code-creation,JS,9,214750,0xbd57825fa48,91,afterWriteDispatched node:internal/stream_base_commons:154:30,0x3564d12be298,~
code-source-info,0xbd57825fa48,115,3766,4044,C0O3785C2O3797C7O3813C9O3812C12O3795C16O3831C21O3861C23O3860C27O3841C31O3885C32O3893C37O3904C39O3918C45O3951C55O3914C61O3911C65O3959C66O3972C72O3992C80O4027C85O4027C90O4043,,
code-creation,JS,9,214833,0xbd57825fc48,728,onwrite node:internal/streams/writable:615:17,0x15988e470030,~
code-source-info,0xbd57825fc48,110,18606,21196,C0O18644C5O18663C7O18674C9O18673C15O18684C17O18682C22O18700C27O18713C34O18740C37O18736C43O18713C48O18770C49O18777C50O18798C52O18804C58O18815C60O18813C65O18822C70O18842C72O18848C78O18859C80O18857C85O18869C92O18883C94O18882C102O18908C103O18922C107O18932C110O18938C116O18951C121O18960C124O18949C129O18946C133O18981C138O19003C145O18994C149O19015C150O19030C154O19038C158O19142C162O19199C164O19209C170O19220C172O19218C177O19230C182O19245C184O19251C189O19266C193O19278C196O19284C202O19295C205O19292C209O19417C215O19443C220O19458C226O19482C233O19505C237O19522C241O19540C244O19548C264O19548C271O19614C286O19614C293O19672C295O19682C301O19693C303O19691C308O19704C313O19719C316O19719C321O19758C325O19794C327O19800C333O19811C335O19809C340O19823C346O19838C352O19845C356O19875C360O19894C366O19905C370O19916C374O19903C381O19929C386O20198C388O20205C393O20224C395O20234C401O20245C403O20243C408O20265C415O20274C417O20296C420O20304C440O20304C445O20358C448O20364C454O20375C457O20372C463O20422C469O20437C473O20451C475O20461C481O20472C483O20470C488O20481C493O20502C504O20502C511O20571C513O20581C519O20592C521O20590C526O20613C533O20645C535O20644C539O20671C546O20674C551O20692C553O20698C555O20697C565O20729C571O20746C575O20770C577O20776C587O20816C593O20820C599O20828C605O20802C609O20845C612O20853C622O20883C626O20853C632O20920C635O20926C641O20938C646O20957C652O20934C658O21004C664O21019C668O21031C670O21041C676O21052C678O21050C683O21061C688O21080C699O21080C706O21151C721O21151C727O21195,,
tick,0x19259e824,214917,0,0x0,3,0xbd57825fa9d,0xbd57825f657,0xbd57825f47c,0xbd57825f2ab,0xbd57825f014,0xbd57825eccb,0xbd57825e9e0,0x3a8f5612e227,0x3a8f5612e9ce,0x10166ef98,0xbd57825e322,0x1a7c5b229481,0x1a7c5b228df1,0xbd57825e106,0x1a7c5b23c1e3
code-creation,JS,9,214917,0xbd578260120,118,Readable.removeListener node:internal/streams/readable:1159:45,0x15988e4623a0,~
code-source-info,0xbd578260120,106,36119,36818,C0O36151C5O36182C10O36189C15O36199C20O36214C34O36214C40O36288C42O36295C47O36645C50O36653C58O36653C66O36703C68O36710C73O36729C81O36729C88O36751C93O36764C95O36770C104O36782C106O36781C111O36778C115O36805C117O36816,,
code-creation,JS,9,214958,0xbd578260268,73,afterWriteTick node:internal/streams/writable:693:24,0x15988e470088,~
code-source-info,0xbd578260268,110,21221,21385,C0O21224C5O21232C10O21239C15O21246C20O21256C22O21262C31O21274C33O21273C38O21270C42O21297C44O21303C48O21329C52O21339C67O21346C72O21383,,
code-creation,JS,9,215000,0xbd578260388,198,afterWrite node:internal/streams/writable:699:20,0x15988e4700e0,~
code-source-info,0xbd578260388,110,21406,21895,C0O21437C2O21443C11O21455C13O21454C18O21451C22O21496C24O21502C30O21514C35O21524C37O21522C43O21537C45O21535C48O21511C54O21550C59O21574C65O21581C69O21590C71O21611C74O21617C80O21628C85O21625C89O21652C97O21652C102O21689C112O21689C117O21700C123O21715C127O21723C129O21723C133O21674C137O21740C139O21750C145O21759C150O21773C155O21786C158O21786C162O21813C164O21823C170O21832C175O21843C180O21856C191O21856C197O21894,,
tick,0x101534000,216083,0,0x0,6
tick,0x19252e620,8310375,0,0x0,8
tick,0x100edb544,8311417,0,0x0,6
tick,0x1925273e4,8312500,0,0x0,1
tick,0x100ee41a0,8313792,0,0x0,1
new,MemoryChunk,0x230e4b800000,262144
tick,0x100ede358,8315042,0,0x0,1
delete,MemoryChunk,0x7d2d1600000
delete,MemoryChunk,0x1acfa7440000
delete,MemoryChunk,0x396e7d400000
delete,MemoryChunk,0x1f4ffea80000
tick,0x19252e620,8458625,0,0x0,8
tick,0x1009e0000,8458708,0,0x0,8
code-creation,JS,9,8459000,0x7769ed8e770,444,onconnection node:net:2207:22,0x15988e44a048,~
code-source-info,0x7769ed8e
code-creation,JS,9,8459167,0x7769ed8eab0,71,Socket.read node:net:778:33,0x15988e44aa58,~
code-source-info,0x7769ed8eab0,96,20514,20692,C0O20522C2O20531C4O20530C9O20549C15O20568C21O20591C26O20599C32O20614C35O20614C39O20640C44O20654C49O20661C54O20671C59O20676C64O20676C70O20690,,
code-creation,JS,9,8459250,0x7769ed8eca8,878,Readable.read node:internal/streams/readable:647:35,0x15988e462060,~
code-source-info,0x7769ed8eca
code-creation,JS,9,8459333,0x7769ed8f220,10, node:internal/streams/readable:55:66,0x15988e4617d0,~
code-source-info,0x7769ed8f220,106,1880,1905,C0O1892C2O1898C9O1904,,
code-creation,JS,9,8459375,0x7769ed8f2e0,166,howMuchToRead node:internal/streams/readable:630:23,0x15988e4610f0,~
code-source-info,0x7769ed8f2e0,106,18811,19270,C0O18826C1O18832C6O18847C12O18854C19O18870C21O18869C27O18880C29O18878C34O18888C39O18900C40O18909C41O18912C43O18923C45O18922C51O18933C53O18931C58O18946C63O18957C65O18966C66O18969C71O18973C77O19034C79O19044C85O19055C87O19053C92O19065C97O19080C103O19107C108O19120C112O19113C116O19133C120O19140C121O19158C125O19165C126O19187C130O19178C135O19199C137O19208C138O19211C140O19224C146O19235C148O19233C153O19243C158O19257C165O19268,,
code-creation,JS,9,8459417,0x7769ed8f4a8,137,Socket._read node:net:718:34,0x15988e44a780,~
code-source-info,0x7769ed8f4a8,96,19037,19348,C0O19037C13O19045C32O19100C44O19137C50O19045C55O19154C58O19163C67O19183C73O19198C81O19198C85O19238C88O19243C101O19243C109O19290C112O19300C117O19308C123O19323C131O19323C136O19347,,
code-creation,JS,9,8459417,0x7769ed8f608,70,tryReadStart node:net:708:22,0x15988e449660,~
code-source-info,0x7769ed8f608,96,18708,18937,C0O18762C8O18762C12O18806C18O18822C22O18851C27O18859C32O18859C37O18874C39O18894C46O18906C57O18902C63O18894C69O18936,,
code-creation,JS,9,8459458,0x7769ed8f6e8,31,connectionListener node:_http_server:660:28,0x2858598a7720,~
code-source-info,0x7769ed8f6e8,124,21496,21614,C0O21509C7O21541C10O21541C24O21509C30O21613,,
code-creation,JS,9,8459542,0x7769ed8f8f0,654,connectionListenerInternal node:_http_server:666:36,0x2858598a7778,~
code-source-info,0x7769ed8f8f
code-creation,JS,9,8459583,0x7769ed8fcf0,10, node:_http_server:94:64,0x2858598a7f88,~
code-source-info,0x7769ed8fcf0,124,2735,2760,C0O2747C2O2753C9O2759,,
code-creation,JS,9,8459625,0x7769ed8fd98,56,alloc node:internal/freelist:15:8,0x285859896e28,~
code-source-info,0x7769ed8fd98,120,203,317,C0O203C2O224C7O229C13O236C18O253C23O258C28O258C36O272C39O290C50O272C55O313,,
code-creation,JS,9,8459625,0x7769ed8fe78,65,parsersCb node:_http_common:158:65,0x285859895508,~
code-source-info,0x7769ed8fe78,119,5102,5372,C0O5124C5O5124C11O5145C14O5145C18O5169C20O5176C25O5188C29O5209C31O5216C36O5236C40O5265C42O5272C47O5281C51O5299C53O5306C58O5326C62O5356C64O5370,,
code-creation,JS,9,8459667,0xbd578260c08,82,cleanParser node:_http_common:225:21,0x285859895400,~
code-source-info,0xbd578260c08,119,7018,7380,C0O7031C2O7047C6O7055C8O7067C12O7075C13O7089C17O7099C18O7115C22O7125C23O7141C27O7151C29O7175C31O7173C35O7195C37O7202C41O7219C45O7229C47O7236C51O7248C55O7258C57O7265C61O7277C65O7287C66O7304C70O7315C71O7333C75O7343C76O7371C81O7379,,
code-creation,JS,9,8459708,0xbd578260d20,41,isLenient node:_http_common:248:19,0x2858598954b0,~
code-source-info,0xbd578260d20,119,7623,7790,C0O7630C8O7657C12O7678C16O7692C22O7704C25O7712C33O7712C38O7762C40O7788,,
code-creation,JS,9,8459708,0xbd578260dd8,14,HTTPServerAsyncResource node:_http_server:190:14,0x2858598a7fe0,~
code-source-info,0xbd578260dd8,124,7250,7318,C0O7271C2O7281C6O7293C8O7305C13O7317,,
tick,0x100f5db64,8460000,0,0x0,0,0x7769ed8f9a5,0x1a7c5b212998,0x7769ed8f700,0x1a7c5b228dac,0x7769ed8e901
code-creation,JS,9,8460083,0xbd578260ea0,70,Socket.resume node:net:769:35,0x15988e44a9c8,~
code-source-info,0xbd578260ea0,96,20302,20478,C0O20309C2O20318C4O20317C9O20336C15O20355C21O20378C26O20386C32O20401C35O20401C39O20427C44O20441C49O20448C54O20458C59O20465C64O20465C69O20476,,
code-creation,JS,9,8460125,0xbd578260fb8,162,Readable.resume node:internal/streams/readable:1227:37,0x15988e4624d0,~
code-source-info,0xbd578260fb8,106,38472,38969,C0O38498C5O38516C7O38527C9O38526C15O38537C17O38535C22O38547C27O38560C35O38560C39O38694C42O38700C48O38711C53O38708C57O38728C59O38738C65O38749C67O38747C72O38769C77O38784C80O38790C86O38801C89O38798C95O38830C98O38836C104O38847C109O38844C113O38868C116O38868C121O38895C124O38901C130O38912C135O38909C139O38926C142O38932C148O38944C150O38943C155O38940C159O38955C161O38967,,
code-creation,JS,9,8460167,0xbd578261130,62,resume node:internal/streams/readable:1247:16,0x15988e461430,~
code-source-info,0xbd578261130,106,38987,39145,C0O39007C2O39018C4O39017C10O39028C12O39026C17O39046C22O39059C25O39065C31O39076C34O39073C38O39098C41O39106C55O39106C61O39144,,
code-creation,JS,10,8460208,0x107f98e40,2496,Readable.on node:internal/streams/readable:1127:33,0x15988e462310,^
code-source-info,0x107f98e40,106,35015,36016,,,
code-creation,JS,10,8460458,0x107f99820,176,hasHooks node:internal/async_hooks:470:18,0x22b216cd2638,^
script-source,11,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\x2C\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\x2C\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(kGenericUserError);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\n  // AsyncWrap instances.\n  const publicResource = resource[resource_symbol];\n  if (publicResource !== undefined)\n    return publicResource;\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\x2C\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\x2C\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  registerDestroyHook(promise\x2C asyncId);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n\n  setCallbackTrampoline(callbackTrampoline);\n}\n\nlet stopPromiseHook;\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  if (stopPromiseHook) stopPromiseHook();\n  const promiseHooks = require('internal/promise_hooks');\n  stopPromiseHook = promiseHooks.createHook({\n    init: initHook\x2C\n    before: promiseBeforeHook\x2C\n    after: promiseAfterHook\x2C\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\n  });\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  setCallbackTrampoline();\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook && stopPromiseHook) {\n    stopPromiseHook();\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n/**\n * Sets a default top level trigger ID to be used\n * @template {Array<unknown>} T\n * @template {unknown} R\n * @param {number} triggerAsyncId\n * @param { (...T: args) => R } block\n * @param  {T} args\n * @returns {R}\n */\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\x2C\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\x2C\n  }\x2C\n  asyncWrap: {\n    Providers: async_wrap.Providers\x2C\n  }\x2C\n};\n
code-source-info,0x107f99820,11,16113,16159,,,
tick,0x1924a5f34,8461333,0,0x0,0,0x12ea98668222,0x7769ed8fa75,0x1a7c5b212998,0x7769ed8f700,0x1a7c5b228dac,0x7769ed8e901
code-creation,JS,10,8461375,0x107f99900,1352, node:events:347:29,0x22b216ce8658,^
code-source-info,0x107f99900,22,10175,10815,,,
code-creation,JS,10,8461375,0x107f99e80,184,EventEmitter node:events:219:22,0x22b216ce8028,^
code-source-info,0x107f99e80,22,6610,6658,,,
code-creation,JS,10,8461375,0x107f99f60,448,get node:internal/streams/writable:230:8,0x15988e470500,^
code-source-info,0x107f99f60,110,7361,7458,,,
code-creation,JS,10,8461417,0x107f9a140,496,init node:internal/util/debuglog:88:16,0x22b216ce4410,^
code-source-info,0x107f9a140,19,2690,2773,,,
code-creation,JS,10,8461417,0x107f9a360,136,isEmpty node:internal/fixed_queue:68:10,0x22b216cfe730,^
script-source,31,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeFill\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       | undefined |\n// |   item    |               |   item    |                  | undefined |\n// |   item    |               |   item    |                  | undefined |\n// |   item    |               |   item    |                  | undefined |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// | undefined | <-- top       |   item    |                  |   item    |\n// | undefined |               |   item    |                  |   item    |\n// | undefined |               | undefined | <-- top  top --> | undefined |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// | undefined |                               |   item    |\n// | undefined |                               |   item    |\n// |   item    | <-- bottom            top --> | undefined |\n// |   item    |                               | undefined |\n// | undefined | <-- top            bottom --> |   item    |\n// | undefined |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = ArrayPrototypeFill(new Array(kSize)\x2C undefined);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n      tail.next = null;\n    }\n    return next;\n  }\n};\n
code-source-info,0x107f9a360,31,3137,3182,,,
code-creation,JS,9,8461625,0xbd578261618,14,generateSocketListenerWrapper node:_http_server:1202:39,0x2858598a7f08,~
code-source-info,0xbd578261618,124,38127,38643,C0O38127C9O38148C13O38641,,
code-creation,JS,9,8461667,0xbd5782616d8,146,resume_ node:internal/streams/readable:1254:17,0x15988e461488,~
code-source-info,0xbd5782616d8,106,39163,39461,C0O39183C10O39206C12O39205C18O39216C20O39214C25O39226C30O39183C35O39236C37O39246C43O39255C48O39267C53O39287C60O39287C65O39303C68O39309C74O39321C76O39320C81O39317C85O39348C93O39348C98O39366C101O39366C105O39382C107O39392C113O39404C118O39413C121O39401C127O39426C132O39451C139O39451C145O39460,,
code-creation,JS,9,8461708,0xbd578261840,60,onSocketResume node:_http_server:1167:24,0x2858598a7e00,~
code-source-info,0xbd578261840,124,37206,37705,C0O37544C6O37564C11O37564C15O37577C16O37584C17O37601C23O37618C28O37626C34O37646C40O37662C44O37679C49O37687C54O37687C59O37704,,
code-creation,JS,9,8461708,0xbd578261938,56,flow node:internal/streams/readable:1280:14,0x15988e4614e0,~
code-source-info,0xbd578261938,106,39818,39956,C0O39852C5O39870C13O39870C17O39927C19O39901C21O39900C27O39911C29O39909C34O39921C39O39937C44O39937C50O39887C55O39955,,
code-creation,JS,9,8462083,0xbd578261ab8,253,parserOnHeadersComplete node:_http_common:71:33,0x285859895198,~
code-source-info,0xbd578261ab8,119,2779,4227,C0O2968C3O2984C8O3006C12O3056C18O3070C20O3086C24O3099C28O3141C34O3151C36O3163C40O3246C47O3253C56O3264C58O3263C68O3319C71O3356C73O3374C79O3372C86O3411C88O3437C92O3455C94O3481C98O3499C100O3525C110O3541C114O3520C118O3559C128O3597C135O3605C144O3672C148O3589C152O3696C154O3709C158O3718C160O3735C164O3765C169O3852C175O3867C180O3876C185O3898C190O3880C196O3927C201O3927C207O3959C213O4016C215O4034C220O4044C223O4032C229O4088C231O4108C235O4126C237O4149C241O4187C246O4187C252O4225,,
code-creation,JS,9,8462167,0xbd578261d88,182,IncomingMessage node:_http_incoming:50:25,0x285859898638,~
code-source-info,0xbd578261d88,121,1823,2782,C0O1840C2O1858C6O1876C11O1922C24O1959C29O1968C34O1968C40O2003C46O2030C50O2041C52O2053C56O2066C57O2088C61O2098C62O2120C66O2130C67O2147C71O2157C72O2171C76O2182C78O2187C82O2197C86O2207C88O2212C92O2227C96O2234C98O2250C102O2258C104O2263C108O2274C112O2284C114O2289C118O2305C122O2312C124O2329C128O2337C129O2363C133O2374C134O2387C138O2399C139O2412C143O2450C145O2459C149O2467C150O2479C154O2518C155O2534C159O2544C160O2563C164O2573C166O2585C170O2598C171O2614C175O2759C176O2772C181O2781,,
code-creation,JS,9,8462208,0xbd578261f30,10,get node:internal/streams/readable:1455:18,0x15988e462a00,~
code-source-info,0xbd578261f30,106,44040,44098,C0O44063C5O44078C9O44092,,
code-creation,JS,9,8462292,0xbd578261ff8,132,_addHeaderLines node:_http_incoming:244:25,0x285859898690,~
code-source-info,0xbd578261ff8,121,7158,7583,C0O7175C7O7186C16O7206C18O7225C24O7243C26O7260C30O7277C32O7282C37O7298C41O7309C43O7321C45O7320C51O7352C53O7368C57O7385C59O7390C64O7405C68O7416C70O7428C72O7427C76O7450C80O7481C82O7486C84O7486C89O7514C96O7536C102O7551C105O7548C115O7514C120O7493C126O7468C131O7582,,
code-creation,JS,9,8462375,0xbd5782622f8,768,parserOnIncoming node:_http_server:1040:26,0x2858598a7d50,~
code-source-info,0xbd5782622f
code-creation,JS,9,8462417,0xbd5782627b0,36,resetSocketTimeout node:_http_server:1159:28,0x2858598a7da8,~
code-source-info,0xbd5782627b0,124,37028,37181,C0O37067C6O37092C7O37099C8O37110C13O37128C24O37110C29O37145C30O37171C35O37180,,
code-creation,JS,9,8462458,0xbd578262860,16,get node:internal/streams/writable:1069:8,0x15988e471130,~
code-source-info,0xbd578262860,110,31340,31426,C0O31370C5O31392C8O31404C15O31420,,
code-creation,JS,9,8462500,0xbd578262a08,280,ServerResponse node:_http_server:196:24,0x2858598a7460,~
code-source-info,0xbd578262a08,124,7345,8299,C0O7364C5O7380C10O7380C16O7412C23O7419C28O7431C29O7445C33O7457C35O7466C39O7475C40O7489C44O7499C45O7513C49O7524C50O7546C54O7566C61O7583C66O7594C73O7611C78O7622C80O7657C83O7673C88O7682C93O7690C98O7673C103O7655C107O7699C108O7720C112O7736C120O7740C126O7767C133O7783C141O7873C146O7888C151O7912C159O7939C167O7967C190O7767C195O8010C200O8014C205O8042C207O8063C210O8063C213O8061C217O8090C224O8101C227O8136C232O8090C237O8158C242O8187C248O8209C251O8234C263O8259C269O8280C273O8234C279O8298,,
tick,0x1923fda2c,8462500,0,0x0,3,0xbd57826239b,0xbd578261bae
code-creation,JS,9,8462542,0xbd578262d48,292,OutgoingMessage node:_http_outgoing:105:25,0x28585989d638,~
code-source-info,0xbd578262d48,122,3572,5131,C0O3586C5O3593C10O3593C15O3760C17O3776C21O4079C22O4095C26O4103C27O4117C31O4127C32O4142C36O4154C37O4165C41O4176C42O4197C46O4208C47O4229C51O4239C52O4275C56O4286C57O4309C61O4319C62O4352C66O4362C67O4376C71O4387C72O4411C76O4422C77O4443C81O4454C82O4470C86O4482C87O4507C91O4518C93O4523C97O4538C101O4545C102O4565C106O4575C107O4589C111O4599C113O4613C117O4621C119O4626C123O4638C127O4650C128O4664C132O4675C133O4692C137O4703C139O4708C143O4717C147O4724C149O4729C154O4745C158O4753C160O4758C164O4774C168O4781C169O4794C173O4806C175O4811C179O4820C183O4830C184O4843C188O4853C190O4858C194O4871C198O4882C199O4905C203O4913C205O4935C207O4933C211O4943C213O4948C217O4958C221O4968C223O4973C236O4998C249O5017C252O5017C255O4989C259O5046C261O5051C274O5090C286O5081C291O5130,,
code-creation,JS,9,8462625,0xbd578262fa8,92,get node:_http_incoming:109:16,0x285859898968,~
code-source-info,0xbd578262fa8,121,3185,3474,C0O3194C2O3204C4O3203C9O3223C12O3228C13O3238C17O3268C22O3298C24O3302C28O3334C30O3339C32O3346C34O3345C37O3339C42O3385C49O3406C52O3403C58O3418C61O3415C71O3385C76O3364C82O3321C86O3448C88O3459C91O3470,,
code-creation,JS,9,8462667,0xbd5782630e8,216,_addHeaderLine node:_http_incoming:382:24,0x285859898740,~
code-source-info,0xbd5782630e8,121,12819,13812,C0O12844C3O12852C9O12898C16O12898C22O12915C23O12924C30O12938C35O12965C43O12965C50O13008C52O13023C59O13053C61O13058C66O13074C86O13095C92O13065C98O13123C100O13135C106O13159C108O13168C113O13242C119O13284C124O13299C129O13299C136O13331C145O13353C151O13350C157O13385C163O13603C165O13611C170O13642C172O13654C178O13682C180O13687C189O13702C195O13694C201O13726C203O13734C208O13786C210O13798C215O13811,,
code-creation,JS,9,8462750,0xbd578263648,743,matchKnownFields node:_http_incoming:276:26,0x2858598986e8,~
code-source-info,0xbd
code-creation,JS,9,8463542,0xbd578263b58,24,hasObserver node:internal/perf/observe:570:21,0x285859883a20,~
code-source-info,0xbd578263b58,116,15904,16003,C0O15936C3O15936C8O15961C15O15982C20O15997C23O16001,,
code-creation,JS,9,8463583,0xbd578263c38,67,getObserverType node:internal/perf/observe:134:25,0x285859883658,~
code-source-info,0xbd578263c38,116,2887,3203,C0O2898C40O2929C44O2967C45O2986C49O3027C50O3045C54O3085C55O3102C59O3141C60O3158C64O3197C66O3202,,
code-creation,JS,9,8463583,0xbd578263d08,15,isTraceHTTPEnabled node:internal/http:40:28,0x28585989ff18,~
code-source-info,0xbd578263d08,123,717,752,C0O724C6O742C11O746C14O750,,
code-creation,JS,9,8463625,0xbd578263dc0,71,assignSocket node:_http_server:288:62,0x2858598a8090,~
code-source-info,0xbd578263dc0,124,10264,10498,C0O10288C6O10308C11O10314C16O10308C17O10352C19O10372C23O10389C34O10389C40O10427C42O10439C46O10456C54O10456C60O10487C65O10487C70O10497,,
code-creation,JS,9,8463625,0xbd578263ee0,153,socketListenerWrap node:_http_server:1203:37,0x31c3bc70e40,~
code-source-info,0xbd578263ee0,124,38182,38640,C0O38209C7O38213C12O38220C19O38229C23O38246C37O38246C43O38338C49O38354C54O38368C59O38375C64O38385C68O38362C72O38395C77O38418C82O38425C87O38435C91O38412C95O38454C100O38481C105O38488C110O38498C114O38475C118O38521C120O38532C121O38544C123O38551C130O38568C135O38590C140O38605C145O38590C150O38625C152O38636,,
code-creation,JS,9,8463667,0xbd578264050,77,set node:_http_outgoing:250:16,0x28585989e028,~
code-source-info,0xbd578264050,122,7547,7685,C0O7572C2O7577C4O7584C6O7583C9O7577C14O7607C21O7610C26O7612C33O7626C35O7631C37O7630C43O7639C48O7641C55O7595C60O7559C64O7661C66O7666C71O7675C76O7684,,
code-creation,JS,9,8463708,0xbd578264170,86,_flush node:_http_outgoing:1188:51,0x28585989eb68,~
code-source-info,0xbd578264170,122,34487,34895,C0O34509C2O34514C4O34513C8O34527C11O34537C20O34638C25O34638C31O34674C37O34773C42O34773C48O34795C54O34811C56O34810C61O34832C63O34837C67O34849C71O34869C79O34869C85O34894,,
code-creation,JS,9,8463708,0xbd578264290,64,get node:internal/streams/writable:1010:8,0x15988e470ec8,~
code-source-info,0xbd578264290,110,29862,30262,C0O29888C5O30147C8O30163C16O30172C21O30196C23O30195C29O30207C34O30217C36O30215C42O30226C44O30224C50O30239C52O30237C55O30204C60O30250C63O30256,,
tick,0x1923a6148,8463750,0,0x0,2,0xbd578264189,0xbd578263e01,0xbd57826242f,0xbd578261bae
code-creation,JS,9,8463750,0xbd5782643a8,136,_flushOutput node:_http_outgoing:1205:63,0x28585989ebc0,~
code-source-info,0xbd5782643a8,122,34960,35511,C0O34999C5O35010C10O35020C11O35037C16O35047C17O35064C18O35092C23O35113C28O35113C32O35127C34O35249C36O35254C38O35254C43O35318C45O35328C49O35289C54O35295C59O35305C64O35350C81O35350C87O35271C92O35236C96O35396C101O35396C105O35409C107O35425C111O35438C116O35459C120O35453C123O35438C128O35474C129O35490C133O35498C135O35509,,
code-creation,JS,9,8463792,0xbd578264518,40, file:///Users/hsulzz/Playground/hello-world/src/index.mjs:5:28,0xcb65973c050,~
code-source-info,0xbd578264518,93,115,234,C0O133C4O148C8O163C19O163C25O211C33O211C39O233,,
code-creation,JS,9,8463833,0xbd578264600,104,setHeader node:_http_outgoing:697:57,0x28585989e4e8,~
code-source-info,0xbd578264600,122,21254,21583,C0O21281C6O21296C16O21302C21O21296C22O21342C27O21342C31O21370C36O21370C41O21421C43O21426C45O21425C49O21442C51O21468C54O21473C59O21486C63O21535C68O21535C82O21553C91O21559C97O21550C101O21569C103O21581,,
code-creation,JS,9,8463833,0xbd578264720,51, node:_http_outgoing:667:44,0x28585989e438,~
code-source-info,0xbd578264720,122,20393,20576,C0O20414C8O20447C12O20456C15O20456C21O20486C26O20519C33O20540C43O20492C48O20486C50O20575,,
code-creation,JS,9,8463875,0xbd5782647e8,16,checkIsHttpToken node:_http_common:210:26,0x285859895350,~
code-source-info,0xbd5782647e8,119,6617,6658,C0O6627C5O6646C10O6646C15O6656,,
code-creation,JS,9,8463875,0xbd5782648a0,78, node:_http_outgoing:673:45,0x28585989e490,~
code-source-info,0xbd5782648a0,122,20624,20936,C0O20645C4O20676C9O20716C22O20682C27O20676C28O20757C33O20761C39O20798C47O20798C52O20858C57O20885C70O20864C75O20858C77O20935,,
code-creation,JS,9,8463917,0xbd578264988,16,checkInvalidHeaderChar node:_http_common:221:32,0x2858598953a8,~
code-source-info,0xbd578264988,119,6951,6996,C0O6961C5O6984C10O6984C15O6994,,
code-creation,JS,9,8463958,0xbd578264b38,550,end node:_http_outgoing:1080:45,0x28585989eab8,~
code-source-info,0xbd578264b
code-creation,JS,9,8464000,0xbd578264ee0,37,Writable.cork node:internal/streams/writable:513:35,0x15988e470b28,~
code-source-info,0xbd578264ee0,110,15641,15731,C0O15667C5O15686C7O15692C16O15703C21O15700C25O15714C31O15726C36O15730,,
code-creation,JS,9,8464083,0xbd5782650d0,764,write_ node:_http_outgoing:938:16,0x28585989d9a8,~
code-source-info,0xbd5782650d
code-creation,JS,9,8464125,0xbd578265580,17,_implicitHeader node:_http_server:343:68,0x2858598a8248,~
code-source-info,0xbd578265580,124,11655,11696,C0O11667C5O11682C10O11667C16O11695,,
code-creation,JS,9,8464167,0xbd5782656e0,475,writeHead node:_http_server:348:19,0x2858598a7510,~
code-source-info,0xbd5782656e
code-creation,RegExp,3,8464208,0x107f9a420,944,[^\\t\\x20-\\x7e\\x80-\\xff]
code-creation,JS,9,8464292,0xbd578265bf8,864,_storeHeader node:_http_outgoing:454:22,0x28585989d6e8,~
code-source-info,0xbd578265bf
code-creation,JS,9,8464417,0xbd578266188,268,processHeader node:_http_outgoing:590:23,0x28585989d740,~
code-source-info,0xbd578266188,122,18194,19285,C0O18234C4O18252C9O18252C13O18484C16O18488C22O18527C28O18589C33O18593C39O18635C41O18648C45O18640C50O18671C52O18682C55O18689C62O18699C69O18689C75O18680C79O18657C84O18622C90O18742C95O18757C103O18757C111O18793C116O18797C122O18842C129O18849C137O18857C145O18893C147O18892C154O18917C158O18934C163O18942C168O18942C173O18934C180O19095C182O19108C186O19100C191O19129C196O19164C212O19129C217O19117C222O19082C226O19186C227O19193C228O19218C236O19218C243O19236C261O19236C267O19284,,
code-creation,JS,9,8464500,0xbd578266388,28,isContentDispositionField node:_http_outgoing:101:35,0x28585989d5e0,~
code-source-info,0xbd578266388,122,3468,3546,C0O3485C7O3492C12O3504C17O3504C24O3518C27O3544,,
code-creation,JS,9,8464500,0xbd578266438,65,storeHeader node:_http_outgoing:625:21,0x28585989d798,~
code-source-info,0xbd578266438,122,19307,19486,C0O19347C4O19365C9O19365C14O19400C21O19420C27O19427C33O19435C39O19413C43O19447C58O19447C64O19485,,
code-creation,JS,9,8464542,0xbd5782665b0,200,matchHeader node:_http_outgoing:632:21,0x28585989d7f0,~
code-source-info,0xbd5782665b0,122,19508,20348,C0O19550C7O19557C12O19570C19O19577C24O19587C25O19594C26O19611C31O19611C37O19628C91O19674C92O19691C96O19705C97O19729C101O19744C106O19762C111O19762C118O19783C119O19794C125O19821C126O19842C130O19856C132O19899C133O19908C137O19922C138O19938C142O19953C147O19971C152O19971C159O19992C160O20013C164O20027C166O20067C167O20081C171O20095C173O20115C177O20130C178O20151C182O20166C184O20235C185O20248C189O20262C191O20298C192O20321C196O20336C199O20347,,
code-creation,JS,9,8464583,0xbd578266748,15,utcDate node:internal/http:17:17,0x28585989fdb8,~
code-source-info,0xbd578266748,123,307,358,C0O314C6O329C9O329C12O340C14O356,,
code-creation,JS,9,8464583,0xbd5782667f0,62,cache node:internal/http:22:15,0x28585989fe10,~
code-source-info,0xbd5782667f0,123,374,493,C0O391C5O391C11O418C16O418C23O414C29O435C42O472C47O472C51O468C55O435C61O492,,
tick,0x101b1aa80,8465000,0,0x0,0,0xbd578266800,0xbd578266751,0xbd578265d81,0xbd5782658b2,0xbd57826558a,0xbd57826523a,0xbd578264baf,0xbd578264539,0x1a7c5b228dac,0xbd5782625f1,0xbd578261bae
tick,0x192196cd4,8466250,0,0x0,0,0xbd578266800,0xbd578266751,0xbd578265d81,0xbd5782658b2,0xbd57826558a,0xbd57826523a,0xbd578264baf,0xbd578264539,0x1a7c5b228dac,0xbd5782625f1,0xbd578261bae
tick,0x101ebc260,8467542,0,0x0,0,0xbd578266800,0xbd578266751,0xbd578265d81,0xbd5782658b2,0xbd57826558a,0xbd57826523a,0xbd578264baf,0xbd578264539,0x1a7c5b228dac,0xbd5782625f1,0xbd578261bae
tick,0x101ebc260,8468792,0,0x0,0,0xbd578266800,0xbd578266751,0xbd578265d81,0xbd5782658b2,0xbd57826558a,0xbd57826523a,0xbd578264baf,0xbd578264539,0x1a7c5b228dac,0xbd5782625f1,0xbd578261bae
code-creation,JS,9,8469375,0xbd578266910,143,_send node:_http_outgoing:398:49,0x28585989e3e0,~
code-source-info,0xbd578266910,122,11376,12313,C0O11629C6O11649C12O11827C20O11877C27O11900C34O11917C36O11948C43O11956C50O12003C55O12023C60O12034C72O12058C76O12034C81O12134C86O12160C93O12150C97O12179C102O12201C107O12179C112O12220C113O12237C117O12263C137O12263C142O12311,,
code-creation,JS,9,8469375,0xbd578266ac0,185,_writeRaw node:_http_outgoing:424:19,0x28585989d690,~
code-source-info,0xbd578266ac0,122,12383,13210,C0O12433C2O12438C4O12437C8O12450C11O12458C20O12601C21O12614C22O12622C28O12664C31O12689C34O12713C38O12730C45O12743C50O12760C56O12847C61O12858C67O12879C72O12879C77O12954C94O12954C99O12986C100O13043C105O13054C117O13061C123O13067C129O13077C133O13054C138O13092C143O13116C150O13108C154O13131C159O13151C164O13131C169O13174C176O13192C178O13191C181O13185C184O13208,,
code-creation,JS,9,8469417,0xbd578266c58,35,get node:internal/streams/duplex:161:8,0x15988e459fa0,~
code-source-info,0xbd578266c58,104,5429,5638,C0O5449C6O5494C12O5534C13O5547C14O5574C19O5589C25O5607C30O5622C34O5632,,
code-creation,JS,9,8469458,0xbd578266d00,22,get node:internal/streams/readable:132:8,0x15988e466fc0,~
code-source-info,0xbd578266d00,106,3849,3890,C0O3854C4O3867C6O3866C12O3875C17O3882C21O3888,,
code-creation,JS,9,8469500,0xbd578266d90,10, node:_http_outgoing:76:64,0x28585989dab0,~
code-source-info,0xbd578266d90,122,2628,2653,C0O2640C2O2646C9O2652,,
code-creation,JS,9,8469500,0xbd578266e48,49,strictContentLength node:_http_outgoing:927:29,0x28585989d950,~
code-source-info,0xbd578266e48,122,27183,27389,C0O27210C6O27241C11O27256C14O27275C20O27296C27O27324C34O27352C42O27352C48O27387,,
code-creation,JS,9,8469500,0xbd578266f18,42,get node:_http_outgoing:195:6,0x28585989dcc0,~
code-source-info,0xbd578266f18,122,5963,6075,C0O5984C7O6002C9O6001C12O5995C18O6026C20O6025C27O6041C31O6051C38O6018C41O6071,,
code-creation,JS,9,8469542,0xbd578266fd8,16,get node:internal/streams/writable:1085:8,0x15988e4711e0,~
code-source-info,0xbd578266fd8,110,31628,31707,C0O31658C5O31680C8O31692C15O31701,,
code-creation,JS,9,8469542,0xbd578267080,81,Writable.uncork node:internal/streams/writable:520:37,0x15988e470bb8,~
code-source-info,0xbd578267080,110,15770,16000,C0O15796C5O15825C11O15839C17O15851C21O15871C27O15887C29O15893C38O15905C40O15904C45O15901C49O15925C51O15936C53O15935C59O15946C61O15944C66O15956C71O15969C74O15969C80O15999,,
code-creation,JS,9,8469625,0xbd578267228,599,clearBuffer node:internal/streams/writable:744:21,0x15988e470190,~
code-source-info,0xbd
code-creation,JS,9,8469667,0xbd578267630,169,doWrite node:internal/streams/writable:587:17,0x15988e46ff80,~
code-source-info,0xbd578267630,110,17780,18201,C0O17834C2O17849C6O17858C8O17865C13O17880C15O17894C19O17906C21O17912C30O17923C35O17934C37O17932C43O17942C45O17940C51O17920C55O17960C57O17970C63O17981C65O17979C70O17993C75O18010C82O18022C90O18018C96O18010C103O18061C107O18084C112O18105C117O18084C125O18133C130O18163C144O18133C149O18175C152O18181C158O18192C163O18189C168O18200,,
code-creation,JS,9,8469708,0xbd5782677a0,26,Socket._writev node:net:970:36,0x15988e44b1a0,~
code-source-info,0xbd5782677a0,96,25281,25341,C0O25303C19O25303C25O25340,,
code-creation,JS,9,8469750,0xbd578267878,202,writevGeneric node:internal/stream_base_commons:121:23,0x3564d12be1e8,~
code-source-info,0xbd578267878,115,2911,3528,C0O2944C5O2965C7O2964C11O2944C17O3006C22O3024C24O3034C28O3056C31O3088C33O3100C37O3093C42O3119C44O3133C48O3137C52O3127C56O3109C61O3075C67O3159C72O3183C76O3190C82O3168C88O3214C90O3226C94O3219C99O3261C101O3265C105O3276C107O3285C111O3298C115O3290C119O3311C121O3320C124O3324C128O3337C132O3329C136O3235C141O3201C145O3375C150O3382C164O3382C170O3437C171O3445C176O3452C178O3464C182O3477C194O3477C199O3515C201O3526,,
code-creation,JS,9,8469833,0xbd578267a90,337,OutgoingMessage.uncork node:_http_outgoing:322:44,0x28585989e250,~
code-source-info,0xbd578267a
code-creation,JS,9,8469875,0xbd578267da0,208,_finish node:_http_server:238:52,0x2858598a8038,~
code-source-info,0xbd578267da0,124,8482,9111,C0O8489C2O8498C4O8497C11O8528C17O8528C23O8555C31O8570C36O8613C41O8628C46O8657C54O8699C62O8745C73O8778C78O8778C101O8555C106O8831C111O8847C116O8857C121O8865C126O8865C131O8879C136O8883C141O8919C149O8966C154O8984C161O8987C172O9017C183O9040C190O9049C193O9084C201O9040C207O9110,,
code-creation,JS,9,8469917,0xbd578267f40,32,_finish node:_http_outgoing:1163:53,0x28585989eb10,~
code-source-info,0xbd578267f40,122,33621,33678,C0O33628C7O33640C9O33639C13O33628C17O33658C25O33658C31O33677,,
code-creation,JS,9,8469958,0xbd578268028,82,parserOnMessageComplete node:_http_common:135:33,0x285859895248,~
code-source-info,0xbd578268028,119,4580,5035,C0O4602C3O4632C8O4645C10O4672C11O4688C15O4757C20O4783C26O4806C31O4839C36O4806C42O4854C44O4870C48O4882C50O4894C54O4944C61O4944C66O5008C71O5025C76O5008C81O5034,,
code-creation,JS,9,8469958,0xbd578268140,83,Readable.push node:internal/streams/readable:387:35,0x15988e461e10,~
code-source-info,0xbd578268140,106,11921,12182,C0O11943C8O11943C13O11987C18O12005C20O12019C22O12018C28O12029C30O12027C35O12042C55O12054C77O12119C82O12180,,
code-creation,JS,9,8470000,0xbd5782682c8,427,readableAddChunkPushByteMode node:internal/streams/readable:463:38,0x15988e460f38,~
code-source-info,0xbd5782682c8,106,14221,15566,C0O14258C4O14284C6O14290C15O14302C17O14301C22O14298C26O14316C29O14316C34O14347C35O14360C36O14368C42O14405C46O14424C52O14455C59O14464C64O14486C69O14501C74O14501C82O14530C88O14560C90O14581C92O14570C97O14595C103O14619C108O14630C113O14630C120O14663C123O14678C128O14678C135O14710C141O14734C145O14765C152O14792C168O14788C174O14765C179O14890C180O14903C181O14911C185O14931C191O14938C196O14950C198O14956C207O14968C209O14967C214O14964C218O14982C221O14982C226O15017C229O15024C233O15043C234O15051C236O15062C238O15061C244O15072C246O15070C251O15080C256O15093C263O15120C266O15116C272O15093C277O15154C278O15167C279O15175C281O15185C287O15197C292O15210C294O15208C297O15194C302O15221C307O15234C308O15247C309O15255C312O15261C318O15273C320O15272C325O15269C329O15285C331O15295C337O15306C339O15304C344O15316C351O15326C353O15342C355O15356C357O15355C361O15371C366O15371C373O15399C379O15406C384O15421C387O15421C392O15457C395O15464C399O15483C400O15497C414O15497C419O15538C422O15545C426O15564,,
tick,0x1923fd5b4,8470083,0,0x0,3,0xbd578268177,0xbd578268065
code-creation,JS,9,8470083,0xbd578268620,241,onEofChunk node:internal/streams/readable:788:20,0x15988e461148,~
code-source-info,0xbd
code-creation,JS,9,8470125,0xbd578268830,125,emitReadable node:internal/streams/readable:819:22,0x15988e4611a0,~
code-source-info,0xbd578268830,106,25221,25531,C0O25255C5O25273C13O25273C17O25298C19O25304C28O25316C30O25315C35O25312C39O25333C41O25343C47O25354C49O25352C54O25372C59O25385C67O25413C73O25424C75O25422C80O25434C85O25385C90O25446C93O25452C99O25463C102O25460C106O25485C109O25493C117O25493C124O25530,,
code-creation,JS,9,8470125,0xbd578268968,27,readStart node:_http_incoming:39:19,0x285859898588,~
code-source-info,0xbd578268968,121,1583,1668,C0O1596C4O1618C10O1636C16O1657C21O1657C26O1667,,
code-creation,JS,9,8470167,0xbd578268a20,39,get node:internal/streams/readable:1415:8,0x15988e4627b0,~
code-source-info,0xbd578268a20,106,42986,43372,C0O43012C5O43271C8O43287C16O43296C19O43312C26O43328C33O43355C38O43366,,
code-creation,JS,9,8470167,0xbd578268ad8,49,onParserExecute node:_http_server:845:25,0x2858598a7ae8,~
code-source-info,0xbd578268ad8,124,27327,27802,C0O27665C5O27665C9O27682C17O27682C22O27731C42O27731C48O27801,,
code-creation,JS,9,8470208,0xbd578268cc8,475,onParserExecuteCommon node:_http_server:918:31,0x2858598a7bf0,~
code-source-info,0xbd578268cc
code-creation,JS,9,8470292,0xbd578268fe8,49,callback node:internal/streams/writable:764:63,0x31c3bc41ec0,~
code-source-info,0xbd578268fe8,110,23211,23320,C0O23241C5O23246C7O23248C10O23257C14O23246C19O23280C24O23288C28O23292C33O23292C38O23267C43O23228C48O23319,,
code-creation,JS,9,8470292,0xbd578269090,2,nop node:_http_outgoing:90:13,0x28585989db08,~
code-source-info,0xbd578269090,122,3095,3103,C1O3102,,
code-creation,JS,9,8470292,0xbd578269120,40,onFinish node:_http_outgoing:1075:18,0x28585989da58,~
code-source-info,0xbd578269120,122,31322,31400,C0O31335C7O31345C14O31353C23O31366C24O31373C25O31383C33O31383C39O31399,,
code-creation,JS,9,8470292,0xbd5782691c8,8,get node:_http_outgoing:247:16,0x28585989df98,~
code-source-info,0xbd5782691c8,122,7496,7530,C0O7505C2O7517C4O7516C7O7526,,
code-creation,JS,9,8470333,0xbd578269318,293,resOnFinish node:_http_server:980:21,0x2858598a7ca0,~
code-source-info,0xbd
code-creation,JS,9,8470375,0xbd578269548,35,_dump node:_http_incoming:429:49,0x285859898ef0,~
code-source-info,0xbd578269548,121,14205,14432,C0O14222C6O14237C7O14250C11O14380C19O14380C24O14417C29O14417C34O14431,,
code-creation,JS,9,8470417,0xbd578269618,60,Readable.removeAllListeners node:internal/streams/readable:1181:49,0x15988e462438,~
code-source-info,0xbd578269618,106,36929,37515,C0O36929C2O36950C7O36957C12O36967C17O36986C22O36986C29O37069C31O37076C40O37446C43O37454C51O37454C57O37502C59O37513,,
code-creation,JS,10,8470417,0x107f9a800,176,initHooksExist node:internal/async_hooks:478:24,0x22b216cd27b8,^
code-source-info,0x107f9a800,11,16245,16277,,,
code-creation,JS,10,8470458,0x107f9a8e0,2824,emit node:events:471:44,0x22b216ce8cf0,^
code-source-info,0x107f9a8e0,22,13625,15904,,,
code-creation,JS,10,8470500,0x107f9b420,832,debuglogImpl node:internal/util/debuglog:65:22,0x22b216ce40d8,^
code-source-info,0x107f9b420,19,1883,2426,,,
code-creation,JS,10,8470500,0x107f9b780,200,assert node:internal/assert:8:16,0x22b216ccd510,^
script-source,8,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  return error ??= require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x107f9b780,8,143,278,,,
code-creation,JS,10,8470542,0x107f9b880,152,isEmpty node:internal/fixed_queue:96:10,0x22b216cfeaf8,^
code-source-info,0x107f9b880,31,3690,3730,,,
code-creation,JS,10,8470542,0x107f9b940,264,newAsyncId node:internal/async_hooks:417:20,0x22b216cd2278,^
code-source-info,0x107f9b940,11,14568,14619,,,
code-creation,JS,10,8470542,0x107f9ba80,376,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x22b216cd23f8,^
code-source-info,0x107f9ba80,11,15027,15284,,,
code-creation,JS,10,8470583,0x107f9bc20,64,current node:internal/async_context_frame:59:17,0x22b216ce60a0,^
script-source,21,node:internal/async_context_frame,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst {\n  getContinuationPreservedEmbedderData\x2C\n  setContinuationPreservedEmbedderData\x2C\n} = internalBinding('async_context_frame');\n\nlet enabled_;\n\nclass ActiveAsyncContextFrame extends Map {\n  static get enabled() {\n    return true;\n  }\n\n  static current() {\n    return getContinuationPreservedEmbedderData();\n  }\n\n  static set(frame) {\n    setContinuationPreservedEmbedderData(frame);\n  }\n\n  static exchange(frame) {\n    const prior = this.current();\n    this.set(frame);\n    return prior;\n  }\n\n  static disable(store) {\n    const frame = this.current();\n    frame?.disable(store);\n  }\n}\n\nfunction checkEnabled() {\n  const enabled = require('internal/options')\n    .getOptionValue('--experimental-async-context-frame');\n\n  // If enabled\x2C swap to active prototype so we don't need to check status\n  // on every interaction with the async context frame.\n  if (enabled) {\n    // eslint-disable-next-line no-use-before-define\n    ObjectSetPrototypeOf(AsyncContextFrame\x2C ActiveAsyncContextFrame);\n  }\n\n  return enabled;\n}\n\nclass InactiveAsyncContextFrame extends Map {\n  static get enabled() {\n    enabled_ ??= checkEnabled();\n    return enabled_;\n  }\n\n  static current() {}\n  static set(frame) {}\n  static exchange(frame) {}\n  static disable(store) {}\n}\n\nclass AsyncContextFrame extends InactiveAsyncContextFrame {\n  constructor(store\x2C data) {\n    super(AsyncContextFrame.current());\n    this.set(store\x2C data);\n  }\n\n  disable(store) {\n    this.delete(store);\n  }\n}\n\nmodule.exports = AsyncContextFrame;\n
code-source-info,0x107f9bc20,21,1231,1236,,,
code-creation,JS,9,8470625,0xbd578269b78,49,detachSocket node:_http_server:299:62,0x2858598a80e8,~
code-source-info,0xbd578269b78,124,10562,10723,C0O10575C5O10589C12O10602C16O10575C20O10622C31O10622C37O10672C38O10692C42O10702C43O10714C48O10722,,
code-creation,JS,9,8470667,0xbd578269c60,70,clearIncoming node:_http_server:967:23,0x2858598a7c48,~
code-source-info,0xbd578269c60,124,31211,31509,C0O31221C9O31256C16O31262C24O31349C26O31370C33O31379C38O31402C44O31425C45O31441C51O31472C62O31472C69O31508,,
code-creation,JS,9,8470667,0xbd578269d38,19,get node:internal/streams/readable:1542:8,0x15988e462fa8,~
code-source-info,0xbd578269d38,106,45775,45860,C0O45798C6O45820C11O45835C18O45854,,
code-creation,JS,9,8470708,0xbd578269df0,53,Socket.destroySoon node:net:795:40,0x15988e44aae8,~
code-source-info,0xbd578269df0,96,20880,21019,C0O20896C6O20915C11O20915C15O20934C21O20961C26O20961C32O20988C40O21008C45O20988C52O21018,,
code-creation,JS,9,8470708,0xbd578269ec8,45,Socket.end node:net:734:32,0x15988e44a810,~
code-source-info,0xbd578269ec8,96,19383,19531,C0O19414C5O19421C10O19428C15O19438C20O19442C37O19442C42O19517C44O19529,,
code-creation,JS,9,8470750,0xbd57826a008,436,Writable.end node:internal/streams/writable:808:34,0x15988e470d30,~
code-source-info,0xbd57826a
code-creation,JS,9,8470792,0xbd57826a308,97,finishMaybe node:internal/streams/writable:928:21,0x15988e4702f0,~
code-source-info,0xbd57826a308,110,27771,28250,C0O27797C3O27801C9O27826C12O27826C17O27866C23O27876C28O27891C32O27911C38O27926C42O27938C45O27946C61O27946C68O28148C71O28152C77O28181C83O28196C87O28208C90O28208C96O28249,,
code-creation,JS,9,8470833,0xbd57826a458,103,needFinish node:internal/streams/writable:870:20,0x15988e4701e8,~
code-source-info,0xbd57826a458,110,26179,26589,C0O26191C2O26316C4O26315C10O26334C15O26354C17O26342C23O26377C25O26365C31O26402C33O26390C39O26424C41O26412C47O26445C49O26433C55O26471C57O26459C63O26497C65O26485C71O26518C73O26506C76O26324C85O26548C88O26535C93O26573C99O26580C102O26587,,
code-creation,JS,9,8470875,0xbd57826a5e8,273,prefinish node:internal/streams/writable:906:19,0x15988e470298,~
code-source-info,0xbd57826a5e8,110,27243,27749,C0O27243C13O27263C20O27274C22O27273C30O27285C37O27300C39O27298C42O27282C47O27315C52O27328C53O27335C54O27343C57O27361C72O27392C80O27403C82O27401C87O27415C92O27428C100O27434C113O27460C115O27458C121O27442C125O27471C134O27486C141O27507C144O27514C154O27514C172O27587C190O27587C197O27628C205O27634C213O27645C218O27642C224O27668C232O27674C245O27698C251O27682C255O27718C258O27725C266O27725C272O27748,,
code-creation,JS,9,8470917,0xbd57826a840,208,Socket._final node:net:528:35,0x15988e44a200,~
code-source-info,0xbd57826a840,96,14492,15107,C0O14492C13O14580C16O14589C22O14607C32O14607C36O14647C39O14659C52O14659C58O14698C59O14706C62O14716C68O14729C71O14736C74O14741C75O14745C85O14745C89O14805C96O14805C102O14827C106O14842C110O14861C113O14879C117O14872C121O14890C123O14903C127O14923C130O14928C135O14936C140O14936C146O14954C148O14962C157O14979C159O14975C164O15019C167O15026C170O15031C171O15039C172O15047C177O15058C184O15072C195O15068C201O15065C205O15105C207O15106,,
code-creation,JS,9,8470958,0xbd57826a9f0,32,get node:internal/streams/writable:1029:8,0x15988e470f78,~
code-source-info,0xbd57826a9f0,110,30460,30575,C0O30490C5O30512C9O30534C11O30533C17O30544C19O30542C24O30555C31O30569,,
code-creation,JS,9,8471000,0xbd57826aaf8,181,emitReadable_ node:internal/streams/readable:830:23,0x15988e4611f8,~
code-source-info,0xbd57826aaf8,106,25555,26205,C0O25589C5O25607C13O25607C17O25633C19O25644C21O25643C27O25655C32O25668C34O25666C37O25652C42O25679C47O25695C55O25711C61O25722C63O25720C68O25730C73O25751C81O25751C86O25773C89O25779C95O25791C97O25790C102O25787C106O26059C109O26065C115O26086C121O26098C126O26109C128O26107C131O26095C136O26118C144O26137C149O26153C153O26144C160O26169C168O26073C172O26190C175O26190C180O26204,,
code-creation,JS,9,8471042,0xbd57826aca0,81,endReadable node:internal/streams/readable:1682:21,0x15988e461670,~
code-source-info,0xbd57826aca0,106,49131,49337,C0O49165C5O49184C13O49184C17O49208C19O49219C21O49218C27O49229C29O49227C34O49242C39O49255C42O49261C48O49272C53O49269C57O49284C60O49292C74O49292C80O49336,,
tick,0x101197fbc,8471292,0,0x0,0,0x1a7c5b23c29f
code-creation,JS,10,8471292,0x107f9bc80,2848,processTicksAndRejections node:internal/process/task_queues:72:35,0x22b216cfc0b8,^
script-source,29,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\x2C\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\nconst AsyncContextFrame = require('internal/async_context_frame');\n\nconst async_context_frame = Symbol('kAsyncContextFrame');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while ((tock = queue.shift()) !== null) {\n      const priorContextFrame =\n        AsyncContextFrame.exchange(tock[async_context_frame]);\n\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n\n      AsyncContextFrame.set(priorContextFrame);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    [async_context_frame]: AsyncContextFrame.current()\x2C\n    callback\x2C\n    args\x2C\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\x2C\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\x2C\n    };\n  }\x2C\n  queueMicrotask\x2C\n};\n
code-source-info,0x107f9bc80,29,1616,2706,,,
code-creation,JS,10,8471500,0x107f9c7c0,248,get node:internal/bootstrap/node:100:8,0x22b216ccd8d8,^
code-source-info,0x107f9c7c0,9,3833,3880,,,
code-creation,JS,10,8471500,0x107f9c8e0,240,isFull node:internal/fixed_queue:72:9,0x22b216cfe7f0,^
code-source-info,0x107f9c8e0,31,3192,3253,,,
code-creation,JS,10,8471542,0x107f9ca00,312,push node:internal/fixed_queue:76:7,0x22b216cfe8b0,^
code-source-info,0x107f9ca00,31,3261,3344,,,
code-creation,JS,10,8471542,0x107f9cb60,464,push node:internal/fixed_queue:100:7,0x22b216cfebb8,^
code-source-info,0x107f9cb60,31,3738,3998,,,
code-creation,JS,10,8471583,0x107f9cd60,3008,nextTick node:internal/process/task_queues:113:18,0x22b216cfc1a8,^
code-source-info,0x107f9cd60,29,2867,3780,,,
code-creation,JS,10,8471583,0x107f9d940,368,shift node:internal/fixed_queue:109:8,0x22b216cfec80,^
code-source-info,0x107f9d940,31,4007,4257,,,
code-creation,JS,9,8471625,0xbd57826b240,31,emitCloseNT node:_http_server:1029:21,0x2858598a7cf8,~
code-source-info,0xbd57826b240,124,33017,33130,C0O33038C6O33053C7O33068C11O33080C12O33093C16O33110C24O33110C30O33129,,
code-creation,JS,9,8471667,0xbd57826b358,173,endReadableNT node:internal/streams/readable:1692:23,0x15988e4616c8,~
code-source-info,0xbd57826b358,106,49361,50232,C0O49381C8O49381C12O49456C14O49467C16O49466C22O49478C27O49489C29O49487C35O49505C37O49503C40O49475C45O49519C50O49534C56O49541C61O49554C64O49560C70O49571C73O49568C77O49595C85O49595C90O49624C96O49643C106O49676C109O49684C117O49684C125O49738C131O49904C136O49946C139O49974C145O50113C151O50132C160O50168C162O50202C167O50202C172O50231,,
code-creation,JS,9,8471708,0xbd57826b508,251,destroy node:internal/streams/destroy:49:17,0x15988e458b60,~
code-source-info,0xbd57826b508,103,925,1786,C0O925C13O954C18O987C23O1076C28O1087C36O1105C38O1104C46O1115C48O1113C53O1127C60O1142C66O1150C68O1149C76O1160C78O1158C83O1172C88O1189C94O1227C97O1227C100O1244C102O1256C103O1412C117O1412C122O1438C126O1451C130O1453C141O1464C146O1461C150O1482C154O1495C158O1497C169O1508C174O1505C178O1583C182O1590C184O1589C192O1600C194O1598C199O1614C204O1632C213O1637C221O1632C229O1740C243O1740C248O1772C250O1784,,
code-creation,JS,9,8471750,0xbd57826b6e0,42,checkError node:internal/streams/destroy:33:20,0x15988e458b08,~
code-source-info,0xbd57826b6e0,103,507,799,C0O523C4O629C8O686C12O698C18O715C20O725C24O742C28O754C34O771C36O781C41O798,,
code-creation,JS,9,8471792,0xbd57826b7d0,71,_destroy node:internal/streams/destroy:90:18,0x15988e458be0,~
code-source-info,0xbd57826b7d0,103,1805,2412,C0O1805C21O1838C22O1838C27O2330C30O2335C37O2344C41O2335C60O2391C63O2391C70O2411,,
code-creation,JS,9,8471833,0xbd57826b8f8,187,_destroy node:_http_incoming:218:55,0x285859898e98,~
code-source-info,0xbd57826b8f8,121,6291,7070,C0O6291C17O6305C20O6315C29O6338C35O6354C39O6367C43O6379C46O6384C54O6384C59O6708C62O6717C71O6733C76O6740C85O6758C98O6773C103O6778C108O6785C118O6785C123O6819C135O6833C145O6819C150O6819C156O7023C161O7031C180O7031C186O7069,,
code-creation,JS,9,8472125,0xbd57826ba68,31,onError node:_http_incoming:439:17,0x2858598987f0,~
code-source-info,0xbd57826ba68,121,14451,14682,C0O14609C8O14609C15O14632C20O14645C25O14666C30O14681,,
code-creation,JS,9,8472167,0xbd57826bb30,173,onDestroy node:internal/streams/destroy:93:21,0x31c3bc46160,~
code-source-info,0xbd57826bb30,103,1866,2317,C0O1878C6O1898C7O1905C8O1916C9O1923C11O1946C14O1951C19O1981C22O1986C27O2007C41O2007C46O2035C50O2050C54O2052C65O2063C70O2060C74O2082C78O2097C82O2099C93O2110C98O2107C102O2130C108O2168C111O2168C115O2188C119O2205C124O2213C140O2213C147O2271C152O2279C165O2279C172O2316,,
code-creation,JS,9,8472208,0xbd57826bcc0,123,emitCloseNT node:internal/streams/destroy:133:21,0x15988e458cb8,~
code-source-info,0xbd57826bcc0,103,2523,2823,C0O2549C5O2582C10O2601C12O2614C14O2616C23O2627C28O2624C32O2648C36O2661C38O2663C47O2674C52O2671C56O2696C62O2714C64O2713C70O2724C72O2722C77O2736C84O2751C88O2759C90O2758C96O2769C98O2767C103O2781C108O2803C116O2803C122O2822,,
code-creation,JS,9,8472250,0xbd57826be10,42,afterShutdown node:net:552:23,0x15988e4495b0,~
code-source-info,0xbd57826be10,96,15132,15256,C0O15157C7O15164C9O15163C13O15182C21O15223C26O15182C31O15243C36O15243C41O15255,,
code-creation,JS,9,8472250,0xbd57826beb0,20, node:internal/streams/writable:916:21,0x31c3bc44078,~
code-source-info,0xbd57826beb0,110,27521,27558,C0O27530C14O27530C19O27558,,
code-creation,JS,9,8472292,0xbd57826bf80,186,onFinish node:internal/streams/writable:886:18,0x15988e470240,~
code-source-info,0xbd57826bf80,110,26608,27223,C0O26633C2O26644C4O26643C10O26654C12O26652C17O26668C22O26681C38O26715C41O26711C47O26681C52O26745C53O26752C54O26759C60O26774C64O26780C68O26795C71O26795C76O26834C83O26868C89O26879C91O26877C96O26886C107O26834C114O26903C117O26907C123O26932C126O26938C132O26949C135O26946C139O26974C147O26974C152O27154C158O27169C162O27177C165O27185C179O27185C185O27222,,
tick,0x100cef7ac,8472333,0,0x0,2,0x107f9c0d0
code-creation,JS,9,8472333,0xbd57826c150,115,finish node:internal/streams/writable:949:16,0x15988e470348,~
code-source-info,0xbd57826c150,110,28267,28895,C0O28287C6O28302C10O28308C12O28314C21O28325C26O28322C30O28339C35O28339C40O28385C48O28385C53O28404C55O28414C61O28425C63O28423C68O28439C73O28593C78O28633C81O28659C87O28789C93O28810C102O28841C104O28873C109O28873C114O28894,,
code-creation,JS,9,8472375,0xbd57826c288,91,callFinishedCallbacks node:internal/streams/writable:973:31,0x15988e4703a0,~
code-source-info,0xbd57826c288,110,28927,29215,C0O28944C2O28955C4O28954C10O28965C12O28963C17O28978C22O28991C23O28998C24O29032C26O29038C28O29037C32O29059C36O29083C40O29093C43O29099C49O29110C54O29107C58O29139C60O29164C64O29144C69O29183C71O29200C75O29203C80O29173C85O29126C90O29214,,
code-creation,JS,9,8472417,0xbd57826c3c8,99,Writable.destroy node:internal/streams/writable:1114:38,0x15988e471360,~
code-source-info,0xbd57826c3c8,110,32275,32547,C0O32308C5O32358C7O32369C9O32368C15O32380C20O32392C22O32390C25O32377C30O32406C37O32421C43O32432C45O32430C50O32444C55O32457C58O32465C66O32465C72O32502C77O32510C91O32510C96O32533C98O32545,,
code-creation,JS,9,8472458,0xbd57826c5d8,494,Socket._destroy node:net:806:37,0x15988e44ab80,~
code-source-info,0xbd57826c5d
code-creation,JS,9,8472542,0xbd57826c908,67,closeSocketHandle node:net:346:27,0x15988e449500,~
code-source-info,0xbd57826c908,96,8868,9182,C0O8868C33O8918C36O8927C42O8942C45O8947C50O8955C60O8955C66O9181,,
code-creation,JS,9,8472583,0xbd57826ca08,82,Server._emitCloseIfDrained node:net:2365:48,0x15988e44b940,~
code-source-info,0xbd57826ca08,96,66168,66546,C0O66175C8O66175C12O66224C18O66240C24O66260C30O66322C36O66336C41O66260C46O66355C47O66362C48O66370C55O66402C57O66401C64O66457C75O66370C81O66545,,
code-creation,JS,9,8472583,0xbd57826cb48,80, node:net:348:24,0x31c3bc47090,~
code-source-info,0xbd57826cb48,96,8961,9174,C0O8975C10O8975C14O9002C19O9007C29O9021C32O9007C38O9041C44O9073C47O9078C56O9095C58O9093C62O9109C66O9122C70O9138C74O9153C79O9173,,
code-creation,JS,9,8472625,0xbd57826cc48,46,socketOnClose node:_http_server:800:23,0x2858598a7930,~
code-source-info,0xbd57826cc48,124,26054,26181,C0O26074C8O26074C12O26106C17O26124C27O26106C32O26149C35O26169C40O26149C45O26180,,
code-creation,JS,9,8472625,0xbd57826cd28,100,freeParser node:_http_common:180:20,0x2858598952f8,~
code-source-info,0xbd57826cd28,119,5774,6380,C0O5800C4O5829C10O5853C15O5853C19O5870C22O5870C26O5902C31O5902C35O5916C40O5928C45O5928C56O6082C64O6082C71O6275C76O6275C80O6295C84O6310C85O6321C89O6335C93O6353C94O6367C99O6379,,
code-creation,JS,9,8472667,0xbd57826ce48,38,free node:internal/freelist:21:7,0x285859896e80,~
code-source-info,0xbd57826ce48,120,325,445,C0O346C5O351C10O365C14O358C19O383C24O388C29O388C34O405C35O417C36O428C37O441,,
code-creation,JS,9,8472708,0xbd57826cf18,48,abortIncoming node:_http_server:806:23,0x2858598a7988,~
code-source-info,0xbd57826cf18,124,26205,26370,C0O26236C6O26271C11O26271C16O26288C23O26300C31O26296C37O26288C42O26220C47O26369,,
code-creation,JS,10,8472750,0x107f9dae0,792,getHighWaterMark node:internal/streams/state:33:26,0x15988e4658b8,^
code-source-info,0x107f9dae0,108,934,1342,,,
code-creation,JS,10,8472750,0x107f9de20,432,shift node:internal/fixed_queue:81:8,0x22b216cfe970,^
code-source-info,0x107f9de20,31,3353,3563,,,
code-creation,JS,10,8472792,0x107f9e000,64,exchange node:internal/async_context_frame:61:18,0x22b216ce61f0,^
code-source-info,0x107f9e000,21,1277,1287,,,
code-creation,JS,10,8472792,0x107f9e060,1256,pushAsyncContext node:internal/async_hooks:539:26,0x22b216cd2e78,^
code-source-info,0x107f9e060,11,17559,18104,,,
code-creation,JS,10,8472792,0x107f9e580,384,emitBeforeScript node:internal/async_hooks:509:26,0x22b216cd2b78,^
code-source-info,0x107f9e580,11,16915,17066,,,
code-creation,JS,10,8472833,0x107f9e720,224,get node:internal/streams/readable:132:8,0x15988e466fc0,^
code-source-info,0x107f9e720,106,3849,3890,,,
code-creation,JS,10,8472833,0x107f9e820,176,destroyHooksExist node:internal/async_hooks:486:27,0x22b216cd2938,^
code-source-info,0x107f9e820,11,16364,16399,,,
code-creation,JS,10,8472833,0x107f9e900,176,enabledHooksExist node:internal/async_hooks:474:27,0x22b216cd26f8,^
code-source-info,0x107f9e900,11,16187,16220,,,
code-creation,JS,10,8472833,0x107f9e9e0,1384,popAsyncContext node:internal/async_hooks:553:25,0x22b216cd2f48,^
code-source-info,0x107f9e9e0,11,18193,18780,,,
code-creation,JS,10,8472875,0x107f9ef80,344,emitAfterScript node:internal/async_hooks:517:25,0x22b216cd2c38,^
code-source-info,0x107f9ef80,11,17093,17189,,,
code-creation,JS,10,8472875,0x107f9f100,64,set node:internal/async_context_frame:60:13,0x22b216ce6148,^
code-source-info,0x107f9f100,21,1249,1259,,,
code-creation,JS,10,8472875,0x107f9f160,136,SafeIterator node:internal/per_context/primordials:328:16,0x2aa13b33f210,^
code-source-info,0x107f9f160,3,9173,9233,,,
code-creation,JS,10,8472875,0x107f9f220,264,setHasTickScheduled node:internal/process/task_queues:56:29,0x22b216cfbf38,^
code-source-info,0x107f9f220,29,1224,1282,,,
code-creation,JS,10,8472917,0x107f9f360,208,highWaterMarkFrom node:internal/streams/state:15:27,0x15988e4657b0,^
code-source-info,0x107f9f360,108,421,562,,,
code-creation,RegExp,3,8473083,0x107f9f460,1984,(?:^|\\W)chunked(?:$|\\W)
code-creation,RegExp,3,8473125,0x107f9fc40,1184,^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$
code-creation,JS,10,8473292,0x107fa0100,6144,Readable.read node:internal/streams/readable:647:35,0x15988e462060,^
code-source-info,0x107fa0100,106,19375,24042,,,
code-creation,JS,10,8473292,0x107fa1920,320,getNewAsyncId node:net:197:23,0x15988e449190,^
code-source-info,0x107fa1920,96,5325,5441,,,
code-creation,JS,10,8473292,0x107fa1a80,64, node:internal/per_context/primordials:334:21,0x2aa13b33f390,^
code-source-info,0x107fa1a80,3,9308,9337,,,
code-creation,JS,10,8473333,0x107fa1ae0,200,generateSocketListenerWrapper node:_http_server:1202:39,0x2858598a7f08,^
code-source-info,0x107fa1ae0,124,38127,38643,,,
code-creation,JS,10,8473333,0x107fa1be0,176, node:internal/per_context/primordials:383:32,0x2aa13b33f790,^
code-source-info,0x107fa1be0,3,10910,10969,,,
code-creation,JS,10,8473333,0x107fa1cc0,208,Stream node:internal/streams/legacy:11:16,0x15988e45ac18,^
code-source-info,0x107fa1cc0,105,145,178,,,
code-creation,JS,10,8473333,0x107fa1dc0,128,get node:events:281:16,0x22b216ce8328,^
code-source-info,0x107fa1dc0,22,8303,8343,,,
code-creation,JS,10,8473375,0x107fa1e60,544,_unrefTimer node:net:518:52,0x15988e44a1a8,^
code-source-info,0x107fa1e60,96,14254,14364,,,
tick,0x100f393d4,8473458,0,0x0,0,0x107fa10a4,0x7769ed8eaf0,0x12ea986669a3,0x7769ed8e886
code-creation,JS,10,8473583,0x107fa20a0,2888,ReadableState node:internal/streams/readable:262:23,0x15988e460d80,^
code-source-info,0x107fa20a0,106,7984,9928,,,
code-creation,JS,10,8473667,0x107fa2c20,3528,processPromiseRejections node:internal/process/promises:439:34,0x22b216cfe200,^
script-source,30,node:internal/process/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  tickInfo\x2C\n  promiseRejectEvents: {\n    kPromiseRejectWithNoHandler\x2C\n    kPromiseHandlerAddedAfterReject\x2C\n    kPromiseRejectAfterResolved\x2C\n    kPromiseResolveAfterResolved\x2C\n  }\x2C\n  setPromiseRejectCallback\x2C\n} = internalBinding('task_queue');\n\nconst { deprecate } = require('internal/util');\n\nconst {\n  noSideEffectsToString\x2C\n  triggerUncaughtException\x2C\n  exitCodes: { kGenericUserError }\x2C\n} = internalBinding('errors');\n\nconst {\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  symbols: {\n    async_id_symbol: kAsyncIdSymbol\x2C\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\n  }\x2C\n} = require('internal/async_hooks');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\nconst AsyncContextFrame = require('internal/async_context_frame');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasRejectionToWarn = 1;\n\n// By default true because in cases where process is not a global\n// it is not possible to determine if the user has added a listener\n// to the process object.\nlet hasMultipleResolvesListener = true;\n\nif (process.on) {\n  hasMultipleResolvesListener = process.listenerCount('multipleResolves') !== 0;\n\n  process.on('newListener'\x2C (eventName) => {\n    if (eventName === 'multipleResolves') {\n      hasMultipleResolvesListener = true;\n    }\n  });\n\n  process.on('removeListener'\x2C (eventName) => {\n    if (eventName === 'multipleResolves') {\n      hasMultipleResolvesListener = process.listenerCount('multipleResolves') !== 0;\n    }\n  });\n}\n\n/**\n * Errors & Warnings\n */\n\nclass UnhandledPromiseRejection extends Error {\n  code = 'ERR_UNHANDLED_REJECTION';\n  name = 'UnhandledPromiseRejection';\n  /**\n   * @param {Error} reason\n   */\n  constructor(reason) {\n    super('This error originated either by throwing inside of an ' +\n    'async function without a catch block\x2C or by rejecting a promise which ' +\n    'was not handled with .catch(). The promise rejected with the reason "' +\n    noSideEffectsToString(reason) + '".');\n  }\n}\n\nclass UnhandledPromiseRejectionWarning extends Error {\n  name = 'UnhandledPromiseRejectionWarning';\n  /**\n   * @param {number} uid\n   */\n  constructor(uid) {\n    const message = 'Unhandled promise rejection. This error originated either by ' +\n    'throwing inside of an async function without a catch block\x2C ' +\n    'or by rejecting a promise which was not handled with .catch(). ' +\n    'To terminate the node process on unhandled promise ' +\n    'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\n    'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\n    `(rejection id: ${uid})`;\n\n    // UnhandledPromiseRejectionWarning will get the stack trace from the\n    // reason\x2C so we can disable the stack trace limit temporarily for better\n    // performance.\n    if (isErrorStackTraceLimitWritable()) {\n      const stackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      super(message);\n      Error.stackTraceLimit = stackTraceLimit;\n    } else {\n      super(message);\n    }\n  }\n}\n\nclass PromiseRejectionHandledWarning extends Error {\n  name = 'PromiseRejectionHandledWarning';\n\n  /**\n   * @param {number} uid\n   */\n  constructor(uid) {\n    super(`Promise rejection was handled asynchronously (rejection id: ${uid})`);\n    this.id = uid;\n  }\n}\n\n/**\n * @typedef PromiseInfo\n * @property {*} reason the reason for the rejection\n * @property {number} uid the unique id of the promise\n * @property {boolean} warned whether the rejection has been warned\n * @property {object} [domain] the domain the promise was created in\n */\n\n/**\n * @type {WeakMap<Promise\x2C PromiseInfo>}\n */\nconst maybeUnhandledPromises = new SafeWeakMap();\n\n/**\n * Using a Mp causes the promise to be referenced at least for one tick.\n * @type {Map<Promise\x2C PromiseInfo>}\n */\nlet pendingUnhandledRejections = new SafeMap();\n\n/**\n * @type {Array<{promise: Promise\x2C warning: Error}>}\n */\nconst asyncHandledRejections = [];\n\n/**\n * @type {number}\n */\nlet lastPromiseId = 0;\n\n/**\n * @param {boolean} value\n */\nfunction setHasRejectionToWarn(value) {\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\n}\n\n/**\n * @returns {boolean}\n */\nfunction hasRejectionToWarn() {\n  return tickInfo[kHasRejectionToWarn] === 1;\n}\n\n/**\n * @param {string|Error} obj\n * @returns {obj is Error}\n */\nfunction isErrorLike(obj) {\n  return typeof obj === 'object' &&\n         obj !== null &&\n         ObjectPrototypeHasOwnProperty(obj\x2C 'stack');\n}\n\n/**\n * @param {0|1|2|3} type\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\n  if (unhandledRejectionsMode === undefined) {\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\n  }\n  switch (type) {\n    case kPromiseRejectWithNoHandler: // 0\n      unhandledRejection(promise\x2C reason);\n      break;\n    case kPromiseHandlerAddedAfterReject: // 1\n      handledRejection(promise);\n      break;\n    case kPromiseRejectAfterResolved: // 2\n      if (hasMultipleResolvesListener) {\n        resolveErrorReject(promise\x2C reason);\n      }\n      break;\n    case kPromiseResolveAfterResolved: // 3\n      if (hasMultipleResolvesListener) {\n        resolveErrorResolve(promise\x2C reason);\n      }\n      break;\n  }\n}\n\nconst multipleResolvesDeprecate = deprecate(\n  () => {}\x2C\n  'The multipleResolves event has been deprecated.'\x2C\n  'DEP0160'\x2C\n);\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction resolveErrorResolve(promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    // Emit the multipleResolves event.\n    // This is a deprecated event\x2C so we have to check if it's being listened to.\n    if (process.emit('multipleResolves'\x2C 'resolve'\x2C promise\x2C reason)) {\n      // If the event is being listened to\x2C emit a deprecation warning.\n      multipleResolvesDeprecate();\n    }\n  });\n}\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction resolveErrorReject(promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    if (process.emit('multipleResolves'\x2C 'reject'\x2C promise\x2C reason)) {\n      multipleResolvesDeprecate();\n    }\n  });\n}\n\n/**\n * @param {Promise} promise\n * @param {PromiseInfo} promiseInfo\n * @returns {boolean}\n */\nconst emitUnhandledRejection = (promise\x2C promiseInfo) => {\n  return promiseInfo.domain ?\n    promiseInfo.domain.emit('error'\x2C promiseInfo.reason) :\n    process.emit('unhandledRejection'\x2C promiseInfo.reason\x2C promise);\n};\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction unhandledRejection(promise\x2C reason) {\n  pendingUnhandledRejections.set(promise\x2C {\n    reason\x2C\n    uid: ++lastPromiseId\x2C\n    warned: false\x2C\n    domain: process.domain\x2C\n    contextFrame: AsyncContextFrame.current()\x2C\n  });\n  setHasRejectionToWarn(true);\n}\n\n/**\n * @param {Promise} promise\n */\nfunction handledRejection(promise) {\n  if (pendingUnhandledRejections.has(promise)) {\n    pendingUnhandledRejections.delete(promise);\n    return;\n  }\n  const promiseInfo = maybeUnhandledPromises.get(promise);\n  if (promiseInfo !== undefined) {\n    maybeUnhandledPromises.delete(promise);\n    if (promiseInfo.warned) {\n      // Generate the warning object early to get a good stack trace.\n      const warning = new PromiseRejectionHandledWarning(promiseInfo.uid);\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\n      setHasRejectionToWarn(true);\n    }\n  }\n}\n\nconst unhandledRejectionErrName = UnhandledPromiseRejectionWarning.name;\n\n/**\n * @param {PromiseInfo} promiseInfo\n */\nfunction emitUnhandledRejectionWarning(promiseInfo) {\n  const warning = new UnhandledPromiseRejectionWarning(promiseInfo.uid);\n  const reason = promiseInfo.reason;\n  try {\n    if (isErrorLike(reason)) {\n      warning.stack = reason.stack;\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\n    } else {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    }\n  } catch {\n    try {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    } catch {\n      // Ignore.\n    }\n  }\n\n  process.emitWarning(warning);\n}\n\n/**\n * @callback UnhandledRejectionsModeHandler\n * @param {Promise} promise\n * @param {PromiseInfo} promiseInfo\n * @param {number} [promiseAsyncId]\n * @returns {boolean}\n */\n\n/**\n * The mode of unhandled rejections.\n * @type {UnhandledRejectionsModeHandler}\n */\nlet unhandledRejectionsMode;\n\n/**\n * --unhandled-rejections=strict:\n * Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\n * and exit the process.\n * Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\n * handled\x2C emit 'UnhandledPromiseRejectionWarning'.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction strictUnhandledRejectionsMode(promise\x2C promiseInfo\x2C promiseAsyncId) {\n  const reason = promiseInfo.reason;\n  const err = isErrorLike(reason) ?\n    reason : new UnhandledPromiseRejection(reason);\n  // This destroys the async stack\x2C don't clear it after\n  triggerUncaughtException(err\x2C true /* fromPromise */);\n  if (promiseAsyncId === undefined) {\n    pushAsyncContext(\n      promise[kAsyncIdSymbol]\x2C\n      promise[kTriggerAsyncIdSymbol]\x2C\n      promise\x2C\n    );\n  }\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) emitUnhandledRejectionWarning(promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=none:\n * Emit 'unhandledRejection'\x2C but do not emit any warning.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction ignoreUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  emitUnhandledRejection(promise\x2C promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=warn:\n * Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction alwaysWarnUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  emitUnhandledRejection(promise\x2C promiseInfo);\n  emitUnhandledRejectionWarning(promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=throw:\n * Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n * 'uncaughtException'. If it's not handled\x2C print the error to stderr\n * and exit the process.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction throwUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  const reason = promiseInfo.reason;\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) {\n    const err = isErrorLike(reason) ?\n      reason :\n      new UnhandledPromiseRejection(reason);\n    // This destroys the async stack\x2C don't clear it after\n    triggerUncaughtException(err\x2C true /* fromPromise */);\n    return false;\n  }\n  return true;\n}\n\n/**\n * --unhandled-rejections=warn-with-error-code:\n * Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n * 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction warnWithErrorCodeUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) {\n    emitUnhandledRejectionWarning(promiseInfo);\n    process.exitCode = kGenericUserError;\n  }\n  return true;\n}\n\n/**\n * @returns {UnhandledRejectionsModeHandler}\n */\nfunction getUnhandledRejectionsMode() {\n  const { getOptionValue } = require('internal/options');\n  switch (getOptionValue('--unhandled-rejections')) {\n    case 'none':\n      return ignoreUnhandledRejectionsMode;\n    case 'warn':\n      return alwaysWarnUnhandledRejectionsMode;\n    case 'strict':\n      return strictUnhandledRejectionsMode;\n    case 'throw':\n      return throwUnhandledRejectionsMode;\n    case 'warn-with-error-code':\n      return warnWithErrorCodeUnhandledRejectionsMode;\n    default:\n      return throwUnhandledRejectionsMode;\n  }\n}\n\n// If this method returns true\x2C we've executed user code or triggered\n// a warning to be emitted which requires the microtask and next tick\n// queues to be drained again.\nfunction processPromiseRejections() {\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\n\n  while (asyncHandledRejections.length !== 0) {\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\n    if (!process.emit('rejectionHandled'\x2C promise)) {\n      process.emitWarning(warning);\n    }\n  }\n\n  let needPop = true;\n  let promiseAsyncId;\n\n  const pending = pendingUnhandledRejections;\n  pendingUnhandledRejections = new SafeMap();\n\n  for (const { 0: promise\x2C 1: promiseInfo } of pending.entries()) {\n    maybeUnhandledPromises.set(promise\x2C promiseInfo);\n\n    promiseInfo.warned = true;\n\n    // We need to check if async_hooks are enabled\n    // don't use enabledHooksExist as a Promise could\n    // come from a vm.* context and not have an async id\n    promiseAsyncId = promise[kAsyncIdSymbol];\n    if (promiseAsyncId !== undefined) {\n      pushAsyncContext(\n        promiseAsyncId\x2C\n        promise[kTriggerAsyncIdSymbol]\x2C\n        promise\x2C\n      );\n    }\n\n    const { contextFrame } = promiseInfo;\n    const priorContextFrame = AsyncContextFrame.exchange(contextFrame);\n    try {\n      needPop = unhandledRejectionsMode(promise\x2C promiseInfo\x2C promiseAsyncId);\n    } finally {\n      AsyncContextFrame.set(priorContextFrame);\n      needPop &&\n      promiseAsyncId !== undefined &&\n      popAsyncContext(promiseAsyncId);\n    }\n    maybeScheduledTicksOrMicrotasks = true;\n  }\n  return maybeScheduledTicksOrMicrotasks ||\n         pendingUnhandledRejections.size !== 0;\n}\n\nfunction listenForRejections() {\n  setPromiseRejectCallback(promiseRejectHandler);\n}\n\nmodule.exports = {\n  hasRejectionToWarn\x2C\n  setHasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n};\n
code-source-info,0x107fa2c20,30,12185,13663,,,
code-creation,JS,10,8474125,0x107fa3a20,264,setHasRejectionToWarn node:internal/process/promises:157:31,0x22b216cfd2b8,^
code-source-info,0x107fa3a20,30,4195,4255,,,
code-creation,JS,10,8474292,0x107fa3b60,1248,Readable.resume node:internal/streams/readable:1227:37,0x15988e4624d0,^
code-source-info,0x107fa3b60,106,38472,38969,,,
code-creation,JS,10,8474292,0x107fa4060,1152,_addHeaderLine node:_http_incoming:382:24,0x285859898740,^
code-source-info,0x107fa4060,121,12819,13812,,,
code-creation,JS,10,8474292,0x107fa4500,840,get node:_http_incoming:109:16,0x285859898968,^
code-source-info,0x107fa4500,121,3185,3474,,,
code-creation,JS,10,8474333,0x107fa4880,696,get node:internal/streams/writable:1010:8,0x15988e470ec8,^
code-source-info,0x107fa4880,110,29862,30262,,,
code-creation,JS,10,8474333,0x107fa4b60,304,get node:internal/streams/duplex:161:8,0x15988e459fa0,^
code-source-info,0x107fa4b60,104,5429,5638,,,
code-creation,JS,10,8474375,0x107fa4cc0,648,resetBuffer node:internal/streams/writable:364:21,0x15988e46fe20,^
code-source-info,0x107fa4cc0,110,11666,11810,,,
code-creation,JS,10,8474542,0x107fa4f80,608,Socket.read node:net:778:33,0x15988e44aa58,^
code-source-info,0x107fa4f80,96,20514,20692,,,
code-creation,JS,10,8474583,0x107fa5200,368,hasEventListener node:events:290:26,0x22b216ce8490,^
code-source-info,0x107fa5200,22,8485,8639,,,
code-creation,JS,10,8474583,0x107fa53a0,608,callback node:internal/streams/writable:764:63,0x31c3bc41ec0,^
code-source-info,0x107fa53a0,110,23211,23320,,,
code-creation,JS,10,8474625,0x107fa5620,696,endReadable node:internal/streams/readable:1682:21,0x15988e461670,^
code-source-info,0x107fa5620,106,49131,49337,,,
code-creation,JS,10,8474625,0x107fa5900,728,flow node:internal/streams/readable:1280:14,0x15988e4614e0,^
code-source-info,0x107fa5900,106,39818,39956,,,
code-creation,JS,10,8474625,0x107fa5c00,304,checkError node:internal/streams/destroy:33:20,0x15988e458b08,^
code-source-info,0x107fa5c00,103,507,799,,,
code-creation,JS,10,8474625,0x107fa5d60,176,get node:internal/streams/readable:1542:8,0x15988e462fa8,^
code-source-info,0x107fa5d60,106,45775,45860,,,
code-creation,JS,10,8474667,0x107fa5e40,1368,endReadableNT node:internal/streams/readable:1692:23,0x15988e4616c8,^
code-source-info,0x107fa5e40,106,49361,50232,,,
code-creation,JS,10,8474667,0x107fa63c0,1104,needFinish node:internal/streams/writable:870:20,0x15988e4701e8,^
code-source-info,0x107fa63c0,110,26179,26589,,,
code-creation,JS,10,8474708,0x107fa6840,168,set node:net:2411:6,0x15988e44bb78,^
code-source-info,0x107fa6840,96,67275,67308,,,
tick,0x1016b8408,8474708,0,0x0,0,0x1a7c5b21297e,0x7769ed8f700,0x107f9b040,0x7769ed8e901
code-creation,JS,10,8474833,0x107fa6920,3120,_write node:internal/streams/writable:453:16,0x15988e46fed0,^
code-source-info,0x107fa6920,110,14001,15384,,,
code-creation,JS,10,8474833,0x107fa7580,1016,listenerCount node:events:850:23,0x22b216ce9a40,^
code-source-info,0x107fa7580,22,24458,25141,,,
code-creation,JS,10,8474875,0x107fa79a0,192,_getMaxListeners node:events:425:26,0x22b216ce8aa0,^
code-source-info,0x107fa79a0,22,12331,12455,,,
code-creation,JS,10,8474875,0x107fa7a80,3160,writeOrBuffer node:internal/streams/writable:548:23,0x15988e46ff28,^
code-source-info,0x107fa7a80,110,16580,17762,,,
code-creation,JS,10,8475000,0x107fa8700,1392,howMuchToRead node:internal/streams/readable:630:23,0x15988e4610f0,^
code-source-info,0x107fa8700,106,18811,19270,,,
code-creation,JS,10,8475000,0x107fa8ca0,312,Writable.write node:internal/streams/writable:504:36,0x15988e470a98,^
code-source-info,0x107fa8ca0,110,15421,15604,,,
code-creation,JS,10,8475000,0x107fa8e00,608,set node:internal/streams/writable:262:8,0x15988e4706b8,^
code-source-info,0x107fa8e00,110,8377,8538,,,
code-creation,JS,10,8475000,0x107fa9080,600,Socket.resume node:net:769:35,0x15988e44a9c8,^
code-source-info,0x107fa9080,96,20302,20478,,,
code-creation,JS,10,8475042,0x107fa9300,488,resume node:internal/streams/readable:1247:16,0x15988e461430,^
code-source-info,0x107fa9300,106,38987,39145,,,
code-creation,JS,10,8475042,0x107fa9520,2040,removeListener node:events:686:28,0x22b216ce9500,^
code-source-info,0x107fa9520,22,19943,21184,,,
code-creation,JS,10,8475250,0x107fa9d40,928,_send node:_http_outgoing:398:49,0x28585989e3e0,^
code-source-info,0x107fa9d40,122,11376,12313,,,
code-creation,JS,10,8475250,0x107faa100,1120,resume_ node:internal/streams/readable:1254:17,0x15988e461488,^
code-source-info,0x107faa100,106,39163,39461,,,
code-creation,JS,10,8475292,0x107faa580,864,Readable.removeListener node:internal/streams/readable:1159:45,0x15988e4623a0,^
code-source-info,0x107faa580,106,36119,36818,,,
code-creation,JS,10,8475292,0x107faa900,160,get node:internal/streams/writable:1069:8,0x15988e471130,^
code-source-info,0x107faa900,110,31340,31426,,,
code-creation,JS,10,8475292,0x107faa9c0,176,isTraceHTTPEnabled node:internal/http:40:28,0x28585989ff18,^
code-source-info,0x107faa9c0,123,717,752,,,
code-creation,JS,10,8475333,0x107faaaa0,992,socketListenerWrap node:_http_server:1203:37,0x31c3bc70e40,^
code-source-info,0x107faaaa0,124,38182,38640,,,
code-creation,JS,10,8475333,0x107faaea0,824,set node:_http_outgoing:250:16,0x28585989e028,^
code-source-info,0x107faaea0,122,7547,7685,,,
code-creation,JS,10,8475333,0x107fab200,192,checkInvalidHeaderChar node:_http_common:221:32,0x2858598953a8,^
code-source-info,0x107fab200,119,6951,6996,,,
code-creation,JS,10,8475458,0x107fab2e0,1216,onDestroy node:internal/streams/destroy:93:21,0x31c3bc46160,^
code-source-info,0x107fab2e0,103,1866,2317,,,
code-creation,JS,10,8475458,0x107fab7c0,736,Writable.uncork node:internal/streams/writable:520:37,0x15988e470bb8,^
code-source-info,0x107fab7c0,110,15770,16000,,,
code-creation,JS,10,8475458,0x107fabac0,472,clearIncoming node:_http_server:967:23,0x2858598a7c48,^
code-source-info,0x107fabac0,124,31211,31509,,,
code-creation,JS,10,8475500,0x107fabcc0,664,finishMaybe node:internal/streams/writable:928:21,0x15988e4702f0,^
code-source-info,0x107fabcc0,110,27771,28250,,,
code-creation,JS,10,8475500,0x107fabf80,672,_destroy node:internal/streams/destroy:90:18,0x15988e458be0,^
code-source-info,0x107fabf80,103,1805,2412,,,
code-creation,JS,10,8475542,0x107fac240,1896,destroy node:internal/streams/destroy:49:17,0x15988e458b60,^
code-source-info,0x107fac240,103,925,1786,,,
code-creation,JS,10,8475625,0x107fac9e0,3504,Duplex node:internal/streams/duplex:64:16,0x15988e459ef0,^
code-source-info,0x107fac9e0,104,2330,4278,,,
code-creation,JS,10,8475625,0x107fad7c0,1104,emitCloseNT node:internal/streams/destroy:133:21,0x15988e458cb8,^
code-source-info,0x107fad7c0,103,2523,2823,,,
code-creation,JS,10,8475667,0x107fadc40,3096,WritableState node:internal/streams/writable:304:23,0x15988e46fdc8,^
code-source-info,0x107fadc40,110,9384,11644,,,
code-creation,JS,10,8475750,0x107fae880,7016,Socket node:net:366:16,0x15988e449558,^
code-source-info,0x107fae880,96,9449,14061,,,
code-creation,JS,10,8475792,0x107fb0420,600,set node:internal/streams/readable:186:8,0x15988e4618d8,^
code-source-info,0x107fb0420,106,6264,6427,,,
code-creation,JS,10,8475792,0x107fb06a0,608,set node:internal/streams/writable:217:8,0x15988e4704a8,^
code-source-info,0x107fb06a0,110,7125,7288,,,
code-creation,JS,10,8475792,0x107fb0920,1096,undestroy node:internal/streams/destroy:173:19,0x15988e458d68,^
code-source-info,0x107fb0920,103,3192,3864,,,
code-creation,JS,10,8475833,0x107fb0da0,1160,initSocketHandle node:net:322:26,0x15988e4494a8,^
code-source-info,0x107fb0da0,96,8262,8840,,,
code-creation,JS,10,8475958,0x107fb1260,4920,matchKnownFields node:_http_incoming:276:26,0x2858598986e8,^
code-source-info,0x107fb1260,121,8330,12185,,,
tick,0x10167a760,8476000,0,0x0,0,0xbd5782656e0,0xbd57826558a,0xbd57826523a,0xbd578264baf,0xbd578264539,0x107f9b040,0xbd5782625f1,0xbd578261bae
code-creation,JS,10,8476250,0x107fb25c0,4056,clearBuffer node:internal/streams/writable:744:21,0x15988e470190,^
code-source-info,0x107fb25c0,110,22604,24254,,,
code-creation,JS,10,8476250,0x107fb35c0,1624,writevGeneric node:internal/stream_base_commons:121:23,0x3564d12be1e8,^
code-source-info,0x107fb35c0,115,2911,3528,,,
code-creation,JS,10,8476292,0x107fb3c40,1592,afterWrite node:internal/streams/writable:699:20,0x15988e4700e0,^
code-source-info,0x107fb3c40,110,21406,21895,,,
code-creation,JS,10,8476292,0x107fb42a0,768,defaultTriggerAsyncIdScope node:internal/async_hooks:455:36,0x22b216cd2578,^
code-source-info,0x107fb42a0,11,15636,16094,,,
code-creation,JS,10,8476333,0x107fb45c0,224,get node:internal/streams/writable:131:8,0x15988e473160,^
code-source-info,0x107fb45c0,110,3930,3971,,,
code-creation,JS,10,8476417,0x107fb46c0,992,Socket._read node:net:718:34,0x15988e44a780,^
code-source-info,0x107fb46c0,96,19037,19348,,,
code-creation,JS,10,8476458,0x107fb4ac0,1744,prefinish node:internal/streams/writable:906:19,0x15988e470298,^
code-source-info,0x107fb4ac0,110,27243,27749,,,
code-creation,JS,10,8476458,0x107fb51c0,392,_onceWrap node:events:643:19,0x22b216ce9248,^
code-source-info,0x107fb51c0,22,18770,18993,,,
code-creation,JS,10,8476458,0x107fb5380,272,once node:events:657:44,0x22b216ce9380,^
code-source-info,0x107fb5380,22,19197,19310,,,
code-creation,JS,10,8476458,0x107fb54c0,728,cleanParser node:_http_common:225:21,0x285859895400,^
code-source-info,0x107fb54c0,119,7018,7380,,,
code-creation,JS,10,8476500,0x107fb57c0,576,tryReadStart node:net:708:22,0x15988e449660,^
code-source-info,0x107fb57c0,96,18708,18937,,,
code-creation,JS,10,8476583,0x107fb5a20,4488,connectionListenerInternal node:_http_server:666:36,0x2858598a7778,^
code-source-info,0x107fb5a20,124,21651,25021,,,
code-creation,JS,10,8476583,0x107fb6be0,440,alloc node:internal/freelist:15:8,0x285859896e28,^
code-source-info,0x107fb6be0,120,203,317,,,
code-creation,JS,10,8476583,0x107fb6dc0,472,isLenient node:_http_common:248:19,0x2858598954b0,^
code-source-info,0x107fb6dc0,119,7623,7790,,,
code-creation,JS,10,8476583,0x107fb6fc0,128,HTTPServerAsyncResource node:_http_server:190:14,0x2858598a7fe0,^
code-source-info,0x107fb6fc0,124,7250,7318,,,
code-creation,JS,10,8476708,0x107fb7060,6304,_storeHeader node:_http_outgoing:454:22,0x28585989d6e8,^
code-source-info,0x107fb7060,122,13289,18170,,,
code-creation,JS,10,8476708,0x107fb8920,336,connectionListener node:_http_server:660:28,0x2858598a7720,^
code-source-info,0x107fb8920,124,21496,21614,,,
code-creation,JS,10,8476750,0x107fb8aa0,3248,onconnection node:net:2207:22,0x15988e44a048,^
code-source-info,0x107fb8aa0,96,62245,64135,,,
code-creation,JS,10,8476750,0x107fb9780,456,onSocketResume node:_http_server:1167:24,0x2858598a7e00,^
code-source-info,0x107fb9780,124,37206,37705,,,
code-creation,JS,10,8476875,0x107fb9980,5112,onwrite node:internal/streams/writable:615:17,0x15988e470030,^
code-source-info,0x107fb9980,110,18606,21196,,,
code-creation,JS,10,8476875,0x107fbada0,1280,_writeRaw node:_http_outgoing:424:19,0x28585989d690,^
code-source-info,0x107fbada0,122,12383,13210,,,
code-creation,JS,10,8476875,0x107fbb2c0,376,createWriteWrap node:internal/stream_base_commons:108:25,0x3564d12be190,^
code-source-info,0x107fbb2c0,115,2673,2887,,,
new,MemoryChunk,0x107fc0000,262144
code-creation,JS,10,8477083,0x107fc8020,3312,Socket._destroy node:net:806:37,0x15988e44ab80,^
code-source-info,0x107fc8020,96,21059,22565,,,
tick,0x10136cd28,8477083,0,0x0,0,0xbd57826c7c5,0x107fac14c,0x107fac904,0xbd57826c423,0x1a7c5b229481,0x107f9b040,0xbd57826c180,0x107f9c0d0
code-creation,JS,10,8477125,0x107fc8d40,832,afterWriteDispatched node:internal/stream_base_commons:154:30,0x3564d12be298,^
code-source-info,0x107fc8d40,115,3766,4044,,,
code-creation,JS,10,8477167,0x107fc90a0,1744,Socket._writeGeneric node:net:933:42,0x15988e44b0d8,^
code-source-info,0x107fc90a0,96,24338,25242,,,
code-creation,JS,10,8477167,0x107fc97a0,504,spliceOne node:internal/util:498:19,0x22b216cd7a88,^
code-source-info,0x107fc97a0,13,14267,14376,,,
code-creation,JS,10,8477167,0x107fc99c0,616,afterWriteTick node:internal/streams/writable:693:24,0x15988e470088,^
code-source-info,0x107fc99c0,110,21221,21385,,,
code-creation,JS,10,8477292,0x107fc9c60,2392,OutgoingMessage node:_http_outgoing:105:25,0x28585989d638,^
code-source-info,0x107fc9c60,122,3572,5131,,,
code-creation,JS,10,8477333,0x107fca5e0,120,get node:internal/streams/readable:1455:18,0x15988e462a00,^
code-source-info,0x107fca5e0,106,44040,44098,,,
code-creation,JS,10,8477333,0x107fca680,1816,Readable node:internal/streams/readable:320:18,0x15988e460dd8,^
code-source-info,0x107fca680,106,10109,11126,,,
code-creation,JS,10,8477375,0x107fcadc0,1376,IncomingMessage node:_http_incoming:50:25,0x285859898638,^
code-source-info,0x107fcadc0,121,1823,2782,,,
code-creation,JS,10,8477375,0x107fcb340,1128,_addHeaderLines node:_http_incoming:244:25,0x285859898690,^
code-source-info,0x107fcb340,121,7158,7583,,,
code-creation,JS,10,8477417,0x107fcb7e0,752, node:_http_outgoing:673:45,0x28585989e490,^
code-source-info,0x107fcb7e0,122,20624,20936,,,
code-creation,JS,10,8477417,0x107fcbb00,224,hasObserver node:internal/perf/observe:570:21,0x285859883a20,^
code-source-info,0x107fcbb00,116,15904,16003,,,
code-creation,JS,10,8477458,0x107fcbc00,2328,ServerResponse node:_http_server:196:24,0x2858598a7460,^
code-source-info,0x107fcbc00,124,7345,8299,,,
code-creation,JS,10,8477458,0x107fcc540,712,_flush node:_http_outgoing:1188:51,0x28585989eb68,^
code-source-info,0x107fcc540,122,34487,34895,,,
code-creation,JS,10,8477500,0x107fcc840,560,assignSocket node:_http_server:288:62,0x2858598a8090,^
code-source-info,0x107fcc840,124,10264,10498,,,
code-creation,JS,10,8477500,0x107fccaa0,192,checkIsHttpToken node:_http_common:210:26,0x285859895350,^
code-source-info,0x107fccaa0,119,6617,6658,,,
code-creation,JS,10,8477500,0x107fccb80,488, node:_http_outgoing:667:44,0x28585989e438,^
code-source-info,0x107fccb80,122,20393,20576,,,
code-creation,JS,10,8477542,0x107fccda0,2256,processHeader node:_http_outgoing:590:23,0x28585989d740,^
code-source-info,0x107fccda0,122,18194,19285,,,
code-creation,JS,10,8477583,0x107fcd6a0,864,setHeader node:_http_outgoing:697:57,0x28585989e4e8,^
code-source-info,0x107fcd6a0,122,21254,21583,,,
code-creation,JS,10,8477583,0x107fcda20,368,Writable.cork node:internal/streams/writable:513:35,0x15988e470b28,^
code-source-info,0x107fcda20,110,15641,15731,,,
code-creation,JS,10,8477583,0x107fcdbc0,216,isContentDispositionField node:_http_outgoing:101:35,0x28585989d5e0,^
code-source-info,0x107fcdbc0,122,3468,3546,,,
code-creation,JS,10,8477625,0x107fcdcc0,1304,matchHeader node:_http_outgoing:632:21,0x28585989d7f0,^
code-source-info,0x107fcdcc0,122,19508,20348,,,
code-creation,JS,10,8477625,0x107fce200,464,storeHeader node:_http_outgoing:625:21,0x28585989d798,^
code-source-info,0x107fce200,122,19307,19486,,,
code-creation,JS,10,8477708,0x107fce400,5720,write_ node:_http_outgoing:938:16,0x28585989d9a8,^
code-source-info,0x107fce400,122,27406,29799,,,
code-creation,JS,10,8477708,0x107fcfa80,192,utcDate node:internal/http:17:17,0x28585989fdb8,^
code-source-info,0x107fcfa80,123,307,358,,,
code-creation,JS,10,8477750,0x107fcfb60,3808,writeHead node:_http_server:348:19,0x2858598a7510,^
code-source-info,0x107fcfb60,124,11765,14591,,,
code-creation,JS,10,8477750,0x107fd0a60,160,_implicitHeader node:_http_server:343:68,0x2858598a8248,^
code-source-info,0x107fd0a60,124,11655,11696,,,
code-creation,JS,10,8477833,0x107fd0b20,1816,_finish node:_http_server:238:52,0x2858598a8038,^
code-source-info,0x107fd0b20,124,8482,9111,,,
code-creation,JS,10,8477833,0x107fd1260,488,strictContentLength node:_http_outgoing:927:29,0x28585989d950,^
code-source-info,0x107fd1260,122,27183,27389,,,
code-creation,JS,10,8477875,0x107fd1480,160,get node:internal/streams/writable:1085:8,0x15988e4711e0,^
code-source-info,0x107fd1480,110,31628,31707,,,
code-creation,JS,10,8477875,0x107fd1540,392,get node:_http_outgoing:195:6,0x28585989dcc0,^
code-source-info,0x107fd1540,122,5963,6075,,,
code-creation,JS,10,8477875,0x107fd1700,272,normalizeEncoding node:internal/util:212:27,0x22b216cd6930,^
code-source-info,0x107fd1700,13,5674,5779,,,
code-creation,JS,10,8477875,0x107fd1840,360,isEncoding node:buffer:571:40,0x22b216ceece8,^
code-source-info,0x107fd1840,24,16110,16242,,,
code-creation,JS,10,8477917,0x107fd19e0,200,Socket._writev node:net:970:36,0x15988e44b1a0,^
code-source-info,0x107fd19e0,96,25281,25341,,,
code-creation,JS,10,8477917,0x107fd1ae0,1264,doWrite node:internal/streams/writable:587:17,0x15988e46ff80,^
code-source-info,0x107fd1ae0,110,17780,18201,,,
code-creation,JS,10,8477917,0x107fd2000,336,_finish node:_http_outgoing:1163:53,0x28585989eb10,^
code-source-info,0x107fd2000,122,33621,33678,,,
code-creation,JS,10,8477958,0x107fd2180,280, file:///Users/hsulzz/Playground/hello-world/src/index.mjs:5:28,0xcb65973c050,^
code-source-info,0x107fd2180,93,115,234,,,
code-creation,JS,10,8478000,0x107fd22c0,3880,end node:_http_outgoing:1080:45,0x28585989eab8,^
code-source-info,0x107fd22c0,122,31446,33431,,,
code-creation,JS,10,8478042,0x107fd3220,4752,parserOnIncoming node:_http_server:1040:26,0x2858598a7d50,^
code-source-info,0x107fd3220,124,33321,36999,,,
code-creation,JS,10,8478083,0x107fd44e0,1824,onEofChunk node:internal/streams/readable:788:20,0x15988e461148,^
code-source-info,0x107fd44e0,106,24064,24999,,,
code-creation,JS,10,8478083,0x107fd4c20,1744,parserOnHeadersComplete node:_http_common:71:33,0x285859895198,^
code-source-info,0x107fd4c20,119,2779,4227,,,
code-creation,JS,10,8478125,0x107fd5320,992,emitReadable node:internal/streams/readable:819:22,0x15988e4611a0,^
code-source-info,0x107fd5320,106,25221,25531,,,
code-creation,JS,10,8478167,0x107fd5720,3176,onParserExecuteCommon node:_http_server:918:31,0x2858598a7bf0,^
code-source-info,0x107fd5720,124,29626,31187,,,
code-creation,JS,10,8478167,0x107fd63c0,632,Readable.push node:internal/streams/readable:387:35,0x15988e461e10,^
code-source-info,0x107fd63c0,106,11921,12182,,,
code-creation,JS,10,8478208,0x107fd6660,408,get node:internal/streams/readable:1415:8,0x15988e4627b0,^
code-source-info,0x107fd6660,106,42986,43372,,,
code-creation,JS,10,8478208,0x107fd6820,232,readStart node:_http_incoming:39:19,0x285859898588,^
code-source-info,0x107fd6820,121,1583,1668,,,
code-creation,JS,10,8478250,0x107fd6940,632,parserOnMessageComplete node:_http_common:135:33,0x285859895248,^
code-source-info,0x107fd6940,119,4580,5035,,,
code-creation,JS,10,8478292,0x107fd6be0,3112,Writable.end node:internal/streams/writable:808:34,0x15988e470d30,^
code-source-info,0x107fd6be0,110,24525,26157,,,
code-creation,JS,10,8478292,0x107fd7840,384,onParserExecute node:_http_server:845:25,0x2858598a7ae8,^
code-source-info,0x107fd7840,124,27327,27802,,,
code-creation,JS,10,8478292,0x107fd79e0,64,nop node:_http_outgoing:90:13,0x28585989db08,^
code-source-info,0x107fd79e0,122,3095,3103,,,
code-creation,JS,10,8478333,0x107fd7a40,144,get node:_http_outgoing:247:16,0x28585989df98,^
code-source-info,0x107fd7a40,122,7496,7530,,,
code-creation,JS,10,8478333,0x107fd7b00,464,Readable.removeAllListeners node:internal/streams/readable:1181:49,0x15988e462438,^
code-source-info,0x107fd7b00,106,36929,37515,,,
code-creation,JS,10,8478333,0x107fd7d00,280,_dump node:_http_incoming:429:49,0x285859898ef0,^
code-source-info,0x107fd7d00,121,14205,14432,,,
tick,0x19252adc4,8478375,0,0x0,0,0xbd57826a1bb,0xbd578269eed,0xbd578269dfb,0xbd5782693d3,0x107f9b040,0xbd578269141,0x107fa54cc,0x107fb3fe4,0x107fc9bcc,0x107f9c078
code-creation,JS,10,8478375,0x107fd7e40,392,detachSocket node:_http_server:299:62,0x2858598a80e8,^
code-source-info,0x107fd7e40,124,10562,10723,,,
code-creation,JS,10,8478417,0x107fd8000,1584,Socket._final node:net:528:35,0x15988e44a200,^
code-source-info,0x107fd8000,96,14492,15107,,,
code-creation,JS,10,8478458,0x107fd8660,1488,emitReadable_ node:internal/streams/readable:830:23,0x15988e4611f8,^
code-source-info,0x107fd8660,106,25555,26205,,,
code-creation,JS,10,8478458,0x107fd8c60,352,Socket.end node:net:734:32,0x15988e44a810,^
code-source-info,0x107fd8c60,96,19383,19531,,,
code-creation,JS,10,8478458,0x107fd8de0,344,get node:internal/streams/writable:1029:8,0x15988e470f78,^
code-source-info,0x107fd8de0,110,30460,30575,,,
code-creation,JS,10,8478500,0x107fd8f60,392,Socket.destroySoon node:net:795:40,0x15988e44aae8,^
code-source-info,0x107fd8f60,96,20880,21019,,,
code-creation,JS,10,8478500,0x107fd9120,2024,resOnFinish node:_http_server:980:21,0x2858598a7ca0,^
code-source-info,0x107fd9120,124,31531,32995,,,
code-creation,JS,10,8478542,0x107fd9940,320,onFinish node:_http_outgoing:1075:18,0x28585989da58,^
code-source-info,0x107fd9940,122,31322,31400,,,
code-creation,JS,10,8478583,0x107fd9aa0,720,closeSocketHandle node:net:346:27,0x15988e449500,^
code-source-info,0x107fd9aa0,96,8868,9182,,,
code-creation,JS,10,8478583,0x107fd9da0,256,emitCloseNT node:_http_server:1029:21,0x2858598a7cf8,^
code-source-info,0x107fd9da0,124,33017,33130,,,
code-creation,JS,10,8478625,0x107fd9ec0,1392,_destroy node:_http_incoming:218:55,0x285859898e98,^
code-source-info,0x107fd9ec0,121,6291,7070,,,
code-creation,JS,10,8478625,0x107fda460,240,onError node:_http_incoming:439:17,0x2858598987f0,^
code-source-info,0x107fda460,121,14451,14682,,,
code-creation,JS,10,8478625,0x107fda580,1416,onFinish node:internal/streams/writable:886:18,0x15988e470240,^
code-source-info,0x107fda580,110,26608,27223,,,
code-creation,JS,10,8478667,0x107fdab40,160, node:internal/streams/writable:916:21,0x31c3bc44078,^
code-source-info,0x107fdab40,110,27521,27558,,,
code-creation,JS,10,8478667,0x107fdac00,408,afterShutdown node:net:552:23,0x15988e4495b0,^
code-source-info,0x107fdac00,96,15132,15256,,,
code-creation,JS,10,8478708,0x107fdadc0,536,clearTimeout node:timers:183:22,0x2ddc31ec1aa0,^
script-source,33,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  MathTrunc\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  SymbolToPrimitive\x2C\n} = primordials;\n\nconst binding = internalBinding('timers');\nconst {\n  immediateInfo\x2C\n} = binding;\nconst L = require('internal/linkedlist');\nconst {\n  async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  decRefCount\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\x2C\n  }\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  getTimerDuration\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  immediateQueue\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\x2C\n  knownTimersById\x2C\n} = require('internal/timers');\nconst {\n  promisify: { custom: customPromisify }\x2C\n  deprecate\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\nconst { validateFunction } = require('internal/validators');\n\nlet timersPromises;\nlet timers;\n\nconst {\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitDestroy\x2C\n} = require('internal/async_hooks');\n\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\nfunction unenroll(item) {\n  if (item._destroyed)\n    return;\n\n  item._destroyed = true;\n\n  if (item[kHasPrimitive])\n    delete knownTimersById[item[async_id_symbol]];\n\n  // Fewer checks may be possible\x2C but these cover everything.\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\n    emitDestroy(item[async_id_symbol]);\n\n  L.remove(item);\n\n  // We only delete refed lists because unrefed ones are incredibly likely\n  // to come from http and be recreated shortly after.\n  // TODO: Long-term this could instead be handled by creating an internal\n  // clearTimeout that makes it clear that the list should not be deleted.\n  // That function could then be used by http and other similar modules.\n  if (item[kRefed]) {\n    // Compliment truncation during insert().\n    const msecs = MathTrunc(item._idleTimeout);\n    const list = timerListMap[msecs];\n    if (list !== undefined && L.isEmpty(list)) {\n      debug('unenroll: list empty');\n      timerListQueue.removeAt(list.priorityQueuePosition);\n      delete timerListMap[list.msecs];\n    }\n\n    decRefCount();\n  }\n\n  // If active is called later\x2C then we want to make sure not to insert again\n  item._idleTimeout = -1;\n}\n\n// Make a regular object able to act as a timer by setting some properties.\n// This function does not start the timer\x2C see `active()`.\n// Using existing objects as timers slightly reduces object overhead.\nfunction enroll(item\x2C msecs) {\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // If this item was already in a list somewhere\n  // then we should unenroll it from that\n  if (item._idleNext) unenroll(item);\n\n  L.init(item);\n  item._idleTimeout = msecs;\n}\n\n\n/**\n * Schedules the execution of a one-time `callback`\n * after `after` milliseconds.\n * @param {Function} callback\n * @param {number} [after]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        ArrayPrototypePush(args\x2C arguments[i]);\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    timersPromises ??= require('timers/promises');\n    return timersPromises.setTimeout;\n  }\x2C\n});\n\n/**\n * Cancels a timeout.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearTimeout(timer) {\n  if (timer?._onTimeout) {\n    timer._onTimeout = null;\n    unenroll(timer);\n    return;\n  }\n  if (typeof timer === 'number' || typeof timer === 'string') {\n    const timerInstance = knownTimersById[timer];\n    if (timerInstance !== undefined) {\n      timerInstance._onTimeout = null;\n      unenroll(timerInstance);\n    }\n  }\n}\n\n/**\n * Schedules repeated execution of `callback`\n * every `repeat` milliseconds.\n * @param {Function} callback\n * @param {number} [repeat]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        ArrayPrototypePush(args\x2C arguments[i]);\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\n/**\n * Cancels an interval.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearInterval(timer) {\n  // clearTimeout and clearInterval can be used to clear timers created from\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  clearTimeout(timer);\n}\n\nTimeout.prototype.close = function() {\n  clearTimeout(this);\n  return this;\n};\n\nTimeout.prototype[SymbolDispose] = function() {\n  clearTimeout(this);\n};\n\n/**\n * Coerces a `Timeout` to a primitive.\n * @returns {number}\n */\nTimeout.prototype[SymbolToPrimitive] = function() {\n  const id = this[async_id_symbol];\n  if (!this[kHasPrimitive]) {\n    this[kHasPrimitive] = true;\n    knownTimersById[id] = this;\n  }\n  return id;\n};\n\n/**\n * Schedules the immediate execution of `callback`\n * after I/O events' callbacks.\n * @param {Function} callback\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Immediate}\n */\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n      break;\n    case 2:\n      args = [arg1];\n      break;\n    case 3:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 4; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        ArrayPrototypePush(args\x2C arguments[i]);\n      }\n      break;\n  }\n\n  return new Immediate(callback\x2C args);\n}\n\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    timersPromises ??= require('timers/promises');\n    return timersPromises.setImmediate;\n  }\x2C\n});\n\n/**\n * Cancels an immediate.\n * @param {Immediate} immediate\n * @returns {void}\n */\nfunction clearImmediate(immediate) {\n  if (!immediate || immediate._destroyed)\n    return;\n\n  immediateInfo[kCount]--;\n  immediate._destroyed = true;\n\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleImmediateRef(false);\n  }\n  immediate[kRefed] = null;\n\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\n    emitDestroy(immediate[async_id_symbol]);\n  }\n\n  immediate._onImmediate = null;\n\n  immediateQueue.remove(immediate);\n}\n\nImmediate.prototype[SymbolDispose] = function() {\n  clearImmediate(this);\n};\n\nmodule.exports = timers = {\n  setTimeout\x2C\n  clearTimeout\x2C\n  setImmediate\x2C\n  clearImmediate\x2C\n  setInterval\x2C\n  clearInterval\x2C\n  _unrefActive: deprecate(\n    unrefActive\x2C\n    'timers._unrefActive() is deprecated.' +\n    ' Please use timeout.refresh() instead.'\x2C\n    'DEP0127')\x2C\n  active: deprecate(\n    active\x2C\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\n    'DEP0126')\x2C\n  unenroll: deprecate(\n    unenroll\x2C\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\n    'DEP0096')\x2C\n  enroll: deprecate(\n    enroll\x2C\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\n    'DEP0095')\x2C\n};\n\nObjectDefineProperties(timers\x2C {\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      timersPromises ??= require('timers/promises');\n      return timersPromises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x107fdadc0,33,5078,5415,,,
code-creation,JS,10,8479167,0x107fdb000,720,getObserverType node:internal/perf/observe:134:25,0x285859883658,^
code-source-info,0x107fdb000,116,2887,3203,,,
code-creation,JS,10,8479167,0x107fdb300,840,Writable.destroy node:internal/streams/writable:1114:38,0x15988e471360,^
code-source-info,0x107fdb300,110,32275,32547,,,
code-creation,JS,10,8479167,0x107fdb680,928,finish node:internal/streams/writable:949:16,0x15988e470348,^
code-source-info,0x107fdb680,110,28267,28895,,,
code-creation,JS,10,8479208,0x107fdba40,304,free node:internal/freelist:21:7,0x285859896e80,^
code-source-info,0x107fdba40,120,325,445,,,
code-creation,JS,10,8479208,0x107fdbba0,744,freeParser node:_http_common:180:20,0x2858598952f8,^
code-source-info,0x107fdbba0,119,5774,6380,,,
code-creation,JS,10,8479250,0x107fdbec0,592,abortIncoming node:_http_server:806:23,0x2858598a7988,^
code-source-info,0x107fdbec0,124,26205,26370,,,
code-creation,JS,10,8479250,0x107fdc140,424,socketOnClose node:_http_server:800:23,0x2858598a7930,^
code-source-info,0x107fdc140,124,26054,26181,,,
code-creation,JS,10,8479250,0x107fdc320,736, node:net:348:24,0x31c3bc47090,^
code-source-info,0x107fdc320,96,8961,9174,,,
tick,0x101661994,8479625,0,0x0,0,0x107fd7be4,0x107fd7d98,0x107fd943c,0x107f9b040,0x107fd9a38,0x107fa54cc,0x107fb3fe4,0x107fc9bcc,0x107f9c078
code-creation,JS,10,8479833,0x107fdc620,3320,slowCases node:internal/util:217:19,0x22b216cd69f0,^
code-source-info,0x107fdc620,13,5799,7581,,,
code-creation,JS,10,8479833,0x107fdd340,688,onceWrapper node:events:633:21,0x22b216ce9178,^
code-source-info,0x107fdd340,22,18506,18750,,,
code-creation,JS,10,8479833,0x107fdd620,1208,byteLength node:buffer:770:20,0x22b216cf07a8,^
code-source-info,0x107fdd620,24,23098,23805,,,
code-creation,JS,10,8479875,0x107fddb00,392,getOrSetAsyncId node:internal/async_hooks:421:25,0x22b216cd2338,^
code-source-info,0x107fddb00,11,14645,14811,,,
tick,0x1010ec454,8480875,0,0x0,0,0x107f9d4d8,0x107fa94a8,0x107fa3ec0,0x107fa9268,0x107f99240,0x107fb629c,0x107fb4470,0x107fb8a38,0x107f9b040,0x107fb9428
code-creation,JS,10,8481333,0x107fddcc0,2896,removeAllListeners node:events:746:32,0x22b216ce95e8,^
code-source-info,0x107fddcc0,22,21531,22904,,,
code-creation,JS,10,8481375,0x107fde840,720,Server._emitCloseIfDrained node:net:2365:48,0x15988e44b940,^
code-source-info,0x107fde840,96,66168,66546,,,
code-creation,JS,10,8481375,0x107fdeb40,288,resetSocketTimeout node:_http_server:1159:28,0x2858598a7da8,^
code-source-info,0x107fdeb40,124,37028,37181,,,
code-creation,JS,10,8481375,0x107fdec80,888,addCatch node:events:371:18,0x22b216ce8730,^
code-source-info,0x107fdec80,22,10835,11377,,,
tick,0x19252e620,8482125,0,0x0,8
new,MemoryChunk,0x366972880000,262144
new,MemoryChunk,0x1b532b040000,262144
new,MemoryChunk,0x3d6c50640000,262144
new,MemoryChunk,0x1908688c0000,262144
tick,0x10213fa5c,8483417,0,0x0,4,0x107f9f008,0x107f9c3d8
tick,0x1021117a0,8484667,0,0x0,4,0x107f9f008,0x107f9c3d8
tick,0x107fdbba0,8485917,0,0x0,0,0x107f9b040,0x107fdc46c
tick,0x1923766d8,8487167,0,0x0,4,0x107fc8110,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107f9b040,0x107fdb808,0x107f9c0d0
tick,0x192375b68,8488417,0,0x0,0,0x107fdbc7c,0x107fdc258,0x107f9b040,0x107fdc46c
delete,MemoryChunk,0x366972880000
delete,MemoryChunk,0x1b532b040000
delete,MemoryChunk,0x3d6c50640000
delete,MemoryChunk,0x1908688c0000
code-creation,JS,10,8488833,0x107fdf020,832,getStderr node:internal/bootstrap/switches/is_main_thread:173:19,0x2ddc31ef5250,^
script-source,59,node:internal/bootstrap/switches/is_main_thread,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst rawMethods = internalBinding('process_methods');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n// TODO(joyeecheung): deprecate and remove these underscore methods\nprocess._debugProcess = rawMethods._debugProcess;\nprocess._debugEnd = rawMethods._debugEnd;\n\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\n// Five word summary: they were broken beyond repair.\nprocess._startProfilerIdleNotifier = () => {};\nprocess._stopProfilerIdleNotifier = () => {};\n\nfunction defineStream(name\x2C getter) {\n  ObjectDefineProperty(process\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\x2C\n  });\n}\n\ndefineStream('stdout'\x2C getStdout);\ndefineStream('stdin'\x2C getStdin);\ndefineStream('stderr'\x2C getStderr);\n\n// Worker threads don't receive signals.\nconst {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\x2C\n} = require('internal/process/signal');\nprocess.on('newListener'\x2C startListeningIfSignal);\nprocess.on('removeListener'\x2C stopListeningIfSignal);\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst { guessHandleType } = require('internal/util');\n\nfunction createWritableStdioStream(fd) {\n  let stream;\n  // Note stream._type is used for test-module-load-list.js\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n      break;\n    }\n\n    case 'FILE': {\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // If fd is already being used for the IPC channel\x2C libuv will return\n      // an error when trying to use it again. In that case\x2C create the socket\n      // using the existing handle instead of the fd.\n      if (process.channel && process.channel.fd === fd) {\n        const { kChannelHandle } = require('internal/child_process');\n        stream = new net.Socket({\n          handle: process[kChannelHandle]\x2C\n          readable: false\x2C\n          writable: true\x2C\n        });\n      } else {\n        stream = new net.Socket({\n          fd\x2C\n          readable: false\x2C\n          writable: true\x2C\n        });\n      }\n\n      stream._type = 'pipe';\n      break;\n    }\n\n    default: {\n      // Provide a dummy black-hole output for e.g. non-console\n      // Windows applications.\n      const { Writable } = require('stream');\n      stream = new Writable({\n        write(buf\x2C enc\x2C cb) {\n          cb();\n        }\x2C\n      });\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\nfunction dummyDestroy(err\x2C cb) {\n  cb(err);\n  this._undestroy();\n\n  // We need to emit 'close' anyway so that the closing\n  // of the stream is observable. We just make sure we\n  // are not going to do it twice.\n  // The 'close' event is needed so that finished and\n  // pipeline work correctly.\n  if (!this._writableState.emitClose) {\n    process.nextTick(() => {\n      this.emit('close');\n    });\n  }\n}\n\nlet stdin;\nlet stdout;\nlet stderr;\n\nlet stdoutDestroy;\nlet stderrDestroy;\n\nfunction refreshStdoutOnSigWinch() {\n  stdout._refreshSize();\n}\n\nfunction refreshStderrOnSigWinch() {\n  stderr._refreshSize();\n}\n\nfunction addCleanup(fn) {\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(fn);\n  }\n}\n\nfunction getStdout() {\n  if (stdout) return stdout;\n  stdout = createWritableStdioStream(1);\n  stdout.destroySoon = stdout.destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stdoutDestroy = stdout._destroy;\n  stdout._destroy = dummyDestroy;\n  if (stdout.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n  }\n\n  addCleanup(function cleanupStdout() {\n    stdout._destroy = stdoutDestroy;\n    stdout.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n    stdout = undefined;\n  });\n  // No need to add deserialize callback because stdout = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdout;\n}\n\nfunction getStderr() {\n  if (stderr) return stderr;\n  stderr = createWritableStdioStream(2);\n  stderr.destroySoon = stderr.destroy;\n  stderrDestroy = stderr._destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stderr._destroy = dummyDestroy;\n  if (stderr.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\n  }\n  addCleanup(function cleanupStderr() {\n    stderr._destroy = stderrDestroy;\n    stderr.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\n    stderr = undefined;\n  });\n  // No need to add deserialize callback because stderr = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stderr;\n}\n\nfunction getStdin() {\n  if (stdin) return stdin;\n  const fd = 0;\n\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stdin = new tty.ReadStream(fd);\n      break;\n    }\n\n    case 'FILE': {\n      const fs = require('fs');\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // It could be that process has been started with an IPC channel\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\n      // present and creating a new one will lead to the assertion failure\n      // in libuv.\n      if (process.channel && process.channel.fd === fd) {\n        stdin = new net.Socket({\n          handle: process.channel\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\x2C\n        });\n      } else {\n        stdin = new net.Socket({\n          fd: fd\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\x2C\n        });\n      }\n      // Make sure the stdin can't be `.end()`-ed\n      stdin._writableState.ended = true;\n      break;\n    }\n\n    default: {\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      const { Readable } = require('stream');\n      stdin = new Readable({ read() {} });\n      stdin.push(null);\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stdin.fd = fd;\n\n  // `stdin` starts out life in a paused state\x2C but node doesn't\n  // know yet. Explicitly to readStop() it to put it in the\n  // not-reading state.\n  if (stdin._handle?.readStop) {\n    stdin._handle.reading = false;\n    stdin._readableState.reading = false;\n    stdin._handle.readStop();\n  }\n\n  // If the user calls stdin.pause()\x2C then we need to stop reading\n  // once the stream implementation does so (one nextTick later)\x2C\n  // so that the process can close down.\n  stdin.on('pause'\x2C () => {\n    process.nextTick(onpause);\n  });\n\n  function onpause() {\n    if (!stdin._handle)\n      return;\n    if (stdin._handle.reading && !stdin.readableFlowing) {\n      stdin._readableState.reading = false;\n      stdin._handle.reading = false;\n      stdin._handle.readStop();\n    }\n  }\n\n  addCleanup(function cleanupStdin() {\n    stdin.destroy();\n    stdin = undefined;\n  });\n  // No need to add deserialize callback because stdin = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdin;\n}\n\n// Used by internal tests.\nrawMethods.resetStdioForTesting = function() {\n  stdin = undefined;\n  stdout = undefined;\n  stderr = undefined;\n};\n\n// Needed by the module loader and generally needed everywhere.\nrequire('fs');\nrequire('util');\nrequire('url'); // eslint-disable-line no-restricted-modules\ninternalBinding('module_wrap');\nrequire('internal/modules/cjs/loader');\nrequire('internal/modules/esm/utils');\n\n// Needed to refresh the time origin.\nrequire('internal/perf/utils');\n// Needed to register the async hooks.\nif (internalBinding('config').hasInspector) {\n  require('internal/inspector_async_hook');\n}\n// Needed to set the wasm web API callbacks.\ninternalBinding('wasm_web_api');\n// Needed to detect whether it's on main thread.\ninternalBinding('worker');\n// Needed by most execution modes.\nrequire('internal/modules/run_main');\n// Needed to refresh DNS configurations.\nrequire('internal/dns/utils');\n// Needed by almost all execution modes. It's fine to\n// load them into the snapshot as long as we don't run\n// any of the initialization.\nrequire('internal/process/pre_execution');\n
code-source-info,0x107fdf020,59,4448,5121,,,
code-creation,JS,10,8489208,0x107fdf380,896,callFinishedCallbacks node:internal/streams/writable:973:31,0x15988e4703a0,^
code-source-info,0x107fdf380,110,28927,29215,,,
code-creation,JS,10,8489250,0x107fdf720,2536,OutgoingMessage.uncork node:_http_outgoing:322:44,0x28585989e250,^
code-source-info,0x107fdf720,122,9605,10353,,,
code-creation,JS,10,8489250,0x107fe0140,1056,_flushOutput node:_http_outgoing:1205:63,0x28585989ebc0,^
code-source-info,0x107fe0140,122,34960,35511,,,
tick,0x107fd5978,8489667,0,0x0,0,0x107fd7984
tick,0x19252e620,8491167,0,0x0,8
tick,0x192528738,8492208,0,0x0,0,0x107fd9d20,0x107fc8890,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107f9b040,0x107fdb808,0x107f9c0d0
delete,MemoryChunk,0x32afbc400000
delete,MemoryChunk,0x51523800000
delete,MemoryChunk,0xc0541840000
delete,MemoryChunk,0x2e3cb72c0000
tick,0x107f9de90,8493458,0,0x0,0,0x107f9d9a8,0x107f9bd2c
tick,0x192528738,8494708,0,0x0,0,0x107fd9d20,0x107fc8890,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107f9b040,0x107fdb808,0x107f9c0d0
tick,0x19252a6ec,8495958,0,0x0,1
delete,MemoryChunk,0x1908688c0000
delete,MemoryChunk,0x3d6c50640000
delete,MemoryChunk,0x1b532b040000
delete,MemoryChunk,0x366972880000
code-creation,JS,12,8496125,0x107fe0580,188,noop node:internal/util/debuglog:57:14,0x22b216ce3f70,*
code-source-info,0x107fe0580,19,1733,1741,C0O1733C48O1740C80O1733,,
code-creation,JS,12,8496167,0x107fe0680,268,isEmpty node:internal/fixed_queue:68:10,0x22b216cfe730,*
code-source-info,0x107fe0680,31,3137,3182,C0O3137C52O3158C84O3171C88O3162C96O3137,,
code-creation,JS,12,8496167,0x107fe07c0,240, node:internal/validators:459:42,0x22b216cd4810,*
code-source-info,0x107fe07c0,12,13109,13225,C0O13109C52O13167C60O13130C128O13109,,
code-creation,JS,12,8496167,0x107fe08e0,420,hasHooks node:internal/async_hooks:470:18,0x22b216cd2638,*
code-source-info,0x107fe08e0,11,16113,16159,C0O16113C52O16153C60O16147C152O16113C200O16147,,
code-creation,JS,12,8496250,0x107fe0ac0,252,get node:net:2410:6,0x15988e44bb20,*
code-source-info,0x107fe0ac0,96,67240,67268,C0O67240C52O67256C104O67240C148O67256,,
tick,0x10166e2e0,8497250,0,0x0,0,0x107fa7a04,0x107f983b4,0x107f98964,0x107f98f30,0x107fb634c,0x107fb4470,0x107fb8a38,0x107f9b040,0x107fb9428
code-creation,JS,12,8498417,0x107fe0c00,268,isEmpty node:internal/fixed_queue:96:10,0x22b216cfeaf8,*
code-source-info,0x107fe0c00,31,3690,3730,C0O3690C52O3711C84O3158I0C88O3171I0C92O3162I0C100O3171I0C108O3716C140O3178I0C148O3690,F0O3716,S0x22b216cfe730
tick,0x192529bbc,8498500,0,0x0,0,0x107fd1af8,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107f9b040,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8498500,0x107fe0d40,248,checkListener node:events:274:23,0x22b216ce8268,*
code-source-info,0x107fe0d40,22,8131,8187,C0O8131C56O8146C64O13130I1C80O14729I0C132O14764I0C136O8131,F0O8146F1O14764I0,S0x22b216cc9610S0x22b216cd4810
code-creation,JS,12,8498625,0x107fe0e80,440,shift node:internal/fixed_queue:109:8,0x22b216cfec80,*
code-source-info,0x107fe0e80,31,4007,4257,C0O4007C52O4034C84O3384I1C88O3394I1C92O3388I1C120O4084C128O3388I1C132O3158I0C168O3481I1C184O3525I1C188O4084C196O3481I1C200O3530I1C204O3510I1C224O3158I0C228O3171I0C232O3162I0C240O3394I1C248O3388I1C280O4102C284O3407I1C296O3473I1C308O4007,F0O4084F1O4062,S0x22b216cfe730S0x22b216cfe970
delete,MemoryChunk,0x2e3cb72c0000
delete,MemoryChunk,0xc0541840000
delete,MemoryChunk,0x51523800000
delete,MemoryChunk,0x32afbc400000
tick,0x107f9e308,8499750,0,0x0,0,0x107f9e5f0,0x107f9bf20
code-creation,JS,12,8500583,0x107fe1080,400,get node:internal/streams/readable:132:8,0x15988e466fc0,*
code-source-info,0x107fe1080,106,3849,3890,C0O3849C60O3854C72O3875C84O3866C132O3875C148O3849C244O3867,,
tick,0x192372e5c,8501000,0,0x0,0,0x107fd83d0,0x107fb4f08,0x107fabd54,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107f9b040,0x107fd9a38,0x107fa54cc,0x107fb3fe4,0x107fc9bcc,0x107f9c078
code-creation,JS,12,8501833,0x107fe1260,332,newAsyncId node:internal/async_hooks:417:20,0x22b216cd2278,*
code-source-info,0x107fe1260,11,14568,14619,C0O14568C48O14600C76O14615C80O14617C88O14600C96O14617C108O14600C116O14617C140O14600C172O14617C176O14615C180O14568C236O14617,,
code-creation,JS,12,8501917,0x107fe13e0,188,current node:internal/async_context_frame:59:17,0x22b216ce60a0,*
code-source-info,0x107fe13e0,21,1231,1236,C0O1231C48O1235C80O1231,,
code-creation,JS,12,8502042,0x107fe14e0,228,initHooksExist node:internal/async_hooks:478:24,0x22b216cd27b8,*
code-source-info,0x107fe14e0,11,16245,16277,C0O16245C48O16147I0C68O16259C72O16245,F0O16259,S0x22b216cd2638
tick,0x107f9cb60,8502292,0,0x0,0,0x107fd5694,0x107fd4a10,0xbd5782682e5,0x107fd658c,0x107fd6abc
code-creation,JS,12,8502333,0x107fe1600,1324,addListener node:events:615:58,0x22b216ce8ff8,*
code-source-info,0x107fex22b216ce8e10S0x22b216ce8aa0S0x22b216ce8328S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810
code-creation,JS,12,8502375,0x107fe1bc0,1544,_addListener node:events:552:22,0x22b216ce8e10,*
code-source-info,0x107fe1bcx22b216ce8aa0S0x22b216ce8328S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810
code-creation,JS,12,8502458,0x107fe2260,228,get node:internal/bootstrap/node:100:8,0x22b216ccd8d8,*
code-source-info,0x107fe2260,9,3833,3880,C0O3833C48O3857C68O3858C76O3857C116O3833,,
code-creation,JS,12,8502583,0x107fe2380,276,isFull node:internal/fixed_queue:72:9,0x22b216cfe7f0,*
code-source-info,0x107fe2380,31,3192,3253,C0O3192C52O3215C84O3219C88O3242C92O3219C96O3233C100O3224C112O3219C144O3249C152O3192,,
code-creation,JS,12,8502625,0x107fe24e0,432,push node:internal/fixed_queue:100:7,0x22b216cfebb8,*
code-source-info,0x107fe24e0,31,3738,3998,C0O3738C52O3760C84O3215I0C88O3219I0C92O3242I0C96O3219I0C100O3233I0C104O3224I0C108O3760C116O3279I1C120O3294I1C160O3224I0C164O3242I0C168O3294I1C192O3315I1C200O3765C244O3242I0C248O3738,F0O3765F1O3983,S0x22b216cfe7f0S0x22b216cfe8b0
code-creation,JS,12,8502708,0x107fe26c0,204,exchange node:internal/async_context_frame:61:18,0x22b216ce61f0,*
code-source-info,0x107fe26c0,21,1277,1287,C0O1277C48O1286C92O1277,,
code-creation,JS,12,8502708,0x107fe27c0,404,push node:internal/fixed_queue:76:7,0x22b216cfe8b0,*
code-source-info,0x107fe27c0,31,3261,3344,C0O3261C52O3279C84O3289C88O3294C132O3327C136O3294C168O3332C172O3315C224O3261,,
delete,MemoryChunk,0x366972880000
delete,MemoryChunk,0x1b532b040000
delete,MemoryChunk,0x3d6c50640000
delete,MemoryChunk,0x1908688c0000
code-creation,JS,12,8503042,0x107fe29a0,3720,processTicksAndRejections node:internal/process/task_queues:72:35,0x22b216cfc0b8,*
code-source-info,0x107fe29ax22b216ce61f0S0x22b216cd2938S0x22b216cd2638S0x22b216ce6148S0x22b216cfbf38S0x22b216cfd2b8S0x22b216cfec80S0x22b216cfe730S0x22b216cfe970S0x22b216cd2c38S0x22b216cd2f48S0x22b216cd26f8S0x22b216cd2b78S0x22b216cd2e78S0x22b216cfeaf8S0x2858598987f0S0x31c3bc46160
tick,0x100abc554,8503542,0,0x0,8
code-creation,JS,12,8503625,0x107fe3940,1712,nextTick node:internal/process/task_queues:113:18,0x22b216cfc1a8,*
code-source-info,0x107fex22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216cd27b8S0x22b216cd2638S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0
code-creation,JS,12,8503708,0x107fe4040,460,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x22b216cd23f8,*
code-source-info,0x107fe4040,11,15027,15284,C0O15027C52O15079C72O15080C80O15282C88O15079C96O15199C108O15282C120O15250C128O15282C188O15231C192O15230C196O15250C204O15079C212O15199C216O15027C224O15250C280O15027C340O15282C368O15250,,
code-creation,JS,12,8504208,0x107fe4240,908,emit node:events:471:44,0x22b216ce8cf0,*
code-source-info,0x107fe4240,22,13625,15904,C0O13625C100O13842C108O13625C124O14021C132O13625C168O13665C212O13702C248O15318C260O13625C276O14988C300O13625C312O13766C316O15047C332O13625C340O15111C472O15318C632O13625,,
code-creation,JS,12,8504583,0x107fe4620,1828,Readable.on node:internal/streams/readable:1127:33,0x15988e462310,*
code-source-info,0x107fex22b216ce8ff8S0x22b216ce8e10S0x22b216ce8aa0S0x22b216ce8328S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810
tick,0x19252f804,8504792,0,0x0,8
tick,0x19252e620,8505917,0,0x0,8
code-creation,JS,12,8506708,0x107fe4de0,724,set node:internal/streams/writable:132:8,0x15988e4731b8,*
code-source-info,0x107fe4de0,110,3980,4066,C0O3980C60O4012C68O4023C80O4044C116O4055C128O3996C132O4065C144O4044C156O4007C180O4012C228O4023C248O4020C300O4039C312O3980C324O4044C372O4055C392O4052C408O3980C456O3996C480O4012C552O4044,,
tick,0x100f06878,8507000,0,0x0,1
tick,0x19252e620,8508333,0,0x0,8
code-creation,JS,12,8509167,0x107fe5100,724,set node:internal/streams/readable:133:8,0x15988e467018,*
code-source-info,0x107fe5100,106,3899,3985,C0O3899C60O3931C68O3942C80O3963C116O3974C128O3915C132O3984C144O3963C156O3926C180O3931C228O3942C248O3939C300O3958C312O3899C324O3963C372O3974C392O3971C408O3899C456O3915C480O3931C552O3963,,
tick,0x192527ad0,8509500,0,0x0,8
tick,0x19252e620,8510750,0,0x0,8
tick,0x19240acc8,8512000,0,0x0,1
tick,0x19252e620,8513333,0,0x0,8
tick,0x19252e620,8514375,0,0x0,8
tick,0x100e3d144,8515583,0,0x0,8
code-creation,JS,12,8516750,0x107fe5420,288,get node:internal/streams/writable:230:8,0x15988e470500,*
code-source-info,0x107fe5420,110,7361,7458,C0O7361C52O7378C108O7387C112O7416C116O7361,,
tick,0x192528738,8516875,0,0x0,0,0x107fd9d20,0x107fc8890,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252ad6c,8518125,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19259e814,8519167,0,0x0,8
tick,0x1016bbda0,8520417,0,0x0,0,0x107fd0acc,0x107fcee80,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x192371a90,8521708,0,0x0,5,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252e620,8522792,0,0x0,8
tick,0x10174f3c4,8524000,0,0x0,0,0x107f99f00,0x107fa1d58,0x107fad47c,0x107faf290,0x107fb9130
tick,0x1925639b8,8525250,0,0x0,1
tick,0x107fcc99c,8526500,0,0x0,0,0x107fd3914,0x107fd51dc
tick,0x19252ad6c,8527792,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x107fd6a80,8529000,0,0x0,0
tick,0x19252b25c,8530292,0,0x0,8
tick,0x19252b25c,8531542,0,0x0,8
tick,0x19252b4fc,8532792,0,0x0,8
code-creation,JS,12,8533542,0x107fe5580,188,get hasSubscribers node:diagnostics_channel:208:21,0x2ddc31effa48,*
code-source-info,0x107fe5580,65,4701,4727,C0O4701C48O4723C80O4701,,
code-creation,JS,12,8533958,0x107fe5680,460,get node:internal/streams/writable:1010:8,0x15988e470ec8,*
code-source-info,0x107fe5680,110,29862,30262,C0O29862C52O29888C84O30196C96O30195C108O30207C132O30217C144O30147C148O30217C160O30226C172O30163C212O7378I0C216O30204C220O30195C224O30224C240O30256C272O7379I0C280O29862C328O30147C332O30239C344O30147C352O30226,F0O30163,S0x15988e470500
tick,0x19252b4fc,8534083,0,0x0,8
code-creation,JS,12,8534292,0x107fe5880,280,get node:internal/streams/duplex:161:8,0x15988e459fa0,*
code-source-info,0x107fe5880,104,5429,5638,C0O5429C52O5449C84O5494C88O5589C100O3866I0C104O3875I0C112O5494C144O5589C148O3849I0C156O5429,F0O5589,S0x15988e466fc0
code-creation,JS,12,8534625,0x107fe59e0,352,checkError node:internal/streams/destroy:33:20,0x15988e458b08,*
code-source-info,0x107fe59e0,103,507,799,C0O507C60O798C72O507C120O523C196O507C244O523,,
code-creation,JS,12,8534958,0x107fe5b80,1048,_addHeaderLine node:_http_incoming:382:24,0x285859898740,*
code-source-info,0x107fe5b80,121,12819,13812,C0O12819C56O12852C104O12898C164O13023C172O13734C200O12898C232O13023C240O12898C244O13135C256O12898C264O13734C268O12898C292O12965C300O13168C304O13385C312O12898C320O13385C324O12898C328O13611C332O12965C348O13385C392O12852C404O12965C416O13058C428O13385C444O12819C456O13798C472O13734C548O13798C620O12965C640O13023C688O13135C724O12819C772O12898C820O12965C848O13385C872O13023,,
tick,0x19252ad6c,8535333,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8535333,0x107fe6000,1428,endReadableNT node:internal/streams/readable:1692:23,0x15988e4616c8,*
code-source-info,0x107fex22b216ce3f70S0x15988e466fc0S0x15988e458b60S0x22b216ce8cf0S0x15988e458be0S0x15988e458b08
code-creation,JS,12,8535375,0x107fe6600,1520,endReadable node:internal/streams/readable:1682:21,0x15988e461670,*
code-source-info,0x107fex22b216ce3f70S0x22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0
tick,0x100e9ce10,8536583,0,0x0,5,0x107fb5f34,0x107fb4470,0x107fb8a38,0x107fe4400,0x107fb9428
code-creation,JS,12,8537333,0x107fe6c40,460,_unrefTimer node:net:518:52,0x15988e44a1a8,*
code-source-info,0x107fe6c40,96,14254,14364,C0O14254C72O14313C80O14318C120O14337C132O14298C144O14363C152O14254C164O14318C180O14254C196O14298C200O14261C248O14254C296O14318C300O14254C312O14318C332O14261,,
tick,0x1016ac0a0,8537833,0,0x0,0,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107fa54cc,0x107fb3fe4,0x107fc9bcc,0x107fe301c
tick,0x1016af5e0,8539083,0,0x0,0,0x107fd7984
tick,0x19252ad6c,8540375,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8540667,0x107fe6e40,1660,get node:_http_incoming:109:16,0x285859898968,*
code-source-info,0x107fe6ex285859898740
tick,0x1016b7488,8541625,0,0x0,0,0x107fa95ac,0x107faa688,0x107fdd420,0x107fe4400,0x107fdb808,0x107fe2ff0
code-creation,JS,12,8542208,0x107fe7540,2452,Readable.read node:internal/streams/readable:647:35,0x15988e462060,*
code-source-info,0x107fex22b216ce3f70S0x15988e4610f0S0x15988e44a780S0x15988e44bb20S0x15988e449660
tick,0x1016ac570,8542875,0,0x0,0,0x107fcee64,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8543375,0x107fe7fa0,288,next node:internal/per_context/primordials:331:9,0x2aa13b33f2d0,*
code-source-info,0x107fe7fa0,3,9242,9287,C0O9242C60O9253C68O9270C100O9260C128O9242,,
tick,0x10166e064,8544125,0,0x0,0,0x107fd4e28
code-creation,JS,12,8544958,0x107fe8100,316,SafeMap node:internal/per_context/primordials:409:16,0x2aa13b33f8e8,*
code-source-info,0x107fe8100,3,11638,11655,C0O11638C56O11644C148O11638C204O11644,,
code-creation,JS,12,8545250,0x107fe8280,352,assert node:internal/assert:8:16,0x22b216ccd510,*
code-source-info,0x107fe8280,8,143,278,C0O143C60O213C72O143C120O164C196O143C244O164,,
tick,0x1923734ec,8545417,0,0x0,4,0x107fabd10,0x107fb4204,0x107fc9bcc,0x107fe301c
code-creation,JS,12,8545500,0x107fe8420,524,highWaterMarkFrom node:internal/streams/state:15:27,0x15988e4657b0,*
code-source-info,0x107fe8420,108,421,562,C0O421C52O471C68O541C80O471C140O503C216O541C224O421C276O523C304O541C336O421C384O523,,
code-creation,JS,12,8545542,0x107fe8660,204, node:internal/per_context/primordials:334:21,0x2aa13b33f390,*
code-source-info,0x107fe8660,3,9308,9337,C0O9308,,
code-creation,JS,12,8545583,0x107fe8760,504,SafeIterator node:internal/per_context/primordials:328:16,0x2aa13b33f210,*
code-source-info,0x107fe8760,3,9173,9233,C0O9173C60O9192C68O9209C120O9207C200O9173,,
code-creation,JS,12,8545667,0x107fe89a0,1644, node:events:347:29,0x22b216ce8658,*
code-source-info,0x107fe89a0,22,10175,10815,C0O10175C56O10196C72O10244C84O10196C88O10270C100O10196C144O10286C156O10232C160O10353C168O10232C196O10244C232O10270C280O10411C288O10445C300O10411C380O10286C408O10299C444O10344C448O10370C476O10426C532O10445C536O10798C544O10445C548O10814C556O10445C660O10232C684O10472C732O10774C736O10411C748O10774C752O10411C764O10774C808O10411C848O10774C876O10445C880O10774C908O10445C912O10175,,
code-creation,JS,12,8545667,0x107fe9060,1680,EventEmitter node:events:219:22,0x22b216ce8028,*
code-source-info,0x107fe9060,22,6610,6658,C0O6610C56O6639C76O10196I0C108O10232I0C120O10196I0C164O10244I0C176O10232I0C180O10240I0C188O10232I0C216O10244I0C252O10270I0C300O10411I0C400O10286I0C428O10299I0C464O10344I0C468O10370I0C496O10426I0C552O10445I0C556O10764I0C564O10445I0C568O10764I0C576O10445I0C680O10196I0C704O10472I0C752O10774I0C756O10299I0C768O10774I0C772O10344I0C784O10774I0C828O10411I0C868O10774I0C896O10411I0C900O10774I0C928O10411I0C932O6610,F0O6639,S0x22b216ce8658
code-creation,JS,12,8545792,0x107fe9740,648, node:internal/per_context/primordials:383:32,0x2aa13b33f790,*
code-source-info,0x107fe9740,3,10910,10969,C0O10910C60O10927C68O10934C104O9209I0C112O10934C152O9209I0C192O9207I0C264O10910C344O10934C364O10927,F0O10934,S0x2aa13b33f210
code-creation,JS,12,8545958,0x107fe9a20,420,generateSocketListenerWrapper node:_http_server:1202:39,0x2858598a7f08,*
code-source-info,0x107fe9a20,124,38127,38643,C0O38127C116O38148C228O38127,,
code-creation,JS,12,8546250,0x107fe9c00,1688,Stream node:internal/streams/legacy:11:16,0x15988e45ac18,*
code-source-info,0x107fe9c00,105,145,178,C0O145C60O6639I0C80O10196I1C96O6639I0C108O10196I1C112O6639I0C124O10196I1C180O10232I1C184O10196I1C192O10232I1C220O10244I1C256O10270I1C304O10411I1C312O10344I1C324O10411I1C404O10286I1C432O10299I1C468O10344I1C472O10370I1C500O10426I1C556O10445I1C560O10472I1C568O10445I1C572O10499I1C580O10445I1C684O10764I1C708O10472I1C756O10774I1C760O10196I1C772O10774I1C776O10196I1C788O10774I1C832O10232I1C872O10774I1C900O10299I1C904O10774I1C932O10344I1C936O145,F0O159F1O6639I0,S0x22b216ce8028S0x22b216ce8658
code-creation,JS,12,8546292,0x107fea2e0,712,Readable.resume node:internal/streams/readable:1227:37,0x15988e4624d0,*
code-source-info,0x107fea2e0,106,38472,38969,C0O38472C56O38498C72O38537C84O38498C136O38526C140O38535C144O38560C160O38700C172O38711C176O38560C188O38708C196O38728C200O38801C204O38798C212O38769C216O39076I1C220O39073I1C228O39106I1C336O38912C340O38901C360O38912C368O38943C372O38940C380O38498C408O38472C456O38560C508O38932,F0O38560F1O38868,S0x22b216ce3f70S0x15988e461430
code-creation,JS,12,8546417,0x107fea600,1120,processPromiseRejections node:internal/process/promises:439:34,0x22b216cfe200,*
code-source-info,0x107feax2aa13b33f790S0x2aa13b33f210S0x2aa13b33f390S0x2aa13b33f2d0S0x2aa13b33f8e8
code-creation,JS,12,8546458,0x107feaac0,308,needFinish node:internal/streams/writable:870:20,0x15988e4701e8,*
code-source-info,0x107feaac0,110,26179,26589,C0O26179C52O26315C84O26324C100O26342C112O26377C156O26573C160O26580C164O26365C168O26402C184O26179,,
code-creation,JS,12,8546583,0x107feac40,816,flow node:internal/streams/readable:1280:14,0x15988e4614e0,*
code-source-info,0x107feac40,106,39818,39956,C0O39818C56O39852C72O39927C84O39852C112O39870C124O39900C136O39870C160O39900C184O39909C188O39937C224O20530I1C228O39870C240O1733I0C252O39870C264O39900C276O39937C284O20530I1C288O39937C316O20676I1C372O39937C404O20640I1C416O39887C420O20654I1C428O20671I1C472O20531I1C476O20671I1C484O39818C532O20530I1C536O20531I1C548O20530I1C556O39937C568O39887C600O39870C648O20676I1,F0O39870F1O39937,S0x22b216ce3f70S0x15988e44aa58
tick,0x107fa1984,8546667,0,0x0,0,0x107faf330,0x107fb9130
tick,0x107f9fd48,8547917,0,0x0,0,0x101787d44,0x107fccb30,0x107fccc44,0x107f89754,0x107fcd7dc,0x107fd2204,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252e620,8549208,0,0x0,8
tick,0x1016bbdb0,8550458,0,0x0,0,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8551042,0x107feafc0,912,callback node:internal/streams/writable:764:63,0x31c3bc41ec0,*
code-source-info,0x107feafc0,110,23211,23320,C0O23211C60O23241C68O23246C88O23248C96O23257C124O23246C140O23288C212O23257C216O23288C220O23292C280O23267C292O23228C296O23292C316O23246C324O23248C348O23257C372O23246C376O23288C404O23211C412O23288C416O23292C464O23267C476O23228C496O23211C544O23228C624O23248C692O23241,,
tick,0x19252b4fc,8551708,0,0x0,8
tick,0x19252f804,8552958,0,0x0,8
code-creation,JS,12,8553000,0x107feb3c0,984,getHighWaterMark node:internal/streams/state:33:26,0x15988e4658b8,*
code-source-info,0x107feb3c0,108,934,1342,C0O934C56O471I0C72O1067C84O471I0C144O1121C148O503I0C152O1143C160O503I0C192O1194C200O1242C212O1249C224O1328C244O988C256O421I0C268O503I0C280O541I0C328O1039C352O471I0C360O1067C368O471I0C372O1067C376O503I0C388O1067C408O1095C416O988C420O1249C432O1264C440O1249C448O934C460O1264C552O541I0C616O523I0C644O1143C672O934C724O523I0C744O471I0C756O1242C764O1264C792O523I0,F0O988,S0x15988e4657b0
tick,0x100e7febc,8554250,0,0x0,0,0x107fc8380,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x107fafbb0,8555500,0,0x0,0,0x107fb9130
tick,0x19252b25c,8556750,0,0x0,0,0x107fb9214
code-creation,JS,12,8557042,0x107feb7e0,292,get node:internal/streams/readable:1542:8,0x15988e462fa8,*
code-source-info,0x107feb7e0,106,45775,45860,C0O45775C52O45798C108O3866I0C112O3875I0C116O3849I0C120O3867I0C160O45775,F0O45835,S0x15988e466fc0
code-creation,JS,12,8557708,0x107feb940,452,hasEventListener node:events:290:26,0x22b216ce8490,*
code-source-info,0x107feb940,22,8485,8639,C0O8485C52O8564C68O8579C84O8609C96O8579C112O8609C116O8542C124O8609C152O8616C172O8579C184O8609C236O8542C280O8579C288O8609C296O8485,,
tick,0x1016618e8,8558000,0,0x0,0,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252b4fc,8559292,0,0x0,8
tick,0x107fc9c70,8560542,0,0x0,0,0x107fcbca0,0x107fd35ec,0x107fd51dc
tick,0x10119b5e8,8561792,0,0x0,0,0x107fcd990,0x107fd2204,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x100e2d17c,8563042,0,0x0,6
tick,0x19252ad6c,8564292,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x101661a44,8565542,0,0x0,0,0x107fe6724,0x107fe7be0,0x107feadd4,0x107fd8b8c,0x107fe301c
code-creation,JS,12,8566708,0x107febb40,352,set node:net:2411:6,0x15988e44bb78,*
code-source-info,0x107febb40,96,67275,67308,C0O67275C52O67302C172O67275,,
code-creation,JS,12,8566708,0x107febce0,452,getNewAsyncId node:net:197:23,0x15988e449190,*
code-source-info,0x107febce0,96,5325,5441,C0O5325C52O5338C64O5371C68O5404C92O5426C128O5338C132O5426C144O5325C156O5371C180O5426C268O5325C316O5338C320O5325C332O5338C352O5404,,
code-creation,JS,12,8566750,0x107febee0,548,resetBuffer node:internal/streams/writable:364:21,0x15988e46fe20,*
code-source-info,0x107febee0,110,11666,11810,C0O11666C52O11700C68O11743C80O11700C136O11730C140O11768C152O11730C200O11743C244O11766C252O11797C256O11794C264O11700C308O11666,,
tick,0x19252b25c,8566875,0,0x0,8
code-creation,JS,12,8567042,0x107fec140,460,listenerCount node:events:850:23,0x22b216ce9a40,*
code-source-info,0x107fec140,22,24458,25141,C0O24458C52O24499C68O24627C80O24499C108O24568C132O24899C136O24581C152O24499C244O24759C256O24627C284O24458,,
code-creation,JS,12,8567542,0x107fec340,2112,ReadableState node:internal/streams/readable:262:23,0x15988e460d80,*
code-source-info,0x107fecx15988e4658b8S0x15988e4657b0
code-creation,JS,12,8567708,0x107fecbc0,1144,writeOrBuffer node:internal/streams/writable:548:23,0x15988e46ff28,*
code-source-info,0x107fecbc
code-creation,JS,12,8567792,0x107fed080,668,set node:internal/streams/writable:262:8,0x15988e4706b8,*
code-source-info,0x107fed080,110,8377,8538,C0O8377C52O8413C68O8454C80O8413C172O8465C176O8503C200O8515C224O8514C236O8428C240O8537C252O8413C264O8454C268O8465C276O8462C284O8465C328O8503C332O8514C340O8511C356O8377C404O8428C408O8413C420O8428C428O8413C440O8503,,
tick,0x1016a4e80,8568125,0,0x0,0,0x107fdbb0c,0x107fdbcf0,0x107fdc258,0x107fe4400,0x107fdc46c
code-creation,JS,12,8568167,0x107fed360,1100,Writable.write node:internal/streams/writable:504:36,0x15988e470a98,*
code-source-info,0x107fedx15988e46fed0S0x22b216ceece8S0x22b216cd6930
code-creation,JS,12,8568208,0x107fed800,856,Socket.resume node:net:769:35,0x15988e44a9c8,*
code-source-info,0x107fed800,96,20302,20478,C0O20302C60O20317C116O20441C128O20448C140O20458C152O20465C176O20317C204O38527I0C208O20465C228O38498I0C232O38526I0C236O38711I0C240O38547I0C248O38560I0C268O38711I0C272O38560I0C284O38708I0C292O38700I0C296O38801I0C300O38798I0C308O38738I0C312O39076I2C316O39073I2C324O39106I2C432O38868I0C436O38901I0C456O38912I0C464O38943I0C468O38940I0C476O38944I0C504O20302C552O20317C556O38498I0C568O20317C576O20441C588O38560I0C640O38901I0,F0O20465F1O38560I0F2O38868I0,S0x15988e4624d0S0x22b216ce3f70S0x15988e461430
code-creation,JS,12,8568792,0x107fedba0,1736,removeListener node:events:686:28,0x22b216ce9500,*
code-source-info,0x107fedbax22b216ce8490S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x22b216cd7a88
code-creation,JS,12,8568875,0x107fee2c0,1844,_write node:internal/streams/writable:453:16,0x15988e46fed0,*
code-source-info,0x107fee2cx15988e46ff28S0x22b216ceece8S0x22b216cd6930
tick,0x107fd80cc,8569292,0,0x0,0,0x107fb4f08,0x107fabd54,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107feb190,0x107fb3fe4,0x107fc9bcc,0x107fe301c
code-creation,JS,12,8569667,0x107feea40,1816,resume_ node:internal/streams/readable:1254:17,0x15988e461488,*
code-source-info,0x107feeax22b216ce3f70S0x15988e4614e0S0x22b216ce8cf0S0x15988e44aa58
tick,0x1016b1bc4,8570542,0,0x0,0,0x107fd2ea4,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252e620,8571792,0,0x0,8
tick,0x10166ef84,8573083,0,0x0,0,0x107fd83d0,0x107fb4f08,0x107fabd54,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107feb190,0x107fb3fe4,0x107fc9bcc,0x107fe301c
tick,0x1016d1360,8574333,0,0x0,0,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252f804,8575583,0,0x0,8
tick,0x192528738,8576833,0,0x0,0,0x107fd9d20,0x107fc8890,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x100b9e6f8,8578083,0,0x0,0,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107faba34,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x10174cbd0,8579333,0,0x0,0,0x107fcf800,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x107fabc44,8580583,0,0x0,0,0x107fd949c,0x107fe4400,0x107fd9a38,0x107feb190,0x107fb3fe4,0x107fc9bcc,0x107fe301c
tick,0x1016ac020,8581875,0,0x0,0,0x107fabd54,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107feb190,0x107fb3fe4,0x107fc9bcc,0x107fe301c
code-creation,JS,12,8582458,0x107fef1e0,296,get node:internal/streams/writable:1069:8,0x15988e471130,*
code-source-info,0x107fef1e0,110,31340,31426,C0O31340C52O31370C96O31420C108O31404C128O31420C156O31340,,
code-creation,JS,12,8582583,0x107fef340,228,isTraceHTTPEnabled node:internal/http:40:28,0x28585989ff18,*
code-source-info,0x107fef340,123,717,752,C0O717C48O742C68O746C104O750C112O717,,
code-creation,JS,12,8582708,0x107fef460,304,checkInvalidHeaderChar node:_http_common:221:32,0x2858598953a8,*
code-source-info,0x107fef460,119,6951,6996,C0O6951C52O6984C120O6951,,
code-creation,JS,12,8583000,0x107fef5e0,460,Writable.uncork node:internal/streams/writable:520:37,0x15988e470bb8,*
code-source-info,0x107fef5e0,110,15770,16000,C0O15770C52O15796C84O15825C128O15839C132O15893C168O15839C184O15851C192O15905C196O15893C200O15904C208O15901C216O15935C232O15944C240O15969C292O15770,,
tick,0x1923734b4,8583125,0,0x0,5,0x107fb3b04,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8583167,0x107fef7e0,424,set node:_http_outgoing:250:16,0x28585989e028,*
code-source-info,0x107fef7e0,122,7547,7685,C0O7547C52O7583C108O7577C112O7607C120O7675C152O7607C196O7610C212O7631C228O7661C232O7547,,
code-creation,JS,12,8583458,0x107fef9c0,1620,_send node:_http_outgoing:398:49,0x28585989e3e0,*
code-source-info,0x107fef9cx28585989d690S0x15988e470a98S0x15988e470ec8S0x15988e470500S0x15988e459fa0S0x15988e466fc0
code-creation,JS,12,8583625,0x107ff0060,1764,Readable.removeListener node:internal/streams/readable:1159:45,0x15988e4623a0,*
code-source-info,0x107ffx22b216ce9500S0x22b216ce8490S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x22b216cd7a88
code-creation,JS,12,8583750,0x107ff07a0,800,clearIncoming node:_http_server:967:23,0x2858598a7c48,*
code-source-info,0x107ff07a0,124,31211,31509,C0O31211C56O31256C64O31262C88O31349C100O31370C112O31379C124O31221C128O31402C140O31472C160O31256C212O31262C236O45798I0C264O45820I0C276O45835I0C288O45854I0C300O31349C304O45798I0C316O3867I1C328O31370C352O31379C368O3866I1C420O45798I0C424O3866I1C428O3875I1C432O31349C436O31472C500O31211C508O31441C532O31211C580O31221C584O31472C596O31221C604O31441C616O31256C624O31349C628O3867I1C640O31349C648O3849I1,F0O31402F1O45835I0,S0x15988e462fa8S0x15988e466fc0
code-creation,JS,12,8583750,0x107ff0b00,1020,socketListenerWrap node:_http_server:1203:37,0x31c3bc70e40,*
code-source-info,0x107ff0b00,124,38182,38640,C0O38182C60O38209C72O38220C84O38213C100O38220C136O38338C148O38229C172O38246C252O38338C292O38182C316O38213C352O38338C380O38551C480O38590C500O38354C512O38368C532O38182C580O38229C600O38551C616O38229C716O38338C752O38209,,
code-creation,JS,12,8584250,0x107ff0f60,1120,emitCloseNT node:internal/streams/destroy:133:21,0x15988e458cb8,*
code-source-info,0x107ff0f60,103,2523,2823,C0O2523C60O2549C76O2616C88O2549C116O2582C120O2624C128O2582C160O2601C168O2663C172O2674C196O2696C220O2714C232O2601C236O2713C248O2722C260O2616C288O2627C296O2624C316O2663C320O2674C328O2671C336O2803C340O2713C368O2722C372O2582C424O2803C440O13625I0C452O2758C460O13625I0C496O13702I0C500O14988I0C528O13766I0C540O13842I0C544O15047I0C560O13922I0C568O15111I0C676O15265I0C688O15318I0C764O13625I0C776O2523C824O2601C828O2736C840O2601C848O2724C860O2663C868O13625I0,F0O2803,S0x22b216ce8cf0
tick,0x100f12a8c,8584417,0,0x0,1
new,MemoryChunk,0x1690308c0000,262144
code-creation,JS,12,8585125,0x107ff1420,2076,finishMaybe node:internal/streams/writable:928:21,0x15988e4702f0,*
code-source-info,0x107ffx15988e470298S0x15988e4701e8S0x15988e44a200S0x15988e44bb20S0x22b216ce3f70
tick,0x1009c6a40,8585667,0,0x0,8
code-creation,JS,12,8586250,0x107ff1ce0,2952,writevGeneric node:internal/stream_base_commons:121:23,0x3564d12be1e8,*
code-source-info,0x107ff1ce0,115,2911,3528,C0O2911C56O2964C88O2708I0C132O2739I0C152O3168C164O2739I0C184O3219C192O2739I0C220O3329C228O2739I0C272O2766I0C280O2797I0C308O2818I0C380O2836I0C408O2859I0C444O3006C480O3464C532O3034C536O3477C548O2708I0C560O3100C568O3183C572O3190C580O3168C592O2797I0C596O3168C620O2859I0C636O3168C664O2739I0C672O3168C680O2739I0C696O3168C716O2797I0C724O3168C756O2818I0C764O3265C772O3298C800O3290C836O3337C840O3329C864O3201C868O3813I1C884O3861I1C892O3235C896O3265C900O3860I1C904O3841I1C908O3265C912O3298C936O3320C940O3290C948O3918I1C956O3290C972O3337C976O3324C980O3329C988O3992I1C996O3329C1012O3201C1016O3992I1C1024O3382C1080O3445C1088O3168C1104O3464C1208O3235C1216O3464C1316O3812I1C1336O3795I1C1364O3860I1C1368O3265C1384O3841I1C1388O3812I1C1392O3464C1400O3992I1C1404O3893I1C1408O3992I1C1424O2911C1432O4027I1C1460O3201C1520O2911C1568O2739I0C1632O3034C1636O2708I0C1648O3034C1656O2708I0C1668O3464C1676O3168C1856O3201C2108O3464,F0O2944F1O3477,S0x3564d12be190S0x3564d12be298
code-creation,JS,12,8586750,0x107ff28e0,488,Socket.read node:net:778:33,0x15988e44aa58,*
code-source-info,0x107ff28e0,96,20514,20692,C0O20514C52O20530C108O20654C120O20661C132O20671C144O20676C168O20530C196O20676C296O20514C344O20530C368O20654,,
tick,0x19252ad6c,8586917,0,0x0,0,0x107ff2118,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x107fd6b3c,8588208,0,0x0,0
tick,0x1016bc958,8589458,0,0x0,0,0x107fb4470,0x107fb8a38,0x107fe4400,0x107fb9428
tick,0x19252ad6c,8590708,0,0x0,0,0x107ff2118,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8591000,0x107ff2b00,2044,matchKnownFields node:_http_incoming:276:26,0x2858598986e8,*
code-source-info,0x107ff2b
tick,0x192528738,8591958,0,0x0,0,0x107fd9d20,0x107fc8890,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252ad6c,8593208,0,0x0,0,0x107ff2118,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x1016b28c0,8594458,0,0x0,0,0x107fc81e8,0x107fac14c,0x107fac904,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252f804,8595750,0,0x0,8
code-creation,JS,12,8596208,0x107ff3340,1388,_destroy node:internal/streams/destroy:90:18,0x15988e458be0,*
code-source-info,0x107ffx285859898e98S0x15988e459fa0S0x15988e466fc0S0x15988e462fa8
code-creation,JS,12,8596917,0x107ff3920,1968,destroy node:internal/streams/destroy:49:17,0x15988e458b60,*
code-source-info,0x107ffx15988e458be0S0x15988e458b08S0x285859898e98S0x15988e459fa0S0x15988e466fc0S0x15988e462fa8
tick,0x19252b4fc,8597000,0,0x0,8
tick,0x192528738,8598250,0,0x0,0,0x107fd9d20,0x107fc8890,0x107ff3e38,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252b4fc,8599542,0,0x0,8
tick,0x19252e620,8600875,0,0x0,8
tick,0x19252e620,8602083,0,0x0,8
tick,0x1009f162c,8603208,0,0x0,0,0x107ff17c8,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107feb190,0x107fb3fe4,0x107fc9bcc,0x107fe301c
tick,0x19252b25c,8604417,0,0x0,8
tick,0x19252e620,8605583,0,0x0,8
tick,0x19259e800,8606792,0,0x0,8
tick,0x100ccc6d0,8608042,0,0x0,0,0x107fb5f34,0x107fb4470,0x107fb8a38,0x107fe4400,0x107fb9428
tick,0x1016bc9b0,8609333,0,0x0,0,0x107fb9130
tick,0x19252b4fc,8610625,0,0x0,8
tick,0x19252ad6c,8611917,0,0x0,0,0x107ff2118,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x1016ac020,8613167,0,0x0,0,0x107fe7be0,0x107feeb08,0x107fe2ff0
tick,0x1016617b0,8614500,0,0x0,0,0x107fdc258,0x107fe4400,0x107fdc46c
code-creation,JS,12,8615333,0x107ff4140,2980,afterWrite node:internal/streams/writable:699:20,0x15988e4700e0,*
code-source-info,0x107ff4140,110,21406,21895,C0O21406C60O21443C92O21454C96O21511C104O21454C108O21451C116O21514C144O21689C172O21537C184O21700C212O21715C220O21723C268O23241I1C272O21723C288O23246I1C292O21674C300O23257I1C328O23246I1C336O21823C344O23288I1C368O21443C376O23288I1C380O23292I1C444O23267I1C456O23228I1C460O27771I0C476O23246I1C484O27801I0C508O23257I1C532O23288I1C536O27876I0C548O23288I1C564O27891I0C568O27911I0C572O23288I1C576O23292I1C624O23267I1C636O23228I1C640O23211I1C668O21674C672O23246I1C680O21750C696O21759C700O23267I1C704O23319I1C752O26324I3C764O27243I2C776O26573I3C780O26580I3C784O27263I2C788O27243I2C800O27273I2C808O27243I2C864O27361I2C908O27458I2C912O27442I2C920O27471I2C936O27486I2C944O27514I2C1004O14589I4C1008O27514I2C1048O27587I2C1072O14589I4C1076O27634I2C1088O27668I2C1100O14607I4C1108O27273I2C1116O27434I2C1120O67256I5C1144O26316I3C1148O26334I3C1172O26354I3C1196O26342I3C1208O14716I4C1212O26377I3C1224O26402I3C1236O14745I4C1244O26412I3C1256O14745I4C1268O14805I4C1316O14842I4C1360O14879I4C1380O67256I7C1404O14872I4C1452O14903I4C1472O14928I4C1492O67256I8C1516O14936I4C1584O14962I4C1592O14716I4C1620O14736I4C1624O14745I4C1628O27628I2C1636O27634I2C1664O27645I2C1672O27642I2C1704O14872I4C1708O26424I3C1712O27866I0C1732O27876I0C1736O14975I4C1740O15026I4C1744O15047I4C1760O15072I4C1764O21406C1812O23228I1C1892O21674C1944O27243I2C1992O14589I4C1996O27748I2C2008O14589I4C2016O27645I2C2028O14607I4C2080O27587I2C2084O27514I2C2084O14716I4C2088O26390I3C2100O14716I4C2108O26365I3C2120O26315I3C2128O14745I4C2180O27514I2C2188O27587I2C2200O14962I4C2208O14928I4C2212O23248I1C2276O23246I1C2280O23257I1C2280O23241I1C2324O23288I1C2328O23280I1,F0O21856F1O21723F2O27826I0F3O27801I0F4O27514I2F5O14716I4F6O14745I4F5O14879I4F5O14928I4,S0x15988e4702f0S0x31c3bc41ec0S0x15988e470298S0x15988e4701e8S0x15988e44a200S0x15988e44bb20S0x22b216ce3f70
tick,0x107fefa18,8615750,0,0x0,0,0x107fcf79c,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x1016d7c60,8617000,0,0x0,0,0x107fd0acc,0x107fcee80,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x100e912b8,8618333,0,0x0,1
tick,0x1016af5e0,8619625,0,0x0,0,0x107fb9130
tick,0x100cd3cbc,8620875,0,0x0,5,0x107ff2118,0x107fc9560,0x107fd1a74,0x107fd1e68,0x107fb2f38,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8621167,0x107ff4dc0,6096,clearBuffer node:internal/streams/writable:744:21,0x15988e470190,*
code-source-info,0x107ff4dcx15988e46fe20S0x15988e46ff80S0x15988e44b1a0S0x15988e44b0d8S0x15988e44bb20S0x3564d12be1e8S0x15988e44a1a8S0x3564d12be298S0x3564d12be190
tick,0x19252ad8c,8622125,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x19252e620,8623417,0,0x0,8
tick,0x19252b4fc,8624625,0,0x0,8
tick,0x19252e620,8626000,0,0x0,8
tick,0x19252ad6c,8627208,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8628250,0x107ff6660,2572,onDestroy node:internal/streams/destroy:93:21,0x31c3bc46160,*
code-source-info,0x107ffx22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x15988e458b08S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0
tick,0x1016ac534,8628458,0,0x0,0,0x107fb4470,0x107fb8a38,0x107fe4400,0x107fb9428
tick,0x19252ad6c,8629750,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x1925708bc,8631083,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
code-creation,JS,12,8631750,0x107ff70e0,4304,_storeHeader node:_http_outgoing:454:22,0x28585989d6e8,*
code-source-info,0x107ff70e0,122,13289,18170,C0O13289C60O13606C72O13646C76O13637C88O13686C136O13606C140O13679C192O13587C204O13773C220O13645C256O13637C280O13819C288O14575C292O14594C316O13686C324O14627C336O13686C356O15550C372O13686C444O15837C452O13679C460O15871C468O13679C476O15871C484O15935C492O13726C520O13773C552O13783C556O13773C564O13783C576O3485I3C604O17862C624O18797I1C632O17896C636O18797I1C644O17911C660O19420I2C680O19427I2C720O19435I2C764O19420I2C796O19435I2C808O19427I2C828O19435I2C884O16834C900O17862C908O19611I4C924O17969C940O19628I4C948O18194I1C964O19628I4C992O18194I1C1004O18234I1C1016O19628I4C1024O18252I1C1040O19628I4C1072O18252I1C1080O18488I1C1092O19628I4C1100O18488I1C1116O19628I4C1148O18793I1C1156O18797I1C1168O19628I4C1176O18797I1C1192O19628I4C1224O19236I1C1244O19628I4C1252O19307I2C1268O19628I4C1300O19347I2C1308O19365I2C1320O19628I4C1328O19365I2C1344O19628I4C1376O19400I2C1384O19420I2C1396O19628I4C1404O19427I2C1420O19628I4C1452O19435I2C1504O13741C1508O13668C1512O3492I3C1544O18169C1548O19447I2C1560O19485I2C1564O19400I2C1568O3468I3C1572O3485I3C1576O3492I3C1584O14575C1612O19577I4C1624O19611I4C1648O19628I4C1672O14575C1676O19628I4C1700O314I0C1708O19628I4C1720O314I0C1728O19908I4C1732O20321I4C1740O20347I4C1748O19550I4C1760O19611I4C1772O13459C1784O314I0C1788O13459C1800O13686C1812O14625C1860O14637C1904O14625C1928O14637C2012O13679C2020O15228C2024O16517C2044O17978C2068O13587C2080O15228C2084O13686C2096O13773C2108O19447I2C2112O15550C2116O19447I2C2124O13741C2136O14528C2148O15967C2160O16576C2172O15550C2176O18145C2188O20321I4C2200O13783C2204O15837C2208O3485I3C2216O18797I1C2228O19420I2C2240O19435I2C2252O19577I4C2264O15837C2268O19628I4C2280O15837C2292O15887C2296O17978C2304O19908I4C2312O13289C2336O13686C2348O15887C2352O13668C2444O15935C2476O16503C2484O16517C2628O16614C2712O16756C2800O16804C2804O17978C2864O17969C2888O18007C2944O13289C2992O13606C3052O13686C3092O13679C3148O18797I1C3196O17969C3228O13668C3316O14575C3320O19628I4C3332O14575C3340O19628I4C3352O314I0C3356O13686C3368O314I0C3376O13459C3388O20081I4C3396O314I0C3452O14637C3456O15228C3460O3485I3C3472O15228C3480O13679C3492O15550C3496O13637C3508O15550C3516O19691I4C3528O15837C3532O16614C3544O15837C3552O14625C3564O15887C3600O15935C3644O16517C3724O16614C3760O16756,F0O14627F1O13741F2O19236I1F3O18488I1F4O19447I2,S0x28585989fdb8S0x28585989d740S0x28585989d798S0x28585989d5e0S0x28585989d7f0
code-creation,JS,12,8631875,0x107ff8260,4720,Socket._destroy node:net:806:37,0x15988e44ab80,*
code-source-info,0x107ffx22b216ce3f70S0x15988e44bb20S0x15988e44bb78S0x15988e44b940S0x31c3bc46160S0x15988e449500S0x2ddc31ec1aa0S0x15988e458b08
tick,0x19252b4fc,8632333,0,0x0,8
tick,0x19252e620,8633583,0,0x0,8
tick,0x10170369c,8634875,0,0x0,0,0x107fae8c4,0x107fb9130
tick,0x10170369c,8636125,0,0x0,0,0x107fae8c4,0x107fb9130
tick,0x100e85d38,8637375,0,0x0,0,0x107fb6014,0x107fb4470,0x107fb8a38,0x107fe4400,0x107fb9428
code-creation,JS,12,8638042,0x107ff95c0,2344,cleanParser node:_http_common:225:21,0x285859895400,*
code-source-info,0x107ff95c0,119,7018,7380,C0O7018C56O7031C68O7175C76O7031C112O7047C128O7236C140O7047C160O7265C168O7277C176O7047C304O7067C308O7047C316O7067C380O7089C460O7115C620O7141C624O7229C632O7141C688O7173C692O7277C700O7173C764O7219C784O7248C792O7304C804O7248C916O7277C920O7371C928O7277C1028O7304C1032O7047C1040O7304C1252O7333C1320O7371C1428O7018C1476O7031C1496O7047C1508O7304,,
tick,0x10166e034,8638708,0,0x0,0,0x107fe301c
code-creation,JS,12,8639250,0x107ff9f40,1884,WritableState node:internal/streams/writable:304:23,0x15988e46fdc8,*
code-source-info,0x107ff9fx15988e46fe20S0x15988e4658b8S0x15988e4657b0
code-creation,JS,12,8640292,0x107ffa6e0,932,undestroy node:internal/streams/destroy:173:19,0x15988e458d68,*
code-source-info,0x107ffa6ex15988e4731b8S0x15988e470500S0x15988e4704a8S0x15988e467018
code-creation,JS,12,8640458,0x107ffaae0,416,set node:internal/streams/readable:186:8,0x15988e4618d8,*
code-source-info,0x107ffaae0,106,6264,6427,C0O6264C52O6306C60O6392C96O6404C108O6403C120O6280C124O6426C136O6400C152O6392C184O6403C192O6400C244O6264C292O6280C316O6392C328O6321,,
code-creation,JS,12,8640625,0x107ffacc0,416,set node:internal/streams/writable:217:8,0x15988e4704a8,*
code-source-info,0x107ffacc0,110,7125,7288,C0O7125C52O7167C60O7253C96O7265C108O7264C120O7141C124O7287C136O7261C152O7253C184O7264C192O7261C244O7125C292O7141C316O7253C328O7182,,
code-creation,JS,12,8640750,0x107ffaea0,400,get node:internal/streams/writable:131:8,0x15988e473160,*
code-source-info,0x107ffaea0,110,3930,3971,C0O3930C60O3935C72O3956C84O3947C132O3956C148O3930C244O3948,,
tick,0x1017036b8,8640917,0,0x0,0,0x107fd57e8,0x107fd7984
new,MemoryChunk,0x108000000,262144
code-creation,JS,12,8641167,0x108008020,4132,Duplex node:internal/streams/duplex:64:16,0x15988e459ef0,*
code-source-info,0x108008020,104,2330,4278,C0O2330C60O2386C80O2355C88O2410C96O2355C100O2410C148O2871C156O2410C188O2440C196O2462C200O2488C204O2511C208O2533C212O2554C216O2574C220O2599C224O2423C260O2858C308O2856C392O3247C468O9546I1C484O3678C500O3668C512O9612I1C540O3764C548O3797C560O9685I1C584O9949I1C592O3878C596O3936C620O3964C644O3978C652O9949I1C656O3978C668O4050C680O471I5C692O4131C704O471I5C756O2330C760O503I5C764O2440C772O503I5C808O541I5C876O1039I4C900O2423C904O1067I4C912O2856C916O1067I4C920O2929C932O1067I4C944O3021C952O1095I4C960O3021C964O1249I4C976O9947I1C1004O4105C1008O9947I1C1036O10095I1C1060O159I0C1072O156I0C1076O10237I1C1080O9384I1C1088O10263I1C1092O10274I1C1100O10271I1C1108O10386I1C1112O9548I1C1120O10807I1C1124O10818I1C1132O10815I1C1140O11215I1C1144O11300I1C1168O11385I1C1200O9584I1C1208O11385I1C1280O11375I1C1296O11488I1C1300O11700I3C1304O11730I3C1308O11766I3C1312O11797I3C1316O11794I3C1324O11638I1C1348O2929C1396O3031C1412O3021C1424O10036I1C1444O3021C1468O3073C1484O10095I1C1492O3247C1496O10120I1C1504O6639I2C1520O10196I6C1524O10271I1C1536O10196I6C1540O10386I1C1552O10196I6C1572O10409I1C1580O10232I6C1584O10680I1C1592O10232I6C1616O10244I6C1648O10270I6C1696O10411I6C1704O11215I1C1716O10411I6C1796O10286I6C1828O10299I6C1864O10344I6C1868O10370I6C1896O10426I6C1952O10445I6C1956O9949I1C1964O10445I6C1968O9947I1C1976O10445I6C2080O10815I1C2092O11215I1C2104O10472I6C2144O10774I6C2148O11375I1C2160O10774I6C2164O11488I1C2176O10774I6C2220O4105C2232O6634I2C2272O10774I6C2300O4105C2320O10774I6C2348O4105C2364O11684I3C2368O11700I3C2372O11730I3C2376O11743I3C2388O4072C2392O11754I3C2396O2330C2444O2440C2452O2355C2488O2554C2516O2410C2568O9949I1C2572O4065C2584O9949I1C2592O3978C2604O3878C2616O9947I1C2632O11385I1,F0O4072F1O2931F2O159I0F3O11496I1F4O9963I1F5O988I4F6O6639I2,S0x15988e45ac18S0x15988e46fdc8S0x22b216ce8028S0x15988e46fe20S0x15988e4658b8S0x15988e4657b0S0x22b216ce8658
code-creation,JS,12,8641458,0x1080090a0,532,_onceWrap node:events:643:19,0x22b216ce9248,*
code-source-info,0x1080090a0,22,18770,18993,C0O18770C52O18813C64O18904C72O18813C128O18837C136O18848C152O18856C168O18862C184O18904C244O18936C296O18963C300O18936C344O18770C392O18813,,
tick,0x19252e620,8641500,0,0x0,8
code-creation,JS,12,8641625,0x108009300,1480,once node:events:657:44,0x22b216ce9380,*
code-source-info,0x108009300,22,19197,19310,C0O19197C60O38182I0C68O13130I4C84O38209I0C92O19251C128O18813I1C144O38246I0C152O18813I1C204O18837I1C212O18848I1C216O18856I1C232O18862I1C236O18904I1C296O18936I1C348O18963I1C352O19251C392O38209I0C400O18904I1C420O38213I0C448O38220I0C488O18936I1C500O38229I0C524O38246I0C608O38338I0C640O14764I3C664O14822I3C700O38338I0C716O13109I4C728O38551I0C752O13167I4C764O13173I4C816O38590I0C836O38354I0C848O38368I0C868O14729I3C872O18904I1C876O19197C924O18813I1C960O38229I0C980O8146I2C996O38229I0C1096O38338I0C1100O13167I4C1112O38338I0C1132O38209I0C1192O18813I1,F0O19251F1O19260F2O19218F3O8146I2F4O14764I3,S0x31c3bc70e40S0x22b216ce9248S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810
code-creation,JS,12,8641792,0x108009920,2344,initSocketHandle node:net:322:26,0x15988e4494a8,*
code-source-info,0xx15988e44bb20S0x15988e449190S0x15988e458d68S0x15988e4731b8S0x15988e470500S0x15988e4704a8
code-creation,JS,12,8642167,0x10800a2e0,592,defaultTriggerAsyncIdScope node:internal/async_hooks:455:36,0x22b216cd2578,*
code-source-info,0x10800a2e0,11,15636,16094,C0O15636C56O15673C72O15636C84O15857C92O15636C96O15873C100O15872C120O15984C128O15940C132O15984C144O15940C176O15984C260O16061C288O15636C348O16061C388O15984C392O15636C396O15724C424O16061C428O15636,,
tick,0x107fe2ad0,8642667,0,0x0,0
code-creation,JS,12,8642833,0x10800a580,1964,onconnection node:net:2207:22,0x15988e44a048,*
code-source-info,0x10800ax22b216ce3f70S0x2ddc31effa48S0x22b216ce8cf0
code-creation,JS,12,8643708,0x10800ada0,5228,Socket node:net:366:16,0x15988e449558,*
code-source-info,0x10800adax15988e44bb78S0x15988e44bb20S0x15988e44aa58S0x15988e4494a8S0x15988e449190S0x15988e458d68S0x15988e4731b8S0x15988e470500
tick,0x19252ad6c,8643917,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x100f16348,8645208,0,0x0,1
tick,0x192528738,8646500,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
code-creation,JS,12,8646750,0x10800c300,580,free node:internal/freelist:21:7,0x285859896e80,*
code-source-info,0x10800c300,120,325,445,C0O325C56O346C88O351C108O365C112O358C120O351C128O383C172O388C248O325C296O388C384O325,,
tick,0x19252f804,8647875,0,0x0,8
tick,0x19252b4fc,8649083,0,0x0,8
tick,0x192528738,8650375,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252e620,8651625,0,0x0,8
tick,0x19252e620,8652833,0,0x0,8
tick,0x19252b25c,8654125,0,0x0,0,0x10800a800
tick,0x1016b7100,8655542,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252ad6c,8656708,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x101194d00,8657958,0,0x0,0,0x107fcd990,0x107fd2204,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x100ec37c0,8659250,0,0x0,1
tick,0x192527ad0,8660542,0,0x0,8
tick,0x107fe3c44,8661792,0,0x0,0,0x107fea424,0x107fd7dc8,0x107fd943c,0x107fe4400,0x107fd9a38,0x107ff43b0,0x107fc9bcc,0x107fe301c
tick,0x19252ad6c,8662958,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x107fe3ef8,8664208,0,0x0,0,0x107fba9ac,0x107ff5a18,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x10800a730,8665458,0,0x0,0
tick,0x19252e620,8666750,0,0x0,8
code-creation,JS,12,8666750,0x10800c580,380,getObserverType node:internal/perf/observe:134:25,0x285859883658,*
code-source-info,0x10800c580,116,2887,3203,C0O2887C52O2898C108O2929C132O2986C196O3027C204O3045C228O2887,,
tick,0x192527ad0,8668000,0,0x0,8
tick,0x19252ad6c,8669250,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x192528738,8670500,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
code-creation,JS,12,8671667,0x10800c740,452,alloc node:internal/freelist:15:8,0x285859896e28,*
code-source-info,0x10800c740,120,203,317,C0O203C56O224C88O229C108O236C112O272C116O290C120O272C152O313C184O258C236O313C244O258C256O203C312O258,,
code-creation,JS,12,8671708,0x10800c940,188,isLenient node:_http_common:248:19,0x2858598954b0,*
code-source-info,0x10800c940,119,7623,7790,C0O7623C48O7630C80O7623C132O7630,,
tick,0x19252b25c,8671792,0,0x0,8
code-creation,JS,12,8671875,0x10800ca40,604,connectionListener node:_http_server:660:28,0x2858598a7720,*
code-source-info,0x10800ca40,124,21496,21614,C0O21496C60O14662I1C100O21509C116O14737I1C148O15872I0C168O15940I0C180O15984I0C272O16061I0C412O21496,F0O21509F1O21541,S0x22b216cd2578S0x22b216cd2338
code-creation,JS,12,8672000,0x10800cd00,560,HTTPServerAsyncResource node:_http_server:190:14,0x2858598a7fe0,*
code-source-info,0x10800cd00,124,7250,7318,C0O7250C52O7281C128O7305C192O7250,,
code-creation,JS,12,8672083,0x10800cf60,372,afterWriteTick node:internal/streams/writable:693:24,0x15988e470088,*
code-source-info,0x10800cf60,110,21221,21385,C0O21221C52O21224C84O21232C88O21239C92O21246C96O21262C116O21273C124O21270C132O21329C140O21346C228O21221,,
code-creation,JS,12,8672375,0x10800d120,808,onSocketResume node:_http_server:1167:24,0x2858598a7e00,*
code-source-info,0x10800d120,124,37206,37705,C0O37206C52O37544C88O37626C112O37704C124O37206C136O37601C148O37544C152O67257I0C164O67256I0C176O67240I1C180O67256I0C204O67266I1C220O37544C232O37618C244O37206C268O37601C272O67256I0C296O37618C316O67256I1C340O37626C504O37206C552O37544C556O37601C568O37544C576O67257I0C588O37601C624O37626,F0O37601F0O37618,S0x15988e44bb20
tick,0x1016d7c60,8672917,0,0x0,0,0x107ff5a18,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x107fd51dc
tick,0x101661604,8674167,0,0x0,0
code-creation,JS,12,8674542,0x10800d4a0,5756,connectionListenerInternal node:_http_server:666:36,0x2858598a7778,*
code-source-info,0x10800d4ax22b216ce3f70S0x2858598a7fe0S0x2858598a7f08S0x15988e44bb20S0x2858598954b0S0x285859896e28
code-creation,JS,12,8674708,0x10800ec00,236,get node:internal/streams/readable:1455:18,0x15988e462a00,*
code-source-info,0x10800ec00,106,44040,44098,C0O44040C52O44063C84O44078C88O44092C116O44040,,
code-creation,JS,12,8674750,0x10800ed20,2304,onwrite node:internal/streams/writable:615:17,0x15988e470030,*
code-source-info,0x10800edx22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0S0x15988e4706b8
code-creation,JS,12,8674917,0x10800f680,2836,IncomingMessage node:_http_incoming:50:25,0x285859898638,*
code-source-info,0x10800fx15988e462a00S0x15988e460dd8S0x15988e45ac18S0x15988e460d80S0x15988e4658b8S0x15988e4657b0S0x15988e467018
tick,0x100f5dba4,8675417,0,0x0,5,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x107fdd4d8,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x19252b4fc,8676708,0,0x0,8
code-creation,JS,12,8676792,0x1080101e0,5928,parserOnHeadersComplete node:_http_common:71:33,0x285859895198,*
code-source-info,0x1080101ex285859898690S0x285859898638S0x15988e462a00S0x15988e460dd8S0x15988e45ac18S0x22b216ce8028S0x22b216ce8658S0x15988e467018
code-creation,JS,12,8677000,0x1080119a0,3252,Readable node:internal/streams/readable:320:18,0x15988e460dd8,*
code-source-info,0x1080119ax15988e45ac18S0x15988e460d80S0x15988e4658b8S0x15988e4657b0S0x22b216ce8028S0x22b216ce8658
tick,0x101655794,8677917,0,0x0,8
tick,0x19252ad6c,8679167,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x100ba3ce8,8680417,0,0x0,0,0x107ff17c8,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107ff43b0,0x10800d01c,0x107fe301c
code-creation,JS,12,8681333,0x1080126a0,488,wrappedFn node:internal/errors:535:21,0x22b216cc9610,*
code-source-info,0x1080126a0,7,14729,14917,C0O14729C60O14757C68O14729C80O14764C88O14729C92O14757C100O14822C112O14757C116O14764C164O14729C240O14757C296O14793C304O14822C316O14757C336O14822C380O14729C384O14793,,
tick,0x100cd36dc,8681667,0,0x0,0,0x107fdd92c,0x107fcee1c,0x107fd260c,0x107fd2240,0x107fe4400,0x107fd41cc,0x108010e90
code-creation,JS,12,8682542,0x1080128e0,2044,onceWrapper node:events:633:21,0x22b216ce9178,*
code-source-info,0x1080128ex15988e4623a0S0x22b216ce9500S0x22b216ce8490S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x22b216cd7a88
tick,0x19252ad6c,8682833,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252b4fc,8684083,0,0x0,8
tick,0x1009b9d4c,8685333,0,0x0,6
tick,0x10166ab80,8686583,0,0x0,0
tick,0x100e22bc4,8687875,0,0x0,5
tick,0x192528738,8689125,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x108012d6c,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x1017db490,8690375,0,0x0,0,0xbd5782682d1,0x107fd658c,0x107fd6abc
tick,0x19252b4fc,8691625,0,0x0,8
code-creation,JS,12,8692542,0x108013140,764,byteLength node:buffer:770:20,0x22b216cf07a8,*
code-source-info,0x108013140,24,23098,23805,C0O23098C60O23159C68O23121C76O23389C104O23431C108O23457C152O23475C160O23482C172O23803C184O23389C196O23482C220O23431C224O23457C236O23098C252O23482C496O23098C544O23431C568O23098C580O23475C588O23482,,
tick,0x107fe2260,8692875,0,0x0,0,0x107fe39b4,0x107fed9a4,0x107fe4ae8,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x101bdd694,8694125,0,0x0,8
tick,0x19252ad6c,8695417,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x107fd2240,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x1925a17b0,8696667,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101658a48,8697917,0,0x0,8
tick,0x19252b4fc,8699167,0,0x0,8
tick,0x19252b4fc,8700417,0,0x0,8
code-creation,JS,12,8700917,0x108013480,496,hasObserver node:internal/perf/observe:570:21,0x285859883a20,*
code-source-info,0x108013480,116,15904,16003,C0O15904C52O2898I0C84O15982C96O2887I0C108O2898I0C192O15982C228O2986I0C232O3045I0C284O15904C332O15982,F0O15936,S0x285859883658
tick,0x19252b25c,8701750,0,0x0,8
code-creation,JS,12,8702125,0x1080136a0,2616,OutgoingMessage node:_http_outgoing:105:25,0x28585989d638,*
code-source-info,0x1080136ax15988e45ac18S0x22b216ce8028S0x22b216ce8658
code-creation,JS,12,8702542,0x108014120,716,_flush node:_http_outgoing:1188:51,0x28585989eb68,*
code-source-info,0x108014120,122,34487,34895,C0O34487C56O34513C92O34537C132O29888I1C136O34674C148O34795C172O34811C188O30147I1C204O34674C216O30163I1C256O7378I2C260O7387I2C264O35092I0C288O29862I1C304O29888I1C316O30147I1C344O34999I0C348O35010I0C368O35037I0C372O30195I1C376O34674C380O30207I1C392O30217I1C412O30215I1C424O30226I1C432O34674C436O30224I1C448O30237I1C460O30163I1C464O7361I2C468O34487C516O30147I1C520O34960I0C532O30147I1C540O34537C552O34674C556O30256I1C568O34674C576O30239I1,F0O34638F1O34537F2O30163I1,S0x28585989ebc0S0x15988e470ec8S0x15988e470500
code-creation,JS,12,8702875,0x108014420,2324,assignSocket node:_http_server:288:62,0x2858598a8090,*
code-source-info,0x108014420,124,10264,10498,C0O10264C60O10288C88O10372C140O10389C188O38209I2C196O10264C216O38213I2C236O38220I2C276O34514I0C288O38229I2C312O38246I2C392O38338I2C424O34795I0C436O34811I0C448O34810I0C472O34513I0C484O38338I2C488O34638I0C500O13625I1C512O10439C568O10456C588O13625I1C600O13981I1C608O13625I1C680O13702I1C684O15318I1C700O14988I1C728O15111I1C740O38182I2C744O15047I1C760O38209I2C768O15111I1C876O38338I2C888O38368I2C900O15318I1C964O38636I2C968O10487C988O34513I0C996O34999I3C1008O35010I3C1020O34537I0C1036O29888I4C1040O35010I3C1052O29862I4C1064O29888I4C1084O30147I4C1096O30163I4C1108O30196I4C1120O30163I4C1160O7378I5C1164O7387I5C1168O30226I4C1196O30239I4C1232O30237I4C1272O34999I3C1276O35010I3C1296O35037I3C1300O7366I5C1304O34674I0C1308O7379I5C1324O7378I5C1336O7389I5C1356O34674I0C1360O7403I5C1384O13625I1C1392O38354I2C1404O38368I2C1424O10439C1428O10264C1476O38229I2C1496O34513I0C1512O38229I2C1612O38338I2C1616O13702I1C1628O38338I2C1636O13625I1C1676O30147I4C1680O30207I4C1692O30147I4C1700O30196I4C1712O34674I0C1716O13625I1C1728O34674I0C1748O38209I2C1804O13625I1C1808O10456,F0O10487F1O10456F2O10389F3O34638I0F4O34537I0F5O30163I4,S0x28585989eb68S0x22b216ce8cf0S0x31c3bc70e40S0x28585989ebc0S0x15988e470ec8S0x15988e470500
tick,0x1016ac0b8,8702958,0,0x0,0,0x107fd5694,0x107fd4a10,0xbd5782682e5,0x107fd658c,0x107fd6abc
code-creation,JS,12,8703125,0x108014dc0,464, node:_http_outgoing:667:44,0x28585989e438,*
code-source-info,0x108014dc0,122,20393,20576,C0O20393C52O20456C60O20414C68O20456C88O20486C112O20519C136O20447C140O6617I0C152O6627I0C164O6646I0C288O20393C336O20447C340O6646I0C352O20447C360O6627I0,F0O20456,S0x285859895350
code-creation,JS,12,8703250,0x108014fe0,304,checkIsHttpToken node:_http_common:210:26,0x285859895350,*
code-source-info,0x108014fe0,119,6617,6658,C0O6617C52O6646C120O6617,,
code-creation,JS,12,8703417,0x108015160,3460,ServerResponse node:_http_server:196:24,0x2858598a7460,*
code-source-info,0xx285859883a20S0x28585989ff18S0x2ddc31effa48S0x28585989d638S0x15988e45ac18S0x285859883658S0x22b216ce8028S0x22b216ce8658
code-creation,JS,12,8703500,0x108015f60,452, node:_http_outgoing:673:45,0x28585989e490,*
code-source-info,0x108015f60,122,20624,20936,C0O20624C56O20676C72O6984I0C140O20757C152O6951I0C196O20798C208O6961I0C228O20624C276O20798C324O6984I0,F0O20761,S0x2858598953a8
tick,0x101278188,8704250,0,0x0,0,0xbd578262a65,0x107fd35ec,0x108010e90
code-creation,JS,12,8704417,0x108016160,316,Writable.cork node:internal/streams/writable:513:35,0x15988e470b28,*
code-source-info,0x108016160,110,15641,15731,C0O15641C52O15667C84O15692C104O15703C112O15700C120O15714C136O15726C176O15641,,
code-creation,JS,12,8704417,0x1080162e0,1412, file:///Users/hsulzz/Playground/hello-world/src/index.mjs:5:28,0xcb65973c050,*
code-source-info,0x1080162e0,93,115,234,C0O115C60O148C120O21281I0C140O21254I0C152O21281I0C176O21296I0C188O21281I0C192O21296I0C204O21342I0C216O21370I0C220O6646I6C264O21553I0C276O21550I0C280O6984I3C324O14729I1C336O21425I0C364O14764I1C376O21473I0C404O21486I0C448O21535I0C464O14757I1C472O21535I0C568O21553I0C592O21559I0C612O21550I0C644O211C752O20798I2C776O20757I2C780O115C828O21281I0C832O21342I0C844O21281I0C852O21342I0C864O14793I4C872O6984I3C880O21535I0C900O20798I2C952O14793I1C960O6994I3C968O6961I3,F0O163F1O21370I0F2O14764I1F3O20761I2F1O21342I0F4O14764I4F5O20456I5,S0x28585989e4e8S0x22b216cc9610S0x28585989e490S0x2858598953a8S0x28585989e438S0x285859895350
code-creation,JS,12,8704458,0x1080168e0,4816,parserOnIncoming node:_http_server:1040:26,0x2858598a7d50,*
code-source-info,0x1080168ex15988e473160S0x15988e471130S0x2ddc31effa48S0x22b216ce8cf0S0x2858598a8090S0x2858598a7460S0x285859883a20S0x28585989ff18S0x2858598a7da8
tick,0x19252ad6c,8705500,0,0x0,0,0x107ff5898,0x107fef6fc,0x107fd2e18,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
code-creation,JS,12,8705542,0x108017c60,3656,end node:_http_outgoing:1080:45,0x28585989eab8,*
code-source-info,0x108017cx22b216ce3f70S0x28585989e250S0x15988e470bb8S0x28585989d950S0x15988e470b28S0x2858598a8038S0x28585989ff18S0x28585989eb10S0x22b216ccd510S0x28585989dcc0S0x15988e4711e0
tick,0x19252ad8c,8706750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x1016618e8,8708000,0,0x0,0,0x107fd35ec,0x108010e90
tick,0x19252ad6c,8709250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252b4fc,8710542,0,0x0,8
tick,0x19252b4fc,8711542,0,0x0,8
tick,0x19252e620,8712667,0,0x0,8
tick,0x19252ad6c,8713958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252b4fc,8715208,0,0x0,8
tick,0x19252b4fc,8716458,0,0x0,8
tick,0x192387aac,8717708,0,0x0,1
code-creation,JS,12,8718417,0x108018b00,416,slowCases node:internal/util:217:19,0x22b216cd69f0,*
code-source-info,0x108018b00,13,5799,7581,C0O5799C52O5821C144O6107C148O6255C152O6673C172O6710C184O6718C196O7073C240O7388C244O7553C248O5821C252O5799,,
tick,0x19252e620,8718958,0,0x0,8
tick,0x192527ad0,8720208,0,0x0,8
tick,0x101139ddc,8721500,0,0x0,5
tick,0x1923759e4,8722708,0,0x0,8
tick,0x19252e620,8724000,0,0x0,8
tick,0x19252e620,8725250,0,0x0,8
tick,0x19252e620,8726500,0,0x0,8
tick,0x10119e8bc,8727750,0,0x0,0,0x108016564,0x107fe4400,0x107fd41cc,0x108010e90
code-creation,JS,12,8728417,0x108018ce0,296,_implicitHeader node:_http_server:343:68,0x2858598a8248,*
code-source-info,0x108018ce0,124,11655,11696,C0O11655C52O11667C80O11682C88O11667C160O11655,,
tick,0x107fe3d08,8729042,0,0x0,0,0x107fe2fb4
code-creation,JS,12,8729375,0x108018e40,832,Readable.push node:internal/streams/readable:387:35,0x15988e461e10,*
code-source-info,0x108018ex22b216ce3f70S0x15988e460f38S0x15988e461148S0x15988e4611a0
code-creation,JS,12,8729542,0x1080191c0,2024,writeHead node:_http_server:348:19,0x2858598a7510,*
code-source-info,0x1080191cx2858598953a8
code-creation,JS,12,8729750,0x108019a00,1164,parserOnMessageComplete node:_http_common:135:33,0x285859895248,*
code-source-info,0x108019ax285859898588S0x15988e461e10S0x22b216ce3f70S0x15988e460f38S0x15988e44a9c8S0x15988e461148S0x15988e4627b0S0x15988e466fc0
code-creation,JS,12,8730167,0x108019ee0,664,onEofChunk node:internal/streams/readable:788:20,0x15988e461148,*
code-source-info,0x108019ee0,106,24064,24999,C0O24064C56O24084C88O24117C120O24126C124O24136C132O24447C136O24444C144O24186C148O24196C152O25255I1C184O25304I1C188O25315I1C196O25312I1C204O24444C208O25463I1C212O25460I1C220O25493I1C360O24084C364O1733I0C372O24064C420O24084C468O24117,F0O24084F1O24670F0O25273I1F0O25385I1,S0x22b216ce3f70S0x15988e4611a0
tick,0x192528738,8730333,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x108012d6c,0x107fe4400,0x107fdb808,0x107fe2ff0
code-creation,JS,12,8730667,0x10801a1c0,284,get node:internal/streams/readable:1415:8,0x15988e4627b0,*
code-source-info,0x10801a1c0,106,42986,43372,C0O42986C52O43012C84O3866I0C88O3875I0C92O43328C96O43355C104O43366C144O43012C152O43287C160O42986,F0O43312F0O43328F0O43355,S0x15988e466fc0
code-creation,JS,12,8730958,0x10801a320,704,onParserExecute node:_http_server:845:25,0x2858598a7ae8,*
code-source-info,0x10801a320,124,27327,27802,C0O27327C56O27665C96O27731C104O14318I1C128O27682C152O14282I1C184O14318I1C188O14319I1C200O14318I1C216O14298I1C220O14261I1C232O14337I1C236O27682C272O27731C340O27327C432O14318I1C456O14319I1C468O14261I1C520O27682C568O14261I1C572O27327,F0O27682F1O27665,S0x22b216ce3f70S0x15988e44a1a8
code-creation,JS,12,8731250,0x10801a620,1392,emitReadable node:internal/streams/readable:819:22,0x15988e4611a0,*
code-source-info,0x10801ax22b216ce3f70S0x22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0
code-creation,JS,12,8731333,0x10801abe0,3608,write_ node:_http_outgoing:938:16,0x28585989d9a8,*
code-source-info,0x10801abex2858598a8248S0x22b216ce3f70S0x28585989e3e0S0x22b216cf07a8S0x28585989d690S0x15988e470ec8S0x15988e470500S0x15988e459fa0S0x15988e466fc0
code-creation,JS,12,8731417,0x10801ba60,1136,readStart node:_http_incoming:39:19,0x285859898588,*
code-source-info,0x10801bax15988e44a9c8S0x15988e4624d0S0x22b216ce3f70S0x15988e461430S0x15988e4627b0S0x15988e466fc0
tick,0x107fe82a8,8731583,0,0x0,0,0x107fd9364,0x107fe4400,0x107fd9a38,0x107ff43b0,0x10800d01c,0x107fe301c
code-creation,JS,12,8731708,0x10801bf20,1448,onParserExecuteCommon node:_http_server:918:31,0x2858598a7bf0,*
code-source-info,0x10801bfx2858598a7da8
code-creation,JS,12,8732375,0x10801c520,1456,detachSocket node:_http_server:299:62,0x2858598a80e8,*
code-source-info,0x10801cx22b216ccd510S0x15988e4623a0S0x22b216ce9500S0x22b216ce8490S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x22b216cd7a88S0x28585989e028
tick,0x1016b28c0,8732833,0,0x0,0,0x107fda5f0,0x107fdabbc,0x107fdad40
tick,0x19252e620,8734125,0,0x0,8
tick,0x10113c5d4,8735375,0,0x0,5
tick,0x10113e8e8,8736625,0,0x0,5
tick,0x1016d1e58,8737875,0,0x0,0,0x107fdb77c,0x107fe2ff0
tick,0x100ea3160,8738958,0,0x0,1
tick,0x100ccb9b0,8740208,0,0x0,8
tick,0x19252b4fc,8741500,0,0x0,8
tick,0x19252b4fc,8742750,0,0x0,8
tick,0x19252e620,8744000,0,0x0,8
tick,0x107ff171c,8745000,0,0x0,0,0x107fd7058,0x107fd8d74,0x107fd8fd4,0x107fd958c,0x107fe4400,0x107fd9a38,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x107feeb44,8746250,0,0x0,0,0x107fe2ff0
tick,0x19252e620,8747542,0,0x0,8
tick,0x19238b080,8748792,0,0x0,6
tick,0x19252e620,8750042,0,0x0,8
tick,0x192381ac4,8751292,0,0x0,8
tick,0x1923fe54c,8752417,0,0x0,1
tick,0x19252b4fc,8753750,0,0x0,8
tick,0x19252ad6c,8754958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
code-creation,JS,12,8755292,0x10801cb20,188,nop node:_http_outgoing:90:13,0x28585989db08,*
code-source-info,0x10801cb20,122,3095,3103,C0O3095C48O3102C80O3095,,
code-creation,JS,12,8755500,0x10801cc20,236,get node:_http_outgoing:247:16,0x28585989df98,*
code-source-info,0x10801cc20,122,7496,7530,C0O7496C52O7516C116O7496,,
code-creation,JS,12,8755750,0x10801cd40,996,onFinish node:_http_outgoing:1075:18,0x28585989da58,*
code-source-info,0x10801cd40,122,31322,31400,C0O31322C60O31345C112O7516I0C120O31373C128O31383C136O31353C164O7496I0C168O7517I0C192O7516I0C204O31345C216O7516I0C224O31353C228O13625I1C240O13665I1C292O31383C316O13625I1C328O13861I1C336O13625I1C372O13702I1C376O15047I1C388O14988I1C416O15265I1C428O15318I1C432O15047I1C456O15111I1C564O31322C588O15318I1C668O31322C716O31353C720O13713I1C732O31353C740O13625I1C752O7517I0C760O13625I1,F0O31345F1O31383,S0x28585989df98S0x22b216ce8cf0
code-creation,JS,12,8756083,0x10801d180,368,Readable.removeAllListeners node:internal/streams/readable:1181:49,0x15988e462438,*
code-source-info,0x10801d180,106,36929,37515,C0O36929C52O36986C108O37076C140O37454C152O37513C204O36986C208O36929,,
code-creation,JS,12,8756125,0x10801d340,864,_dump node:_http_incoming:429:49,0x285859898ef0,*
code-source-info,0x10801dx15988e4624d0S0x22b216ce3f70S0x15988e462438S0x22b216ce95e8S0x22b216ce8490S0x15988e461430
tick,0x1016b1c20,8756208,0,0x0,0,0x107fd932c,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
code-creation,JS,12,8756667,0x10801d6e0,708,Socket.end node:net:734:32,0x15988e44a810,*
code-source-info,0x10801d6e0,96,19383,19531,C0O19383C56O19421C64O24589I0C80O19442C124O24688I0C140O19421C184O24785I0C216O19442C236O24570I0C268O24822I0C276O24953I0C280O24952I0C300O25461I0C304O24963I0C320O24972I0C328O25736I0C352O25461I0C356O25458I0C364O25474I0C412O25516I0C436O25527I0C444O25524I0C452O25461I0C504O25474I0C508O25516I0C512O25527I0C516O19383,F0O19442,S0x15988e470d30
code-creation,JS,12,8756792,0x10801d9e0,408,get node:internal/streams/writable:1029:8,0x15988e470f78,*
code-source-info,0x10801d9e0,110,30460,30575,C0O30460C52O30490C84O30544C108O30555C120O30569C132O30460C144O30512C148O30533C160O30542C172O30533C192O30542C236O30460C284O30512C288O30460C300O30512C308O30542,,
tick,0x19252e620,8757500,0,0x0,8
code-creation,JS,12,8757792,0x10801dbc0,1528,emitReadable_ node:internal/streams/readable:830:23,0x15988e4611f8,*
code-source-info,0x10801dbcx22b216ce3f70S0x15988e4614e0S0x22b216ce8cf0S0x15988e44aa58
code-creation,JS,12,8757875,0x10801e220,2236,Writable.end node:internal/streams/writable:808:34,0x15988e470d30,*
code-source-info,0x10801ex15988e4702f0S0x15988e470298S0x15988e4701e8S0x15988e44a200S0x15988e44bb20S0x22b216ce3f70
code-creation,JS,12,8758167,0x10801eb80,1948,Socket.destroySoon node:net:795:40,0x15988e44aae8,*
code-source-info,0x10801ebx22b216ce9380S0x15988e44a810S0x15988e470d30S0x31c3bc70e40S0x22b216ce9248S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x15988e470f78
code-creation,JS,12,8758250,0x10801f380,896,emitCloseNT node:_http_server:1029:21,0x2858598a7cf8,*
code-source-info,0x10801f380,124,33017,33130,C0O33017C60O33038C96O33129C108O33017C120O33068C132O33110C144O13625I0C156O33038C160O13625I0C172O13713I0C184O13767I0C228O33068C236O33093C244O13625I0C256O13861I0C264O13625I0C300O13702I0C304O15047I0C320O14988I0C344O15265I0C356O15318I0C360O15047I0C384O15111I0C492O33017C516O15318I0C596O33017C644O33038C648O13767I0C660O33038C668O13702I0C680O13625I0,F0O33110,S0x22b216ce8cf0
code-creation,JS,12,8758417,0x10801f760,4080,resOnFinish node:_http_server:980:21,0x2858598a7ca0,*
code-source-info,0x10801f760,124,31531,32995,C0O31531C60O31917C92O31926C112O31933C116O31917C120O31956C132O31960C168O31956C172O31988C212O32180C244O32214C256O32239C280O32255C304O32180C308O32301C320O32348C336O32199C340O3866I2C344O3875I2C348O32422C356O14222I5C360O32495C368O31531C380O4701I0C392O4723I0C404O31904C416O14222I5C420O31956C432O164I1C448O14250I5C456O36986I8C512O14417I5C532O38526I6C556O38711I6C560O32301C564O38560I6C572O32379C584O38711I6C588O38560I6C600O38708I6C608O20896I3C612O38801I6C616O38798I6C624O20934I3C628O39076I16C632O39073I16C640O39106I16C748O20988I3C752O38901I6C768O38912I6C776O38943I6C780O38940I6C788O32255C856O31402I4C872O31441I4C884O31472I4C920O31221I4C924O31256I4C936O31472I4C964O31256I4C1020O31262I4C1044O14417I5C1068O14250I5C1092O38472I6C1104O31349I4C1108O38498I6C1120O38526I6C1132O31370I4C1156O31379I4C1172O38560I6C1180O31402I4C1220O38700I6C1224O38711I6C1236O38708I6C1248O38738I6C1260O38749I6C1284O31402I4C1288O38769I6C1300O38798I6C1312O31441I4C1352O31472I4C1424O32309C1512O32348C1536O38560I6C1548O1733I7C1560O38560I6C1572O38700I6C1584O38708I6C1596O32348C1600O38790I6C1612O38909I6C1624O32379C1652O20896I3C1692O36957I8C1696O36986I8C1720O37069I8C1732O37076I8C1756O20896I3C1760O37454I8C1784O20915I3C1804O19442I10C1860O20934I3C1920O19421I10C1924O19438I10C1936O19442I10C1960O19529I10C1984O20934I3C1988O19442I10C2000O38209I11C2024O39007I16C2028O20988I3C2048O19251I9C2056O18813I12C2072O38338I11C2080O18813I12C2116O18837I12C2124O18848I12C2128O18856I12C2136O18862I12C2144O18904I12C2204O18936I12C2256O18963I12C2260O19251I9C2300O38209I11C2308O18936I12C2328O38213I11C2348O38220I11C2388O8131I13C2400O38229I11C2424O38246I11C2504O38338I11C2536O14764I14C2548O14793I14C2560O14822I14C2584O14828I14C2596O38338I11C2612O13130I15C2624O13167I15C2668O38354I11C2680O38368I11C2700O13224I15C2704O39018I16C2708O31531C2756O32180C2760O32348C2772O32180C2780O32309C2792O14222I5C2796O213I1C2808O14222I5C2816O143I1C2828O38560I6C2876O31221I4C2884O14222I5C2896O31221I4C2904O31402I4C2916O31349I4C2920O38537I6C2932O31349I4C2940O38527I6C2952O31402I4C2956O38836I6C2968O31402I4C2976O38790I6C2988O38711I6C3000O32348C3004O38940I6C3016O32348C3024O38901I6C3036O20896I3C3040O19218I9C3052O20896I3C3060O36950I8C3072O36967I8C3080O20934I3C3084O38209I11C3096O20934I3C3104O38182I11C3116O19428I10C3132O18813I12C3172O38229I11C3192O8146I13C3208O38229I11C3308O38338I11C3312O13167I15C3324O38338I11C3332O13109I15C3344O38209I11C3400O38987I16,F0O31597F1O31904F2O32214F3O32422F4O32279F5O32239F6O14417I5F7O38560I6F8O14380I5F9O20988I3F10O20915I3F11O19251I9F12O19260I9F13O19218I9F14O8146I13F15O14764I14F16O38868I6,S0x2ddc31effa48S0x22b216ccd510S0x15988e466fc0S0x15988e44aae8S0x2858598a7c48S0x285859898ef0S0x15988e4624d0S0x22b216ce3f70S0x15988e462438S0x22b216ce9380S0x15988e44a810S0x31c3bc70e40S0x22b216ce9248S0x22b216ce8268S0x22b216cc9610S0x22b216cd4810S0x15988e461430
tick,0x19252e620,8758750,0,0x0,8
tick,0x1923a02c0,8760042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192527a78,8761167,0,0x0,8
tick,0x19252b4fc,8762417,0,0x0,8
tick,0x100eeeee0,8763542,0,0x0,8
tick,0x19252e620,8764542,0,0x0,8
tick,0x19252e620,8765583,0,0x0,8
tick,0x192528738,8766875,0,0x0,0,0x107ff88c4,0x107ff3e38,0x107fdb5e0,0x108012d6c,0x107fe4400,0x107fdb808,0x107fe2ff0
tick,0x1016ac0e8,8768125,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x100d0b9d8,8769375,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b3f4,8770625,0,0x0,8
tick,0x19252e620,8771792,0,0x0,8
tick,0x19252e620,8773083,0,0x0,8
tick,0x19252e620,8774292,0,0x0,8
tick,0x19252ad6c,8775542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x1010ee5a4,8776833,0,0x0,0,0x107ff7240,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252e620,8777875,0,0x0,8
tick,0x100eb6fc4,8779125,0,0x0,5
tick,0x101788368,8780375,0,0x0,0,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x101a86df4,8781667,0,0x0,1
tick,0x107fe686c,8782917,0,0x0,0,0x107fe7be0,0x107feee40,0x107fe2ff0
tick,0x107fe7b78,8784167,0,0x0,0,0x107fe301c
tick,0x100eb57dc,8785292,0,0x0,0,0x108016564,0x107fe4400,0x107fd41cc,0x108010e90
code-creation,JS,12,8786542,0x108020800,1360, node:internal/streams/writable:916:21,0x31c3bc44078,*
code-source-info,0x108020800,110,27521,27558,C0O27521C64O27530C100O26643I0C128O26652I0C144O26668I0C152O26681I0C188O26715I0C212O26780I0C216O26681I0C228O26759I0C284O26774I0C292O26938I0C296O26324I2C308O26949I0C320O26573I2C324O26580I2C328O26974I0C332O26949I0C336O26946I0C344O26974I0C368O13625I1C380O26643I0C388O13625I1C424O13702I1C428O14988I1C456O13665I1C468O13713I1C472O15047I1C488O13767I1C496O15111I1C604O14999I1C616O15047I1C628O15318I1C692O27154I0C728O27169I0C736O27185I0C832O26354I2C884O26342I2C904O26377I2C916O26365I2C920O26402I2C924O27521C972O26780I0C1028O13625I1,F0O27530F1O26974I0F2O26907I0,S0x15988e470240S0x22b216ce8cf0S0x15988e4701e8
tick,0x10800c300,8786708,0,0x0,0,0x107fdc258,0x107fe4400,0x107fdc46c
code-creation,JS,12,8786708,0x108020dc0,1468,afterShutdown node:net:552:23,0x15988e4495b0,*
code-source-info,0x108020dcx22b216ce3f70S0x31c3bc44078S0x15988e470240S0x22b216ce8cf0S0x15988e4701e8S0x15988e459fa0S0x15988e466fc0
code-creation,JS,12,8787167,0x1080213e0,924,finish node:internal/streams/writable:949:16,0x15988e470348,*
code-source-info,0x1080213e0,110,28267,28895,C0O28267C60O28287C104O28302C112O28314C116O28325C124O28322C132O28425C136O28385C164O13625I2C176O28659C184O13625I2C220O13702I2C224O14988I2C252O28314C264O28339C268O15047I2C284O28659C292O15111I2C400O3849I1C412O3867I1C424O15318I2C488O3866I1C492O28414C516O28423C520O13702I2C524O13713I2C568O28593C592O3866I0C596O3875I0C600O13767I2C608O13842I2C620O13891I2C624O28267C672O13625I2,F0O28659F0O28789F1O28385F2O28339,S0x15988e466fc0S0x22b216ce8cf0S0x15988e4703a0
code-creation,JS,12,8787750,0x1080217e0,1248, node:net:348:24,0x31c3bc47090,*
code-source-info,0x1080217e0,96,8961,9174,C0O8961C64O8975C100O9002C104O9007C144O9041C156O13625I1C168O9078C176O13625I1C244O13702I1C248O14988I1C276O13767I1C288O13842I1C292O15047I1C308O13891I1C316O15111I1C424O15265I1C448O15318I1C516O9041C524O13625I1C564O9021C576O13625I1C588O15111I1C600O9041C604O8961C616O14988I1C628O9073C668O8961C716O13625I1C744O9041C772O8961C784O13625I1C792O9041C844O9021C892O9002C940O8975,F0O8975F1O9007,S0x22b216ce3f70S0x22b216ce8cf0
code-creation,JS,12,8787958,0x108021d20,1188,Writable.destroy node:internal/streams/writable:1114:38,0x15988e471360,*
code-source-info,0x108021dx15988e458b60S0x15988e458be0S0x15988e458b08S0x285859898e98S0x15988e459fa0S0x15988e466fc0S0x15988e462fa8
tick,0x100d9a310,8788000,0,0x0,4,0x1080211a8
code-creation,JS,12,8788042,0x108022220,1736,_destroy node:_http_incoming:218:55,0x285859898e98,*
code-source-info,0xx22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216cfebb8S0x22b216cfe7f0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8S0x22b216cfeaf8S0x22b216cfe730S0x22b216cc9610S0x22b216cd4810S0x22b216cfe8b0S0x15988e459fa0S0x15988e466fc0S0x15988e462fa8
code-creation,JS,12,8788083,0x108022940,264,abortIncoming node:_http_server:806:23,0x2858598a7988,*
code-source-info,0x108022940,124,26205,26370,C0O26205C52O26236C92O26369C136O26205,,
code-creation,JS,12,8789250,0x108022a80,3500,socketOnClose node:_http_server:800:23,0x2858598a7930,*
code-source-info,0x108022ax22b216ce3f70S0x2858598a7988S0x2858598952f8S0x285859896e80S0x285859895400
tick,0x100ec559c,8789292,0,0x0,1
code-creation,JS,12,8789292,0x1080238a0,3456,freeParser node:_http_common:180:20,0x2858598952f8,*
code-source-info,0x1080238ax285859896e80S0x285859895400
code-creation,JS,12,8789583,0x108024680,2556,onFinish node:internal/streams/writable:886:18,0x15988e470240,*
code-source-info,0xx22b216cfc1a8S0x22b216cfbf38S0x22b216cd2278S0x22b216ce60a0S0x22b216ce8cf0S0x22b216cd27b8S0x22b216cd2638S0x22b216cd23f8
tick,0x107feea90,8790458,0,0x0,0,0x107fe2ff0
tick,0x19252b4fc,8791708,0,0x0,8
tick,0x19252ad6c,8793000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252ad6c,8794250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x19252ad6c,8795500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x1923fe0dc,8796583,0,0x0,1
tick,0x10164b908,8797875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x102711ea8,8799125,0,0x0,8
tick,0x108010248,8800375,0,0x0,0
tick,0x19252ad6c,8801667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x100a9396c,8802917,0,0x0,6
tick,0x1010e7a9c,8804167,1,0x100ba3118,6,0x0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b4fc,8805417,0,0x0,8
tick,0x100b9e6f8,8806667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x107fe4400,0x107fd41cc,0x108010e90
tick,0x100b1b1bc,8807958,0,0x0,6
tick,0x100b9c874,8809250,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
code-creation,JS,12,8809792,0x108025100,3552,ServerResponse node:_http_server:196:24,0x2858598a7460,*
code-source-info,0xx28585989ff18S0x2ddc31effa48S0x285859883a20S0x285859883658S0x28585989d638S0x15988e45ac18S0x22b216ce8028S0x22b216ce8658
new,MemoryChunk,0x1b2f1cc00000,262144
code-creation,JS,12,8810167,0x108025f60,4196,parserOnIncoming node:_http_server:1040:26,0x2858598a7d50,*
code-source-info,0x108025fx15988e473160S0x15988e471130S0x2ddc31effa48S0x22b216ce8cf0S0x2858598a7da8S0x2858598a7460S0x28585989ff18S0x285859883a20S0x285859883658
tick,0x19252ad6c,8810500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe69ac,8811750,0,0x0,0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252b25c,8813000,0,0x0,8
tick,0x19252e620,8814292,0,0x0,8
tick,0x10113ea14,8815542,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,8816792,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100abd444,8818042,0,0x0,6
tick,0x19252e620,8819333,0,0x0,8
tick,0x19252e620,8820583,0,0x0,8
tick,0x19252e620,8821750,0,0x0,8
tick,0x10166ab80,8822833,0,0x0,0
tick,0x19252e620,8824083,0,0x0,8
tick,0x192527a78,8825333,0,0x0,8
tick,0x19252ad6c,8826625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192371abc,8827875,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,8829125,0,0x0,8
tick,0x19252ad6c,8830167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,8831417,0,0x0,0,0x10800a800
tick,0x19252e620,8832667,0,0x0,8
tick,0x19252ad6c,8833917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6fc4,8835167,0,0x0,0,0x10800bac4,0x10800a738
tick,0x107fec37c,8836417,0,0x0,0,0x10801053c
tick,0x107fea764,8837667,0,0x0,0,0x107fe31b4
tick,0x19252e620,8838958,0,0x0,8
tick,0x19252e620,8840208,0,0x0,8
tick,0x19252ad6c,8841208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,8842500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,8843750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,8845000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,8846042,0,0x0,8
tick,0x19252e620,8847292,0,0x0,8
tick,0x1012b51fc,8848583,0,0x0,1
tick,0x192375a00,8849833,0,0x0,0,0x108023160,0x108021988
tick,0x1012b523c,8851083,0,0x0,1
tick,0x192527ad0,8852333,0,0x0,8
tick,0x192528738,8853583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,8854833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,8856083,0,0x0,8
tick,0x19252e620,8857375,0,0x0,8
tick,0x192527ad0,8858625,0,0x0,8
tick,0x19252b4fc,8859875,0,0x0,8
tick,0x19252e620,8861125,0,0x0,8
tick,0x10800ada4,8862375,0,0x0,0,0x10800a738
tick,0x19252ad6c,8863667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,8864917,0,0x0,8
tick,0x19252e620,8866167,0,0x0,8
tick,0x19252e620,8867167,0,0x0,8
tick,0x19252e620,8868458,0,0x0,8
tick,0x19259e7ec,8869708,0,0x0,8
tick,0x192528738,8870958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,8872208,0,0x0,8
tick,0x19252ad6c,8873458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,8874708,0,0x0,8
tick,0x100a295dc,8876000,0,0x0,8
code-creation,JS,12,8876875,0x108027060,384,addCatch node:events:371:18,0x22b216ce8730,*
code-source-info,0x108027060,22,10835,11377,C0O10835C52O10876C108O10835C144O10876C148O11025C160O10835C268O10876C272O10835C284O10876,,
tick,0x19252e620,8877250,0,0x0,8
tick,0x1016b6400,8878500,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x10164b8a8,8879750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,8881000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,8882167,0,0x0,8
tick,0x19252e620,8883250,0,0x0,8
tick,0x19252ad6c,8884542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,8885875,0,0x0,8
tick,0x192563ffc,8887042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252f804,8888375,0,0x0,8
tick,0x19252e620,8889625,0,0x0,8
tick,0x19252f804,8890875,0,0x0,8
tick,0x19252b4fc,8892167,0,0x0,8
tick,0x100dbfc40,8893417,0,0x0,5
tick,0x107fe491c,8894667,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252b25c,8895958,0,0x0,0,0x10800a800
tick,0x19252b4fc,8897208,0,0x0,8
tick,0x19252e620,8898458,0,0x0,8
tick,0x100cd24d4,8899708,0,0x0,5
tick,0x192528738,8900958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1009b9d38,8902250,0,0x0,6
tick,0x19252b4fc,8903500,0,0x0,8
tick,0x100cd3c24,8904792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016c5624,8906125,0,0x0,0,0x10800af80,0x10800a738
tick,0x19252b3f4,8907333,0,0x0,8
tick,0x1009c1640,8908625,0,0x0,0,0x108023204,0x108021988
tick,0x10165b680,8909875,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192528738,8911125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,8912375,0,0x0,8
tick,0x192528738,8913667,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
code-creation,JS,12,8914375,0x108027220,588,removeAllListeners node:events:746:32,0x22b216ce95e8,*
code-source-info,0x108027220,22,21531,22904,C0O21531C60O8542I0C76O21882C88O8542I0C104O21531C120O21769C124O21622C144O21882C148O21788C180O8579I0C200O21882C204O8542I0C216O8579I0C220O22078C228O8609I0C268O21531C316O21882C336O8616I0C348O21882,F0O21551,S0x22b216ce8490
tick,0x19252ad6c,8914917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,8916042,0,0x0,8
tick,0x100ce0a80,8917250,0,0x0,8
tick,0x1016cd2d0,8918542,0,0x0,0,0x107fea774,0x107fe31b4
tick,0x1016658c4,8919792,0,0x0,0,0x107fe2ff0
tick,0x1009bd898,8921083,0,0x0,0,0x10800b1b4,0x10800a738
tick,0x19252e620,8922125,0,0x0,8
tick,0x1016b701c,8923375,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100d0a80c,8924667,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252a6ec,8925917,0,0x0,1
tick,0x10801a8e0,8927167,0,0x0,0,0x108019b28
tick,0x101788388,8928417,0,0x0,0,0x108026920,0x108010e90
tick,0x192527ad0,8929667,0,0x0,8
tick,0x100cef794,8930917,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x100e22bcc,8932208,0,0x0,5
tick,0x101005aac,8933458,0,0x0,5
tick,0x10167a440,8934708,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,8935958,0,0x0,8
tick,0x192527ad0,8937042,0,0x0,8
tick,0x19252b4fc,8938333,0,0x0,8
tick,0x1016b70f4,8939583,0,0x0,0,0x10800a738
tick,0x108022cdc,8940833,0,0x0,0,0x108021988
tick,0x19252e620,8942083,0,0x0,8
tick,0x107fe5130,8943208,0,0x0,0,0x10800b38c,0x10800a738
tick,0x1016b7038,8944458,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,8945750,0,0x0,8
tick,0x19252e620,8947000,0,0x0,8
tick,0x19252e620,8948042,0,0x0,8
tick,0x19252e620,8949167,0,0x0,8
tick,0x100f5dce8,8950417,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,8951667,0,0x0,8
tick,0x192372da8,8952917,0,0x0,1
tick,0x19252e620,8954208,0,0x0,8
tick,0x101bd8b4c,8955458,0,0x0,8
tick,0x19252b4fc,8956708,0,0x0,8
tick,0x100f0ff2c,8957958,0,0x0,1
tick,0x19252ad6c,8959042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19259e7f8,8960292,0,0x0,1
tick,0x19252f804,8961542,0,0x0,8
tick,0x100f5dba0,8962792,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,8964083,0,0x0,8
tick,0x19252e620,8965125,0,0x0,8
tick,0x19252e620,8966833,0,0x0,8
tick,0x19252f804,8969167,0,0x0,8
tick,0x19252b4fc,8970042,0,0x0,8
tick,0x19252e620,8971750,0,0x0,8
tick,0x19252e620,8972583,0,0x0,8
tick,0x192527ad0,8973833,0,0x0,8
tick,0x1009bdeb0,8974917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x10800ba20,8975917,0,0x0,0,0x10800a738
tick,0x101198dbc,8977167,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,8978417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,8979542,0,0x0,8
tick,0x19252e620,8980583,0,0x0,8
tick,0x19252e620,8981708,0,0x0,8
tick,0x192375b4c,8983000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,8984250,0,0x0,0,0x10800a800
tick,0x19252e620,8985583,0,0x0,8
tick,0x107fea954,8986833,0,0x0,0,0x107fe31b4
code-creation,JS,9,8987125,0x1690308d7e80,12,resetCache node:internal/http:28:20,0x28585989fe68,~
code-source-info,0x1690308d7e80,123,514,544,C0O521C4O530C11O543,,
tick,0x101672060,8988042,0,0x0,0,0x107fe4900,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x1016bbdb0,8989333,0,0x0,0,0x107fcd5bc,0x107fb72d8,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x10801b544,8990375,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,8992167,0,0x0,8
tick,0x10166068c,8992875,0,0x0,0,0x107fea974,0x107fe31b4
tick,0x19252e620,8994167,0,0x0,8
tick,0x19252b25c,8995375,0,0x0,0,0x10800a800
tick,0x101a87028,8996583,0,0x0,4,0x107fb72d8,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
code-creation,JS,12,8997250,0x1080274c0,256,isContentDispositionField node:_http_outgoing:101:35,0x28585989d5e0,*
code-source-info,0x1080274c0,122,3468,3546,C0O3468C52O3485C92O3544C136O3468,,
code-creation,JS,12,8997417,0x108027600,476,utcDate node:internal/http:17:17,0x28585989fdb8,*
code-source-info,0x108027600,123,307,358,C0O307C56O314C76O340C92O329C104O356C116O307C140O314C168O340C200O329C240O340C252O307C300O314,,
code-creation,JS,12,8997792,0x108027820,936,matchHeader node:_http_outgoing:632:21,0x28585989d7f0,*
code-source-info,0x108027820,122,19508,20348,C0O19508C56O19550C88O19611C116O19628C272O19908C284O19628C292O20321C308O19628C340O19550C348O19611C360O19628C368O19550C384O19628C416O19908C424O19628C444O19508C460O19628C732O19508,,
tick,0x19252adc4,8997917,0,0x0,4,0x1080211a8
code-creation,JS,12,8997958,0x108027c20,1480,storeHeader node:_http_outgoing:625:21,0x28585989d798,*
code-source-info,0x108027cx28585989d7f0
code-creation,JS,12,8998000,0x108028240,1652,processHeader node:_http_outgoing:590:23,0x28585989d740,*
code-source-info,0xx28585989d798S0x28585989d5e0S0x28585989d7f0
tick,0x10109b420,8999125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,9000375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,9001500,0,0x0,0,0x10800a800
tick,0x1925a17d4,9002792,0,0x0,6
new,MemoryChunk,0x32b401540000,262144
new,MemoryChunk,0x1a20bb340000,262144
new,MemoryChunk,0xe84c000000,262144
new,MemoryChunk,0x157326280000,262144
new,MemoryChunk,0x3a7cb0440000,262144
new,MemoryChunk,0x1c92d63c0000,262144
new,MemoryChunk,0xc5840040000,262144
new,MemoryChunk,0x2842a0ec0000,262144
tick,0x100e90dac,9003833,0,0x0,1
tick,0x19252ad6c,9005083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9006333,0,0x0,8
tick,0x19252e620,9007625,0,0x0,8
tick,0x19252e620,9008875,0,0x0,8
tick,0x192373a10,9010125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100abc7f0,9011375,0,0x0,8
tick,0x19252b3f4,9012500,0,0x0,8
tick,0x1016b6410,9013750,0,0x0,0,0x108020128,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9015000,0,0x0,8
tick,0x19252ad6c,9016250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,9017500,0,0x0,8
tick,0x19252e620,9018750,0,0x0,8
tick,0x19252e620,9019875,0,0x0,8
tick,0x10113cec4,9021125,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9022375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,9023500,0,0x0,8
tick,0x101160754,9024750,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100cbcc2c,9026000,0,0x0,8
tick,0x19252e620,9027250,0,0x0,8
tick,0x19252e620,9028542,0,0x0,8
tick,0x19252e620,9029542,0,0x0,8
tick,0x100ba3f38,9030792,0,0x0,8
tick,0x19252e620,9032083,0,0x0,8
tick,0x100f12a60,9033333,0,0x0,1
tick,0x19252b25c,9034583,0,0x0,0,0x10800a800
tick,0x19252e620,9035833,0,0x0,8
tick,0x19252e620,9037083,0,0x0,8
tick,0x19252e620,9038167,0,0x0,8
tick,0x100cda970,9039417,0,0x0,6
tick,0x19252e620,9040667,0,0x0,8
tick,0x19252b25c,9041917,0,0x0,0,0x10800a800
tick,0x100f151e4,9043208,0,0x0,1
tick,0x19252ad6c,9044458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9045708,0,0x0,8
tick,0x10165d720,9046958,0,0x0,8
tick,0x100e88480,9048250,0,0x0,5
tick,0x19252e620,9049500,0,0x0,8
tick,0x19252e620,9050792,0,0x0,8
tick,0x19252b4fc,9052042,0,0x0,8
tick,0x19252e620,9053292,0,0x0,8
tick,0x19252e620,9054542,0,0x0,8
tick,0x192375b44,9055833,0,0x0,8
tick,0x192527ad0,9057083,0,0x0,8
tick,0x19252e620,9058333,0,0x0,8
tick,0x19252e620,9059500,0,0x0,8
tick,0x19252f804,9060750,0,0x0,8
tick,0x100ce1c64,9061833,0,0x0,0,0x107fe3170
tick,0x100e2fb30,9063083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080101e0,9064333,0,0x0,0
tick,0x101661740,9065583,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x19252e620,9066625,0,0x0,8
tick,0x19252e620,9067875,0,0x0,8
tick,0x19252e620,9068917,0,0x0,8
tick,0x19252b4fc,9070167,0,0x0,8
tick,0x19252e620,9071417,0,0x0,8
tick,0x19252e620,9072458,0,0x0,8
tick,0x10174dd80,9073708,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252f804,9074792,0,0x0,8
tick,0x19252b25c,9076042,0,0x0,8
tick,0x100ccdb6c,9077292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9078375,0,0x0,8
tick,0x19252ad6c,9079625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527a78,9080875,0,0x0,8
tick,0x19252ad6c,9081917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009c6ac4,9083167,0,0x0,8
tick,0x19252e620,9084417,0,0x0,8
tick,0x19252b4fc,9085667,0,0x0,8
tick,0x19252e620,9086917,0,0x0,8
tick,0x19252b25c,9087958,0,0x0,8
tick,0x19252b3f4,9089208,0,0x0,8
tick,0x107fe3124,9090458,0,0x0,0
code-creation,JS,12,9090875,0x108028900,4388,_storeHeader node:_http_outgoing:454:22,0x28585989d6e8,*
code-source-info,0xx28585989fdb8S0x28585989d740S0x28585989d798S0x28585989d5e0S0x28585989d7f0
tick,0x19252b4fc,9091708,0,0x0,8
tick,0x19252e620,9092875,0,0x0,8
tick,0x1009b9e1c,9093917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1016ad2c8,9095167,0,0x0,0,0x10800dcb8,0x10800cb40,0x10800a9e8
tick,0x19237625c,9096458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100e8852c,9097542,0,0x0,5
tick,0x19252e620,9098792,0,0x0,8
tick,0x1016ace20,9100042,0,0x0,0,0x10801fd08,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,9101250,0,0x0,0,0x10800a800
tick,0x107fe602c,9102500,0,0x0,0,0x107fe2ff0
tick,0x192522388,9103750,0,0x0,6
tick,0x1009bf974,9105000,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,9106292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19259ebfc,9107458,0,0x0,1
tick,0x10113a0e4,9108708,0,0x0,5,0x108023204,0x108021988
tick,0x19252e620,9109958,0,0x0,8
tick,0x19252f804,9111208,0,0x0,8
tick,0x100cbccd0,9112500,0,0x0,6
tick,0x19252e620,9113750,0,0x0,8
tick,0x192528738,9115000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9116250,0,0x0,8
tick,0x19252ad6c,9117500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,9118750,0,0x0,8
tick,0x19252e620,9120042,0,0x0,8
tick,0x10113e744,9121292,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100abc860,9122292,0,0x0,8
tick,0x192528738,9123542,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107fe2b78,9124792,0,0x0,0
tick,0x19252e620,9125833,0,0x0,8
tick,0x19252e620,9127000,0,0x0,8
tick,0x19252ad6c,9128000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9129083,0,0x0,8
tick,0x19252f804,9130250,0,0x0,8
tick,0x19252ad6c,9131500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923763c4,9132625,0,0x0,8
tick,0x19252ad6c,9133875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9135167,0,0x0,8
tick,0x19252e620,9136250,0,0x0,8
tick,0x19252e620,9137417,0,0x0,8
tick,0x19252e620,9138667,0,0x0,8
tick,0x101787bcc,9139792,0,0x0,0,0x10802651c,0x108010e90
tick,0x10270d398,9141042,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9142333,0,0x0,8
tick,0x19252e620,9143542,0,0x0,8
tick,0x19252e620,9144667,0,0x0,8
tick,0x19252e620,9145750,0,0x0,8
tick,0x192371ba8,9146958,0,0x0,8
tick,0x19252e620,9148208,0,0x0,8
tick,0x19252b4fc,9149458,0,0x0,8
tick,0x19252e620,9150708,0,0x0,8
tick,0x19252e620,9151875,0,0x0,8
tick,0x19252e620,9152875,0,0x0,8
tick,0x1010e7940,9153833,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192528738,9155125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9156333,0,0x0,8
tick,0x19252b4fc,9157583,0,0x0,8
tick,0x19252b25c,9158917,0,0x0,0,0x10800a800
tick,0x10801835c,9160125,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9161208,0,0x0,8
tick,0x19252e620,9162500,0,0x0,8
tick,0x192400a6c,9163750,0,0x0,1
tick,0x101285644,9164875,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100d4eff4,9166125,0,0x0,0
tick,0x19252ad6c,9167417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9168667,0,0x0,8
tick,0x101139edc,9169917,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9171042,0,0x0,8
tick,0x19252b4fc,9172333,0,0x0,8
tick,0x19252ad64,9173542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e8c444,9174833,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9176125,0,0x0,8
tick,0x19252a6ec,9177333,0,0x0,1
tick,0x10166b65c,9178625,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x100b9f98c,9179875,0,0x0,8
tick,0x1016b7040,9181125,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9182375,0,0x0,8
tick,0x1009dfffc,9183500,0,0x0,8
tick,0x192528738,9184833,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e22b40,9186083,0,0x0,5
tick,0x19252e620,9187333,0,0x0,8
tick,0x19252e620,9188583,0,0x0,8
tick,0x1009bc3c0,9189875,0,0x0,8
tick,0x1923a0264,9191167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016ace28,9192417,0,0x0,0,0x10801a700,0x108019b28
tick,0x19252e620,9193667,0,0x0,8
tick,0x107fe70c0,9194958,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,9196208,0,0x0,8
tick,0x19252e620,9197458,0,0x0,8
tick,0x19252ad6c,9198500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,9199542,0,0x0,8
tick,0x100abc908,9200833,0,0x0,8
tick,0x100cbcbf0,9202083,0,0x0,8
tick,0x100e01cf4,9203333,0,0x0,0
tick,0x192375788,9204542,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192528738,9206042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9207250,0,0x0,8
tick,0x19252e620,9208417,0,0x0,8
tick,0x1016b70f4,9209333,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252e620,9210458,0,0x0,8
tick,0x19252e620,9211667,0,0x0,8
tick,0x19252e620,9212708,0,0x0,8
tick,0x19252e620,9213917,0,0x0,8
tick,0x19252e620,9215125,0,0x0,8
tick,0x100cbb438,9216375,0,0x0,5
tick,0x19252e620,9217667,0,0x0,8
tick,0x19252e620,9218917,0,0x0,8
tick,0x100d0a27c,9220167,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1009f1670,9221417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e22b00,9222667,0,0x0,0
tick,0x19252e620,9223917,0,0x0,8
tick,0x19252e620,9225167,0,0x0,8
tick,0x19252e620,9226417,0,0x0,8
tick,0x19252e620,9227500,0,0x0,8
tick,0x19252ad6c,9228708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,9229958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016553e8,9231250,0,0x0,8
tick,0x19252e620,9232500,0,0x0,8
tick,0x101656844,9233750,0,0x0,8
tick,0x19252e620,9235000,0,0x0,8
tick,0x107fe4670,9236250,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252e620,9237542,0,0x0,8
tick,0x19252b4fc,9238750,0,0x0,8
tick,0x19252b25c,9240042,0,0x0,0,0x10800a800
tick,0x19252e620,9241292,0,0x0,8
tick,0x19252ad6c,9242375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9243625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cb9560,9244625,0,0x0,5
tick,0x19249f748,9245875,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9247167,0,0x0,8
tick,0x19252e620,9248417,0,0x0,8
tick,0x19252b25c,9249542,0,0x0,0,0x10800a800
tick,0x19252e620,9250583,0,0x0,8
tick,0x19252e620,9251667,0,0x0,8
tick,0x19252e620,9252750,0,0x0,8
tick,0x19252ad6c,9254000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100a247ec,9255042,0,0x0,6
tick,0x1016cd2d0,9256333,0,0x0,0,0x107fea774,0x107fe31b4
tick,0x19252e620,9257583,0,0x0,8
tick,0x1016b70bc,9258833,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,9259875,0,0x0,8
tick,0x192528738,9261125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9262375,0,0x0,8
tick,0x19252ad6c,9263500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,9264750,0,0x0,8
tick,0x19252e620,9265833,0,0x0,8
tick,0x19252e620,9267125,0,0x0,8
tick,0x19252e620,9268333,0,0x0,8
tick,0x19252e620,9269542,0,0x0,8
tick,0x19252e620,9270792,0,0x0,8
tick,0x19252e620,9271875,0,0x0,8
tick,0x19252e620,9273042,0,0x0,8
tick,0x19252e620,9274167,0,0x0,8
tick,0x19252e620,9275208,0,0x0,8
tick,0x19252e620,9276292,0,0x0,8
tick,0x19252e620,9277250,0,0x0,8
tick,0x19252e620,9278375,0,0x0,8
tick,0x10119b5d0,9279417,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252f804,9280667,0,0x0,8
tick,0x101701f7c,9281708,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9283000,0,0x0,8
tick,0x19252e620,9284250,0,0x0,8
tick,0x100ab6a94,9285458,0,0x0,8
tick,0x1012b51fc,9286750,0,0x0,1
tick,0x1009b431c,9288000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10166f0ec,9289250,0,0x0,0,0x108023160,0x108021988
tick,0x19252ad6c,9290500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9291625,0,0x0,8
tick,0x19252e620,9292625,0,0x0,8
tick,0x101bdd694,9293625,0,0x0,8
tick,0x192527ad0,9294917,0,0x0,8
tick,0x101188980,9295958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9297042,0,0x0,8
tick,0x19252e620,9298083,0,0x0,8
tick,0x19252ad6c,9299375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100fc4f88,9300625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016617c0,9301875,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,9303125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9304417,0,0x0,8
tick,0x19252e620,9305667,0,0x0,8
tick,0x19252b4fc,9306917,0,0x0,8
tick,0x100e2fb6c,9308167,0,0x0,8
tick,0x19252ad6c,9309417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9310667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9311958,0,0x0,8
tick,0x10113e764,9313208,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,9314458,0,0x0,8
tick,0x192381ab0,9315708,0,0x0,8
tick,0x19252ad6c,9316958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9318208,0,0x0,8
tick,0x19252e620,9319375,0,0x0,8
tick,0x19252b25c,9320625,0,0x0,8
tick,0x19252e620,9321875,0,0x0,8
tick,0x101671d98,9323167,0,0x0,0,0x107fe4900,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9324333,0,0x0,8
tick,0x19259e7ec,9325542,0,0x0,1
tick,0x192528738,9326792,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,9328083,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9329167,0,0x0,8
tick,0x100e6d204,9330417,0,0x0,5
tick,0x19252e620,9331667,0,0x0,8
tick,0x19252e620,9332917,0,0x0,8
tick,0x192527a78,9334208,0,0x0,8
tick,0x19252e620,9335375,0,0x0,8
tick,0x10164b7d4,9336625,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9337917,0,0x0,8
tick,0x19252e620,9339083,0,0x0,8
tick,0x19252e620,9340167,0,0x0,8
tick,0x19252e620,9341250,0,0x0,8
tick,0x19252e620,9342500,0,0x0,8
tick,0x19252e620,9343750,0,0x0,8
tick,0x19252e620,9344792,0,0x0,8
tick,0x19252e620,9345917,0,0x0,8
tick,0x19252e620,9346917,0,0x0,8
tick,0x1016515b0,9348167,0,0x0,8
tick,0x19252e620,9349250,0,0x0,8
tick,0x100ea3430,9350458,0,0x0,1
tick,0x19252b25c,9351708,0,0x0,0,0x10800a800
tick,0x1009dfdfc,9353000,0,0x0,6
tick,0x19252e620,9354250,0,0x0,8
tick,0x19252e620,9355375,0,0x0,8
tick,0x19252a6ec,9356625,0,0x0,1
tick,0x19252e620,9357667,0,0x0,8
tick,0x19252b25c,9358917,0,0x0,0,0x10800a800
tick,0x10801e728,9360167,0,0x0,0,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9361417,0,0x0,8
tick,0x19252e620,9362500,0,0x0,8
tick,0x1010045a0,9363750,0,0x0,5
tick,0x192528738,9365000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9366250,0,0x0,8
tick,0x19252b4fc,9367500,0,0x0,8
tick,0x19252e620,9368542,0,0x0,8
tick,0x108012a70,9369750,0,0x0,0,0x108021570,0x107fe2ff0
tick,0x19252f804,9370958,0,0x0,8
tick,0x19252e620,9410125,0,0x0,8
tick,0x19252f804,9411083,0,0x0,8
tick,0x19252e620,9412333,0,0x0,8
tick,0x19252e620,9413458,0,0x0,8
tick,0x19252ad6c,9414708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,9416000,0,0x0,8
tick,0x19252e620,9417250,0,0x0,8
tick,0x1016ad228,9418500,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252e620,9419750,0,0x0,8
tick,0x19252e620,9421000,0,0x0,8
tick,0x19252f804,9422250,0,0x0,8
tick,0x10113e7d0,9423500,0,0x0,5
tick,0x19252e620,9424542,0,0x0,8
tick,0x1027126e0,9425792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101098634,9427042,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b25c,9428167,0,0x0,8
tick,0x1925a17d4,9429417,0,0x0,6
tick,0x19237394c,9430708,0,0x0,8
tick,0x19252e620,9432125,0,0x0,8
tick,0x19252b4fc,9433333,0,0x0,8
tick,0x1009bd14c,9434542,0,0x0,8
tick,0x192527354,9435792,0,0x0,8
tick,0x100e22b4c,9437375,0,0x0,0
tick,0x1016b6fb0,9438542,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x100cbd164,9439792,0,0x0,5
tick,0x100a60f48,9441042,1,0x100a60f20,6,0x10801af5c,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9442292,0,0x0,8
tick,0x192375fd8,9443458,0,0x0,8
tick,0x1009f0e04,9444750,0,0x0,6
tick,0x19252b4fc,9446042,0,0x0,8
tick,0x1017b6100,9447375,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e50ee8,9448625,0,0x0,1
tick,0x100e3d10c,9449917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,9451167,0,0x0,8
tick,0x101672500,9452375,0,0x0,0,0x107fe4900,0x10800d58c,0x10800cb40,0x10800a9e8
tick,0x100e2fb3c,9453667,0,0x0,6
tick,0x100cbd4ac,9454917,0,0x0,6
tick,0x192375898,9456333,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x107f9fd40,9457542,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x101198bb8,9458708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800f28c,9460125,0,0x0,0,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192375b68,9461333,0,0x0,8
tick,0x101005a6c,9462625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9463833,0,0x0,8
tick,0x19252b4fc,9465125,0,0x0,8
tick,0x19252b3f4,9466375,0,0x0,8
tick,0x19252b4fc,9467583,0,0x0,8
tick,0x19252e620,9468875,0,0x0,8
tick,0x19252b4fc,9470042,0,0x0,8
tick,0x1080230e8,9471292,0,0x0,0,0x108021988
tick,0x101671f24,9472583,0,0x0,0,0x107fe484c,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,9473833,0,0x0,8
tick,0x19252e620,9475125,0,0x0,8
tick,0x19252ad6c,9476375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080144f8,9477625,0,0x0,0,0x1080266d0,0x108010e90
tick,0x100e98598,9478917,0,0x0,1
tick,0x192528738,9480167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10165db28,9481458,0,0x0,8
tick,0x19252e620,9482667,0,0x0,8
tick,0x19252e620,9483958,0,0x0,8
tick,0x100cc2c18,9485250,0,0x0,8
tick,0x19252e620,9486500,0,0x0,8
tick,0x192527ad0,9487875,0,0x0,8
tick,0x1016b6400,9488958,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9490292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,9491583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101198e7c,9492792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9494042,0,0x0,8
tick,0x19252e620,9495292,0,0x0,8
tick,0x19252ad6c,9496542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9497833,0,0x0,8
tick,0x19252ad6c,9498875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9500125,0,0x0,8
tick,0x192527a78,9501375,0,0x0,8
tick,0x19252e620,9502417,0,0x0,8
tick,0x19252e620,9503667,0,0x0,8
tick,0x19252e620,9504875,0,0x0,8
tick,0x1923763c4,9505958,0,0x0,8
tick,0x19252ad6c,9507208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9508500,0,0x0,8
tick,0x19252e620,9509625,0,0x0,8
tick,0x19252e620,9510875,0,0x0,8
tick,0x19252ad6c,9511917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100abc120,9513167,0,0x0,8
tick,0x19252e620,9514417,0,0x0,8
tick,0x19252e620,9515458,0,0x0,8
tick,0x19252ad6c,9516458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016720c8,9517667,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x19252e620,9518833,0,0x0,8
tick,0x19252e620,9520083,0,0x0,8
tick,0x19252e620,9521333,0,0x0,8
tick,0x101701f60,9522583,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9523875,0,0x0,8
tick,0x19252e620,9524917,0,0x0,8
tick,0x19252b25c,9526042,0,0x0,0,0x10800a800
tick,0x1016b749c,9527292,0,0x0,0,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x19252e620,9528542,0,0x0,8
tick,0x19252ad6c,9529792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9530958,0,0x0,8
tick,0x192375a44,9532167,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x10166068c,9533417,0,0x0,0,0x107fe3ef8,0x107ff8c88,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100abc900,9534708,0,0x0,8
tick,0x101098938,9535958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x101672280,9537208,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x19252ad6c,9538458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10801ae00,9539708,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9541000,0,0x0,8
tick,0x1009b9638,9542250,0,0x0,6
tick,0x19252b25c,9543500,0,0x0,0,0x10800a800
tick,0x1923879d0,9544750,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9546000,0,0x0,8
tick,0x1923a6178,9547250,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101160b18,9548500,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100a252e0,9549750,0,0x0,6
tick,0x19252f804,9551042,0,0x0,8
tick,0x192527ad0,9552292,0,0x0,8
tick,0x100cef794,9553542,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9554792,0,0x0,8
tick,0x100e22b00,9556042,0,0x0,0
tick,0x19252e620,9557333,0,0x0,8
tick,0x19252ad6c,9558583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9559833,0,0x0,8
tick,0x1016b7100,9561083,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252e620,9562375,0,0x0,8
tick,0x19252b25c,9563583,0,0x0,0,0x10800a800
tick,0x1925708b0,9564833,0,0x0,8
tick,0x19252e620,9566042,0,0x0,8
tick,0x19252b4fc,9567292,0,0x0,8
tick,0x1016b653c,9568542,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,9569792,0,0x0,8
tick,0x19252e620,9570917,0,0x0,8
tick,0x19252e620,9571958,0,0x0,8
tick,0x19252e620,9573208,0,0x0,8
tick,0x19252e620,9574458,0,0x0,8
new,MemoryChunk,0x3c02e97c0000,262144
tick,0x19252b4fc,9575708,0,0x0,8
tick,0x100cbd494,9576958,0,0x0,6
tick,0x19252e620,9578250,0,0x0,8
tick,0x19252e620,9579500,0,0x0,8
tick,0x19252e620,9580750,0,0x0,8
tick,0x19252e620,9582000,0,0x0,8
tick,0x19252e620,9583083,0,0x0,8
tick,0x192527354,9584083,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,9585167,0,0x0,8
tick,0x19252e620,9586167,0,0x0,8
tick,0x192527ad0,9587417,0,0x0,8
tick,0x19252e620,9588667,0,0x0,8
tick,0x19252e620,9589833,0,0x0,8
tick,0x19252e620,9591083,0,0x0,8
tick,0x19252e620,9592333,0,0x0,8
tick,0x19252e620,9593583,0,0x0,8
tick,0x100cef658,9594667,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x100f14e88,9595708,0,0x0,1
tick,0x19252e620,9596833,0,0x0,8
tick,0x1016ad2a0,9598042,0,0x0,0,0x1080267a8,0x108010e90
tick,0x19252ad6c,9599333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9600583,0,0x0,8
tick,0x192527ad0,9601833,0,0x0,8
tick,0x19252e620,9603083,0,0x0,8
tick,0x10166b450,9604333,0,0x0,0,0x10801a474
tick,0x19252e620,9605583,0,0x0,8
tick,0x19252b25c,9606875,0,0x0,8
tick,0x19252ad6c,9607958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9609208,0,0x0,8
tick,0x19252ad6c,9610208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9611458,0,0x0,8
tick,0x19252b25c,9612708,0,0x0,0,0x10800a800
tick,0x192528738,9614000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9615000,0,0x0,8
tick,0x19252e620,9616042,0,0x0,8
tick,0x19252e620,9617167,0,0x0,8
tick,0x1080164e0,9618250,0,0x0,0,0x108026920,0x108010e90
tick,0x100e6d550,9619375,0,0x0,5
tick,0x192529bbc,9620625,0,0x0,1
tick,0x19252e620,9621917,0,0x0,8
tick,0x19252b25c,9623167,0,0x0,0,0x10800a800
tick,0x192527a78,9624417,0,0x0,8
tick,0x19252e620,9625667,0,0x0,8
tick,0x19252e620,9626917,0,0x0,8
tick,0x19252e620,9628208,0,0x0,8
tick,0x19252e620,9629458,0,0x0,8
tick,0x100e01724,9630708,0,0x0,5
tick,0x192527354,9631958,0,0x0,8
tick,0x19252e620,9633042,0,0x0,8
tick,0x19252e620,9634042,0,0x0,8
tick,0x19252e620,9635333,0,0x0,8
tick,0x19252e620,9636583,0,0x0,8
tick,0x101139ba8,9637833,0,0x0,5
tick,0x19252e620,9639083,0,0x0,8
tick,0x19252e620,9640333,0,0x0,8
tick,0x100cbccc8,9641583,0,0x0,8
tick,0x19252e620,9642875,0,0x0,8
tick,0x19252e620,9643958,0,0x0,8
tick,0x19252e620,9645042,0,0x0,8
tick,0x19252b3f4,9646292,0,0x0,8
tick,0x19252b3f4,9647583,0,0x0,8
tick,0x108026864,9648833,0,0x0,0,0x108010e90
tick,0x100cbd328,9650042,0,0x0,8
tick,0x19252ad6c,9651292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b7038,9652375,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100abc7e4,9653625,0,0x0,8
tick,0x101660de0,9654875,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x107feeef8,0x107fe2ff0
tick,0x19252e620,9656167,0,0x0,8
tick,0x19252e620,9657417,0,0x0,8
tick,0x19252e620,9658458,0,0x0,8
tick,0x19252e620,9659583,0,0x0,8
tick,0x19252e620,9660625,0,0x0,8
tick,0x19252e620,9661708,0,0x0,8
tick,0x19252e620,9662750,0,0x0,8
tick,0x19252ad6c,9664000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9665250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9666542,0,0x0,8
tick,0x19252e620,9667792,0,0x0,8
tick,0x19252e620,9669042,0,0x0,8
tick,0x19252e620,9670167,0,0x0,8
tick,0x1016b749c,9671375,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252f804,9672625,0,0x0,8
tick,0x101198bd4,9673875,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9675167,0,0x0,8
tick,0x19252ad6c,9676333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ba80ec,9677417,0,0x0,6
tick,0x19252e620,9678625,0,0x0,8
tick,0x19252e620,9679667,0,0x0,8
tick,0x19252e620,9680708,0,0x0,8
tick,0x19252e620,9681958,0,0x0,8
tick,0x19252ad6c,9683208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9684500,0,0x0,8
tick,0x192527ad0,9685500,0,0x0,8
tick,0x100cbcbd8,9686750,0,0x0,8
tick,0x19252e620,9687875,0,0x0,8
tick,0x19252e620,9689167,0,0x0,8
tick,0x19252e620,9690417,0,0x0,8
tick,0x100abbe64,9691417,0,0x0,8
tick,0x19252e620,9692667,0,0x0,8
tick,0x19252e620,9693750,0,0x0,8
tick,0x19252e620,9694792,0,0x0,8
tick,0x1012856e0,9696042,0,0x0,5,0x108023204,0x108021988
tick,0x19252e620,9697333,0,0x0,8
tick,0x100cbd48c,9698583,0,0x0,6
tick,0x19252ad6c,9699833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9701083,0,0x0,8
tick,0x192527354,9702333,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,9703625,0,0x0,8
tick,0x19252e620,9704875,0,0x0,8
tick,0x19252e620,9705958,0,0x0,8
tick,0x19252e620,9707208,0,0x0,8
tick,0x19252b4fc,9708458,0,0x0,8
tick,0x19252b4fc,9709708,0,0x0,8
tick,0x19252e620,9710958,0,0x0,8
tick,0x1016b749c,9712208,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9713458,0,0x0,8
tick,0x19252e620,9714708,0,0x0,8
tick,0x19252e620,9715958,0,0x0,8
tick,0x19252e620,9717208,0,0x0,8
tick,0x19252b4fc,9718500,0,0x0,8
tick,0x19252e620,9719792,0,0x0,8
tick,0x1925708c4,9721083,0,0x0,8
tick,0x19252e620,9722333,0,0x0,8
tick,0x19252e620,9723458,0,0x0,8
tick,0x10166c074,9724750,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,9726000,0,0x0,8
tick,0x19252e620,9727375,0,0x0,8
tick,0x19252e620,9728500,0,0x0,8
tick,0x19252ad6c,9729792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff2cf4,9731042,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,9732208,0,0x0,8
tick,0x19252b3f4,9733458,0,0x0,8
tick,0x192528738,9734750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,9736000,0,0x0,8
tick,0x19252e620,9737250,0,0x0,8
tick,0x1009b1668,9738542,0,0x0,8
tick,0x19252a6ec,9739833,0,0x0,1
tick,0x192527ad0,9741083,0,0x0,8
tick,0x10166abd4,9742333,0,0x0,0
tick,0x1923761fc,9743625,0,0x0,8
tick,0x19252e620,9744875,0,0x0,8
tick,0x19252e620,9746167,0,0x0,8
tick,0x19252ad6c,9747417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9748667,0,0x0,8
tick,0x19252e620,9749917,0,0x0,8
tick,0x19252e620,9751083,0,0x0,8
tick,0x19252ad6c,9752375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100a75750,9753625,0,0x0,8
tick,0x19252e620,9754667,0,0x0,8
tick,0x19252e620,9755750,0,0x0,8
tick,0x100cbccb8,9757000,0,0x0,6
tick,0x19252ad6c,9758250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100f12aa8,9759542,0,0x0,1
tick,0x107fe4670,9760792,0,0x0,0,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x100ce9f8c,9762042,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108013964,9763125,0,0x0,0,0x1080263b8,0x108010e90
tick,0x107fe3210,9764375,0,0x0,0
tick,0x19252e620,9765625,0,0x0,8
tick,0x19252e620,9766708,0,0x0,8
tick,0x19252e620,9767958,0,0x0,8
tick,0x19252e620,9769208,0,0x0,8
tick,0x19252e620,9770458,0,0x0,8
tick,0x19252e620,9771625,0,0x0,8
tick,0x19252e620,9772667,0,0x0,8
tick,0x1016b757c,9773667,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9774792,0,0x0,8
tick,0x19252b4fc,9776000,0,0x0,8
tick,0x1923a02b4,9777292,0,0x0,8
tick,0x19252f804,9778542,0,0x0,8
tick,0x19252e620,9779792,0,0x0,8
tick,0x19252e620,9780917,0,0x0,8
tick,0x19252ad6c,9782167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9783458,0,0x0,8
tick,0x19252b4fc,9784667,0,0x0,8
tick,0x19252e620,9785917,0,0x0,8
tick,0x101660dd4,9787167,0,0x0,0,0x10800f458,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9788417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9789708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,9790958,0,0x0,8
tick,0x19259e814,9792208,0,0x0,8
tick,0x19252e620,9793458,0,0x0,8
tick,0x100a60f30,9794708,1,0x100a60f20,6,0x10801af5c,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x1016ada9c,9795958,0,0x0,0,0x107fe46e0,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x19252e620,9797250,0,0x0,8
tick,0x19252e620,9798500,0,0x0,8
tick,0x1016a52c0,9799542,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9800792,0,0x0,8
tick,0x19252e620,9801917,0,0x0,8
tick,0x19252e620,9803167,0,0x0,8
tick,0x19252e620,9804292,0,0x0,8
tick,0x192527ad0,9805542,0,0x0,8
tick,0x100cd2520,9806833,0,0x0,6
tick,0x19252e620,9807958,0,0x0,8
tick,0x100e40b04,9809125,0,0x0,1
tick,0x100cbcc28,9810375,0,0x0,6
tick,0x19252e620,9811625,0,0x0,8
tick,0x19252ad6c,9812875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe2aa8,9814125,0,0x0,0
tick,0x101669cf0,9815375,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252e620,9816708,0,0x0,8
tick,0x101749a68,9817917,0,0x0,0,0x101787ff0,0x10802651c,0x108010e90
tick,0x19252ad6c,9819167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101669ff8,9820417,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x10801fca8,9821708,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9822708,0,0x0,8
tick,0x19259e700,9823833,0,0x0,6
tick,0x107fe3040,9825083,0,0x0,0
tick,0x19252b3bc,9826333,0,0x0,8
tick,0x19252ad6c,9827625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101671d20,9828875,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,9830125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9831208,0,0x0,8
tick,0x1016b7038,9832250,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,9833500,0,0x0,8
tick,0x19252f804,9834750,0,0x0,8
tick,0x10165db28,9836042,0,0x0,8
tick,0x100cbcc2c,9837083,0,0x0,6
tick,0x19252e620,9838333,0,0x0,8
tick,0x19252e620,9839583,0,0x0,8
tick,0x19252e620,9840875,0,0x0,8
tick,0x19252e620,9841917,0,0x0,8
tick,0x10109923c,9842917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9844167,0,0x0,8
tick,0x19252e620,9845250,0,0x0,8
tick,0x19252e620,9846375,0,0x0,8
tick,0x19252e620,9847458,0,0x0,8
tick,0x19252b25c,9848667,0,0x0,0,0x10800a800
tick,0x1016568e4,9849917,0,0x0,0,0x10800a800
tick,0x19252e620,9851208,0,0x0,8
tick,0x19252e620,9852458,0,0x0,8
tick,0x19252e620,9853500,0,0x0,8
tick,0x19252e620,9854500,0,0x0,8
tick,0x107fe2b34,9855750,0,0x0,0
tick,0x19252b4fc,9857042,0,0x0,8
tick,0x19252e620,9858125,0,0x0,8
tick,0x19252e620,9859167,0,0x0,8
tick,0x19252e620,9860208,0,0x0,8
tick,0x19252e620,9861458,0,0x0,8
tick,0x19252e620,9862708,0,0x0,8
tick,0x19252e620,9863958,0,0x0,8
tick,0x19252d01c,9865000,0,0x0,0,0x108026b04,0x108010e90
tick,0x19252ad6c,9866250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9867333,0,0x0,8
tick,0x192527354,9868542,0,0x0,8
tick,0x100cd5968,9869833,1,0x100ba3118,6,0x0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9871083,0,0x0,8
tick,0x19252e620,9872208,0,0x0,8
tick,0x19252f804,9873458,0,0x0,8
tick,0x19252e620,9874708,0,0x0,8
tick,0x10165b680,9875958,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100ccdbc4,9877250,0,0x0,8
tick,0x19252e620,9878500,0,0x0,8
tick,0x19252e620,9879542,0,0x0,8
tick,0x107ff2c30,9880583,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252b4fc,9881875,0,0x0,8
tick,0x107fe46d8,9883125,0,0x0,0,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,9884375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e2fb6c,9885625,0,0x0,8
tick,0x19252e620,9886917,0,0x0,8
tick,0x1011348f4,9888125,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,9889375,0,0x0,8
tick,0x19252e620,9890667,0,0x0,8
tick,0x107fec37c,9891667,0,0x0,0,0x10801053c
tick,0x19252e620,9892958,0,0x0,8
tick,0x19252e620,9894000,0,0x0,8
tick,0x19252e620,9895125,0,0x0,8
tick,0x19252e620,9896125,0,0x0,8
tick,0x10801ce54,9897292,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x19252e620,9898500,0,0x0,8
tick,0x19252e620,9899792,0,0x0,8
tick,0x100e7be94,9901042,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x10113ced0,9902250,0,0x0,5
tick,0x1009f0e04,9903500,0,0x0,6
tick,0x19252e620,9904792,0,0x0,8
tick,0x19252e620,9906042,0,0x0,8
tick,0x101bdacb8,9907292,0,0x0,8
tick,0x19252e620,9908542,0,0x0,8
tick,0x19252ad6c,9909792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9911083,0,0x0,8
tick,0x107fe4960,9912333,0,0x0,0,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x19252e620,9913583,0,0x0,8
tick,0x19252e620,9914625,0,0x0,8
tick,0x19252e620,9915667,0,0x0,8
tick,0x10174dd38,9916917,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,9918167,0,0x0,8
tick,0x19252b4fc,9919417,0,0x0,8
tick,0x19252e620,9920667,0,0x0,8
tick,0x19252e620,9921708,0,0x0,8
tick,0x1016a5280,9922917,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,9923958,0,0x0,8
tick,0x19252e620,9925000,0,0x0,8
tick,0x19252e620,9926167,0,0x0,8
tick,0x1080293e8,9927375,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,9928625,0,0x0,8
tick,0x192527ad0,9929875,0,0x0,8
tick,0x19252e620,9931125,0,0x0,8
tick,0x19252e620,9932292,0,0x0,8
tick,0x19252ad6c,9933292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9934292,0,0x0,8
tick,0x19252ad6c,9935583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,9936833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,9938083,0,0x0,8
tick,0x100cef794,9939375,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,9940667,0,0x0,8
tick,0x100a2c25c,9941875,0,0x0,8
tick,0x1016ad228,9943167,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252e620,9944417,0,0x0,8
tick,0x19252e620,9945458,0,0x0,8
tick,0x19252e620,9946458,0,0x0,8
tick,0x19252e620,9947583,0,0x0,8
tick,0x19252f804,9948833,0,0x0,8
tick,0x19252e620,9950125,0,0x0,8
tick,0x1016b6400,9951333,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252e620,9952625,0,0x0,8
tick,0x19252e620,9953875,0,0x0,8
tick,0x19252ad6c,9954917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9956167,0,0x0,8
tick,0x19252e620,9957292,0,0x0,8
tick,0x100e016fc,9958333,0,0x0,5
tick,0x19252e620,9959583,0,0x0,8
tick,0x19252e620,9960750,0,0x0,8
tick,0x10164b740,9962000,0,0x0,8
tick,0x19252e620,9963208,0,0x0,8
tick,0x19252e620,9964500,0,0x0,8
tick,0x19252ad6c,9965750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,9967167,0,0x0,8
tick,0x19252b25c,9968250,0,0x0,0,0x10800a800
tick,0x19252e620,9969542,0,0x0,8
tick,0x19252e620,9970583,0,0x0,8
tick,0x19252e620,9971667,0,0x0,8
tick,0x19252f804,9972917,0,0x0,8
tick,0x107ff10d8,9974167,0,0x0,0,0x107fe301c
tick,0x1009b15fc,9975417,0,0x0,8
tick,0x19252e620,9976708,0,0x0,8
tick,0x19252e620,9977958,0,0x0,8
tick,0x19252e620,9979208,0,0x0,8
tick,0x19252e620,9980292,0,0x0,8
code-creation,JS,12,9980333,0x108029ae0,428,getStderr node:internal/bootstrap/switches/is_main_thread:173:19,0x2ddc31ef5250,*
code-source-info,0x108029ae0,59,4448,5121,C0O4448C56O4455C76O4493C92O4448C104O4484C116O4448C140O4455C200O4448C248O4455,,
tick,0x19252e620,9981417,0,0x0,8
tick,0x192527ad0,9982625,0,0x0,8
tick,0x100e88304,9983625,0,0x0,5
tick,0x19252e620,9984708,0,0x0,8
tick,0x19252b4fc,9986000,0,0x0,8
tick,0x19252e620,9987000,0,0x0,8
tick,0x19252e620,9988000,0,0x0,8
tick,0x19252e620,9989292,0,0x0,8
tick,0x19252e620,9990333,0,0x0,8
tick,0x101671880,9991625,0,0x0,0,0x108028b08,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,9992833,0,0x0,8
tick,0x19252e620,9994125,0,0x0,8
tick,0x1016b7038,9995375,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,9996667,0,0x0,8
tick,0x19252e620,9997917,0,0x0,8
tick,0x19252e620,9999208,0,0x0,8
tick,0x100e856c4,10000500,0,0x0,5
tick,0x1016b6400,10001542,0,0x0,0,0x107fe301c
tick,0x19252e620,10002667,0,0x0,8
tick,0x10113d080,10003875,0,0x0,5
tick,0x100abcccc,10005125,0,0x0,8
tick,0x19252e620,10006375,0,0x0,8
tick,0x1923757c0,10007667,0,0x0,8
tick,0x19252ad6c,10008917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10010250,0,0x0,8
tick,0x19252b4fc,10011583,0,0x0,8
tick,0x19252e620,10012833,0,0x0,8
tick,0x19252e620,10014042,0,0x0,8
tick,0x192527ad0,10015292,0,0x0,8
tick,0x19252e620,10016542,0,0x0,8
tick,0x192527ad0,10017792,0,0x0,8
tick,0x100f12aa0,10018958,0,0x0,1
tick,0x100cb9554,10020208,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,10021500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10022667,0,0x0,8
tick,0x107f9a4e8,10023917,0,0x0,0,0x1080194f4,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19240b7fc,10025167,0,0x0,1
tick,0x19252b4fc,10026417,0,0x0,8
tick,0x19252ad6c,10027667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1925a185c,10028958,0,0x0,6
tick,0x1923761e0,10030208,0,0x0,8
tick,0x19252a6ec,10031458,0,0x0,1
tick,0x19252e620,10032708,0,0x0,8
tick,0x19252e620,10034000,0,0x0,8
tick,0x101660de8,10035250,0,0x0,0,0x107fe3ef8,0x10801fd48,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10036500,0,0x0,8
tick,0x100ba5740,10037750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10039042,0,0x0,8
tick,0x1009f0aa4,10040292,0,0x0,6
new,MemoryChunk,0x2e02cbd00000,262144
tick,0x19252b25c,10041542,0,0x0,8
tick,0x19252e620,10042792,0,0x0,8
tick,0x19252e620,10043875,0,0x0,8
tick,0x19252f804,10045083,0,0x0,8
tick,0x100cbd480,10046208,0,0x0,6
tick,0x19252e620,10047458,0,0x0,8
tick,0x19252e620,10048500,0,0x0,8
tick,0x19252e620,10049542,0,0x0,8
tick,0x19252e620,10050792,0,0x0,8
tick,0x19252e620,10051958,0,0x0,8
tick,0x192527ad0,10053208,0,0x0,8
tick,0x19252e620,10054458,0,0x0,8
tick,0x100f0e10c,10055500,0,0x0,1
tick,0x192376558,10056750,0,0x0,8
tick,0x19252e620,10058042,0,0x0,8
tick,0x192528738,10059083,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016515b0,10060333,0,0x0,8
tick,0x19252ad6c,10061625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10062875,0,0x0,8
tick,0x19252e620,10064125,0,0x0,8
tick,0x19252e620,10065375,0,0x0,8
tick,0x10113ce5c,10066625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10067917,0,0x0,8
tick,0x1016c55e0,10068917,0,0x0,0,0x10800af80,0x10800a738
tick,0x19252ad6c,10070208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19237560c,10071458,0,0x0,8
tick,0x1011482dc,10072708,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192527ad0,10073958,0,0x0,8
tick,0x19252e620,10075250,0,0x0,8
tick,0x19252e620,10076500,0,0x0,8
tick,0x19252e620,10077750,0,0x0,8
tick,0x19252e620,10079000,0,0x0,8
tick,0x19252e620,10080000,0,0x0,8
tick,0x19252e620,10081250,0,0x0,8
tick,0x19252e620,10082583,0,0x0,8
tick,0x19252e620,10083583,0,0x0,8
tick,0x19252e620,10084833,0,0x0,8
tick,0x19252e620,10086083,0,0x0,8
tick,0x19252f804,10087125,0,0x0,8
tick,0x107fed0e0,10088167,0,0x0,0,0x107ff5184,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016720b0,10089458,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x192528738,10090708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192372cf4,10091875,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10093125,0,0x0,8
tick,0x19252e620,10094375,0,0x0,8
tick,0x19252e620,10095667,0,0x0,8
tick,0x19252e620,10096708,0,0x0,8
tick,0x19252e620,10097833,0,0x0,8
tick,0x19252e620,10098958,0,0x0,8
tick,0x19252e620,10100250,0,0x0,8
tick,0x19252ad6c,10101292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,10102542,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10103583,0,0x0,8
tick,0x1016b749c,10104750,0,0x0,0,0x10800a738
tick,0x19252ad6c,10105833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10107125,0,0x0,8
tick,0x19252e620,10108333,0,0x0,8
tick,0x19252e620,10109583,0,0x0,8
tick,0x1925708bc,10110833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10174f320,10111875,0,0x0,0,0x10800a738
tick,0x1923a7598,10113167,0,0x0,8
tick,0x192527ad0,10114417,0,0x0,8
tick,0x101671d98,10115500,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x19252b25c,10116750,0,0x0,0,0x10800a800
tick,0x19252ad6c,10117958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10119250,0,0x0,8
tick,0x101660de8,10120500,0,0x0,0,0x107fe35dc
tick,0x19252e620,10121750,0,0x0,8
tick,0x19252e620,10123000,0,0x0,8
tick,0x19252e620,10124125,0,0x0,8
tick,0x1016a5408,10125375,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10126667,0,0x0,8
tick,0x100cd3ba8,10127917,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10129167,0,0x0,8
tick,0x19252e620,10130208,0,0x0,8
tick,0x19252f804,10131292,0,0x0,8
tick,0x19252b4fc,10132542,0,0x0,8
tick,0x19252e620,10133792,0,0x0,8
tick,0x10174dd40,10135083,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,10136292,0,0x0,8
tick,0x100cd24b4,10137583,0,0x0,5
tick,0x19252ad6c,10138792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108010550,10140042,0,0x0,0
tick,0x19252e620,10141208,0,0x0,8
tick,0x101285658,10142458,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,10143750,0,0x0,8
tick,0x1009ba100,10144958,0,0x0,6
tick,0x19252b25c,10146000,0,0x0,0,0x10800a800
tick,0x19252b25c,10147292,0,0x0,8
tick,0x1923757c0,10148542,0,0x0,8
tick,0x19252e620,10149625,0,0x0,8
tick,0x19252e620,10150667,0,0x0,8
tick,0x19252e620,10151917,0,0x0,8
tick,0x1012847a8,10153000,0,0x0,5
tick,0x19252e620,10154250,0,0x0,8
tick,0x107fec4dc,10155500,0,0x0,0,0x10801053c
tick,0x19252ad6c,10156750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10158000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,10159292,0,0x0,8
tick,0x10109c154,10160542,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252f804,10161792,0,0x0,8
tick,0x19252e620,10162958,0,0x0,8
tick,0x19252b25c,10164208,0,0x0,0,0x10800a800
tick,0x19252e620,10165458,0,0x0,8
tick,0x100abc844,10166708,0,0x0,0,0x108023160,0x108021988
tick,0x19252e620,10167875,0,0x0,8
tick,0x19252ad6c,10168958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10170208,0,0x0,8
tick,0x192528738,10171458,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10172750,0,0x0,8
tick,0x1016b701c,10174000,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x101660ddc,10175083,0,0x0,0,0x107fe3ef8,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b4fc,10176333,0,0x0,8
tick,0x19252b4fc,10177583,0,0x0,8
tick,0x19252e620,10178833,0,0x0,8
tick,0x19252e620,10180083,0,0x0,8
tick,0x107ff2c30,10181167,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,10182458,0,0x0,8
tick,0x19252e620,10183625,0,0x0,8
tick,0x19252e620,10184875,0,0x0,8
tick,0x100e2fb6c,10185875,0,0x0,8
tick,0x19252ad6c,10187125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10188375,0,0x0,8
tick,0x19252e620,10189625,0,0x0,8
tick,0x19252e620,10190833,0,0x0,8
tick,0x19252e620,10192000,0,0x0,8
tick,0x19252e620,10193042,0,0x0,8
tick,0x19252ad6c,10194125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10195375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10196625,0,0x0,8
tick,0x19252e620,10197875,0,0x0,8
tick,0x19252e620,10199125,0,0x0,8
tick,0x10164a6c4,10200375,0,0x0,8
tick,0x19252ad6c,10201625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10202667,0,0x0,8
tick,0x19252ad6c,10203708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,10204958,0,0x0,8
tick,0x19252b4fc,10206208,0,0x0,8
tick,0x1009d4a5c,10207458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10208750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10209750,0,0x0,8
tick,0x19252e620,10211000,0,0x0,8
tick,0x19252ad6c,10212292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108020efc,10213542,0,0x0,0
tick,0x1016b7038,10214792,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,10217417,0,0x0,8
tick,0x1016ace34,10218667,0,0x0,0,0x10801f9f8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1010eb564,10219875,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527ad0,10221250,0,0x0,8
tick,0x19252e620,10222375,0,0x0,8
tick,0x19252e620,10223667,0,0x0,8
tick,0x19252e620,10224875,0,0x0,8
tick,0x19252e620,10225917,0,0x0,8
tick,0x19252e620,10226958,0,0x0,8
tick,0x19252b25c,10228208,0,0x0,8
tick,0x19252e620,10229458,0,0x0,8
tick,0x100e01740,10230458,0,0x0,5
tick,0x19252e620,10231708,0,0x0,8
tick,0x19252e620,10232750,0,0x0,8
tick,0x19252ad6c,10233875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10235125,0,0x0,8
tick,0x1016ad030,10236375,0,0x0,0,0x107fe39b4,0x107fe2fb4
tick,0x19252e620,10237708,0,0x0,8
tick,0x19252e620,10238958,0,0x0,8
tick,0x19252e620,10240208,0,0x0,8
tick,0x19252e620,10241417,0,0x0,8
tick,0x19252f804,10242625,0,0x0,8
tick,0x100cef658,10243750,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,10244917,0,0x0,8
tick,0x19252b4fc,10246167,0,0x0,8
tick,0x107fe35d4,10247417,0,0x0,0
tick,0x19252e620,10248708,0,0x0,8
tick,0x192528738,10249958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10251292,0,0x0,8
tick,0x19252e620,10252375,0,0x0,8
tick,0x19252e620,10253417,0,0x0,8
tick,0x19252e620,10254625,0,0x0,8
tick,0x19252e620,10255708,0,0x0,8
tick,0x19252e620,10256708,0,0x0,8
tick,0x19252f804,10257958,0,0x0,8
tick,0x19252b25c,10259208,0,0x0,0,0x10800a800
tick,0x19252e620,10260458,0,0x0,8
tick,0x100e01d60,10261708,0,0x0,0
tick,0x19252e620,10263000,0,0x0,8
tick,0x19252e620,10264458,0,0x0,8
tick,0x19252e620,10266250,0,0x0,8
tick,0x19252ad6c,10266792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800addc,10268083,0,0x0,0,0x10800a738
tick,0x19259ea30,10269375,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101662048,10270625,0,0x0,0
tick,0x19252ad6c,10272000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ba5780,10273125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10274458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101198f9c,10275708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923a02a8,10277042,0,0x0,0,0x108023160,0x108021988
tick,0x1009b17b0,10278292,0,0x0,8
tick,0x19252b4fc,10279458,0,0x0,8
tick,0x19252e620,10280792,0,0x0,8
tick,0x19252ad6c,10282083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10283417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10284583,0,0x0,8
tick,0x107ff85ac,10285833,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100cd2590,10287083,0,0x0,6
tick,0x19252b4fc,10288417,0,0x0,8
tick,0x100e7bd24,10289625,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100f38e04,10290917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,10292167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,10293458,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10270e898,10294708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101198dd0,10295958,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10297292,0,0x0,8
tick,0x19252b25c,10298542,0,0x0,0,0x10800a800
tick,0x19252e620,10299917,0,0x0,8
tick,0x19252e620,10301083,0,0x0,8
tick,0x101671d28,10302375,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252b4fc,10303583,0,0x0,8
tick,0x19252ad6c,10304875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10306125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,10307417,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10308667,0,0x0,8
tick,0x100b1b1bc,10309917,0,0x0,8
tick,0x10166066c,10311167,0,0x0,0,0x107fe35dc
tick,0x108029570,10312417,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100e2fb30,10313708,0,0x0,8
tick,0x19252b4fc,10314958,0,0x0,8
tick,0x1009bd838,10316208,0,0x0,0,0x10800b1b4,0x10800a738
tick,0x19252ad6c,10317542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10318792,0,0x0,8
tick,0x1016b6f5c,10319875,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x192372de4,10321167,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527a78,10322458,0,0x0,8
tick,0x100ba3ebc,10323708,0,0x0,8
tick,0x100e21e80,10324958,0,0x0,8
tick,0x19252b4fc,10326208,0,0x0,8
tick,0x19252e620,10327250,0,0x0,8
tick,0x100ce9f8c,10328542,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,10329625,0,0x0,8
tick,0x19252ad6c,10330708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff87cc,10331958,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
new,MemoryChunk,0x199606f80000,262144
tick,0x19252e620,10333333,0,0x0,8
tick,0x19252e620,10334417,0,0x0,8
tick,0x192527354,10335667,0,0x0,8
tick,0x19252e620,10336708,0,0x0,8
tick,0x19252ad6c,10337958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1925a18b8,10339250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10340292,0,0x0,8
tick,0x19252e620,10341542,0,0x0,8
tick,0x19252e620,10342750,0,0x0,8
tick,0x19252e620,10343833,0,0x0,8
tick,0x19259e700,10344875,0,0x0,6
tick,0x1016b7038,10346125,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x10166a900,10347375,0,0x0,0
tick,0x19252e620,10348625,0,0x0,8
tick,0x19252e620,10349875,0,0x0,8
tick,0x19252e620,10351042,0,0x0,8
tick,0x19252e620,10352250,0,0x0,8
tick,0x19252e620,10353333,0,0x0,8
tick,0x19252e620,10354458,0,0x0,8
tick,0x19252b25c,10355542,0,0x0,8
tick,0x19252e620,10356792,0,0x0,8
tick,0x19252e620,10358083,0,0x0,8
tick,0x19252b4fc,10359333,0,0x0,8
tick,0x100e3d06c,10360583,0,0x0,8
tick,0x19252b4fc,10361833,0,0x0,8
tick,0x100e01714,10363083,0,0x0,5
tick,0x107fe3da8,10364333,0,0x0,0,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x101662120,10365583,0,0x0,0,0x107fe2ff0
tick,0x19252e620,10366875,0,0x0,8
tick,0x19252e620,10367917,0,0x0,8
tick,0x19252ad6c,10368917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10370083,0,0x0,8
tick,0x101134d4c,10371208,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10372583,0,0x0,8
tick,0x19252e620,10373542,0,0x0,8
tick,0x19252e620,10374708,0,0x0,8
tick,0x1009b1b80,10375958,0,0x0,6
tick,0x19252ad6c,10377208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10378500,0,0x0,8
tick,0x10801cd80,10379708,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10380792,0,0x0,8
tick,0x19252ad6c,10382042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10383333,0,0x0,8
tick,0x19252e620,10384500,0,0x0,8
tick,0x19252e620,10385792,0,0x0,8
tick,0x19252ad6c,10387042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10388167,0,0x0,8
tick,0x10801a67c,10389167,0,0x0,0,0x108019b28
tick,0x19252f804,10390458,0,0x0,8
tick,0x19252e620,10391708,0,0x0,8
tick,0x107fea664,10392958,0,0x0,0,0x107fe31b4
tick,0x1009b47fc,10394208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10395458,0,0x0,8
tick,0x19252ad6c,10396708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10398000,0,0x0,8
tick,0x100cd8a58,10399250,0,0x0,8
tick,0x19252b4fc,10400500,0,0x0,8
tick,0x192528738,10401750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e7bcf0,10402833,0,0x0,5
tick,0x102712f04,10404125,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,10405292,0,0x0,8
tick,0x107fef7e0,10406542,0,0x0,0,0x1080266d0,0x108010e90
tick,0x100d220a0,10407542,0,0x0,0,0x10176b97c,0x10801065c
tick,0x19252e620,10408792,0,0x0,8
tick,0x19252e620,10409833,0,0x0,8
tick,0x19252e620,10472833,0,0x0,8
tick,0x19252e620,10473667,0,0x0,8
tick,0x100ccc5ac,10474875,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,10476125,0,0x0,8
tick,0x19252e620,10477292,0,0x0,8
tick,0x19252e620,10478500,0,0x0,8
tick,0x19252e620,10479542,0,0x0,8
tick,0x19252ad6c,10480792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10482042,0,0x0,8
tick,0x19252e620,10483250,0,0x0,8
tick,0x19252e620,10484417,0,0x0,8
tick,0x19252e620,10485458,0,0x0,8
tick,0x19252e620,10486458,0,0x0,8
tick,0x19252ad6c,10487708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6410,10488958,0,0x0,0,0x1080266d0,0x108010e90
tick,0x100cc87f4,10490208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10491500,0,0x0,8
tick,0x19252e620,10492750,0,0x0,8
tick,0x19252e620,10493958,0,0x0,8
tick,0x19252e620,10495000,0,0x0,8
tick,0x19252e620,10496125,0,0x0,8
tick,0x19252b25c,10497375,0,0x0,8
tick,0x19252b4fc,10498625,0,0x0,8
tick,0x19252ad6c,10499875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,10501125,0,0x0,8
tick,0x19252e620,10502167,0,0x0,8
tick,0x19252e620,10503208,0,0x0,8
tick,0x19252e620,10504292,0,0x0,8
tick,0x19252ad6c,10505250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10506458,0,0x0,8
tick,0x19252e620,10507708,0,0x0,8
tick,0x19252e620,10508958,0,0x0,8
tick,0x19252e620,10510042,0,0x0,8
tick,0x19252e620,10511083,0,0x0,8
tick,0x19252e620,10512333,0,0x0,8
tick,0x19252ad6c,10513583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10514917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101701f7c,10516083,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x107f9fc78,10517167,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x192400594,10518292,0,0x0,1
tick,0x19252ad6c,10519542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800aec0,10520792,0,0x0,0,0x10800a738
tick,0x19252e620,10522042,0,0x0,8
tick,0x19252e620,10523083,0,0x0,8
tick,0x19252e620,10524250,0,0x0,8
tick,0x19252ad6c,10525500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10526750,0,0x0,8
tick,0x19259e700,10528000,0,0x0,6
tick,0x19252e620,10529292,0,0x0,8
tick,0x19252ad6c,10530542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10531833,0,0x0,8
tick,0x1009bcce4,10532792,0,0x0,8
tick,0x1016b7100,10534083,0,0x0,0
tick,0x19252f804,10535333,0,0x0,8
tick,0x100d0b8a0,10536583,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x10801b2c4,10537833,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x192527a78,10539083,0,0x0,8
tick,0x19252e620,10540375,0,0x0,8
tick,0x100ab6d3c,10541625,0,0x0,8
tick,0x19252e620,10542792,0,0x0,8
tick,0x19252e620,10543833,0,0x0,8
tick,0x19252b4fc,10544875,0,0x0,8
tick,0x19252e620,10546125,0,0x0,8
tick,0x10166b404,10547375,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,10548417,0,0x0,8
tick,0x19252e620,10549708,0,0x0,8
tick,0x19252e620,10550750,0,0x0,8
tick,0x19252e620,10551833,0,0x0,8
tick,0x1016b9134,10553083,0,0x0,0,0x107fe71c0,0x1080264e0,0x108010e90
tick,0x19252e620,10554333,0,0x0,8
tick,0x19252e620,10555625,0,0x0,8
tick,0x19252e620,10556792,0,0x0,8
tick,0x1016b6410,10557792,0,0x0,0,0x1080264e0,0x108010e90
tick,0x1016b7038,10559042,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252f804,10560333,0,0x0,8
tick,0x192371588,10561583,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101655908,10562750,0,0x0,8
tick,0x19252e620,10564000,0,0x0,8
tick,0x19252ad6c,10565167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe5270,10566417,0,0x0,0,0x10800b38c,0x10800a738
tick,0x19252e620,10567667,0,0x0,8
tick,0x19252e620,10568708,0,0x0,8
tick,0x19252e620,10569958,0,0x0,8
tick,0x1009b17a8,10571000,0,0x0,8
tick,0x19252ad6c,10572250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,10573542,0,0x0,8
tick,0x19252b4fc,10574792,0,0x0,8
tick,0x19252e620,10576042,0,0x0,8
tick,0x19252f804,10577125,0,0x0,8
tick,0x19252e620,10578417,0,0x0,8
tick,0x19252e620,10579708,0,0x0,8
tick,0x107fe4f24,10580750,0,0x0,0,0x10800b584,0x10800a738
tick,0x19252e620,10582000,0,0x0,8
tick,0x19252e620,10583167,0,0x0,8
tick,0x19252e620,10584250,0,0x0,8
tick,0x19252e620,10585250,0,0x0,8
tick,0x19252ad6c,10586500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10587750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10589000,0,0x0,8
tick,0x19252e620,10590125,0,0x0,8
tick,0x19252e620,10591250,0,0x0,8
tick,0x19252e620,10592333,0,0x0,8
tick,0x19252e620,10593375,0,0x0,8
tick,0x19252e620,10594375,0,0x0,8
tick,0x19252f804,10595375,0,0x0,8
tick,0x19252e620,10596667,0,0x0,8
tick,0x192375a00,10597958,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x108014420,10599208,0,0x0,0,0x108010e90
tick,0x10170220c,10600417,0,0x0,0
tick,0x10113c610,10601750,0,0x0,5
tick,0x19252e620,10602958,0,0x0,8
tick,0x100a28b3c,10604208,0,0x0,6
tick,0x1016b715c,10605500,0,0x0,0,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,10606750,0,0x0,8
tick,0x19252e620,10608000,0,0x0,8
tick,0x19252b4fc,10609208,0,0x0,8
tick,0x101736a70,10610500,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10611750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6fbc,10613000,0,0x0,0
tick,0x1016b6bb0,10614250,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,10615542,0,0x0,8
tick,0x100cc2c58,10616792,0,0x0,6
tick,0x19252e620,10618083,0,0x0,8
tick,0x19252b4fc,10619333,0,0x0,8
tick,0x101bd7c1c,10620583,0,0x0,8
tick,0x192528738,10621875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016b6b80,10623125,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252f804,10624375,0,0x0,8
tick,0x19252e620,10625667,0,0x0,8
tick,0x19252e620,10626875,0,0x0,8
tick,0x19252e620,10628167,0,0x0,8
tick,0x100cd2324,10629458,0,0x0,6
tick,0x19252ad6c,10630792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10632000,0,0x0,8
tick,0x101139ef8,10633292,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10634542,0,0x0,8
tick,0x10800dccc,10635750,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,10637000,0,0x0,8
tick,0x19252e620,10638333,0,0x0,8
tick,0x19252b25c,10639500,0,0x0,8
tick,0x19252ad6c,10640792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10642042,0,0x0,8
tick,0x10166f480,10643292,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10644500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10645625,0,0x0,8
tick,0x1009f162c,10646792,0,0x0,0,0x107fe7a50,0x10800bac4,0x10800a738
tick,0x19252e620,10648083,0,0x0,8
tick,0x1016c5338,10649333,0,0x0,0,0x10800a738
tick,0x19252e620,10650625,0,0x0,8
tick,0x19252e620,10651667,0,0x0,8
tick,0x19252e620,10652792,0,0x0,8
tick,0x100cc8228,10654000,0,0x0,8
tick,0x19252e620,10655250,0,0x0,8
tick,0x19252e620,10656292,0,0x0,8
tick,0x19252e620,10657375,0,0x0,8
tick,0x19252f804,10658625,0,0x0,8
tick,0x107fec5d4,10659875,0,0x0,0,0x10801053c
tick,0x107f9a458,10661125,0,0x0,0,0x108016424,0x108026920,0x108010e90
tick,0x1080195d8,10662375,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10663625,0,0x0,8
tick,0x19252b25c,10664875,0,0x0,8
tick,0x19252e620,10666167,0,0x0,8
tick,0x192527ad0,10667333,0,0x0,8
tick,0x19252e620,10668625,0,0x0,8
tick,0x192527354,10669875,0,0x0,8
tick,0x1923761ec,10671083,0,0x0,8
tick,0x19252e620,10672375,0,0x0,8
tick,0x19252b25c,10673375,0,0x0,8
tick,0x1925273e4,10674417,0,0x0,1
tick,0x19252e620,10675667,0,0x0,8
tick,0x19252ad6c,10676958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10678208,0,0x0,8
tick,0x19252e620,10679333,0,0x0,8
tick,0x19252a6ec,10680375,0,0x0,1
tick,0x101f20754,10681625,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,10682875,0,0x0,8
tick,0x19252e620,10683917,0,0x0,8
tick,0x19252b4fc,10685167,0,0x0,8
tick,0x19252f804,10686417,0,0x0,8
tick,0x10801a8b8,10687667,0,0x0,0,0x108019b28
tick,0x19252e620,10688958,0,0x0,8
tick,0x19252e620,10690042,0,0x0,8
tick,0x10801e53c,10691292,0,0x0,0,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10692542,0,0x0,8
tick,0x192527ad0,10693792,0,0x0,8
tick,0x19252e620,10695042,0,0x0,8
tick,0x19252e620,10696292,0,0x0,8
tick,0x19252e620,10697583,0,0x0,8
tick,0x10164aa20,10698625,0,0x0,8
tick,0x19252ad6c,10699875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10701167,0,0x0,8
tick,0x19252ad6c,10702333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10703583,0,0x0,8
tick,0x100ab7924,10704833,0,0x0,0,0x108023160,0x108021988
tick,0x192527ad0,10705917,0,0x0,8
tick,0x101658a48,10707167,0,0x0,8
tick,0x19252e620,10708417,0,0x0,8
tick,0x19252ad6c,10709500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10710750,0,0x0,8
tick,0x19252e620,10711875,0,0x0,8
tick,0x19252e620,10712875,0,0x0,8
tick,0x1017883c8,10714083,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,10715125,0,0x0,8
tick,0x19252e620,10716458,0,0x0,8
tick,0x19252e620,10717417,0,0x0,8
tick,0x19252e620,10718458,0,0x0,8
tick,0x192371bfc,10719667,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100e2fb38,10720958,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1009b47e0,10722208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10723458,0,0x0,8
tick,0x1016ace20,10724750,0,0x0,0,0x10801fd08,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10725958,0,0x0,8
tick,0x19252e620,10727250,0,0x0,8
tick,0x1016b6fb0,10728250,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10729500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6fbc,10730750,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,10732042,0,0x0,8
tick,0x19252e620,10733292,0,0x0,8
tick,0x19252e620,10734458,0,0x0,8
tick,0x19252e620,10735458,0,0x0,8
tick,0x192527ad0,10736708,0,0x0,8
tick,0x19252e620,10737958,0,0x0,8
tick,0x19252e620,10739000,0,0x0,8
tick,0x10164b650,10740250,0,0x0,8
tick,0x102712670,10741500,0,0x0,8
tick,0x19252b25c,10742542,0,0x0,8
tick,0x107fea798,10743833,0,0x0,0,0x107fe31b4
tick,0x19252b4fc,10745083,0,0x0,8
tick,0x192527a78,10746333,0,0x0,8
tick,0x19252e620,10747583,0,0x0,8
tick,0x19252e620,10748750,0,0x0,8
tick,0x19252e620,10749750,0,0x0,8
tick,0x100e21e64,10751000,0,0x0,8
tick,0x19252e620,10752292,0,0x0,8
tick,0x19252ad8c,10753458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10754708,0,0x0,8
tick,0x19252e620,10755750,0,0x0,8
tick,0x19252e620,10756792,0,0x0,8
tick,0x19252e620,10758042,0,0x0,8
tick,0x100ea32f8,10759083,0,0x0,1
tick,0x10166f12c,10760333,0,0x0,0
tick,0x100f389ec,10761583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,10762917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10763958,0,0x0,8
tick,0x192527ad0,10765208,0,0x0,8
tick,0x192528738,10766458,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,10767708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1012e6574,10768958,0,0x0,6
tick,0x19259ea30,10770250,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10771375,0,0x0,8
tick,0x19252e620,10772667,0,0x0,8
tick,0x19252e620,10773875,0,0x0,8
tick,0x19252e620,10775125,0,0x0,8
tick,0x19252ad6c,10776208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100f13c2c,10777333,0,0x0,1
tick,0x19252e620,10778625,0,0x0,8
tick,0x19252ad6c,10779667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527354,10780917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100cd5344,10782167,0,0x0,6
tick,0x19252f804,10783458,0,0x0,8
tick,0x19252e620,10784667,0,0x0,8
tick,0x10801a684,10785667,0,0x0,0,0x108019b28
tick,0x1923879d0,10786708,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,10787833,0,0x0,8
tick,0x19252ad6c,10789083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009c71e0,10790333,0,0x0,8
tick,0x1016acedc,10791583,0,0x0,0,0x107fe39b4,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10792875,0,0x0,8
tick,0x19252e620,10794125,0,0x0,8
tick,0x19252f804,10795375,0,0x0,8
tick,0x192371bac,10796625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10797875,0,0x0,8
tick,0x19252ad6c,10798958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10800208,0,0x0,8
tick,0x19252e620,10801458,0,0x0,8
tick,0x108018b44,10802708,0,0x0,0,0x107fee484,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x100abd1b8,10804000,0,0x0,8
tick,0x19252ad6c,10805250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,10806500,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10807500,0,0x0,8
tick,0x19252e620,10808750,0,0x0,8
tick,0x19252e620,10809875,0,0x0,8
tick,0x19252ad6c,10811125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe4328,10812375,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,10813667,0,0x0,8
tick,0x101660de0,10814750,0,0x0,0,0x107fe3ef8,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10816042,0,0x0,8
tick,0x19252e620,10817042,0,0x0,8
tick,0x1009b19f4,10818292,0,0x0,6
tick,0x19252e620,10819583,0,0x0,8
tick,0x100b9d144,10820792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10822083,0,0x0,8
tick,0x19252e620,10823125,0,0x0,8
tick,0x19252e620,10824167,0,0x0,8
tick,0x19252e620,10825458,0,0x0,8
tick,0x101194d00,10826458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x101144558,10827625,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,10828792,0,0x0,8
tick,0x19252e620,10830042,0,0x0,8
tick,0x19252e620,10831292,0,0x0,8
tick,0x19252e620,10832458,0,0x0,8
tick,0x19252e620,10833500,0,0x0,8
tick,0x19252ad6c,10834542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10835667,0,0x0,8
tick,0x19252e620,10836917,0,0x0,8
tick,0x19252b3f4,10837958,0,0x0,8
tick,0x19252e620,10839083,0,0x0,8
tick,0x19252e620,10840333,0,0x0,8
tick,0x19252ad6c,10841375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10842625,0,0x0,8
tick,0x19252b3f4,10843875,0,0x0,8
tick,0x100ba44fc,10845167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923755f8,10846417,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b25c,10847458,0,0x0,0,0x10800a800
tick,0x192522354,10848708,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,10849958,0,0x0,8
tick,0x19252e620,10851292,0,0x0,8
tick,0x19252e620,10852458,0,0x0,8
tick,0x19252e620,10853542,0,0x0,8
tick,0x19252e620,10854542,0,0x0,8
tick,0x19252ad6c,10855833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016bd5dc,10857083,0,0x0,0,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x19252e620,10858333,0,0x0,8
tick,0x1080106dc,10859583,0,0x0,0
tick,0x10113c824,10860833,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,10862125,0,0x0,8
tick,0x19252f804,10863458,0,0x0,8
tick,0x19252e620,10864625,0,0x0,8
tick,0x19252e620,10865708,0,0x0,8
tick,0x19252e620,10866750,0,0x0,8
tick,0x19252e620,10868042,0,0x0,8
tick,0x19252e620,10869292,0,0x0,8
tick,0x19252ad6c,10870542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10871875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10873125,0,0x0,8
tick,0x19252e620,10874125,0,0x0,8
tick,0x19252f804,10875375,0,0x0,8
tick,0x19252e620,10876917,0,0x0,8
tick,0x19252e620,10877875,0,0x0,8
tick,0x100abc750,10878917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1016e10c0,10880250,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,10881542,0,0x0,8
tick,0x192373cfc,10882833,0,0x0,6
tick,0x19252e620,10884042,0,0x0,8
tick,0x107fe2a6c,10885333,0,0x0,0
tick,0x19252f804,10886708,0,0x0,8
tick,0x19252e620,10887917,0,0x0,8
tick,0x100e3cdb4,10889208,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100a754b4,10890500,0,0x0,0,0x108023160,0x108021988
tick,0x100d0ac70,10891542,0,0x0,6
tick,0x1925279ec,10892792,0,0x0,8
tick,0x19252ad6c,10894083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10895333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10896542,0,0x0,8
tick,0x19252e620,10897833,0,0x0,8
tick,0x192527ad0,10899042,0,0x0,8
tick,0x19252b4fc,10900375,0,0x0,8
tick,0x19252e620,10901625,0,0x0,8
tick,0x192527ad0,10902875,0,0x0,8
tick,0x100f12aa8,10904125,0,0x0,1
tick,0x19252ad6c,10905417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101198f80,10906667,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10907958,0,0x0,8
tick,0x10800f438,10909208,0,0x0,0,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,10910458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10911750,0,0x0,8
tick,0x1009f165c,10913000,0,0x0,0,0x107fe7a50,0x10800bac4,0x10800a738
tick,0x192527354,10914250,0,0x0,8
tick,0x10166a860,10915292,0,0x0,0
tick,0x19252e620,10916583,0,0x0,8
tick,0x101139bd0,10917833,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1925a17d4,10919083,0,0x0,6
tick,0x10116a508,10920333,0,0x0,5
tick,0x192381af4,10921583,0,0x0,1
tick,0x10166b4b0,10922667,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x101749fdc,10923917,0,0x0,0,0x108010ac0
tick,0x19252e620,10924958,0,0x0,8
tick,0x19252e620,10926000,0,0x0,8
tick,0x100abc7e8,10927000,0,0x0,8
new,MemoryChunk,0x27645d580000,262144
new,MemoryChunk,0x49552540000,262144
tick,0x19252e620,10928417,0,0x0,8
tick,0x19252e620,10929500,0,0x0,8
tick,0x19252e620,10930500,0,0x0,8
tick,0x10166a948,10931750,0,0x0,0
tick,0x1923a6198,10932875,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10933958,0,0x0,8
tick,0x19252e620,10934958,0,0x0,8
tick,0x19252e620,10936125,0,0x0,8
tick,0x19252e620,10937208,0,0x0,8
tick,0x19252b4fc,10938458,0,0x0,8
tick,0x107fea76c,10939708,0,0x0,0,0x107fe31b4
tick,0x19252e620,10940833,0,0x0,8
tick,0x19252e620,10941958,0,0x0,8
tick,0x19252b25c,10943000,0,0x0,8
tick,0x19252b3f4,10944250,0,0x0,8
tick,0x19252b4fc,10945500,0,0x0,8
tick,0x19252e620,10946750,0,0x0,8
tick,0x19252f804,10948000,0,0x0,8
tick,0x19237567c,10949292,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,10950542,0,0x0,8
tick,0x19252ad6c,10951667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10952917,0,0x0,8
tick,0x19252e620,10953958,0,0x0,8
tick,0x19252e620,10955042,0,0x0,8
tick,0x107fea784,10956292,0,0x0,0,0x107fe31b4
tick,0x19252e620,10957542,0,0x0,8
tick,0x19252b25c,10958667,0,0x0,0,0x10800a800
tick,0x19252e620,10959708,0,0x0,8
tick,0x19252ad6c,10960875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,10962000,0,0x0,8
tick,0x108010a88,10963250,0,0x0,0
tick,0x19252b4fc,10964500,0,0x0,8
tick,0x19252e620,10965750,0,0x0,8
tick,0x19252e620,10966958,0,0x0,8
tick,0x100e21e64,10968000,0,0x0,6
tick,0x19252e620,10969333,0,0x0,8
tick,0x192527ad0,10970292,0,0x0,8
tick,0x19252ad6c,10971542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,10972792,0,0x0,8
tick,0x19252b4fc,10974042,0,0x0,8
tick,0x19252f804,10975333,0,0x0,8
tick,0x107feebf4,10976583,0,0x0,0,0x107fe2ff0
tick,0x100cbaba4,10977833,0,0x0,5
tick,0x19252e620,10979083,0,0x0,8
tick,0x19252e620,10980333,0,0x0,8
tick,0x19252e620,10981667,0,0x0,8
tick,0x101a8c4b0,10982667,0,0x0,6
tick,0x19252e620,10983708,0,0x0,8
tick,0x100d0a874,10984792,0,0x0,5
tick,0x100cbccd0,10986042,0,0x0,6
tick,0x19252e620,10987333,0,0x0,8
tick,0x10166b450,10988583,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252b3f4,10989833,0,0x0,8
tick,0x101661604,10991083,0,0x0,0
tick,0x19252e620,10992417,0,0x0,8
tick,0x19252ad6c,10993417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108026698,10994667,0,0x0,0,0x108010e90
tick,0x19252e620,10995958,0,0x0,8
tick,0x108026920,10997042,0,0x0,0,0x108010e90
tick,0x19252e620,10998292,0,0x0,8
tick,0x19252e620,10999458,0,0x0,8
tick,0x19252e620,11000500,0,0x0,8
tick,0x192527ad0,11001750,0,0x0,8
tick,0x19252e620,11003000,0,0x0,8
tick,0x19252e620,11004042,0,0x0,8
tick,0x19252e620,11005125,0,0x0,8
tick,0x100a23b3c,11006375,0,0x0,6
tick,0x19252e620,11007625,0,0x0,8
tick,0x19252e620,11008792,0,0x0,8
tick,0x19252e620,11009833,0,0x0,8
tick,0x19252e620,11010917,0,0x0,8
tick,0x19252e620,11012000,0,0x0,8
tick,0x19252e620,11013208,0,0x0,8
tick,0x19252b25c,11014208,0,0x0,0,0x10800a800
tick,0x100ccf3d0,11015458,0,0x0,8
tick,0x192381b0c,11016708,0,0x0,8
tick,0x19252e620,11018000,0,0x0,8
tick,0x192528738,11019292,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100eb582c,11020625,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x192373a68,11021792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11022917,0,0x0,8
tick,0x19252e620,11024167,0,0x0,8
tick,0x19252e620,11025542,0,0x0,8
tick,0x19252e620,11026417,0,0x0,8
tick,0x19252e620,11027458,0,0x0,8
tick,0x19252e620,11028500,0,0x0,8
tick,0x19252e620,11029625,0,0x0,8
tick,0x19252e620,11030750,0,0x0,8
tick,0x19252e620,11032000,0,0x0,8
tick,0x19252e620,11033250,0,0x0,8
tick,0x19252e620,11034500,0,0x0,8
tick,0x19252ad6c,11035583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11036750,0,0x0,8
tick,0x19252e620,11037792,0,0x0,8
tick,0x19252e620,11038875,0,0x0,8
tick,0x100e8816c,11040083,0,0x0,5
tick,0x19252e620,11041125,0,0x0,8
tick,0x19252a6ec,11042417,0,0x0,1
tick,0x19252e620,11043500,0,0x0,8
tick,0x19252e620,11044583,0,0x0,8
tick,0x19252e620,11045833,0,0x0,8
tick,0x107ff4408,11047083,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x101702000,11048375,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11049417,0,0x0,8
tick,0x107ff41bc,11050458,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x19252e620,11051542,0,0x0,8
tick,0x19252ad6c,11052542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11053833,0,0x0,8
tick,0x19252e620,11055083,0,0x0,8
tick,0x19252e620,11056167,0,0x0,8
tick,0x19252ad6c,11057417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11058667,0,0x0,8
tick,0x19252b25c,11059917,0,0x0,0,0x10800a800
tick,0x19252bb3c,11061167,0,0x0,1
tick,0x19252e620,11062458,0,0x0,8
tick,0x19252e620,11063708,0,0x0,8
tick,0x19252e620,11064958,0,0x0,8
tick,0x19252e620,11065958,0,0x0,8
tick,0x19252e620,11067250,0,0x0,8
tick,0x19252b4fc,11068500,0,0x0,8
tick,0x19252e620,11069750,0,0x0,8
tick,0x19252e620,11070792,0,0x0,8
tick,0x107ff4380,11071833,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x192527ad0,11073083,0,0x0,8
tick,0x192373620,11074375,0,0x0,1
tick,0x19252236c,11075625,0,0x0,8
tick,0x19252b25c,11076875,0,0x0,8
tick,0x100e01720,11077917,0,0x0,5
tick,0x19252b25c,11079208,0,0x0,0,0x10800a800
tick,0x19252e620,11080458,0,0x0,8
tick,0x19252ad6c,11081542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101bde734,11082792,0,0x0,8
tick,0x19252e620,11084042,0,0x0,8
tick,0x100abc8f0,11085333,0,0x0,0,0x108023160,0x108021988
tick,0x108008594,11086583,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252b4fc,11087833,0,0x0,8
tick,0x19252e620,11089083,0,0x0,8
tick,0x1080136cc,11090333,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,11091458,0,0x0,8
tick,0x19252e620,11092417,0,0x0,8
tick,0x19252a6ec,11093500,0,0x0,1
tick,0x192528738,11094750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11096000,0,0x0,8
tick,0x19252b4fc,11097250,0,0x0,8
tick,0x19252e620,11098500,0,0x0,8
tick,0x19252b25c,11099792,0,0x0,0,0x10800a800
tick,0x19252e620,11100958,0,0x0,8
tick,0x19252e620,11101958,0,0x0,8
tick,0x19252e620,11103000,0,0x0,8
tick,0x19252ad6c,11104000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,11105042,0,0x0,8
tick,0x192520570,11106333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11107583,0,0x0,8
tick,0x10802194c,11108667,0,0x0,0
tick,0x19252f804,11109958,0,0x0,8
tick,0x19252b3f4,11111042,0,0x0,8
tick,0x10801c140,11112292,0,0x0,0,0x10801a474
tick,0x19252e620,11113542,0,0x0,8
tick,0x19252e620,11114792,0,0x0,8
tick,0x100b9c788,11116042,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,11117333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11118583,0,0x0,8
tick,0x19252ad6c,11119625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11120917,0,0x0,8
tick,0x19252e620,11121917,0,0x0,8
tick,0x19252e620,11123250,0,0x0,8
tick,0x102712abc,11124250,0,0x0,1
tick,0x100ccdcd8,11125542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11126625,0,0x0,8
tick,0x1925634d8,11127667,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11128708,0,0x0,8
tick,0x100ef887c,11129958,0,0x0,1
tick,0x100cd24d0,11131208,0,0x0,5
tick,0x19252e620,11132500,0,0x0,8
tick,0x19252f804,11133750,0,0x0,8
tick,0x100a295dc,11135000,0,0x0,8
tick,0x100cbb3d0,11136125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,11137417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19259ebf4,11138667,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100eb70ec,11139917,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,11141167,0,0x0,8
tick,0x19252e620,11142417,0,0x0,8
tick,0x19252b25c,11143667,0,0x0,0,0x10800a800
tick,0x19252e620,11144708,0,0x0,8
tick,0x19252b4fc,11145750,0,0x0,8
tick,0x19252e620,11146750,0,0x0,8
tick,0x19252e620,11147958,0,0x0,8
tick,0x19252e620,11149125,0,0x0,8
tick,0x19252e620,11150375,0,0x0,8
tick,0x10116d9fc,11151542,0,0x0,5,0x108023204,0x108021988
tick,0x100cef794,11152833,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11154208,0,0x0,8
tick,0x19252e620,11155042,0,0x0,8
tick,0x10802267c,11156292,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x101bdeaac,11157542,0,0x0,8
tick,0x1009b9650,11158792,0,0x0,6
tick,0x19252b4fc,11160042,0,0x0,8
tick,0x10166a1d0,11161333,0,0x0,0,0x10801053c
tick,0x19252e620,11162583,0,0x0,8
tick,0x19252e620,11163917,0,0x0,8
tick,0x19252e620,11164958,0,0x0,8
tick,0x192527a78,11166208,0,0x0,8
tick,0x10800a8c8,11167458,0,0x0,0
tick,0x192527354,11168750,0,0x0,8
tick,0x19252e620,11170000,0,0x0,8
tick,0x19252f804,11171292,0,0x0,8
tick,0x19252e620,11172333,0,0x0,8
tick,0x108026184,11173625,0,0x0,0,0x108010e90
tick,0x192527ad0,11174833,0,0x0,8
tick,0x1016b6414,11176083,0,0x0,0,0x107fe301c
tick,0x19252e620,11177333,0,0x0,8
tick,0x19252e620,11178667,0,0x0,8
tick,0x19252e620,11179875,0,0x0,8
tick,0x19252b4fc,11181125,0,0x0,8
tick,0x192527ad0,11182375,0,0x0,8
tick,0x19252e620,11183667,0,0x0,8
tick,0x19252e620,11184958,0,0x0,8
tick,0x19252ad6c,11186208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016bd400,11187458,0,0x0,0,0x1080267a8,0x108010e90
tick,0x10801ad44,11188708,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11189958,0,0x0,8
tick,0x10165dd28,11191250,0,0x0,8
tick,0x19252ad6c,11192417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009bddb4,11193667,0,0x0,6
tick,0x19252e620,11194958,0,0x0,8
tick,0x19252e620,11196167,0,0x0,8
tick,0x100e7be90,11197417,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11198583,0,0x0,8
tick,0x19252f804,11199667,0,0x0,8
tick,0x19252e620,11200958,0,0x0,8
tick,0x19252e620,11202083,0,0x0,8
tick,0x19252e620,11203333,0,0x0,8
tick,0x100a28bc0,11204542,0,0x0,6
tick,0x19252e620,11205667,0,0x0,8
tick,0x1923757d0,11206750,0,0x0,8
tick,0x19252e620,11207792,0,0x0,8
tick,0x19252e620,11208833,0,0x0,8
tick,0x19252e620,11210000,0,0x0,8
tick,0x19252e620,11211250,0,0x0,8
tick,0x19252e620,11212417,0,0x0,8
tick,0x19252ad6c,11213542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11214625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108008564,11215875,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252ad6c,11217125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11218375,0,0x0,8
tick,0x100cc81d0,11219417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11220667,0,0x0,8
tick,0x100cbabec,11221750,0,0x0,5
tick,0x101660674,11222833,0,0x0,0,0x108011300
tick,0x19252ad6c,11224083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11225333,0,0x0,8
tick,0x19252b4fc,11226625,0,0x0,8
tick,0x19252e620,11227875,0,0x0,8
tick,0x19252e620,11229083,0,0x0,8
tick,0x19252e620,11230375,0,0x0,8
tick,0x107f9a460,11231542,0,0x0,0,0x108016424,0x108026920,0x108010e90
tick,0x10113e764,11232792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11234042,0,0x0,8
tick,0x19252b4fc,11235292,0,0x0,8
tick,0x192527ad0,11236458,0,0x0,8
tick,0x19252e620,11237708,0,0x0,8
tick,0x19252e620,11238958,0,0x0,8
tick,0x19252e620,11240083,0,0x0,8
tick,0x19252e620,11241125,0,0x0,8
tick,0x19252e620,11242167,0,0x0,8
tick,0x192527ad0,11243292,0,0x0,8
tick,0x101a8c4b8,11244542,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x101198cd0,11245708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11246958,0,0x0,8
tick,0x192375b68,11248167,0,0x0,8
tick,0x100d0a924,11249417,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100f5dba0,11250667,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100f12a94,11251917,0,0x0,1
tick,0x10166a8f4,11253000,0,0x0,0
tick,0x19252e620,11254250,0,0x0,8
tick,0x19252e620,11255500,0,0x0,8
tick,0x108029b0c,11256750,0,0x0,0,0x107ff8488,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11258000,0,0x0,8
tick,0x19252e620,11259250,0,0x0,8
tick,0x19252e620,11260292,0,0x0,8
tick,0x19252e620,11261375,0,0x0,8
tick,0x19252e620,11262458,0,0x0,8
tick,0x100cc2c24,11263667,0,0x0,0,0x107fe3170
tick,0x107fe67d4,11264708,0,0x0,0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x100cc8e24,11265833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10113e7d4,11267083,0,0x0,5
tick,0x19252ad6c,11268333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11269583,0,0x0,8
tick,0x10174ddc4,11270625,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,11271875,0,0x0,8
tick,0x19252e620,11273167,0,0x0,8
tick,0x19252b25c,11274375,0,0x0,0,0x10800a800
tick,0x19252e620,11275708,0,0x0,8
tick,0x19252e620,11276667,0,0x0,8
tick,0x19252e620,11277708,0,0x0,8
tick,0x19252e620,11278917,0,0x0,8
tick,0x19252ad6c,11280125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11281167,0,0x0,8
tick,0x19252e620,11282417,0,0x0,8
tick,0x19252e620,11283583,0,0x0,8
tick,0x19252e620,11284792,0,0x0,8
tick,0x19252e620,11285917,0,0x0,8
tick,0x19252b25c,11287167,0,0x0,0,0x10800a800
tick,0x19252b4fc,11288417,0,0x0,8
tick,0x100cbcc2c,11289667,0,0x0,6
tick,0x19252ad6c,11290792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,11292083,0,0x0,8
tick,0x19252e620,11293125,0,0x0,8
tick,0x19252e620,11294250,0,0x0,8
tick,0x19252ad6c,11295500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ccdb7c,11296750,0,0x0,8
tick,0x19252e620,11297875,0,0x0,8
tick,0x19252e620,11299125,0,0x0,8
tick,0x19252e620,11300167,0,0x0,8
tick,0x100ef8800,11301458,0,0x0,1
tick,0x100ccc594,11302708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100ccdc24,11303958,0,0x0,8
tick,0x19252e620,11305208,0,0x0,8
tick,0x19252e620,11306208,0,0x0,8
tick,0x19252e620,11307500,0,0x0,8
tick,0x19252b25c,11308750,0,0x0,8
tick,0x19252e620,11310000,0,0x0,8
tick,0x100abc894,11311250,0,0x0,8
tick,0x19252e620,11312500,0,0x0,8
tick,0x100e01720,11313625,0,0x0,5
tick,0x10166b43c,11314917,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x101788538,11316208,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x19252e620,11317500,0,0x0,8
tick,0x100e3d060,11318708,0,0x0,8
tick,0x19252e620,11319958,0,0x0,8
tick,0x10113b01c,11321208,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,11322292,0,0x0,8
tick,0x192371abc,11323500,0,0x0,8
tick,0x19252ad6c,11324750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10116d0bc,11326000,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,11327333,0,0x0,8
tick,0x19252e620,11328542,0,0x0,8
tick,0x19252e620,11329708,0,0x0,8
tick,0x192527a78,11330917,0,0x0,8
tick,0x19252e620,11332167,0,0x0,8
tick,0x19252e620,11333250,0,0x0,8
tick,0x19252ad6c,11334250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11335500,0,0x0,8
tick,0x19252e620,11336542,0,0x0,8
tick,0x100abc7f0,11337667,0,0x0,8
tick,0x19252e620,11338833,0,0x0,8
tick,0x100e7ae50,11339958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11341208,0,0x0,8
tick,0x1009c71c4,11342458,0,0x0,8
tick,0x1016b6410,11343708,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x100f38a0c,11345000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11346042,0,0x0,8
tick,0x19252b4fc,11347333,0,0x0,8
tick,0x19252e620,11348333,0,0x0,8
tick,0x101736858,11349583,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11350792,0,0x0,8
tick,0x19252e620,11352000,0,0x0,8
tick,0x19252b25c,11353292,0,0x0,8
tick,0x10166a2b4,11354542,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252e620,11355583,0,0x0,8
tick,0x19252e620,11356625,0,0x0,8
tick,0x19252e620,11357708,0,0x0,8
tick,0x19252e620,11358708,0,0x0,8
tick,0x19252b25c,11359958,0,0x0,0,0x10800a800
tick,0x108008168,11361250,0,0x0,0,0x10800b05c,0x10800a738
tick,0x100ea7e78,11362500,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11363792,0,0x0,8
tick,0x192528738,11364958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101672350,11366250,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x19252e620,11367500,0,0x0,8
tick,0x100a23b3c,11368542,0,0x0,6
tick,0x19252ad6c,11369792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11371042,0,0x0,8
tick,0x19252e620,11372167,0,0x0,8
tick,0x19252f804,11373417,0,0x0,8
tick,0x192373964,11374667,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11375917,0,0x0,8
tick,0x19252e620,11377167,0,0x0,8
tick,0x19252e620,11378458,0,0x0,8
tick,0x100e7d25c,11379708,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,11380750,0,0x0,0,0x10800a800
tick,0x100e3d144,11382000,0,0x0,8
tick,0x19252e620,11383292,0,0x0,8
tick,0x19252e620,11384625,0,0x0,8
tick,0x19252e620,11385625,0,0x0,8
tick,0x100ccdbe0,11386875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11388125,0,0x0,8
tick,0x19252e620,11389208,0,0x0,8
tick,0x19252ad6c,11390458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11391708,0,0x0,8
tick,0x19252e620,11392958,0,0x0,8
tick,0x192528738,11394208,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016b7038,11395458,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11396750,0,0x0,8
tick,0x19252ad6c,11397875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11399125,0,0x0,8
tick,0x1016b70f4,11400375,0,0x0,0,0x107fe2ff0
tick,0x19252e620,11401625,0,0x0,8
tick,0x1016ace28,11402625,0,0x0,0,0x107fe2f6c
tick,0x192528738,11403875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10113bba8,11405167,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016ad384,11406417,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,11407667,0,0x0,8
tick,0x19252e620,11408708,0,0x0,8
tick,0x192528738,11409958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11411208,0,0x0,8
tick,0x19252e620,11412458,0,0x0,8
tick,0x19252f804,11413708,0,0x0,8
tick,0x19252e620,11415000,0,0x0,8
tick,0x19252b4fc,11416000,0,0x0,8
tick,0x19252e620,11417250,0,0x0,8
tick,0x19252ad6c,11418292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11419542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11420792,0,0x0,8
tick,0x19252ad6c,11422042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbcce4,11423125,0,0x0,8
tick,0x19252e620,11424333,0,0x0,8
tick,0x19252e620,11425542,0,0x0,8
tick,0x192527a78,11426583,0,0x0,8
tick,0x19252ad6c,11427875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11429167,0,0x0,8
tick,0x19252e620,11430167,0,0x0,8
tick,0x100cc8e34,11431250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,11432500,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,11433792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11434875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,11436125,0,0x0,8
tick,0x19252ad6c,11437375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,11438417,0,0x0,8
tick,0x19252b4fc,11439667,0,0x0,8
tick,0x100e2fb68,11440958,0,0x0,6
tick,0x19252f804,11442250,0,0x0,8
tick,0x19252e620,11443375,0,0x0,8
tick,0x1016b70dc,11444667,0,0x0,0,0x10800a738
tick,0x19252e620,11445833,0,0x0,8
tick,0x107feb7e0,11446833,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100cd24b4,11448083,0,0x0,5
tick,0x192528738,11449375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11450625,0,0x0,8
tick,0x19252e620,11451792,0,0x0,8
tick,0x19252f804,11453042,0,0x0,8
tick,0x19252b4fc,11454333,0,0x0,8
tick,0x19252ad6c,11455625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11456875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,11458125,0,0x0,8
tick,0x100abc750,11459458,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101661978,11460708,0,0x0,0,0x107ff8488,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,11461958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11463042,0,0x0,8
tick,0x19252e620,11464333,0,0x0,8
tick,0x19252e620,11465542,0,0x0,8
tick,0x19252e620,11466833,0,0x0,8
tick,0x19252e620,11468000,0,0x0,8
tick,0x1011482d0,11469333,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19237597c,11470542,0,0x0,8
tick,0x107fe2bfc,11471833,0,0x0,0
tick,0x101660de8,11473083,0,0x0,0,0x107fea974,0x107fe31b4
tick,0x19252e620,11530958,0,0x0,8
tick,0x19252e620,11532333,0,0x0,8
tick,0x102711208,11533500,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016cab2c,11534750,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x101662140,11536000,0,0x0,0
tick,0x19252e620,11537250,0,0x0,8
tick,0x100ccc63c,11538458,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,11539542,0,0x0,8
tick,0x19252e620,11540792,0,0x0,8
tick,0x19252e620,11542000,0,0x0,8
tick,0x19252e620,11543083,0,0x0,8
tick,0x19252e620,11544125,0,0x0,8
tick,0x19240aa7c,11545375,0,0x0,1
tick,0x19252e620,11546625,0,0x0,8
tick,0x10270d3a4,11547917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b4fc,11549167,0,0x0,8
tick,0x19252b25c,11550417,0,0x0,0,0x10800a800
tick,0x100ce1de8,11551667,0,0x0,6
tick,0x19252f804,11552917,0,0x0,8
tick,0x19252e620,11554167,0,0x0,8
tick,0x101bde80c,11555417,0,0x0,8
tick,0x100e3d184,11556708,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100f3108c,11557958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11559208,0,0x0,8
tick,0x19252e620,11560500,0,0x0,8
tick,0x19252e620,11561708,0,0x0,8
tick,0x19252e620,11562708,0,0x0,8
tick,0x100e6d554,11563792,0,0x0,5
tick,0x19252b4fc,11565042,0,0x0,8
tick,0x19252b4fc,11566292,0,0x0,8
tick,0x192527ad0,11567667,0,0x0,8
tick,0x19252e620,11568667,0,0x0,8
tick,0x10166a198,11570042,0,0x0,0,0x10800a738
tick,0x100ba5770,11571292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11572583,0,0x0,8
tick,0x101bd7cc8,11573833,0,0x0,8
tick,0x19252b4fc,11575167,0,0x0,8
tick,0x100e000bc,11576375,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x10166f08c,11577667,0,0x0,0,0x10800bac4,0x10800a738
tick,0x107fe2ff8,11578917,0,0x0,0
tick,0x19252e620,11580167,0,0x0,8
tick,0x101669ffc,11581417,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x19252e620,11582708,0,0x0,8
new,MemoryChunk,0x654e8540000,262144
tick,0x19252e620,11583958,0,0x0,8
tick,0x19252e620,11585250,0,0x0,8
tick,0x19252e620,11586208,0,0x0,8
tick,0x19252e620,11587500,0,0x0,8
tick,0x192527ad0,11588708,0,0x0,8
tick,0x19252e620,11589958,0,0x0,8
tick,0x19252e620,11591000,0,0x0,8
tick,0x19252e620,11592083,0,0x0,8
tick,0x19252e620,11593250,0,0x0,8
tick,0x19252e620,11594458,0,0x0,8
tick,0x19252e620,11595667,0,0x0,8
tick,0x19252b4fc,11596958,0,0x0,8
tick,0x107fee410,11598167,0,0x0,0,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x10114997c,11599458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x192527ad0,11600708,0,0x0,8
tick,0x19252e620,11601958,0,0x0,8
tick,0x19252b4fc,11603208,0,0x0,8
tick,0x107fe3988,11604458,0,0x0,0,0x107fe2fb4
tick,0x19252ad6c,11605708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10165547c,11606958,0,0x0,8
tick,0x19252ad6c,11608208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11609500,0,0x0,8
tick,0x19252e620,11610542,0,0x0,8
tick,0x100e7be94,11611583,0,0x0,5
tick,0x19252e620,11612625,0,0x0,8
tick,0x1016ad2d8,11613833,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x10166f12c,11615125,0,0x0,0
tick,0x19252e620,11616375,0,0x0,8
tick,0x100cbd164,11617625,0,0x0,5
tick,0x192527a78,11618875,0,0x0,8
tick,0x19252ad6c,11620000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11621000,0,0x0,8
tick,0x19252e620,11622042,0,0x0,8
tick,0x19252e620,11623292,0,0x0,8
tick,0x19238bc94,11624542,0,0x0,6
tick,0x19252e620,11625792,0,0x0,8
tick,0x100cd2104,11627042,0,0x0,5
tick,0x192527ad0,11628292,0,0x0,8
tick,0x19252e620,11629583,0,0x0,8
tick,0x19252e620,11630833,0,0x0,8
tick,0x1016ac0b8,11632042,0,0x0,0,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19259e7ec,11633333,0,0x0,1
tick,0x19252e620,11634583,0,0x0,8
tick,0x19252e620,11635917,0,0x0,8
tick,0x100cbd328,11637083,0,0x0,8
tick,0x19252f804,11638333,0,0x0,8
tick,0x10801a3fc,11639583,0,0x0,0
tick,0x19252e620,11640875,0,0x0,8
tick,0x19252e620,11642125,0,0x0,8
tick,0x19252b4fc,11643375,0,0x0,8
tick,0x19252e620,11644667,0,0x0,8
tick,0x19252e620,11645917,0,0x0,8
tick,0x101184b64,11647125,0,0x0,5
tick,0x19252e620,11648417,0,0x0,8
tick,0x19252e620,11649542,0,0x0,8
tick,0x19252e620,11650750,0,0x0,8
tick,0x19252e620,11651917,0,0x0,8
tick,0x19252e620,11653125,0,0x0,8
tick,0x19252e620,11654375,0,0x0,8
tick,0x19252e620,11655500,0,0x0,8
tick,0x19252ad6c,11656750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,11658000,0,0x0,8
tick,0x19252e620,11659250,0,0x0,8
tick,0x19252e620,11660500,0,0x0,8
tick,0x19252e620,11661708,0,0x0,8
tick,0x1923761d0,11662750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,11663833,0,0x0,8
tick,0x19252e620,11665042,0,0x0,8
tick,0x19252e620,11666167,0,0x0,8
tick,0x192387a14,11667375,0,0x0,8
tick,0x19252e620,11668625,0,0x0,8
tick,0x19252e620,11669875,0,0x0,8
tick,0x19252b4fc,11671167,0,0x0,8
tick,0x19252e620,11672500,0,0x0,8
tick,0x19252e620,11673667,0,0x0,8
tick,0x19252b4fc,11674917,0,0x0,8
tick,0x19252e620,11676208,0,0x0,8
tick,0x19252e620,11677208,0,0x0,8
tick,0x19252e620,11678333,0,0x0,8
tick,0x19252e620,11679458,0,0x0,8
tick,0x19252ad6c,11680458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101198bec,11681625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101bd7f6c,11682875,0,0x0,8
tick,0x19252e620,11684125,0,0x0,8
tick,0x19249fe98,11685375,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b25c,11686542,0,0x0,8
tick,0x19252e620,11687792,0,0x0,8
tick,0x19252ad6c,11688833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11690125,0,0x0,8
tick,0x19252e620,11691167,0,0x0,8
tick,0x19252e620,11692375,0,0x0,8
tick,0x1016e1658,11693625,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,11694917,0,0x0,8
tick,0x19252b4fc,11696125,0,0x0,8
tick,0x1016b749c,11697375,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,11698625,0,0x0,8
tick,0x19252e620,11699875,0,0x0,8
tick,0x19252f804,11701125,0,0x0,8
tick,0x19252ad6c,11702250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbd31c,11703500,0,0x0,5
tick,0x19252e620,11704750,0,0x0,8
tick,0x19252e620,11705917,0,0x0,8
tick,0x19252ad6c,11707167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11708417,0,0x0,8
tick,0x19252e620,11709708,0,0x0,8
tick,0x100cd2378,11711000,0,0x0,6
tick,0x100e01764,11712250,0,0x0,5
tick,0x19252b25c,11713542,0,0x0,8
tick,0x19252b4fc,11714792,0,0x0,8
tick,0x1009b1cbc,11716042,0,0x0,6
tick,0x100cbd2b8,11717167,0,0x0,8
tick,0x101702000,11718417,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,11719500,0,0x0,8
tick,0x19252b4fc,11720792,0,0x0,8
tick,0x19252b25c,11722083,0,0x0,8
tick,0x19252e620,11723333,0,0x0,8
tick,0x19252e620,11724542,0,0x0,8
tick,0x19252e620,11725583,0,0x0,8
tick,0x10165db28,11726833,0,0x0,8
tick,0x101749a48,11728167,0,0x0,0,0x101787ff0,0x10802651c,0x108010e90
tick,0x19252e620,11729417,0,0x0,8
tick,0x19252e620,11730708,0,0x0,8
tick,0x1016ac418,11731958,0,0x0,0,0x107fe6724,0x107fe7be0,0x107feeef8,0x107fe2ff0
tick,0x19259e7ec,11733167,0,0x0,8
tick,0x100eeeee4,11734458,0,0x0,8
tick,0x19252e620,11735708,0,0x0,8
tick,0x19252b4fc,11736958,0,0x0,8
tick,0x101198f80,11738208,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11739458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11740667,0,0x0,8
tick,0x19252ad6c,11741708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,11742958,0,0x0,8
tick,0x100ce0a6c,11744250,0,0x0,8
tick,0x100eeeee4,11745458,0,0x0,8
tick,0x19238b0c0,11746750,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,11748000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11749250,0,0x0,8
tick,0x108020dc0,11750542,0,0x0,0
tick,0x19252ad6c,11751833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,11752917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,11754167,0,0x0,8
tick,0x19252e620,11755417,0,0x0,8
tick,0x10270dfe0,11756500,0,0x0,5
tick,0x100abd6e4,11757750,0,0x0,8
tick,0x10128478c,11759000,0,0x0,5
tick,0x19252b4fc,11760292,0,0x0,8
tick,0x19252e620,11761417,0,0x0,8
tick,0x19252e620,11762667,0,0x0,8
tick,0x19252e620,11763750,0,0x0,8
tick,0x19252e620,11765042,0,0x0,8
tick,0x19252e620,11766083,0,0x0,8
tick,0x19252e620,11767167,0,0x0,8
tick,0x19252e620,11768292,0,0x0,8
tick,0x19252ad6c,11769417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff2c1c,11770667,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,11771917,0,0x0,8
tick,0x19252ad6c,11773167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11774417,0,0x0,8
tick,0x19252e620,11775458,0,0x0,8
tick,0x19252e620,11776708,0,0x0,8
tick,0x101149a1c,11777708,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,11779000,0,0x0,8
tick,0x19252e620,11780042,0,0x0,8
tick,0x19252e620,11781042,0,0x0,8
tick,0x19252b3f4,11782292,0,0x0,8
tick,0x1016ad34c,11783542,0,0x0,0,0x1080145a8,0x1080266d0,0x108010e90
tick,0x192527ad0,11784667,0,0x0,8
tick,0x19252e620,11785708,0,0x0,8
tick,0x192528738,11787000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11788250,0,0x0,8
tick,0x19252ad6c,11789500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11790750,0,0x0,8
tick,0x100cda974,11792042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11793208,0,0x0,8
tick,0x19252e620,11794333,0,0x0,8
tick,0x19252e620,11795333,0,0x0,8
tick,0x100cc81d0,11796500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1010e793c,11797750,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1009ba100,11799000,0,0x0,6
tick,0x19252e620,11800208,0,0x0,8
tick,0x100d4eff4,11801458,0,0x0,0
tick,0x192528738,11802708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107ff2ca4,11803792,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x101673490,11805042,0,0x0,0,0x107fe4900,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x19252e620,11806292,0,0x0,8
tick,0x19252e620,11807542,0,0x0,8
tick,0x192527ad0,11808792,0,0x0,8
tick,0x19252e620,11810083,0,0x0,8
tick,0x101655b84,11811333,0,0x0,8
tick,0x19252e620,11812583,0,0x0,8
tick,0x19252e620,11813833,0,0x0,8
tick,0x19252e620,11815083,0,0x0,8
tick,0x1080165a4,11816375,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,11817625,0,0x0,8
tick,0x19252e620,11818667,0,0x0,8
tick,0x19252e620,11819708,0,0x0,8
tick,0x1016ace20,11820958,0,0x0,0,0x10800f034,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe56e0,11822208,0,0x0,0,0x10801fdfc,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,11823458,0,0x0,8
tick,0x19252f804,11824625,0,0x0,8
tick,0x19252e620,11825750,0,0x0,8
tick,0x19252f804,11827000,0,0x0,8
tick,0x1009b3e74,11828042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11829250,0,0x0,8
tick,0x19252e620,11830500,0,0x0,8
tick,0x101660678,11831625,0,0x0,0,0x107fe35dc
tick,0x19252e620,11832667,0,0x0,8
tick,0x19252e620,11833958,0,0x0,8
tick,0x19252b4fc,11835167,0,0x0,8
tick,0x19252e620,11836417,0,0x0,8
tick,0x100cd5870,11837708,0,0x0,8
tick,0x19252e620,11838958,0,0x0,8
tick,0x19252ad6c,11840208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,11841458,0,0x0,8
tick,0x1080138bc,11842708,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,11844000,0,0x0,8
tick,0x19252e620,11845125,0,0x0,8
tick,0x19252e620,11846125,0,0x0,8
tick,0x19252e620,11847208,0,0x0,8
tick,0x19252e620,11848250,0,0x0,8
tick,0x19252e620,11849292,0,0x0,8
tick,0x19252ad6c,11850333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,11851583,0,0x0,8
tick,0x19252e620,11852833,0,0x0,8
tick,0x192527ad0,11853917,0,0x0,8
tick,0x19252b4fc,11855167,0,0x0,8
tick,0x19252e620,11856417,0,0x0,8
tick,0x19252b4fc,11857583,0,0x0,8
tick,0x19252e620,11858875,0,0x0,8
tick,0x192528738,11859958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527354,11861208,0,0x0,8
tick,0x19252b4fc,11862500,0,0x0,8
tick,0x192527ad0,11863750,0,0x0,8
tick,0x10166f14c,11865000,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11866042,0,0x0,8
tick,0x1016658b8,11867042,0,0x0,0,0x108010e90
tick,0x19252ad6c,11868333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b64fc,11869583,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,11870833,0,0x0,8
tick,0x10800a67c,11872083,0,0x0,0
tick,0x19252e620,11873333,0,0x0,8
tick,0x19252e620,11874583,0,0x0,8
tick,0x19252e620,11876042,0,0x0,8
tick,0x19252e620,11877125,0,0x0,8
tick,0x100e9ce14,11878292,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1009b40d4,11879542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbb438,11880583,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11881833,0,0x0,8
tick,0x1925708bc,11883042,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252a6ec,11884292,0,0x0,1
tick,0x19252b25c,11885542,0,0x0,0,0x10800a800
tick,0x19252e620,11886708,0,0x0,8
tick,0x19252b4fc,11887917,0,0x0,8
tick,0x19252e620,11889208,0,0x0,8
tick,0x1009b7774,11890417,0,0x0,0,0x108018794,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,11891708,0,0x0,8
tick,0x19252e620,11893000,0,0x0,8
tick,0x100cbcc28,11894083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11895333,0,0x0,8
tick,0x19252e620,11896417,0,0x0,8
tick,0x108019b04,11897667,0,0x0,0
tick,0x19252e620,11898708,0,0x0,8
tick,0x19252e620,11899958,0,0x0,8
tick,0x19252b3f4,11901083,0,0x0,8
tick,0x19252e620,11902333,0,0x0,8
tick,0x19252e620,11903458,0,0x0,8
tick,0x19252b25c,11904458,0,0x0,8
tick,0x10113b9c8,11905708,0,0x0,5,0x108023204,0x108021988
tick,0x19252e620,11906833,0,0x0,8
tick,0x19252e620,11907875,0,0x0,8
tick,0x19252ad6c,11909167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11910292,0,0x0,8
tick,0x19252ad6c,11911542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff4140,11912792,0,0x0,0,0x107fe301c
tick,0x19252e620,11913875,0,0x0,8
tick,0x192528738,11915125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11916208,0,0x0,8
tick,0x100cc4d90,11917417,0,0x0,6
tick,0x1080129bc,11918708,0,0x0,0,0x108021570,0x107fe2ff0
tick,0x19252ad6c,11919792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff2f34,11921042,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,11922292,0,0x0,8
tick,0x19252b4fc,11923375,0,0x0,8
tick,0x19252b3f4,11924625,0,0x0,8
tick,0x192528738,11925667,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100cbcbc0,11926917,0,0x0,6
tick,0x192527ad0,11928167,0,0x0,8
tick,0x100eabcd4,11929458,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192373a38,11930708,0,0x0,6
tick,0x19252e620,11931750,0,0x0,8
tick,0x100f39d80,11932875,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x192527a78,11934125,0,0x0,8
tick,0x19252e620,11935375,0,0x0,8
tick,0x19252ad6c,11936542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11937792,0,0x0,8
tick,0x19252e620,11939042,0,0x0,8
tick,0x19252e620,11940125,0,0x0,8
tick,0x19252ad6c,11941333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad8c,11942625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11943875,0,0x0,8
tick,0x1012b523c,11945125,0,0x0,1
tick,0x19252ad6c,11946375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11947625,0,0x0,8
tick,0x19252b4fc,11948875,0,0x0,8
tick,0x19252e620,11950167,0,0x0,8
tick,0x19252e620,11951208,0,0x0,8
tick,0x19252e620,11952208,0,0x0,8
tick,0x19252e620,11953292,0,0x0,8
tick,0x19252e620,11954250,0,0x0,8
tick,0x19252e620,11955333,0,0x0,8
tick,0x1009b1660,11956333,0,0x0,8
tick,0x192528738,11957375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,11958500,0,0x0,8
tick,0x19252e620,11959792,0,0x0,8
tick,0x19252e620,11961042,0,0x0,8
tick,0x19252e620,11962208,0,0x0,8
tick,0x10802194c,11963458,0,0x0,0
tick,0x19252b25c,11964750,0,0x0,8
tick,0x100a6d44c,11965917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,11967167,0,0x0,8
tick,0x19252e620,11968417,0,0x0,8
tick,0x19252e620,11969708,0,0x0,8
tick,0x192528738,11970833,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,11972083,0,0x0,8
tick,0x19252e620,11973375,0,0x0,8
tick,0x19252e620,11974625,0,0x0,8
tick,0x19252e620,11975833,0,0x0,8
tick,0x19252b25c,11976833,0,0x0,8
tick,0x19252e620,11978083,0,0x0,8
tick,0x1016bd434,11979417,0,0x0,0,0x10800b288,0x10800a738
tick,0x100cd3eb0,11980625,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,11981917,0,0x0,8
tick,0x100e7b2b0,11983167,0,0x0,0,0x1a7c5b21ab3a,0x1a7c5b21a820,0x1a7c5b20fbd1,0x1a7c5b20fd56,0xbd578266827,0x108029040,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
code-creation,JS,10,11983167,0x108029cc0,776,percolateUp node:internal/priority_queue:69:14,0x22b216cdbed0,^
script-source,17,node:internal/priority_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// The PriorityQueue is a basic implementation of a binary heap that accepts\n// a custom sorting function via its constructor. This function is passed\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\n// this enables priority queues that are based on a comparison of more than\n// just a single criteria.\n\nmodule.exports = class PriorityQueue {\n  #compare = (a\x2C b) => a - b;\n  #heap = new Array(64);\n  #setPosition;\n  #size = 0;\n\n  constructor(comparator\x2C setPosition) {\n    if (comparator !== undefined)\n      this.#compare = comparator;\n    if (setPosition !== undefined)\n      this.#setPosition = setPosition;\n  }\n\n  insert(value) {\n    const heap = this.#heap;\n    const pos = ++this.#size;\n    heap[pos] = value;\n\n    if (heap.length === pos)\n      heap.length *= 2;\n\n    this.percolateUp(pos);\n  }\n\n  peek() {\n    return this.#heap[1];\n  }\n\n  peekBottom() {\n    return this.#heap[this.#size];\n  }\n\n  percolateDown(pos) {\n    const compare = this.#compare;\n    const setPosition = this.#setPosition;\n    const heap = this.#heap;\n    const size = this.#size;\n    const item = heap[pos];\n\n    while (pos * 2 <= size) {\n      let childIndex = pos * 2 + 1;\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\n        childIndex = pos * 2;\n      const child = heap[childIndex];\n      if (compare(item\x2C child) <= 0)\n        break;\n      if (setPosition !== undefined)\n        setPosition(child\x2C pos);\n      heap[pos] = child;\n      pos = childIndex;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  percolateUp(pos) {\n    const heap = this.#heap;\n    const compare = this.#compare;\n    const setPosition = this.#setPosition;\n    const item = heap[pos];\n\n    while (pos > 1) {\n      const parent = heap[pos / 2 | 0];\n      if (compare(parent\x2C item) <= 0)\n        break;\n      heap[pos] = parent;\n      if (setPosition !== undefined)\n        setPosition(parent\x2C pos);\n      pos = pos / 2 | 0;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  removeAt(pos) {\n    const heap = this.#heap;\n    const size = --this.#size;\n    heap[pos] = heap[size + 1];\n    heap[size + 1] = undefined;\n\n    if (size > 0 && pos <= size) {\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0]\x2C heap[pos]) > 0)\n        this.percolateUp(pos);\n      else\n        this.percolateDown(pos);\n    }\n  }\n\n  shift() {\n    const heap = this.#heap;\n    const value = heap[1];\n    if (value === undefined)\n      return;\n\n    this.removeAt(1);\n\n    return value;\n  }\n};\n
code-source-info,0x108029cc0,17,1657,2134,,,
code-creation,JS,10,11983333,0x10802a000,3360,readableAddChunkPushByteMode node:internal/streams/readable:463:38,0x15988e460f38,^
code-source-info,0x10802a000,106,14221,15566,,,
code-creation,JS,10,11983333,0x10802ad40,616,parsersCb node:_http_common:158:65,0x285859895508,^
code-source-info,0x10802ad40,119,5102,5372,,,
code-creation,JS,10,11984208,0x10802afe0,96,setPosition node:internal/timers:433:21,0x22b216ccff98,^
script-source,10,node:internal/timers,'use strict';\n\n// HOW and WHY the timers implementation works the way it does.\n//\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\n// timer so that we can time out of connections. Additionally\x2C many user\n// libraries and applications also use timers. As such there may be a\n// significantly large amount of timeouts scheduled at any given time.\n// Therefore\x2C it is very important that the timers implementation is performant\n// and efficient.\n//\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\n// linked list implementation\x2C since timers depend on it extensively. It can be\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\n// it is a set of helpers that operate on an existing object.\n//\n// In order to be as performant as possible\x2C the architecture and data\n// structures are designed so that they are optimized to handle the following\n// use cases as efficiently as possible:\n\n// - Adding a new timer. (insert)\n// - Removing an existing timer. (remove)\n// - Handling a timer timing out. (timeout)\n//\n// Whenever possible\x2C the implementation tries to make the complexity of these\n// operations as close to constant-time as possible.\n// (So that performance is not impacted by the number of scheduled timers.)\n//\n// Object maps are kept which contain linked lists keyed by their duration in\n// milliseconds.\n//\n/* eslint-disable node-core/non-ascii-character */\n//\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\n// \u2551\n// \u2560\u2550\u2550\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\n//              \u2502\n// \u2554\u2550\u2550          \u2502\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2551      \u2502                                  ^\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2560\u2550\u2550  \u2560\u2550\u2550\n// \u2551    \u2551\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\n// \u2551\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\n//\n/* eslint-enable node-core/non-ascii-character */\n//\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\n// is possible in the JavaScript layer. Any one list of timers is able to be\n// sorted by just appending to it because all timers within share the same\n// duration. Therefore\x2C any timer added later will always have been scheduled to\n// timeout later\x2C thus only needing to be appended.\n// Removal from an object-property linked list is also virtually constant-time\n// as can be seen in the lib/internal/linkedlist.js implementation.\n// Timeouts only need to process any timers currently due to expire\x2C which will\n// always be at the beginning of the list for reasons stated above. Any timers\n// after the first one encountered that does not yet need to timeout will also\n// always be due to timeout at a later time.\n//\n// Less-than constant time operations are thus contained in two places:\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\n// Timeout lists and the object map lookup of a specific list by the duration of\n// timers within (or creation of a new list). However\x2C these operations combined\n// have shown to be trivial in comparison to other timers architectures.\n\nconst {\n  MathMax\x2C\n  MathTrunc\x2C\n  NumberIsFinite\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst binding = internalBinding('timers');\nconst {\n  immediateInfo\x2C\n  timeoutInfo\x2C\n} = binding;\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n} = require('internal/async_hooks');\n\n// Symbols for storing async id state.\nconst async_id_symbol = Symbol('asyncId');\nconst trigger_async_id_symbol = Symbol('triggerId');\n\nconst kHasPrimitive = Symbol('kHasPrimitive');\n\nconst {\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst L = require('internal/linkedlist');\nconst PriorityQueue = require('internal/priority_queue');\n\nconst { inspect } = require('internal/util/inspect');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\n\nconst AsyncContextFrame = require('internal/async_context_frame');\n\nconst async_context_frame = Symbol('kAsyncContextFrame');\n\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\nconst kCount = 0;\nconst kRefCount = 1;\nconst kHasOutstanding = 2;\n\n// Timeout values > TIMEOUT_MAX are set to 1.\nconst TIMEOUT_MAX = 2 ** 31 - 1;\n\nlet timerListId = NumberMIN_SAFE_INTEGER;\n\nconst kRefed = Symbol('refed');\n\nlet nextExpiry = Infinity;\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\n// `src/node_process_methods.cc` is able to access this value without crossing\n// the JS-C++ boundary\x2C which is slow at the time of writing.\ntimeoutInfo[0] = 0;\n\n// This is a priority queue with a custom sorting function that first compares\n// the expiry times of two lists and if they're the same then compares their\n// individual IDs to determine which list was created first.\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\n\n// Object map containing linked lists of timers\x2C keyed and sorted by their\n// duration in milliseconds.\n//\n// - key = time in milliseconds\n// - value = linked list\nconst timerListMap = { __proto__: null };\n\n// This stores all the known timer async ids to allow users to clearTimeout and\n// clearInterval using those ids\x2C to match the spec and the rest of the web\n// platform.\nconst knownTimersById = { __proto__: null };\n\nfunction initAsyncResource(resource\x2C type) {\n  const asyncId = resource[async_id_symbol] = newAsyncId();\n  const triggerAsyncId =\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\n  resource[async_context_frame] = AsyncContextFrame.current();\n  if (initHooksExist())\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\nclass Timeout {\n  // Timer constructor function.\n  // The entire prototype is defined in lib/timers.js\n  constructor(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\n    after *= 1; // Coalesce to number or NaN\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\n      if (after > TIMEOUT_MAX) {\n        process.emitWarning(`${after} does not fit into` +\n                            ' a 32-bit signed integer.' +\n                            '\\nTimeout duration was set to 1.'\x2C\n                            'TimeoutOverflowWarning');\n      }\n      after = 1; // Schedule on next tick\x2C follows browser behavior\n    }\n\n    this._idleTimeout = after;\n    this._idlePrev = this;\n    this._idleNext = this;\n    this._idleStart = null;\n    // This must be set to null first to avoid function tracking\n    // on the hidden class\x2C revisit in V8 versions after 6.2\n    this._onTimeout = null;\n    this._onTimeout = callback;\n    this._timerArgs = args;\n    this._repeat = isRepeat ? after : null;\n    this._destroyed = false;\n\n    if (isRefed)\n      incRefCount();\n    this[kRefed] = isRefed;\n    this[kHasPrimitive] = false;\n\n    initAsyncResource(this\x2C 'Timeout');\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\x2C\n    });\n  }\n\n  refresh() {\n    if (this[kRefed])\n      active(this);\n    else\n      unrefActive(this);\n\n    return this;\n  }\n\n  unref() {\n    if (this[kRefed]) {\n      this[kRefed] = false;\n      if (!this._destroyed)\n        decRefCount();\n    }\n    return this;\n  }\n\n  ref() {\n    if (!this[kRefed]) {\n      this[kRefed] = true;\n      if (!this._destroyed)\n        incRefCount();\n    }\n    return this;\n  }\n\n  hasRef() {\n    return this[kRefed];\n  }\n}\n\nclass TimersList {\n  constructor(expiry\x2C msecs) {\n    this._idleNext = this; // Create the list with the linkedlist properties to\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\n    this.expiry = expiry;\n    this.id = timerListId++;\n    this.msecs = msecs;\n    this.priorityQueuePosition = null;\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\x2C\n    });\n  }\n}\n\n// A linked list for storing `setImmediate()` requests\nclass ImmediateList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  // Appends an item to the end of the linked list\x2C adjusting the current tail's\n  // next pointer and the item's previous pointer where applicable\n  append(item) {\n    if (this.tail !== null) {\n      this.tail._idleNext = item;\n      item._idlePrev = this.tail;\n    } else {\n      this.head = item;\n    }\n    this.tail = item;\n  }\n\n  // Removes an item from the linked list\x2C adjusting the pointers of adjacent\n  // items and the linked list's head or tail pointers as necessary\n  remove(item) {\n    if (item._idleNext) {\n      item._idleNext._idlePrev = item._idlePrev;\n    }\n\n    if (item._idlePrev) {\n      item._idlePrev._idleNext = item._idleNext;\n    }\n\n    if (item === this.head)\n      this.head = item._idleNext;\n    if (item === this.tail)\n      this.tail = item._idlePrev;\n\n    item._idleNext = null;\n    item._idlePrev = null;\n  }\n}\n\n// Create a single linked list instance only once at startup\nconst immediateQueue = new ImmediateList();\n\nfunction incRefCount() {\n  if (timeoutInfo[0]++ === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleTimerRef(true);\n  }\n}\n\nfunction decRefCount() {\n  if (--timeoutInfo[0] === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleTimerRef(false);\n  }\n}\n\n// Schedule or re-schedule a timer.\n// The item must have been enroll()'d first.\nfunction active(item) {\n  insertGuarded(item\x2C true);\n}\n\n// Internal APIs that need timeouts should use `unrefActive()` instead of\n// `active()` so that they do not unnecessarily keep the process open.\nfunction unrefActive(item) {\n  insertGuarded(item\x2C false);\n}\n\n// The underlying logic for scheduling or re-scheduling a timer.\n//\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\n// list if one does not already exist for the specified timeout duration.\nfunction insertGuarded(item\x2C refed\x2C start) {\n  const msecs = item._idleTimeout;\n  if (msecs < 0 || msecs === undefined)\n    return;\n\n  insert(item\x2C msecs\x2C start);\n\n  const isDestroyed = item._destroyed;\n  if (isDestroyed || !item[async_id_symbol]) {\n    item._destroyed = false;\n    initAsyncResource(item\x2C 'Timeout');\n  }\n\n  if (isDestroyed) {\n    if (refed)\n      incRefCount();\n  } else if (refed === !item[kRefed]) {\n    if (refed)\n      incRefCount();\n    else\n      decRefCount();\n  }\n  item[kRefed] = refed;\n}\n\n// We need to use the binding as the receiver for fast API calls.\nfunction insert(item\x2C msecs\x2C start = binding.getLibuvNow()) {\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\n  msecs = MathTrunc(msecs);\n  item._idleStart = start;\n\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\n  let list = timerListMap[msecs];\n  if (list === undefined) {\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\n    const expiry = start + msecs;\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\n    timerListQueue.insert(list);\n\n    if (nextExpiry > expiry) {\n      // We need to use the binding as the receiver for fast API calls.\n      binding.scheduleTimer(msecs);\n      nextExpiry = expiry;\n    }\n  }\n\n  L.append(list\x2C item);\n}\n\nfunction setUnrefTimeout(callback\x2C after) {\n  // Type checking identical to setTimeout()\n  validateFunction(callback\x2C 'callback');\n\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\n  insert(timer\x2C timer._idleTimeout);\n\n  return timer;\n}\n\n// Type checking used by timers.enroll() and Socket#setTimeout()\nfunction getTimerDuration(msecs\x2C name) {\n  validateNumber(msecs\x2C name);\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\n  }\n\n  // Ensure that msecs fits into signed int32\n  if (msecs > TIMEOUT_MAX) {\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\n                        'TimeoutOverflowWarning');\n    return TIMEOUT_MAX;\n  }\n\n  return msecs;\n}\n\nfunction compareTimersLists(a\x2C b) {\n  const expiryDiff = a.expiry - b.expiry;\n  if (expiryDiff === 0) {\n    if (a.id < b.id)\n      return -1;\n    if (a.id > b.id)\n      return 1;\n  }\n  return expiryDiff;\n}\n\nfunction setPosition(node\x2C pos) {\n  node.priorityQueuePosition = pos;\n}\n\nfunction getTimerCallbacks(runNextTicks) {\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\n  // this queue will store all remaining Immediates that need to run upon\n  // resolution of all error handling (if process is still alive).\n  const outstandingQueue = new ImmediateList();\n\n  function processImmediate() {\n    const queue = outstandingQueue.head !== null ?\n      outstandingQueue : immediateQueue;\n    let immediate = queue.head;\n\n    // Clear the linked list early in case new `setImmediate()`\n    // calls occur while immediate callbacks are executed\n    if (queue !== outstandingQueue) {\n      queue.head = queue.tail = null;\n      immediateInfo[kHasOutstanding] = 1;\n    }\n\n    let prevImmediate;\n    let ranAtLeastOneImmediate = false;\n    while (immediate !== null) {\n      if (ranAtLeastOneImmediate)\n        runNextTicks();\n      else\n        ranAtLeastOneImmediate = true;\n\n      // It's possible for this current Immediate to be cleared while executing\n      // the next tick queue above\x2C which means we need to use the previous\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\n      if (immediate._destroyed) {\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\n        continue;\n      }\n\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\n      // gets executed\x2C just like how Timeouts work.\n      immediate._destroyed = true;\n\n      immediateInfo[kCount]--;\n      if (immediate[kRefed])\n        immediateInfo[kRefCount]--;\n      immediate[kRefed] = null;\n\n      prevImmediate = immediate;\n\n      const priorContextFrame =\n        AsyncContextFrame.exchange(immediate[async_context_frame]);\n\n      const asyncId = immediate[async_id_symbol];\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\n\n      try {\n        const argv = immediate._argv;\n        if (!argv)\n          immediate._onImmediate();\n        else\n          immediate._onImmediate(...argv);\n      } finally {\n        immediate._onImmediate = null;\n\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n\n        outstandingQueue.head = immediate = immediate._idleNext;\n      }\n\n      emitAfter(asyncId);\n\n      AsyncContextFrame.set(priorContextFrame);\n    }\n\n    if (queue === outstandingQueue)\n      outstandingQueue.head = null;\n    immediateInfo[kHasOutstanding] = 0;\n  }\n\n\n  function processTimers(now) {\n    debug('process timer lists %d'\x2C now);\n    nextExpiry = Infinity;\n\n    let list;\n    let ranAtLeastOneList = false;\n    while ((list = timerListQueue.peek()) != null) {\n      if (list.expiry > now) {\n        nextExpiry = list.expiry;\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\n      }\n      if (ranAtLeastOneList)\n        runNextTicks();\n      else\n        ranAtLeastOneList = true;\n      listOnTimeout(list\x2C now);\n    }\n    return 0;\n  }\n\n  function listOnTimeout(list\x2C now) {\n    const msecs = list.msecs;\n\n    debug('timeout callback %d'\x2C msecs);\n\n    let ranAtLeastOneTimer = false;\n    let timer;\n    while ((timer = L.peek(list)) != null) {\n      const diff = now - timer._idleStart;\n\n      // Check if this loop iteration is too early for the next timer.\n      // This happens if there are more timers scheduled for later in the list.\n      if (diff < msecs) {\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\n        list.id = timerListId++;\n        timerListQueue.percolateDown(1);\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\n        return;\n      }\n\n      if (ranAtLeastOneTimer)\n        runNextTicks();\n      else\n        ranAtLeastOneTimer = true;\n\n      // The actual logic for when a timeout happens.\n      L.remove(timer);\n\n      const asyncId = timer[async_id_symbol];\n\n      if (!timer._onTimeout) {\n        if (!timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kHasPrimitive])\n            delete knownTimersById[asyncId];\n\n          if (timer[kRefed])\n            timeoutInfo[0]--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n        continue;\n      }\n\n      const priorContextFrame =\n        AsyncContextFrame.exchange(timer[async_context_frame]);\n\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\n\n      let start;\n      if (timer._repeat) {\n        // We need to use the binding as the receiver for fast API calls.\n        start = binding.getLibuvNow();\n      }\n\n      try {\n        const args = timer._timerArgs;\n        if (args === undefined)\n          timer._onTimeout();\n        else\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\n      } finally {\n        if (timer._repeat && timer._idleTimeout !== -1) {\n          timer._idleTimeout = timer._repeat;\n          insert(timer\x2C timer._idleTimeout\x2C start);\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kHasPrimitive])\n            delete knownTimersById[asyncId];\n\n          if (timer[kRefed])\n            timeoutInfo[0]--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n      }\n\n      emitAfter(asyncId);\n\n      AsyncContextFrame.set(priorContextFrame);\n    }\n\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\n    // called all of the timer timeouts.\n    // As such\x2C we can remove the list from the object map and\n    // the PriorityQueue.\n    debug('%d list empty'\x2C msecs);\n\n    // The current list may have been removed and recreated since the reference\n    // to `list` was created. Make sure they're the same instance of the list\n    // before destroying.\n    if (list === timerListMap[msecs]) {\n      delete timerListMap[msecs];\n      timerListQueue.shift();\n    }\n  }\n\n  return {\n    processImmediate\x2C\n    processTimers\x2C\n  };\n}\n\nclass Immediate {\n  constructor(callback\x2C args) {\n    this._idleNext = null;\n    this._idlePrev = null;\n    this._onImmediate = callback;\n    this._argv = args;\n    this._destroyed = false;\n    this[kRefed] = false;\n\n    initAsyncResource(this\x2C 'Immediate');\n\n    this.ref();\n    immediateInfo[kCount]++;\n\n    immediateQueue.append(this);\n  }\n\n  ref() {\n    if (this[kRefed] === false) {\n      this[kRefed] = true;\n\n      if (immediateInfo[kRefCount]++ === 0) {\n        // We need to use the binding as the receiver for fast API calls.\n        binding.toggleImmediateRef(true);\n      }\n    }\n    return this;\n  }\n\n  unref() {\n    if (this[kRefed] === true) {\n      this[kRefed] = false;\n      if (--immediateInfo[kRefCount] === 0) {\n        // We need to use the binding as the receiver for fast API calls.\n        binding.toggleImmediateRef(false);\n      }\n    }\n    return this;\n  }\n\n  hasRef() {\n    return !!this[kRefed];\n  }\n}\n\nmodule.exports = {\n  TIMEOUT_MAX\x2C\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\n  async_id_symbol\x2C\n  trigger_async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  initAsyncResource\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n  immediateQueue\x2C\n  getTimerCallbacks\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\x2C\n    kHasOutstanding\x2C\n  }\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  decRefCount\x2C\n  incRefCount\x2C\n  knownTimersById\x2C\n};\n
code-source-info,0x10802afe0,10,13115,13166,,,
tick,0x192475198,11985042,0,0x0,0,0x1a7c5b21ab3a,0x1a7c5b21a820,0x1a7c5b20fbd1,0x1a7c5b20fd56,0xbd578266827,0x108029040,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
code-creation,JS,10,11985042,0x10802b060,392,remove node:internal/linkedlist:16:16,0x22b216cdb4e8,^
script-source,16,node:internal/linkedlist,'use strict';\n\nfunction init(list) {\n  list._idleNext = list;\n  list._idlePrev = list;\n  return list;\n}\n\n// Show the most idle item.\nfunction peek(list) {\n  if (list._idlePrev === list) return null;\n  return list._idlePrev;\n}\n\n// Remove an item from its list.\nfunction remove(item) {\n  if (item._idleNext) {\n    item._idleNext._idlePrev = item._idlePrev;\n  }\n\n  if (item._idlePrev) {\n    item._idlePrev._idleNext = item._idleNext;\n  }\n\n  item._idleNext = null;\n  item._idlePrev = null;\n}\n\n// Remove an item from its list and place at the end.\nfunction append(list\x2C item) {\n  if (item._idleNext || item._idlePrev) {\n    remove(item);\n  }\n\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\n  item._idleNext = list._idleNext;\n  item._idlePrev = list;\n\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\n  list._idleNext._idlePrev = item;\n  list._idleNext = item;\n}\n\nfunction isEmpty(list) {\n  return list._idleNext === list;\n}\n\nmodule.exports = {\n  init\x2C\n  peek\x2C\n  remove\x2C\n  append\x2C\n  isEmpty\x2C\n};\n
code-source-info,0x10802b060,16,275,487,,,
tick,0x10113b2cc,11985667,0,0x0,5,0x108023204,0x108021988
tick,0x1016b64fc,11986958,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100cbd148,11988208,0,0x0,8
tick,0x100cbcc2c,11989458,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,11990750,0,0x0,8
tick,0x19252e620,11991792,0,0x0,8
tick,0x192527a78,11993000,0,0x0,8
tick,0x19252e620,11994292,0,0x0,8
tick,0x19252e620,11995583,0,0x0,8
tick,0x19252e620,11996833,0,0x0,8
tick,0x19240b7d8,11998167,0,0x0,1
tick,0x19252e620,11999250,0,0x0,8
tick,0x192527a78,12000458,0,0x0,8
tick,0x100abc828,12001667,0,0x0,8
tick,0x107ff2b00,12002958,0,0x0,0,0x1080264e0,0x108010e90
tick,0x100ccdb7c,12004250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12005500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12006625,0,0x0,8
tick,0x19252ad6c,12007875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12009125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fecf00,12010333,0,0x0,0,0x107fed654,0x10801b4ec,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12011667,0,0x0,8
tick,0x19252e620,12012917,0,0x0,8
tick,0x100ba4780,12014250,0,0x0,8
tick,0x1016af5c4,12015542,0,0x0,0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x100fb3bd4,12016667,0,0x0,5
tick,0x19252ad6c,12017917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ce1cd0,12019167,0,0x0,6
tick,0x19252e620,12020417,0,0x0,8
tick,0x19252f804,12021500,0,0x0,8
tick,0x1925a17cc,12022750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100cbccd0,12024000,0,0x0,6
tick,0x19252b3f4,12025167,0,0x0,8
tick,0x1010eb600,12026333,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12027583,0,0x0,8
tick,0x192527ad0,12028833,0,0x0,8
tick,0x10166a1ac,12030125,0,0x0,0,0x10801053c
tick,0x19252e620,12031375,0,0x0,8
tick,0x100cbb3f0,12032500,0,0x0,5
tick,0x19252ad6c,12033792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10801820c,12034792,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x1080085dc,12036042,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252e620,12037292,0,0x0,8
tick,0x1009b0f3c,12038542,0,0x0,8
tick,0x19252e620,12039833,0,0x0,8
tick,0x10116a65c,12041083,0,0x0,5
tick,0x19252e620,12042333,0,0x0,8
tick,0x100abcef8,12043583,0,0x0,8
tick,0x19252e620,12044917,0,0x0,8
tick,0x19252b25c,12045917,0,0x0,8
tick,0x19252e620,12047208,0,0x0,8
tick,0x19252e620,12048458,0,0x0,8
tick,0x19252e620,12049458,0,0x0,8
tick,0x19252e620,12050667,0,0x0,8
tick,0x19252e620,12051917,0,0x0,8
tick,0x1016725ec,12053000,0,0x0,0,0x107fe4900,0x10800b288,0x10800a738
tick,0x19252e620,12054292,0,0x0,8
tick,0x19252e620,12055458,0,0x0,8
tick,0x19252e620,12056500,0,0x0,8
tick,0x19252e620,12057542,0,0x0,8
tick,0x1925a22e0,12058750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,12059792,0,0x0,8
tick,0x1080136f0,12061083,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,12062333,0,0x0,8
tick,0x100b1b1bc,12063583,0,0x0,6
tick,0x19252e620,12064833,0,0x0,8
tick,0x1009bbbfc,12066042,0,0x0,6
tick,0x19252e620,12067083,0,0x0,8
tick,0x19252e620,12068333,0,0x0,8
tick,0x19252e620,12069458,0,0x0,8
tick,0x19252e620,12070500,0,0x0,8
tick,0x19252e620,12071625,0,0x0,8
tick,0x107fef9c4,12072875,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,12074125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12075375,0,0x0,8
tick,0x101bddd9c,12076542,0,0x0,8
tick,0x19252e620,12077792,0,0x0,8
tick,0x107fe4690,12078875,0,0x0,0,0x10800d58c,0x10800cb40,0x10800a9e8
tick,0x1925a22e4,12080125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12081417,0,0x0,8
tick,0x19252ad6c,12082667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12083917,0,0x0,8
tick,0x101004570,12085167,0,0x0,5
tick,0x19252e620,12086417,0,0x0,8
tick,0x19252ad6c,12087708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,12088958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12090250,0,0x0,8
tick,0x192373ae8,12091500,0,0x0,8
tick,0x101660dd8,12092750,0,0x0,0,0x107fe3ef8,0x108021150
tick,0x19252e620,12094000,0,0x0,8
tick,0x19252e620,12095250,0,0x0,8
tick,0x19252e620,12096417,0,0x0,8
tick,0x19252e620,12097667,0,0x0,8
tick,0x1016ad228,12098833,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252f804,12100083,0,0x0,8
tick,0x19252b25c,12101250,0,0x0,8
tick,0x19252e620,12102542,0,0x0,8
tick,0x19252e620,12103583,0,0x0,8
tick,0x192372cf4,12104792,0,0x0,8
tick,0x19252e620,12106083,0,0x0,8
tick,0x19252e620,12107292,0,0x0,8
tick,0x19252e620,12108333,0,0x0,8
tick,0x100e2fb30,12109333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12110583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fed664,12111792,0,0x0,0,0x10801b4ec,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbd480,12112875,0,0x0,6
tick,0x19252e620,12114208,0,0x0,8
tick,0x19252e620,12115375,0,0x0,8
tick,0x19252f804,12116625,0,0x0,8
tick,0x19252e620,12117875,0,0x0,8
tick,0x19252e620,12119167,0,0x0,8
tick,0x19252ad6c,12120417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12121542,0,0x0,8
tick,0x19252e620,12122792,0,0x0,8
tick,0x19252ad6c,12123917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12125167,0,0x0,8
tick,0x19252e620,12126208,0,0x0,8
tick,0x19252e620,12127500,0,0x0,8
tick,0x192528738,12128708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,12129958,0,0x0,8
tick,0x19252e620,12131042,0,0x0,8
tick,0x19252e620,12132125,0,0x0,8
tick,0x19252e620,12133125,0,0x0,8
tick,0x19252e620,12134125,0,0x0,8
tick,0x19252b4fc,12135375,0,0x0,8
tick,0x19252e620,12136667,0,0x0,8
tick,0x19252e620,12137667,0,0x0,8
tick,0x19252e620,12138708,0,0x0,8
tick,0x19252ad6c,12139958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,12141208,0,0x0,8
tick,0x19252e620,12142250,0,0x0,8
tick,0x19252e620,12143542,0,0x0,8
tick,0x19252e620,12144833,0,0x0,8
tick,0x19252ad6c,12146042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12147292,0,0x0,8
tick,0x10165779c,12148542,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12149792,0,0x0,8
tick,0x19252e620,12151083,0,0x0,8
tick,0x19252e620,12152083,0,0x0,8
tick,0x19252e620,12153375,0,0x0,8
tick,0x19252ad6c,12154333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,12155625,0,0x0,8
tick,0x19252e620,12156875,0,0x0,8
tick,0x19252e620,12157917,0,0x0,8
tick,0x19252b4fc,12159167,0,0x0,8
tick,0x19252b4fc,12160417,0,0x0,8
tick,0x10164a6c4,12161667,0,0x0,8
tick,0x19252ad6c,12162958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12164208,0,0x0,8
tick,0x19252e620,12165500,0,0x0,8
tick,0x19252e620,12166500,0,0x0,8
tick,0x100b9e664,12167750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12168833,0,0x0,8
tick,0x192527a78,12169875,0,0x0,8
tick,0x19252e620,12171125,0,0x0,8
tick,0x1925a17b0,12172208,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12173333,0,0x0,8
tick,0x19252e620,12174417,0,0x0,8
tick,0x19252b4fc,12175500,0,0x0,8
tick,0x1925708bc,12176750,0,0x0,8
tick,0x19252e620,12177792,0,0x0,8
tick,0x19252e620,12179000,0,0x0,8
tick,0x192527ad0,12180250,0,0x0,8
tick,0x19252e620,12181542,0,0x0,8
tick,0x19252e620,12182667,0,0x0,8
tick,0x19252e620,12183750,0,0x0,8
tick,0x19252e620,12185000,0,0x0,8
tick,0x19252e620,12186250,0,0x0,8
tick,0x19252e620,12187500,0,0x0,8
tick,0x19252e620,12188750,0,0x0,8
tick,0x19252b25c,12190000,0,0x0,0,0x10800a800
tick,0x19252e620,12191250,0,0x0,8
tick,0x1009f0bf8,12192333,0,0x0,6
tick,0x19252e620,12193583,0,0x0,8
tick,0x19252ad6c,12194625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107ff83b8,12195875,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12197125,0,0x0,8
tick,0x19252e620,12198375,0,0x0,8
tick,0x10166f12c,12199625,0,0x0,0
tick,0x19252e620,12200917,0,0x0,8
tick,0x19252ad6c,12202167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12203417,0,0x0,8
tick,0x19252b4fc,12204667,0,0x0,8
tick,0x19252e620,12205958,0,0x0,8
tick,0x19252e620,12206958,0,0x0,8
tick,0x19252ad6c,12208208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080138c8,12209458,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252b3f4,12210708,0,0x0,8
tick,0x102712af0,12211958,0,0x0,8
tick,0x100e9f4d8,12213000,0,0x0,1
tick,0x19252f804,12214125,0,0x0,8
tick,0x19252e620,12215417,0,0x0,8
tick,0x1016b6fc4,12216625,0,0x0,0,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192527ad0,12217917,0,0x0,8
tick,0x19252b4fc,12219167,0,0x0,8
tick,0x10166b4bc,12220417,0,0x0,0,0x10801a474
tick,0x19252ad6c,12221667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12222917,0,0x0,8
tick,0x100ce1dec,12224042,0,0x0,6
tick,0x19252ad6c,12225292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e7bd00,12226542,0,0x0,5
tick,0x19252e620,12227792,0,0x0,8
tick,0x19252e620,12228958,0,0x0,8
tick,0x19252b4fc,12230208,0,0x0,8
tick,0x1010045a0,12231250,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800b2e0,12232500,0,0x0,0,0x10800a738
tick,0x19252e620,12233750,0,0x0,8
tick,0x19252e620,12234750,0,0x0,8
tick,0x19252b4fc,12236000,0,0x0,8
tick,0x100e01720,12237292,0,0x0,5
tick,0x19252b25c,12238542,0,0x0,8
tick,0x100f5dba0,12239792,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101749a5c,12241042,0,0x0,0,0x101787ff0,0x10802651c,0x108010e90
tick,0x19252e620,12242292,0,0x0,8
tick,0x19259e7ec,12243542,0,0x0,1
tick,0x100e3cef8,12244792,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1009bde8c,12246042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,12247292,0,0x0,8
tick,0x19252e620,12248417,0,0x0,8
tick,0x101736988,12249667,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbd494,12251000,0,0x0,0,0x107fe3170
tick,0x107fe3c44,12252250,0,0x0,0,0x10801fd48,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252f804,12253500,0,0x0,8
tick,0x19252ad6c,12254750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12256042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12257292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12258458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080136a0,12259625,0,0x0,0,0x108010e90
tick,0x100ba8140,12260875,0,0x0,6
tick,0x19252e620,12262125,0,0x0,8
tick,0x1009b1a2c,12263417,0,0x0,6
tick,0x19252e620,12264708,0,0x0,8
tick,0x19252e620,12265958,0,0x0,8
tick,0x100cc2c48,12267208,0,0x0,0,0x107fe3170
tick,0x19252ad6c,12268667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,12269875,0,0x0,8
tick,0x10800b8ac,12270958,0,0x0,0,0x10800a738
tick,0x19252f804,12272500,0,0x0,8
tick,0x100cb94f8,12273625,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12274917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,12276500,0,0x0,8
tick,0x19240aa04,12277750,0,0x0,1
tick,0x19252e620,12278958,0,0x0,8
tick,0x19252b3f4,12280292,0,0x0,8
tick,0x100f3d5dc,12281792,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12283458,0,0x0,8
tick,0x19252e620,12284500,0,0x0,8
tick,0x19252e620,12285833,0,0x0,8
tick,0x192371588,12287125,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100f5dba4,12288333,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b25c,12289583,0,0x0,0,0x10800a800
tick,0x19252e620,12290875,0,0x0,8
tick,0x100eb5954,12292208,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192376644,12293583,0,0x0,1
tick,0x107fe49a4,12294792,0,0x0,0,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x1016ad0b8,12296042,0,0x0,0,0x107fe6724,0x107fe7be0,0x107feee40,0x107fe2ff0
tick,0x100e3d024,12297125,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12298375,0,0x0,8
tick,0x19252e620,12299667,0,0x0,8
tick,0x100a2c0d8,12300958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,12302167,0,0x0,8
tick,0x19252e620,12303625,0,0x0,8
tick,0x19252e620,12304917,0,0x0,8
tick,0x1016e10c0,12306250,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12307458,0,0x0,8
tick,0x19252e620,12308583,0,0x0,8
tick,0x10164b908,12309833,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19237570c,12311125,0,0x0,8
tick,0x19252ad6c,12312375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12313667,0,0x0,8
tick,0x19252e620,12314917,0,0x0,8
tick,0x19252e620,12315958,0,0x0,8
tick,0x19252e620,12317250,0,0x0,8
tick,0x19252e620,12318333,0,0x0,8
tick,0x1009b423c,12319542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe2b78,12320708,0,0x0,0
tick,0x19252e620,12321958,0,0x0,8
tick,0x19252e620,12323208,0,0x0,8
tick,0x19252e620,12324458,0,0x0,8
tick,0x19252e620,12325708,0,0x0,8
tick,0x19252e620,12326750,0,0x0,8
tick,0x100f3880c,12328000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12329250,0,0x0,8
tick,0x101144558,12330333,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,12331583,0,0x0,8
tick,0x19252e620,12332667,0,0x0,8
tick,0x19252b25c,12333667,0,0x0,8
tick,0x19252e620,12334917,0,0x0,8
tick,0x19237560c,12335917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,12337083,0,0x0,0,0x10800a800
tick,0x1923879d0,12338208,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x101672528,12339458,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x100cd1f60,12340750,0,0x0,8
tick,0x1016aced8,12342000,0,0x0,0,0x107fe39b4,0x107fe2fb4
tick,0x19252f804,12343250,0,0x0,8
tick,0x192528738,12344500,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12345792,0,0x0,8
tick,0x100cb9540,12347000,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12348292,0,0x0,8
tick,0x19252e620,12349500,0,0x0,8
tick,0x192527a78,12350750,0,0x0,8
tick,0x19252e620,12352000,0,0x0,8
tick,0x19252e620,12353250,0,0x0,8
tick,0x19252e620,12354250,0,0x0,8
tick,0x19252e620,12355417,0,0x0,8
tick,0x192527354,12356500,0,0x0,8
tick,0x19252e620,12357750,0,0x0,8
tick,0x192527ad0,12359000,0,0x0,8
tick,0x19252e620,12360292,0,0x0,8
tick,0x19252e620,12361542,0,0x0,8
tick,0x19252e620,12362625,0,0x0,8
tick,0x100eb5954,12363875,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x107fe756c,12365167,0,0x0,0,0x10801df50,0x107fe301c
tick,0x19252e620,12366417,0,0x0,8
tick,0x19252e620,12367667,0,0x0,8
tick,0x19252e620,12368875,0,0x0,8
tick,0x19252e620,12369958,0,0x0,8
tick,0x19252b3f4,12371208,0,0x0,8
tick,0x19252e620,12372458,0,0x0,8
tick,0x1016b70e0,12373708,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252ad6c,12375000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12376250,0,0x0,8
tick,0x1009f1640,12377500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,12378750,0,0x0,8
tick,0x100e3d024,12380000,0,0x0,6
tick,0x19252b25c,12381250,0,0x0,8
tick,0x107fe4670,12382250,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x192528738,12383542,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016b9524,12384792,0,0x0,0,0x107fe71c0,0x1080264e0,0x108010e90
tick,0x19252e620,12386042,0,0x0,8
tick,0x19252ad6c,12387042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12388333,0,0x0,8
tick,0x19252e620,12389625,0,0x0,8
tick,0x19252e620,12390875,0,0x0,8
tick,0x19252e620,12392083,0,0x0,8
tick,0x19252e620,12393208,0,0x0,8
tick,0x19252e620,12394208,0,0x0,8
tick,0x19252e620,12395208,0,0x0,8
tick,0x19252e620,12396333,0,0x0,8
tick,0x1080223d8,12397375,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x19252e620,12398625,0,0x0,8
tick,0x19252e620,12399667,0,0x0,8
tick,0x192527ad0,12400917,0,0x0,8
tick,0x1016acedc,12402167,0,0x0,0,0x107fe39b4,0x108021150
tick,0x1017021e0,12403417,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12404708,0,0x0,8
tick,0x19252e620,12405958,0,0x0,8
tick,0x19252e620,12407125,0,0x0,8
new,MemoryChunk,0x5d5bbc00000,262144
tick,0x19252e620,12408375,0,0x0,8
tick,0x19252b25c,12409667,0,0x0,0,0x10800a800
tick,0x1016b6410,12410917,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,12412292,0,0x0,8
tick,0x19252e620,12413542,0,0x0,8
tick,0x19252f804,12414500,0,0x0,8
tick,0x19252e620,12415917,0,0x0,8
tick,0x19252e620,12416875,0,0x0,8
tick,0x19252e620,12418125,0,0x0,8
tick,0x19252e620,12419708,0,0x0,8
tick,0x19252e620,12420625,0,0x0,8
tick,0x19252e620,12421708,0,0x0,8
tick,0x1016ad84c,12423000,0,0x0,0,0x107fe491c,0x10800b288,0x10800a738
tick,0x19252e620,12424250,0,0x0,8
tick,0x19252f804,12425500,0,0x0,8
tick,0x1009b0f3c,12426750,0,0x0,8
tick,0x192528738,12428000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12429292,0,0x0,8
tick,0x19252e620,12430333,0,0x0,8
tick,0x192527ad0,12431333,0,0x0,8
tick,0x19252e620,12432625,0,0x0,8
tick,0x19252e620,12433667,0,0x0,8
tick,0x19252e620,12434667,0,0x0,8
tick,0x10166a900,12435750,0,0x0,0
tick,0x19252ad6c,12437000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12438292,0,0x0,8
tick,0x19252ad6c,12439333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12440458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fefe44,12441750,0,0x0,0,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12443000,0,0x0,8
tick,0x19252ad6c,12444250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12445583,0,0x0,8
tick,0x19252e620,12446792,0,0x0,8
tick,0x1016ad228,12448000,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252e620,12449250,0,0x0,8
tick,0x19252e620,12450542,0,0x0,8
tick,0x19252e620,12451708,0,0x0,8
tick,0x19252e620,12452958,0,0x0,8
tick,0x101194bb4,12454208,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12455458,0,0x0,8
tick,0x19252e620,12456708,0,0x0,8
tick,0x19252e620,12458000,0,0x0,8
tick,0x107ff82f0,12459250,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,12460500,0,0x0,8
tick,0x19252e620,12461750,0,0x0,8
tick,0x19252e620,12462792,0,0x0,8
tick,0x19252ad6c,12464083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,12465292,0,0x0,8
tick,0x19252e620,12466542,0,0x0,8
tick,0x19252e620,12467583,0,0x0,8
tick,0x19252e620,12468708,0,0x0,8
tick,0x10113bd50,12469750,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12471000,0,0x0,8
tick,0x19252ad6c,12472292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101bdaa74,12473458,0,0x0,8
tick,0x19252e620,12474542,0,0x0,8
tick,0x19252f804,12475792,0,0x0,8
tick,0x19252e620,12477083,0,0x0,8
tick,0x100cd23c4,12478125,0,0x0,6
tick,0x1925a1804,12479292,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x107fe4e24,12480375,0,0x0,0,0x10800b5c0,0x10800a738
tick,0x19252e620,12481625,0,0x0,8
tick,0x19252ad6c,12482667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12483750,0,0x0,8
tick,0x19252e620,12484750,0,0x0,8
tick,0x19252ad6c,12485875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12487125,0,0x0,8
tick,0x19252e620,12488417,0,0x0,8
tick,0x107ff2bb4,12489542,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x101702000,12490583,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12491875,0,0x0,8
tick,0x19252ad6c,12492875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12494125,0,0x0,8
tick,0x19252e620,12495208,0,0x0,8
tick,0x19252e620,12496292,0,0x0,8
tick,0x19252e620,12497542,0,0x0,8
tick,0x19252e620,12498750,0,0x0,8
tick,0x19252e620,12499750,0,0x0,8
tick,0x19252e620,12500750,0,0x0,8
tick,0x19252e620,12501833,0,0x0,8
tick,0x100cd4558,12502958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12504208,0,0x0,8
tick,0x19252e620,12505292,0,0x0,8
tick,0x1016735dc,12506500,0,0x0,0,0x107fe4900,0x10800b288,0x10800a738
tick,0x19252e620,12507750,0,0x0,8
tick,0x19252e620,12508958,0,0x0,8
tick,0x10166f12c,12510042,0,0x0,0
tick,0x19252ad6c,12511292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016735d0,12512458,0,0x0,0,0x107fe484c,0x1080145a8,0x1080266d0,0x108010e90
tick,0x19252ad6c,12513750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,12515000,0,0x0,8
tick,0x19252f804,12516250,0,0x0,8
tick,0x19252e620,12517542,0,0x0,8
tick,0x19252b4fc,12518792,0,0x0,8
tick,0x19252e620,12520042,0,0x0,8
tick,0x19252e620,12521292,0,0x0,8
tick,0x19252ad6c,12522542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10113a0e4,12523792,0,0x0,5,0x108023204,0x108021988
tick,0x19259e7ec,12525042,0,0x0,8
tick,0x1010e6c6c,12526333,0,0x0,5
tick,0x19252e620,12527583,0,0x0,8
tick,0x19252b25c,12528833,0,0x0,0,0x10800a800
tick,0x19259e814,12529917,0,0x0,8
tick,0x19252e620,12531167,0,0x0,8
tick,0x19252e620,12589667,0,0x0,8
tick,0x19252e620,12590208,0,0x0,8
tick,0x100d2211c,12591500,0,0x0,0,0x10176b97c,0x108008690,0x10800b05c,0x10800a738
tick,0x101671d20,12592708,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,12594000,0,0x0,8
tick,0x19252e620,12595250,0,0x0,8
tick,0x19252e620,12596542,0,0x0,8
tick,0x100cc8314,12597792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10113a0b8,12599042,0,0x0,5
tick,0x10800b7b4,12600333,0,0x0,0,0x10800a738
tick,0x19252e620,12601583,0,0x0,8
tick,0x192527ad0,12602833,0,0x0,8
tick,0x19252e620,12604125,0,0x0,8
tick,0x101195030,12605333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12606625,0,0x0,8
tick,0x19252e620,12607875,0,0x0,8
tick,0x19252e620,12609208,0,0x0,8
tick,0x19252e620,12610292,0,0x0,8
tick,0x19252e620,12611333,0,0x0,8
tick,0x192528738,12612583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527ad0,12613875,0,0x0,8
tick,0x100f39fd0,12615125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12616375,0,0x0,8
tick,0x1016515b0,12617625,0,0x0,8
tick,0x19252f804,12618875,0,0x0,8
tick,0x19252b25c,12620125,0,0x0,8
tick,0x100ccc5ac,12621375,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,12622667,0,0x0,8
tick,0x19252e620,12623917,0,0x0,8
tick,0x19252b25c,12625167,0,0x0,8
tick,0x19252ad6c,12626417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12627708,0,0x0,8
tick,0x19252e620,12628833,0,0x0,8
tick,0x19252e620,12629917,0,0x0,8
tick,0x19252e620,12630917,0,0x0,8
tick,0x19252e620,12631958,0,0x0,8
tick,0x19252e620,12633125,0,0x0,8
tick,0x19252f804,12634333,0,0x0,8
tick,0x1924293f4,12635542,0,0x0,1
tick,0x19259e814,12636792,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,12637958,0,0x0,8
tick,0x100e22bcc,12638958,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923879d0,12640250,0,0x0,8
tick,0x10113ced0,12641333,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,12642583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12643833,0,0x0,8
tick,0x19252e620,12644875,0,0x0,8
tick,0x192528738,12646125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10800d294,12647375,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252b4fc,12648625,0,0x0,8
tick,0x19252b25c,12649875,0,0x0,0,0x10800a800
tick,0x19252b25c,12651167,0,0x0,0,0x10800a800
tick,0x19252e620,12652417,0,0x0,8
tick,0x19252e620,12653583,0,0x0,8
tick,0x101160ad8,12654708,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12655958,0,0x0,8
tick,0x19252e620,12657000,0,0x0,8
tick,0x192375b9c,12658042,0,0x0,8
tick,0x1016b70bc,12659125,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,12660375,0,0x0,8
tick,0x19252ad6c,12661667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12662958,0,0x0,8
tick,0x100f35cb4,12663958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,12665250,0,0x0,8
tick,0x19252e620,12666500,0,0x0,8
tick,0x19252e620,12667750,0,0x0,8
tick,0x19252f804,12669000,0,0x0,8
tick,0x19252e620,12670250,0,0x0,8
tick,0x19252e620,12671375,0,0x0,8
tick,0x19252e620,12672667,0,0x0,8
tick,0x19252e620,12673708,0,0x0,8
tick,0x1010e7a64,12674833,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192527ad0,12675875,0,0x0,8
tick,0x19252b25c,12677042,0,0x0,8
tick,0x19252e620,12678333,0,0x0,8
tick,0x19252e620,12679542,0,0x0,8
tick,0x19252b3f4,12680833,0,0x0,8
tick,0x101a8c5ac,12682083,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x10166f0ec,12683333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,12684583,0,0x0,8
tick,0x19252bb3c,12685833,0,0x0,1
tick,0x19252e620,12686875,0,0x0,8
tick,0x19252e620,12687958,0,0x0,8
tick,0x19252e620,12689208,0,0x0,8
tick,0x100e01d90,12690458,0,0x0,0
tick,0x19252b3f4,12691458,0,0x0,8
tick,0x19252e620,12692500,0,0x0,8
tick,0x19252e620,12693750,0,0x0,8
tick,0x19252e620,12694875,0,0x0,8
tick,0x19252e620,12695917,0,0x0,8
tick,0x107f9fd14,12696875,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x19252ad6c,12698167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12699417,0,0x0,8
tick,0x101139e60,12700667,0,0x0,5
tick,0x192528738,12701917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100ce1cc4,12703167,0,0x0,0,0x107fe3170
tick,0x1016b701c,12704417,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x100b9ccbc,12705708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12706708,0,0x0,8
tick,0x19252e620,12707750,0,0x0,8
tick,0x192527a78,12709000,0,0x0,8
tick,0x19252e620,12710125,0,0x0,8
tick,0x101bde680,12711417,0,0x0,8
tick,0x19252e620,12712667,0,0x0,8
tick,0x19252ad6c,12713958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12715083,0,0x0,8
tick,0x1016b70cc,12716542,0,0x0,0,0x107fe2ff0
tick,0x100e858b8,12717708,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12718917,0,0x0,8
tick,0x19252e620,12719958,0,0x0,8
tick,0x19252e620,12721167,0,0x0,8
tick,0x19252e620,12722375,0,0x0,8
tick,0x108022fa4,12723667,0,0x0,0,0x108021988
tick,0x19252f804,12724958,0,0x0,8
tick,0x1080085a4,12726208,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252b4fc,12727458,0,0x0,8
tick,0x19252e620,12728625,0,0x0,8
tick,0x19252ad6c,12729875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12731167,0,0x0,8
tick,0x19252e620,12732167,0,0x0,8
tick,0x19252e620,12733417,0,0x0,8
tick,0x19252e620,12734500,0,0x0,8
tick,0x19252e620,12735708,0,0x0,8
tick,0x101660dd0,12736875,0,0x0,0,0x108011300
tick,0x19252e620,12737958,0,0x0,8
tick,0x19252e620,12739042,0,0x0,8
tick,0x19252e620,12740167,0,0x0,8
tick,0x19252e620,12741208,0,0x0,8
tick,0x19252e620,12742333,0,0x0,8
tick,0x19252b25c,12743333,0,0x0,8
tick,0x19252e620,12744542,0,0x0,8
tick,0x19252e620,12745542,0,0x0,8
tick,0x19252b25c,12746542,0,0x0,8
tick,0x19252e620,12747833,0,0x0,8
tick,0x19252e620,12749083,0,0x0,8
tick,0x192527a78,12750333,0,0x0,8
tick,0x101bd7bd8,12751583,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101005a9c,12752833,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923759ac,12754083,0,0x0,8
tick,0x19252e620,12755333,0,0x0,8
tick,0x192527ad0,12756625,0,0x0,8
tick,0x19252e620,12757625,0,0x0,8
tick,0x19252e620,12758708,0,0x0,8
tick,0x19252ad6c,12759708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12761000,0,0x0,8
tick,0x19252f804,12762125,0,0x0,8
tick,0x19239f6d4,12763375,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12764500,0,0x0,8
tick,0x100ccdbc4,12765750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,12767000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107fe7590,12768292,0,0x0,0,0x107feee40,0x107fe2ff0
tick,0x192372e5c,12769292,0,0x0,8
tick,0x19252e620,12770583,0,0x0,8
tick,0x19252e620,12771792,0,0x0,8
tick,0x19252ad6c,12773083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12774333,0,0x0,8
tick,0x19252e620,12775333,0,0x0,8
tick,0x1923a0264,12776375,0,0x0,8
tick,0x19252e620,12777625,0,0x0,8
tick,0x19252a6ec,12778875,0,0x0,1
tick,0x1010e7a64,12780167,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12781417,0,0x0,8
tick,0x19252e620,12782458,0,0x0,8
tick,0x19252e620,12783708,0,0x0,8
tick,0x100cdec90,12784708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101660de8,12785792,0,0x0,0,0x107fe35dc
tick,0x19252e620,12787042,0,0x0,8
tick,0x19252e620,12788208,0,0x0,8
tick,0x19252ad6c,12789458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1017b6100,12790708,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x101198cd0,12791792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10116ea00,12793083,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016c5330,12794333,0,0x0,0,0x10800a738
tick,0x19252ad6c,12795583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12796792,0,0x0,8
tick,0x192528738,12798042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100a28bc4,12799292,0,0x0,6
tick,0x19252e620,12800542,0,0x0,8
tick,0x100db9f80,12801792,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b3f4,12803083,0,0x0,8
tick,0x19252e620,12804333,0,0x0,8
tick,0x19252e620,12805375,0,0x0,8
tick,0x19252b4fc,12806417,0,0x0,8
tick,0x19252e620,12807708,0,0x0,8
tick,0x19252b4fc,12808917,0,0x0,8
tick,0x19252e620,12809958,0,0x0,8
tick,0x107feb800,12811042,0,0x0,0,0x10801fc24,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x107fec804,12812292,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252e620,12813542,0,0x0,8
tick,0x192373bf4,12814542,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12815833,0,0x0,8
tick,0x19252e620,12816958,0,0x0,8
tick,0x19252e620,12818250,0,0x0,8
tick,0x19252e620,12819292,0,0x0,8
tick,0x19252e620,12820292,0,0x0,8
tick,0x19252e620,12821292,0,0x0,8
tick,0x1923763c4,12822542,0,0x0,8
tick,0x19252e620,12823833,0,0x0,8
tick,0x19252ad6c,12825083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12826333,0,0x0,8
tick,0x10165d790,12827583,0,0x0,8
tick,0x19252e620,12828833,0,0x0,8
tick,0x100abc900,12830042,0,0x0,8
tick,0x192527ad0,12831292,0,0x0,8
tick,0x19252e620,12832542,0,0x0,8
tick,0x100ab7b98,12833583,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1925225fc,12834875,0,0x0,1
tick,0x19252e620,12836125,0,0x0,8
tick,0x19252e620,12837208,0,0x0,8
tick,0x19252f804,12838458,0,0x0,8
tick,0x19252ad6c,12839708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12840958,0,0x0,8
tick,0x192527ad0,12842208,0,0x0,8
tick,0x192373598,12843375,0,0x0,8
tick,0x19252b4fc,12844625,0,0x0,8
tick,0x19252f804,12845917,0,0x0,8
tick,0x19252e620,12846958,0,0x0,8
tick,0x19252e620,12848208,0,0x0,8
tick,0x19252e620,12849458,0,0x0,8
tick,0x19252e620,12850625,0,0x0,8
tick,0x19252e620,12851625,0,0x0,8
tick,0x19252b25c,12852875,0,0x0,8
tick,0x19252e620,12854125,0,0x0,8
tick,0x19252b25c,12855375,0,0x0,0,0x10800a800
tick,0x1009d4a5c,12856625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,12857875,0,0x0,0,0x10800a800
tick,0x19252ad6c,12859125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12860417,0,0x0,8
tick,0x19252b25c,12861667,0,0x0,0,0x10800a800
tick,0x19252b25c,12862958,0,0x0,0,0x10800a800
tick,0x19252ad6c,12864292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10801c674,12865500,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,12866750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe2b94,12868042,0,0x0,0
tick,0x107fe602c,12869292,0,0x0,0,0x107fe2ff0
tick,0x1017b61e4,12870583,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12871667,0,0x0,8
tick,0x100cbb4dc,12872875,0,0x0,5
tick,0x19252e620,12874208,0,0x0,8
tick,0x19252e620,12875333,0,0x0,8
tick,0x19252ad6c,12876625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,12877917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,12879333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12880417,0,0x0,8
tick,0x100cd3ec0,12881667,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009ba900,12882958,0,0x0,8
tick,0x101672054,12884375,0,0x0,0,0x107fe4900,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x19252e620,12885375,0,0x0,8
tick,0x19252e620,12886667,0,0x0,8
tick,0x19252b4fc,12887958,0,0x0,8
tick,0x1016ac024,12889208,0,0x0,0
tick,0x107fe6f98,12890458,0,0x0,0,0x1080264e0,0x108010e90
tick,0x1016c55d4,12891750,0,0x0,0,0x10800af80,0x10800a738
tick,0x1925628f4,12893167,0,0x0,0,0x107fe3eb0,0x108021150
tick,0x101735b7c,12894250,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12895500,0,0x0,8
tick,0x19252b4fc,12896583,0,0x0,8
tick,0x19252ad6c,12897875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101a8c4b0,12899167,0,0x0,6
tick,0x100f33db8,12900417,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1009ba118,12901667,0,0x0,6
tick,0x100e2fb24,12902917,0,0x0,8
tick,0x19252e620,12904167,0,0x0,8
tick,0x192527320,12905333,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100ef8800,12906542,0,0x0,1
tick,0x19252e620,12907625,0,0x0,8
tick,0x19252e620,12908917,0,0x0,8
tick,0x1009b9650,12910000,0,0x0,6
tick,0x107fe49c0,12911250,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,12912542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12913792,0,0x0,8
tick,0x100a7574c,12915000,0,0x0,8
tick,0x19252e620,12916292,0,0x0,8
tick,0x10166a190,12917500,0,0x0,0,0x10800a738
tick,0x19252e620,12918750,0,0x0,8
tick,0x19252e620,12920000,0,0x0,8
tick,0x19252e620,12921000,0,0x0,8
tick,0x101bdd694,12922000,0,0x0,8
tick,0x19252e620,12923292,0,0x0,8
tick,0x19252e620,12924458,0,0x0,8
tick,0x19252e620,12925708,0,0x0,8
tick,0x19252b25c,12926917,0,0x0,0,0x10800a800
tick,0x19252e620,12928167,0,0x0,8
tick,0x19252e620,12929167,0,0x0,8
tick,0x19252e620,12930292,0,0x0,8
tick,0x19252e620,12931375,0,0x0,8
tick,0x19252ad6c,12932375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,12933708,0,0x0,8
tick,0x19252e620,12934750,0,0x0,8
tick,0x107fe46e0,12936000,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,12937250,0,0x0,8
tick,0x19252b3f4,12938500,0,0x0,8
tick,0x19252e620,12939792,0,0x0,8
tick,0x19252e620,12941042,0,0x0,8
tick,0x19252e620,12942167,0,0x0,8
tick,0x19252b3f4,12943417,0,0x0,8
tick,0x19252e620,12944708,0,0x0,8
tick,0x19252b4fc,12945958,0,0x0,8
tick,0x19252e620,12947208,0,0x0,8
tick,0x19252e620,12948208,0,0x0,8
tick,0x19252e620,12949250,0,0x0,8
tick,0x107fec37c,12950417,0,0x0,0,0x10801053c
tick,0x19252ad6c,12951583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbb3e4,12952833,0,0x0,5
tick,0x19252e620,12954083,0,0x0,8
tick,0x19252b4fc,12955333,0,0x0,8
tick,0x19252ad6c,12956583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ab6d2c,12957833,0,0x0,8
tick,0x192527ad0,12959083,0,0x0,8
tick,0x19252e620,12960208,0,0x0,8
tick,0x19252e620,12961458,0,0x0,8
tick,0x19252e620,12962458,0,0x0,8
tick,0x100cbcd6c,12963583,0,0x0,6
tick,0x19252e620,12964625,0,0x0,8
tick,0x1009ba1bc,12965875,0,0x0,6
tick,0x19252e620,12967000,0,0x0,8
tick,0x19252e620,12968000,0,0x0,8
tick,0x19252e620,12969042,0,0x0,8
tick,0x19252b25c,12970292,0,0x0,8
tick,0x19252e620,12971583,0,0x0,8
tick,0x1923758dc,12972542,0,0x0,8
tick,0x1017b61e4,12973792,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x101144584,12975042,0,0x0,5,0x108023204,0x108021988
tick,0x192527ad0,12976333,0,0x0,8
tick,0x19252e620,12977583,0,0x0,8
tick,0x19252e620,12978833,0,0x0,8
tick,0x19252e620,12980042,0,0x0,8
tick,0x19252e620,12981292,0,0x0,8
tick,0x100e6a3cc,12982333,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
code-creation,JS,10,12983167,0x10802b220,5264,listOnTimeout node:internal/timers:534:25,0x22b216cd02e8,^
code-source-info,0x10802b220,10,16084,18946,,,
code-creation,JS,10,12983208,0x10802c6e0,112,peek node:internal/priority_queue:37:7,0x22b216cdbc78,^
code-source-info,0x10802c6e0,17,883,917,,,
tick,0x19252b4fc,12983583,0,0x0,8
tick,0x19252e620,12984917,0,0x0,8
tick,0x19252e620,12985917,0,0x0,8
tick,0x192527ad0,12987167,0,0x0,8
tick,0x19252e620,12988333,0,0x0,8
tick,0x19252e620,12989625,0,0x0,8
tick,0x192527ad0,12990708,0,0x0,8
tick,0x19252e620,12991958,0,0x0,8
tick,0x101bde4e0,12993208,0,0x0,8
tick,0x19252e620,12994458,0,0x0,8
tick,0x19252e620,12995500,0,0x0,8
tick,0x19252e620,12996500,0,0x0,8
tick,0x19252e620,12997625,0,0x0,8
tick,0x19252e620,12998750,0,0x0,8
tick,0x19252e620,12999750,0,0x0,8
tick,0x19252e620,13001000,0,0x0,8
tick,0x10166abdc,13002250,0,0x0,0
tick,0x101a8c4b0,13003542,0,0x0,6
tick,0x101669e28,13004792,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252e620,13006042,0,0x0,8
tick,0x19252e620,13007292,0,0x0,8
tick,0x10128574c,13008542,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13009583,0,0x0,8
tick,0x19252e620,13010625,0,0x0,8
tick,0x19252e620,13011875,0,0x0,8
tick,0x100d995fc,13013042,0,0x0,0
tick,0x19252e620,13014333,0,0x0,8
tick,0x19252b25c,13015583,0,0x0,8
tick,0x1016734cc,13016833,0,0x0,0,0x107fe4900,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x1009b1944,13018083,0,0x0,6
tick,0x19252b4fc,13019333,0,0x0,8
tick,0x19252e620,13020625,0,0x0,8
tick,0x100e30778,13021625,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,13022875,0,0x0,8
tick,0x19252e620,13023958,0,0x0,8
tick,0x19252e620,13025208,0,0x0,8
tick,0x19252e620,13026292,0,0x0,8
tick,0x19252e620,13027583,0,0x0,8
tick,0x19252e620,13028708,0,0x0,8
tick,0x19252ad6c,13029792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252a6ec,13030958,0,0x0,1
tick,0x19252f804,13032208,0,0x0,8
tick,0x19252e620,13033417,0,0x0,8
new,MemoryChunk,0xcd0a7000000,262144
tick,0x192373cdc,13034667,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13035667,0,0x0,8
tick,0x19252e620,13036875,0,0x0,8
tick,0x19252e620,13037917,0,0x0,8
tick,0x19252ad6c,13039167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13040417,0,0x0,8
tick,0x19252e620,13041708,0,0x0,8
tick,0x108014420,13042917,0,0x0,0,0x108010e90
tick,0x19252e620,13044208,0,0x0,8
tick,0x101671df8,13045458,0,0x0,0,0x107fe4900,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1012856d4,13046708,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13047792,0,0x0,8
tick,0x107ff50d0,13049042,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10166b4b0,13050292,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,13051333,0,0x0,8
tick,0x10109ad98,13052583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,13053833,0,0x0,8
tick,0x100d0bd58,13055083,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,13056375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923734ec,13057625,0,0x0,8
tick,0x100ccc63c,13058917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13060167,0,0x0,8
tick,0x19252e620,13061417,0,0x0,8
tick,0x192528738,13062708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100ccdc24,13063958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13065208,0,0x0,0,0x10800a800
tick,0x19252e620,13066292,0,0x0,8
tick,0x19252e620,13067333,0,0x0,8
tick,0x19252e620,13068583,0,0x0,8
tick,0x19252e620,13069917,0,0x0,8
tick,0x100d22084,13071083,0,0x0,0,0x10176b97c,0x10801065c
tick,0x19252e620,13072333,0,0x0,8
tick,0x19252e620,13073375,0,0x0,8
tick,0x19252e620,13074417,0,0x0,8
tick,0x10166f0ec,13075667,0,0x0,0,0x107ff85d8,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13076958,0,0x0,8
tick,0x19252e620,13078208,0,0x0,8
tick,0x19252e620,13079500,0,0x0,8
tick,0x100e7be90,13080750,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13082000,0,0x0,8
tick,0x19252ad6c,13083250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13084500,0,0x0,8
tick,0x19252ad6c,13085500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13086750,0,0x0,8
tick,0x10170220c,13088042,0,0x0,0
tick,0x100cd3c98,13089292,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13090542,0,0x0,8
tick,0x19252e620,13091583,0,0x0,8
tick,0x10800805c,13092833,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252e620,13094083,0,0x0,8
tick,0x19252e620,13095333,0,0x0,8
tick,0x100ba450c,13096375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13097375,0,0x0,8
tick,0x19252e620,13098625,0,0x0,8
tick,0x19252e620,13099792,0,0x0,8
tick,0x19252ad6c,13100917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13102167,0,0x0,8
tick,0x19252b25c,13103167,0,0x0,8
tick,0x100ab7d14,13104417,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13105667,0,0x0,8
tick,0x100f38d3c,13106917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016b6fbc,13108042,0,0x0,0,0x1080267a8,0x108010e90
tick,0x19252b4fc,13109042,0,0x0,8
tick,0x192527ad0,13110292,0,0x0,8
tick,0x19252e620,13111542,0,0x0,8
tick,0x100ce0a6c,13112792,0,0x0,8
tick,0x10166066c,13114083,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x107feee40,0x107fe2ff0
tick,0x19252b4fc,13115333,0,0x0,8
tick,0x19238b08c,13116583,0,0x0,6
tick,0x19252ad6c,13117667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101669ffc,13118958,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13120208,0,0x0,8
tick,0x19252e620,13121333,0,0x0,8
tick,0x19252e620,13122583,0,0x0,8
tick,0x19252e620,13123625,0,0x0,8
tick,0x19252e620,13124833,0,0x0,8
tick,0x19252e620,13126083,0,0x0,8
tick,0x19252e620,13127375,0,0x0,8
tick,0x19252e620,13128625,0,0x0,8
tick,0x19252e620,13129833,0,0x0,8
tick,0x19252e620,13130875,0,0x0,8
tick,0x100ba3cec,13132125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13133250,0,0x0,8
tick,0x107ff2dd4,13134542,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,13135875,0,0x0,8
tick,0x19252e620,13137083,0,0x0,8
tick,0x19252e620,13138333,0,0x0,8
tick,0x10109bb28,13139583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100ec26c4,13140875,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13142125,0,0x0,8
tick,0x100ce9f8c,13143375,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cc8e34,13144667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe1614,13145917,0,0x0,0,0x108010e90
tick,0x100b1b1bc,13147208,0,0x0,8
tick,0x19252b4fc,13148500,0,0x0,8
tick,0x19252e620,13149750,0,0x0,8
tick,0x10801a6bc,13150958,0,0x0,0,0x108019b28
tick,0x19252e620,13152250,0,0x0,8
tick,0x19252e620,13153458,0,0x0,8
tick,0x19252f804,13154750,0,0x0,8
tick,0x19252e620,13156042,0,0x0,8
tick,0x19252f804,13157292,0,0x0,8
tick,0x100ba4538,13158583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13159833,0,0x0,8
tick,0x19252f804,13161083,0,0x0,8
tick,0x19252e620,13162375,0,0x0,8
tick,0x1016b7488,13163625,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252ad6c,13164917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13166167,0,0x0,8
tick,0x19252b4fc,13167417,0,0x0,8
tick,0x19252ad6c,13168708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13169958,0,0x0,8
tick,0x19252f804,13171042,0,0x0,8
tick,0x1016b6400,13172292,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252e620,13173583,0,0x0,8
tick,0x19252b3f4,13174833,0,0x0,8
tick,0x19252e620,13176125,0,0x0,8
tick,0x19252e620,13177375,0,0x0,8
tick,0x19252e620,13178458,0,0x0,8
tick,0x100e7be88,13179708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016ad038,13181000,0,0x0,0,0x107fe6724,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x108019a80,13182083,0,0x0,0
tick,0x19252f804,13183333,0,0x0,8
tick,0x19252ad6c,13184583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13185917,0,0x0,8
tick,0x19252e620,13186958,0,0x0,8
tick,0x19252e620,13187958,0,0x0,8
tick,0x19252e620,13188958,0,0x0,8
tick,0x19252e620,13190208,0,0x0,8
tick,0x19252e620,13191292,0,0x0,8
tick,0x19252e620,13192417,0,0x0,8
tick,0x19252f804,13193667,0,0x0,8
tick,0x10116d0bc,13194750,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252b4fc,13195792,0,0x0,8
tick,0x19252e620,13197000,0,0x0,8
tick,0x100ce1dd0,13198250,0,0x0,6
tick,0x107fea76c,13199500,0,0x0,0,0x107fe31b4
tick,0x19252e620,13200792,0,0x0,8
tick,0x19252ad6c,13201792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192375b68,13203042,0,0x0,8
tick,0x19252ad6c,13204292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13205542,0,0x0,0,0x10800a800
tick,0x19252b25c,13206833,0,0x0,8
tick,0x107ff0fd4,13208083,0,0x0,0,0x107fe301c
tick,0x100e4311c,13209333,0,0x0,0,0x107fe3eb0,0x107ff8c88,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13210583,0,0x0,8
tick,0x19252e620,13211667,0,0x0,8
tick,0x19252b25c,13212917,0,0x0,8
tick,0x19252e620,13214167,0,0x0,8
tick,0x19252e620,13215208,0,0x0,8
tick,0x19252e620,13216250,0,0x0,8
tick,0x19252e620,13217375,0,0x0,8
tick,0x19252e620,13218625,0,0x0,8
tick,0x19252e620,13219708,0,0x0,8
tick,0x19252e620,13220750,0,0x0,8
tick,0x19252e620,13221750,0,0x0,8
tick,0x19252e620,13222750,0,0x0,8
tick,0x19252e620,13223792,0,0x0,8
tick,0x19259ebdc,13225042,0,0x0,0,0x101736af0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13226333,0,0x0,8
tick,0x19252e620,13227417,0,0x0,8
tick,0x1016b6488,13228667,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13229708,0,0x0,8
tick,0x19252e620,13230875,0,0x0,8
tick,0x192528738,13232125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,13233375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13234625,0,0x0,8
tick,0x19252e620,13235875,0,0x0,8
tick,0x19252e620,13237042,0,0x0,8
tick,0x19252e620,13238292,0,0x0,8
tick,0x192527ad0,13239542,0,0x0,8
tick,0x19252b4fc,13240833,0,0x0,8
tick,0x1016ad2c8,13242083,0,0x0,0,0x10800de2c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13243333,0,0x0,8
tick,0x19252e620,13244417,0,0x0,8
tick,0x19252ad6c,13245625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13246875,0,0x0,8
tick,0x192527ad0,13248125,0,0x0,8
tick,0x19252e620,13249333,0,0x0,8
tick,0x19252e620,13250417,0,0x0,8
tick,0x19252e620,13251667,0,0x0,8
tick,0x19252e620,13252792,0,0x0,8
tick,0x1009c4e9c,13254042,0,0x0,8
tick,0x19252e620,13255083,0,0x0,8
tick,0x19249ffa4,13256333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,13257625,0,0x0,8
tick,0x19252e620,13258667,0,0x0,8
tick,0x10113ce5c,13259750,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13261083,0,0x0,8
tick,0x19252b25c,13262292,0,0x0,8
tick,0x19252ad6c,13263542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13264792,0,0x0,8
tick,0x1016ac03c,13266042,0,0x0,0,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108016510,13267333,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,13268625,0,0x0,8
tick,0x19252e620,13269875,0,0x0,8
tick,0x19252e620,13271167,0,0x0,8
tick,0x1923879dc,13272250,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b4fc,13273500,0,0x0,8
tick,0x19252f804,13274750,0,0x0,8
tick,0x1016b75d8,13276000,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,13277042,0,0x0,8
tick,0x19252e620,13278292,0,0x0,8
tick,0x19252ad6c,13279542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13280833,0,0x0,8
tick,0x19252e620,13281958,0,0x0,8
tick,0x19252b25c,13283208,0,0x0,8
tick,0x19252a6ec,13284500,0,0x0,1
tick,0x10801dbec,13285750,0,0x0,0,0x107fe301c
tick,0x19252e620,13286750,0,0x0,8
tick,0x100e01720,13288000,0,0x0,5
tick,0x19252e620,13289292,0,0x0,8
tick,0x19252b4fc,13290708,0,0x0,8
tick,0x19252e620,13291833,0,0x0,8
tick,0x1016ad228,13292958,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252ad6c,13294208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13295500,0,0x0,8
tick,0x100e22b00,13296583,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13297833,0,0x0,0,0x10800a800
tick,0x19252e620,13298958,0,0x0,8
tick,0x19252e620,13300250,0,0x0,8
tick,0x19252ad6c,13301417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13302667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923759d8,13303917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,13305208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e7bd90,13306458,0,0x0,5
tick,0x100cd256c,13307708,0,0x0,6
tick,0x19252e620,13308958,0,0x0,8
tick,0x19252e620,13310208,0,0x0,8
tick,0x100cbd2e0,13311250,0,0x0,5
tick,0x100e7ca34,13312500,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13313750,0,0x0,8
tick,0x19252ad6c,13315042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13316042,0,0x0,8
tick,0x19252ad6c,13317250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080136f0,13318500,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,13319750,0,0x0,8
tick,0x19252e620,13320833,0,0x0,8
tick,0x1016b70fc,13322083,0,0x0,0,0x108021570,0x107fe2ff0
tick,0x19252e620,13323167,0,0x0,8
tick,0x19252e620,13324292,0,0x0,8
tick,0x1009b9504,13325458,0,0x0,6
tick,0x19252e620,13326708,0,0x0,8
tick,0x19252e620,13327708,0,0x0,8
tick,0x19252e620,13328792,0,0x0,8
tick,0x1012e6580,13329917,0,0x0,6
tick,0x100ba415c,13331167,0,0x0,8
tick,0x10166e7bc,13332417,0,0x0,0
tick,0x19252e620,13333667,0,0x0,8
tick,0x19252ad6c,13334917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,13336208,0,0x0,8
tick,0x1016b6410,13337458,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b4fc,13338708,0,0x0,8
tick,0x100cc8e34,13339958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101660dd8,13341208,0,0x0,0,0x10801aa58,0x108019b28
tick,0x100e7c270,13342417,0,0x0,0,0x101736af0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100b9d310,13343500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,13344667,0,0x0,8
tick,0x192528738,13345917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13347167,0,0x0,8
tick,0x19252e620,13348417,0,0x0,8
tick,0x100e7bd90,13349625,0,0x0,5
tick,0x19252e620,13350875,0,0x0,8
tick,0x19252e620,13351917,0,0x0,8
tick,0x19252e620,13352958,0,0x0,8
tick,0x19252ad6c,13354167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100eac140,13355458,0,0x0,1
tick,0x19252e620,13356708,0,0x0,8
tick,0x107fea62c,13357958,0,0x0,0,0x107fe31b4
tick,0x107fe464c,13359208,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x1925a180c,13360250,0,0x0,6
tick,0x19252e620,13361250,0,0x0,8
tick,0x19252e620,13362500,0,0x0,8
tick,0x101669efc,13363500,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe30e4,13364750,0,0x0,0
tick,0x107fe2a38,13366042,0,0x0,0
tick,0x19252ad6c,13367292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101669f0c,13368542,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x1017d044c,13369792,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,13371042,0,0x0,8
tick,0x19252e620,13372375,0,0x0,8
tick,0x19252b4fc,13373583,0,0x0,8
tick,0x107fea604,13374833,0,0x0,0
tick,0x19252e620,13376125,0,0x0,8
tick,0x19252ad6c,13377208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,13378458,0,0x0,8
tick,0x10166f14c,13379708,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13380958,0,0x0,8
tick,0x19252b4fc,13382208,0,0x0,8
tick,0x19252e620,13383458,0,0x0,8
tick,0x1923a6178,13384500,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe22a0,13385750,0,0x0,0,0x10801a700,0x108019b28
tick,0x100f129f4,13387000,0,0x0,1
tick,0x1016b75d8,13388292,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252e620,13389583,0,0x0,8
tick,0x19252e620,13390792,0,0x0,8
tick,0x101bddbf0,13391917,0,0x0,8
tick,0x100f15df8,13393208,0,0x0,1
tick,0x1923761e0,13394458,0,0x0,6
tick,0x19252e620,13395708,0,0x0,8
tick,0x19252e620,13396833,0,0x0,8
tick,0x1923738ac,13398083,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x107feeef8,0x107fe2ff0
tick,0x19252a6ec,13399333,0,0x0,1
tick,0x1016b70f4,13400583,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252e620,13401792,0,0x0,8
tick,0x19252f804,13403000,0,0x0,8
tick,0x19252e620,13404083,0,0x0,8
tick,0x19252e620,13405167,0,0x0,8
tick,0x19252e620,13406375,0,0x0,8
tick,0x19252e620,13407625,0,0x0,8
tick,0x192528738,13408917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,13410167,0,0x0,8
tick,0x19252e620,13411500,0,0x0,8
tick,0x19252b4fc,13412750,0,0x0,8
tick,0x19252b25c,13413958,0,0x0,8
tick,0x19252ad6c,13415250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13416500,0,0x0,8
tick,0x192375a20,13417750,0,0x0,8
tick,0x1016ad6a0,13419042,0,0x0,0,0x107fe46e0,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,13420125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,13421375,0,0x0,8
tick,0x19252e620,13422667,0,0x0,8
tick,0x1016b7048,13423958,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x192528738,13425042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,13426333,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101669cbc,13427542,0,0x0,0,0x10800a738
tick,0x19252ad6c,13428792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13430083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13431333,0,0x0,8
tick,0x19252e620,13432583,0,0x0,8
tick,0x19252e620,13433833,0,0x0,8
tick,0x19252ad6c,13435083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13436333,0,0x0,8
tick,0x19252ad6c,13437583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e017c4,13438875,0,0x0,5
tick,0x19252ad6c,13440125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100d99090,13441375,0,0x0,0
tick,0x19252e620,13442667,0,0x0,8
tick,0x19252e620,13444000,0,0x0,8
tick,0x19252e620,13445208,0,0x0,8
tick,0x19252e620,13446250,0,0x0,8
tick,0x1016b2898,13447542,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13448792,0,0x0,8
tick,0x19252e620,13450042,0,0x0,8
tick,0x19252e620,13451125,0,0x0,8
tick,0x19252b4fc,13452375,0,0x0,8
tick,0x192527a78,13453500,0,0x0,8
tick,0x100e13dac,13454792,0,0x0,6
tick,0x19252ad6c,13456042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,13457333,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13458583,0,0x0,8
tick,0x19252e620,13459708,0,0x0,8
tick,0x19252e620,13460708,0,0x0,8
tick,0x100e7be94,13461958,0,0x0,5
tick,0x19252e620,13463250,0,0x0,8
tick,0x101661a4c,13464500,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
new,MemoryChunk,0x11f938e40000,262144
tick,0x19252e620,13465833,0,0x0,8
tick,0x19252e620,13466792,0,0x0,8
tick,0x19252e620,13468042,0,0x0,8
tick,0x19252b25c,13469042,0,0x0,0,0x10800a800
tick,0x1009b423c,13470292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13471542,0,0x0,8
tick,0x19252e620,13472625,0,0x0,8
tick,0x19252e620,13473667,0,0x0,8
tick,0x19252ad6c,13474917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13476208,0,0x0,8
tick,0x19252e620,13477250,0,0x0,8
tick,0x19252e620,13478333,0,0x0,8
tick,0x19252e620,13479375,0,0x0,8
tick,0x19252e620,13480500,0,0x0,8
tick,0x19252b3f4,13481750,0,0x0,8
tick,0x19252ad6c,13483000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13484250,0,0x0,0,0x10800a800
tick,0x19252e620,13485542,0,0x0,8
tick,0x1016b6490,13486625,0,0x0,0,0x107fe301c
tick,0x19252e620,13487792,0,0x0,8
tick,0x101bdabd4,13488833,0,0x0,8
tick,0x19252e620,13490083,0,0x0,8
tick,0x19252e620,13491167,0,0x0,8
tick,0x19252e620,13492208,0,0x0,8
tick,0x19252e620,13493375,0,0x0,8
tick,0x19252e620,13494542,0,0x0,8
tick,0x19252e620,13495583,0,0x0,8
tick,0x19252e620,13496833,0,0x0,8
tick,0x19252e620,13497833,0,0x0,8
tick,0x19252ad6c,13499083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13500333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527354,13501583,0,0x0,8
tick,0x107ff2ed8,13502875,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252b4fc,13504125,0,0x0,8
tick,0x19252e620,13505375,0,0x0,8
tick,0x1080082a4,13506625,0,0x0,0,0x10800b05c,0x10800a738
tick,0x1925708bc,13507875,0,0x0,8
tick,0x19252b4fc,13509125,0,0x0,8
tick,0x19252e620,13510458,0,0x0,8
tick,0x19252e620,13511625,0,0x0,8
tick,0x19252ad6c,13512875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13514125,0,0x0,8
tick,0x107fea784,13515375,0,0x0,0,0x107fe31b4
tick,0x19252f804,13516625,0,0x0,8
tick,0x19252e620,13517750,0,0x0,8
tick,0x19252e620,13519000,0,0x0,8
tick,0x19252e620,13520000,0,0x0,8
tick,0x19252ad6c,13521250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13522542,0,0x0,8
tick,0x107fe2bbc,13523792,0,0x0,0
tick,0x19252e620,13525042,0,0x0,8
tick,0x10801a8dc,13526083,0,0x0,0,0x108019b28
tick,0x19252e620,13527125,0,0x0,8
tick,0x19252e620,13528167,0,0x0,8
tick,0x192527ad0,13529417,0,0x0,8
tick,0x19252b4fc,13530667,0,0x0,8
tick,0x19252e620,13531958,0,0x0,8
tick,0x1011605cc,13533167,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13534458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13535708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe29cc,13536958,0,0x0,0
tick,0x19252e620,13538250,0,0x0,8
tick,0x19252e620,13539500,0,0x0,8
tick,0x19252ad6c,13540500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6fc4,13541750,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b25c,13543000,0,0x0,8
tick,0x19252e620,13544083,0,0x0,8
tick,0x19252e620,13545167,0,0x0,8
tick,0x19252e620,13546292,0,0x0,8
tick,0x19252b25c,13547542,0,0x0,0,0x10800a800
tick,0x19252e620,13548792,0,0x0,8
tick,0x19252e620,13549917,0,0x0,8
tick,0x19252e620,13550917,0,0x0,8
tick,0x1016b7100,13552167,0,0x0,0,0x10800a738
tick,0x19252b3f4,13553208,0,0x0,8
tick,0x10801a620,13554250,0,0x0,0
tick,0x1016b71bc,13555500,0,0x0,0,0x107fe2ff0
tick,0x19252e620,13556750,0,0x0,8
tick,0x19252e620,13558000,0,0x0,8
tick,0x19252e620,13559042,0,0x0,8
tick,0x19252e620,13560333,0,0x0,8
tick,0x192527354,13561542,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13562833,0,0x0,8
tick,0x19252e620,13564000,0,0x0,8
tick,0x19252e620,13565167,0,0x0,8
tick,0x1011605d4,13566417,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13567667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13568958,0,0x0,8
tick,0x100cd89f8,13570083,0,0x0,5
tick,0x19252ad6c,13571333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13572458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13573750,0,0x0,8
tick,0x100e01720,13574792,0,0x0,5
tick,0x19252b4fc,13576042,0,0x0,8
tick,0x19252e620,13577083,0,0x0,8
tick,0x100e3d06c,13578333,0,0x0,6
tick,0x19252b25c,13579583,0,0x0,8
tick,0x19252e620,13580708,0,0x0,8
tick,0x19252e620,13582000,0,0x0,8
tick,0x1016ba720,13583083,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13584333,0,0x0,8
tick,0x19252e620,13585625,0,0x0,8
tick,0x19252ad6c,13586875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252a6ec,13588125,0,0x0,1
tick,0x19252b4fc,13589167,0,0x0,8
tick,0x10174dccc,13590417,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,13654917,0,0x0,8
tick,0x1016ac9f4,13655833,0,0x0,0,0x107fe39b4,0x10801fd48,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,13657083,0,0x0,8
tick,0x19252ad6c,13658083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13659208,0,0x0,8
tick,0x19252e620,13660458,0,0x0,8
tick,0x100ce0a44,13661500,0,0x0,5
tick,0x19252ad6c,13662542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13663792,0,0x0,8
tick,0x19252e620,13665042,0,0x0,8
tick,0x19252e620,13666125,0,0x0,8
tick,0x19252e620,13667292,0,0x0,8
tick,0x19252e620,13668583,0,0x0,8
tick,0x100e1fd8c,13669833,0,0x0,6
tick,0x192527354,13670875,0,0x0,1
tick,0x19252f804,13672167,0,0x0,8
tick,0x101701aa0,13673417,0,0x0,0,0x108026920,0x108010e90
tick,0x1080260ac,13674667,0,0x0,0,0x108010e90
tick,0x19252e620,13675917,0,0x0,8
tick,0x101749d74,13677250,0,0x0,0,0x108010ac0
tick,0x192527a78,13678458,0,0x0,8
tick,0x1016ad2d8,13679458,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252ad6c,13680750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13682000,0,0x0,8
tick,0x19252e620,13683333,0,0x0,8
tick,0x101099280,13684333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x101647020,13685667,0,0x0,8
tick,0x192371abc,13686833,0,0x0,8
tick,0x100d2209c,13688125,0,0x0,0,0x10176b97c,0x10801065c
tick,0x19252e620,13689375,0,0x0,8
tick,0x101660dd0,13690625,0,0x0,0,0x107fe35dc
tick,0x101144580,13691875,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19237627c,13693208,0,0x0,8
tick,0x100d4eff4,13694458,0,0x0,0
tick,0x19252f804,13695708,0,0x0,8
tick,0x19252e620,13697000,0,0x0,8
tick,0x19252b4fc,13698417,0,0x0,8
tick,0x192387a50,13699542,0,0x0,8
tick,0x192527a78,13700708,0,0x0,8
tick,0x19252e620,13701833,0,0x0,8
tick,0x100cbcc00,13703042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13704167,0,0x0,8
tick,0x19252b25c,13705375,0,0x0,8
tick,0x19252e620,13706458,0,0x0,8
tick,0x19252b4fc,13707708,0,0x0,8
tick,0x19252e620,13709000,0,0x0,8
tick,0x192529bbc,13710250,0,0x0,1
tick,0x19252e620,13711542,0,0x0,8
tick,0x19252e620,13712792,0,0x0,8
tick,0x19252f804,13714042,0,0x0,8
tick,0x1016497fc,13715125,0,0x0,8
tick,0x19252ad6c,13716375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923a02d0,13717625,0,0x0,8
tick,0x101bddbf0,13718708,0,0x0,8
tick,0x19252e620,13719958,0,0x0,8
tick,0x19252e620,13721250,0,0x0,8
tick,0x19252ad6c,13722292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13723500,0,0x0,0,0x10800a800
tick,0x19252f804,13724792,0,0x0,8
tick,0x1016ad354,13726042,0,0x0,0,0x108020128,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,13727292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13728583,0,0x0,8
tick,0x100e2d5a4,13729833,0,0x0,0,0x107fe3170
tick,0x19252f804,13730917,0,0x0,8
tick,0x19252e620,13732125,0,0x0,8
tick,0x19252e620,13733292,0,0x0,8
tick,0x19252a6ec,13734500,0,0x0,1
tick,0x19252e620,13735792,0,0x0,8
tick,0x10127c774,13737000,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13738083,0,0x0,8
tick,0x19252e620,13739333,0,0x0,8
tick,0x19252e620,13740625,0,0x0,8
tick,0x19252e620,13741708,0,0x0,8
tick,0x100e3cdc0,13742833,0,0x0,6
tick,0x19252e620,13743833,0,0x0,8
tick,0x1016b6400,13745000,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x100e3d180,13746250,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,13747542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13748792,0,0x0,8
tick,0x19252ad6c,13750042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fec674,13751292,0,0x0,0,0x10801053c
tick,0x19252ad6c,13752333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13753583,0,0x0,8
tick,0x19252e620,13754833,0,0x0,8
tick,0x19252e620,13756042,0,0x0,8
tick,0x19252e620,13757333,0,0x0,8
tick,0x19252e620,13758542,0,0x0,8
tick,0x19252e620,13759792,0,0x0,8
tick,0x19252e620,13760917,0,0x0,8
tick,0x19252e620,13762083,0,0x0,8
tick,0x19252ad6c,13763292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13764542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13765750,0,0x0,8
tick,0x19252ad6c,13767000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13768292,0,0x0,8
tick,0x19252b25c,13769542,0,0x0,8
tick,0x19252e620,13770792,0,0x0,8
new,MemoryChunk,0x21ed0000000,262144
tick,0x192373ca4,13771917,0,0x0,6
tick,0x19252e620,13773083,0,0x0,8
tick,0x10113c5d4,13774333,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100cbcd94,13775583,0,0x0,8
tick,0x192527354,13776583,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x101bdcce8,13777625,0,0x0,8
tick,0x10166b3e0,13778792,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x100ccb9b0,13779917,0,0x0,8
tick,0x19252b25c,13780958,0,0x0,8
tick,0x19252ad6c,13782208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192562e4c,13783458,0,0x0,1
tick,0x19252e620,13784542,0,0x0,8
tick,0x100ce0dfc,13785750,0,0x0,6
tick,0x1016735dc,13787000,0,0x0,0,0x107fe4900,0x10800db50,0x10800cb40,0x10800a9e8
tick,0x1016b6fb0,13788250,0,0x0,0,0x10800a738
tick,0x192528738,13789500,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,13790792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b7038,13792042,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252e620,13793333,0,0x0,8
tick,0x19252e620,13794500,0,0x0,8
tick,0x19252b25c,13795792,0,0x0,0,0x10800a800
tick,0x19252e620,13797042,0,0x0,8
tick,0x19252e620,13798333,0,0x0,8
tick,0x19252e620,13799375,0,0x0,8
tick,0x107fe519c,13800583,0,0x0,0,0x10800b2d8,0x10800a738
tick,0x100e50f24,13801833,0,0x0,1
tick,0x1016b9134,13803125,0,0x0,0,0x107fe71c0,0x1080264e0,0x108010e90
tick,0x19252b25c,13804333,0,0x0,0,0x10800a800
tick,0x19252e620,13805625,0,0x0,8
tick,0x192528738,13806875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13808125,0,0x0,8
tick,0x192527354,13809167,0,0x0,8
tick,0x19252e620,13810375,0,0x0,8
tick,0x19252e620,13811375,0,0x0,8
tick,0x100cd5500,13812458,0,0x0,0,0x10800b858,0x10800a738
tick,0x19252e620,13813708,0,0x0,8
tick,0x100ccdbf8,13814958,0,0x0,8
tick,0x19252e620,13816250,0,0x0,8
tick,0x10800b4b0,13817500,0,0x0,0,0x10800a738
tick,0x19252b4fc,13818750,0,0x0,8
tick,0x100ce1dd0,13820000,0,0x0,6
tick,0x192527354,13821250,0,0x0,8
tick,0x19252e620,13822542,0,0x0,8
tick,0x19252ad6c,13823542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13824833,0,0x0,8
tick,0x19252ad6c,13826083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13827375,0,0x0,8
tick,0x19252e620,13828375,0,0x0,8
tick,0x19252e620,13829500,0,0x0,8
tick,0x19252e620,13830708,0,0x0,8
tick,0x19252e620,13831958,0,0x0,8
tick,0x19252e620,13833333,0,0x0,8
tick,0x19252e620,13834333,0,0x0,8
tick,0x19252e620,13835417,0,0x0,8
tick,0x19252e620,13836583,0,0x0,8
tick,0x19252e620,13837875,0,0x0,8
tick,0x101bdaa78,13839125,0,0x0,8
tick,0x107ff4154,13840375,0,0x0,0,0x107fe301c
tick,0x19252e620,13841500,0,0x0,8
tick,0x19252b25c,13842542,0,0x0,8
tick,0x19252e620,13843542,0,0x0,8
tick,0x19252e620,13844583,0,0x0,8
tick,0x19252e620,13845625,0,0x0,8
tick,0x19252e620,13846875,0,0x0,8
tick,0x19252e620,13847958,0,0x0,8
tick,0x19252e620,13849125,0,0x0,8
tick,0x19252e620,13850292,0,0x0,8
tick,0x10112dfe4,13851292,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13852375,0,0x0,8
tick,0x19252e620,13853500,0,0x0,8
tick,0x1016ac020,13854542,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x19252f804,13855792,0,0x0,8
tick,0x19252e620,13857042,0,0x0,8
tick,0x10801faec,13858250,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1925708b0,13859542,0,0x0,8
tick,0x1012b5214,13860792,0,0x0,1
tick,0x19252e620,13861875,0,0x0,8
tick,0x1923734ac,13863125,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1011955b0,13864375,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x101655910,13865625,0,0x0,8
tick,0x19252e620,13866875,0,0x0,8
tick,0x1016b6400,13868125,0,0x0,0
tick,0x100cbd120,13869417,0,0x0,8
tick,0x19252b4fc,13870667,0,0x0,8
tick,0x19252e620,13871958,0,0x0,8
tick,0x19252e620,13873125,0,0x0,8
tick,0x19252e620,13874208,0,0x0,8
tick,0x19252e620,13875333,0,0x0,8
tick,0x19252b4fc,13876542,0,0x0,8
tick,0x1923755c0,13877792,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,13879083,0,0x0,8
tick,0x100bb6be0,13880333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13881583,0,0x0,8
tick,0x192527ad0,13882833,0,0x0,8
tick,0x19252e620,13884083,0,0x0,8
tick,0x1016aced8,13885333,0,0x0,0,0x107fe39b4,0x107fe2fb4
tick,0x100ccdbe0,13886583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,13887875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,13889125,0,0x0,8
tick,0x19252ad6c,13890292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009bddb4,13891542,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,13892833,0,0x0,8
tick,0x101099278,13893958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,13895250,0,0x0,8
tick,0x19252e620,13896292,0,0x0,8
tick,0x19252b4fc,13897542,0,0x0,8
tick,0x19252ad6c,13898792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252268c,13900042,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,13901167,0,0x0,8
tick,0x1009b1ac0,13902167,0,0x0,8
tick,0x19252e620,13903458,0,0x0,8
tick,0x19252e620,13904708,0,0x0,8
tick,0x1923746ac,13905958,0,0x0,1
tick,0x1016ad2c8,13907208,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,13908458,0,0x0,8
tick,0x19252e620,13909458,0,0x0,8
tick,0x10802655c,13910667,0,0x0,0,0x108010e90
tick,0x19252a6ec,13911917,0,0x0,1
tick,0x19252e620,13913125,0,0x0,8
tick,0x101bda520,13914375,0,0x0,8
tick,0x19252e620,13915667,0,0x0,8
tick,0x19252e620,13916875,0,0x0,8
tick,0x19252e620,13917875,0,0x0,8
tick,0x10174ddd0,13919125,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,13920375,0,0x0,8
tick,0x19252e620,13921625,0,0x0,8
tick,0x19252e620,13922708,0,0x0,8
tick,0x19252e620,13923708,0,0x0,8
tick,0x19252e620,13924792,0,0x0,8
tick,0x19252e620,13926083,0,0x0,8
tick,0x19252e620,13927167,0,0x0,8
tick,0x19252e620,13928417,0,0x0,8
tick,0x1080136f0,13929667,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,13930917,0,0x0,8
tick,0x19252e620,13932208,0,0x0,8
tick,0x19252e620,13933292,0,0x0,8
tick,0x1016b6424,13934542,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252e620,13935792,0,0x0,8
tick,0x19252e620,13937042,0,0x0,8
tick,0x19252e620,13938083,0,0x0,8
tick,0x19252b25c,13939250,0,0x0,8
tick,0x19252e620,13940417,0,0x0,8
tick,0x1016acdf0,13941458,0,0x0,0,0x107fe39b4,0x108021150
tick,0x19252e620,13942708,0,0x0,8
tick,0x1016b7cf8,13943750,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009b18c0,13945000,0,0x0,6
tick,0x19252e620,13946083,0,0x0,8
tick,0x19252b25c,13947292,0,0x0,0,0x10800a800
tick,0x19252e620,13948583,0,0x0,8
tick,0x19252e620,13949625,0,0x0,8
tick,0x1011954e0,13950667,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,13951917,0,0x0,8
tick,0x1016b6578,13953167,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252ad6c,13954208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,13955250,0,0x0,8
tick,0x19252ad6c,13956250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe78f0,13957542,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252e620,13958833,0,0x0,8
tick,0x19252e620,13960083,0,0x0,8
tick,0x19252e620,13961167,0,0x0,8
tick,0x100cd5854,13962417,1,0x100ba3118,6,0x0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13963625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13964917,0,0x0,8
tick,0x1016497e4,13966167,0,0x0,8
tick,0x19252e620,13967292,0,0x0,8
tick,0x100cbcbd8,13968542,0,0x0,8
tick,0x101669fbc,13969833,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x19252e620,13971125,0,0x0,8
tick,0x19252b25c,13972375,0,0x0,8
tick,0x19252e620,13973708,0,0x0,8
tick,0x19252ad6c,13974875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,13976167,0,0x0,8
tick,0x19252e620,13977417,0,0x0,8
tick,0x19252e620,13978708,0,0x0,8
tick,0x19252ad6c,13979958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,13981208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252a6ec,13982500,0,0x0,1
tick,0x10101f7f0,13983750,0,0x0,0,0x10802c3f0,0x1a7c5b2105c3
tick,0x192375b68,13985042,0,0x0,8
tick,0x19252ad6c,13986292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,13987583,0,0x0,8
tick,0x107f9fc40,13988958,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x19252b4fc,13990125,0,0x0,8
tick,0x1923734b4,13991375,0,0x0,6
tick,0x19252f804,13992625,0,0x0,8
tick,0x19252e620,13993875,0,0x0,8
tick,0x19252b4fc,13995000,0,0x0,8
tick,0x19252ad6c,13996292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,13997500,0,0x0,8
tick,0x19252e620,13998792,0,0x0,8
tick,0x19252e620,14000042,0,0x0,8
tick,0x100cbd4a0,14001250,0,0x0,6
tick,0x19252f804,14002542,0,0x0,8
tick,0x107fed360,14003792,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14005042,0,0x0,8
tick,0x100e3cec8,14006292,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100e22b7c,14007542,0,0x0,5
tick,0x19252e620,14008792,0,0x0,8
tick,0x100cb8a78,14009917,0,0x0,5
tick,0x19252e620,14011125,0,0x0,8
tick,0x101660dd8,14012417,0,0x0,0,0x107fe3ef8,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,14013500,0,0x0,8
tick,0x100b9e06c,14014750,0,0x0,0,0x107ff85d8,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
new,MemoryChunk,0x3eadc30c0000,262144
new,MemoryChunk,0x2a2a27ec0000,262144
new,MemoryChunk,0x9173c4c0000,262144
new,MemoryChunk,0x2734485c0000,262144
new,MemoryChunk,0xe92f2880000,262144
new,MemoryChunk,0x2116b1540000,262144
new,MemoryChunk,0x41a45840000,262144
new,MemoryChunk,0xceb99940000,262144
new,MemoryChunk,0x37a983a80000,262144
new,MemoryChunk,0x31f26e280000,262144
new,MemoryChunk,0x32a0ce200000,262144
new,MemoryChunk,0x1989dbb40000,262144
new,MemoryChunk,0x29f4b9080000,262144
new,MemoryChunk,0x3dc3392c0000,262144
new,MemoryChunk,0x28c726a80000,262144
new,MemoryChunk,0x34fa0ecc0000,262144
tick,0x19252ad6c,14016000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100a44f24,14017250,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1923a7598,14018500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14019708,0,0x0,8
tick,0x10164a6c4,14020958,0,0x0,8
tick,0x19252ad6c,14022250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14023458,0,0x0,8
tick,0x19252b4fc,14024750,0,0x0,8
tick,0x19252ad6c,14026000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923761f8,14027250,0,0x0,1
tick,0x19252ad6c,14028500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14029750,0,0x0,8
tick,0x19252e620,14031000,0,0x0,8
tick,0x19252e620,14032042,0,0x0,8
tick,0x19252e620,14033250,0,0x0,8
tick,0x19252e620,14034500,0,0x0,8
tick,0x19252e620,14035708,0,0x0,8
tick,0x19252e620,14037000,0,0x0,8
tick,0x19252e620,14038292,0,0x0,8
tick,0x192527354,14039333,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,14040625,0,0x0,8
tick,0x19252e620,14041875,0,0x0,8
tick,0x10174c60c,14043125,0,0x0,0,0x10801b540,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x10800b664,14044375,0,0x0,0,0x10800a738
tick,0x19252e620,14045625,0,0x0,8
tick,0x19252e620,14046875,0,0x0,8
tick,0x100ba5740,14048167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14049292,0,0x0,8
tick,0x1010e7a64,14050542,0,0x0,6
tick,0x19252b3f4,14051792,0,0x0,8
tick,0x192527ad0,14053042,0,0x0,8
tick,0x19252e620,14054333,0,0x0,8
tick,0x1016ac418,14055583,0,0x0,0,0x107fe66b0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,14056833,0,0x0,8
tick,0x108027060,14058083,0,0x0,0,0x107fe2ff0
tick,0x19252e620,14059375,0,0x0,8
tick,0x19252e620,14060375,0,0x0,8
tick,0x10800cfc4,14061625,0,0x0,0,0x107fe301c
tick,0x19252e620,14062708,0,0x0,8
tick,0x19252b4fc,14063917,0,0x0,8
tick,0x19252b25c,14065208,0,0x0,0,0x10800a800
tick,0x19252e620,14066500,0,0x0,8
tick,0x19252e620,14067542,0,0x0,8
tick,0x19252ad6c,14068792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10174dd38,14069833,0,0x0,0,0x108026920,0x108010e90
tick,0x192527ad0,14071125,0,0x0,8
tick,0x19252e620,14072375,0,0x0,8
tick,0x19252e620,14073625,0,0x0,8
tick,0x108010468,14074875,0,0x0,0
tick,0x19252e620,14075917,0,0x0,8
tick,0x19252e620,14076958,0,0x0,8
tick,0x10166b450,14078042,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,14079292,0,0x0,8
tick,0x10801656c,14080375,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,14081667,0,0x0,8
tick,0x19252b4fc,14082875,0,0x0,8
tick,0x19252ad6c,14084125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527354,14085375,0,0x0,8
tick,0x19252e620,14086667,0,0x0,8
tick,0x10113e748,14087917,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100abcbf0,14089167,0,0x0,8
tick,0x19252e620,14090417,0,0x0,8
tick,0x19252b4fc,14091583,0,0x0,8
tick,0x19252ad6c,14092667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14093917,0,0x0,8
tick,0x19252e620,14095000,0,0x0,8
tick,0x19252e620,14096208,0,0x0,8
tick,0x192527a78,14097250,0,0x0,8
tick,0x1010ee5bc,14098333,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14099583,0,0x0,8
tick,0x19252e620,14100875,0,0x0,8
tick,0x19252e620,14102125,0,0x0,8
tick,0x19252f804,14103167,0,0x0,8
tick,0x19252b25c,14104250,0,0x0,8
tick,0x19252f804,14105542,0,0x0,8
tick,0x19252e620,14106792,0,0x0,8
tick,0x19252ad6c,14108042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14109292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14110583,0,0x0,8
tick,0x19252e620,14111583,0,0x0,8
tick,0x19252e620,14112833,0,0x0,8
tick,0x19252e620,14114083,0,0x0,8
tick,0x107fea77c,14115250,0,0x0,0,0x107fe31b4
tick,0x19252e620,14116500,0,0x0,8
tick,0x19252ad6c,14117500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14118542,0,0x0,8
tick,0x19252e620,14119583,0,0x0,8
tick,0x100f5db10,14120833,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14122083,0,0x0,8
tick,0x107fe491c,14123333,0,0x0,0,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x10166b65c,14124625,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252b4fc,14125875,0,0x0,8
tick,0x19252e620,14127125,0,0x0,8
tick,0x101bdcd9c,14128250,0,0x0,8
tick,0x100b9ccbc,14129500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,14130750,0,0x0,8
tick,0x192527ad0,14132042,0,0x0,8
tick,0x100e88240,14133250,0,0x0,5
tick,0x19252b25c,14134542,0,0x0,0,0x10800a800
tick,0x192373a64,14135792,0,0x0,8
tick,0x19252e620,14137042,0,0x0,8
tick,0x192371a90,14138292,0,0x0,8
tick,0x19252e620,14139583,0,0x0,8
tick,0x19252e620,14140833,0,0x0,8
tick,0x19252e620,14141875,0,0x0,8
tick,0x19252e620,14142917,0,0x0,8
tick,0x19252b3f4,14144167,0,0x0,8
tick,0x19252e620,14145417,0,0x0,8
tick,0x100b9e3d4,14146667,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192527354,14147917,0,0x0,8
tick,0x19252ad6c,14149208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,14150292,0,0x0,0,0x10800a800
tick,0x108008034,14151542,0,0x0,0,0x10800a738
tick,0x19252e620,14152833,0,0x0,8
tick,0x19252e620,14154000,0,0x0,8
tick,0x192528738,14154958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14156042,0,0x0,8
tick,0x19252e620,14157042,0,0x0,8
tick,0x192528738,14158292,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14159583,0,0x0,8
tick,0x100cbcbd8,14160833,0,0x0,6
tick,0x1016ad67c,14161875,0,0x0,0,0x107fe46e0,0x1080145a8,0x1080266d0,0x108010e90
tick,0x19252e620,14163125,0,0x0,8
tick,0x19252e620,14164375,0,0x0,8
tick,0x19252e620,14165667,0,0x0,8
tick,0x10800a9ac,14166917,0,0x0,0
tick,0x19252ad6c,14168167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100f3a19c,14169417,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,14170583,0,0x0,8
tick,0x19252ad6c,14171833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14173083,0,0x0,8
tick,0x19252b4fc,14174333,0,0x0,8
tick,0x192527a98,14175583,0,0x0,8
tick,0x192527ad0,14176833,0,0x0,8
tick,0x19252b4fc,14178083,0,0x0,8
tick,0x100cbb438,14179375,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14180625,0,0x0,8
tick,0x19252e620,14181667,0,0x0,8
tick,0x19252e620,14182708,0,0x0,8
tick,0x19252e620,14183958,0,0x0,8
tick,0x1009bd898,14185000,0,0x0,0,0x10800b1b4,0x10800a738
tick,0x19252e620,14186250,0,0x0,8
tick,0x19252e620,14187458,0,0x0,8
tick,0x19252e620,14188708,0,0x0,8
tick,0x19252e620,14189833,0,0x0,8
tick,0x19252b25c,14191042,0,0x0,8
tick,0x10801835c,14192292,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14193583,0,0x0,8
tick,0x19252e620,14194833,0,0x0,8
tick,0x19252ad6c,14196083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14197333,0,0x0,8
tick,0x19252e620,14198375,0,0x0,8
tick,0x1016b70dc,14199375,0,0x0,0,0x10800a738
tick,0x100abbe64,14200625,0,0x0,8
tick,0x19252e620,14201917,0,0x0,8
tick,0x19252e620,14203167,0,0x0,8
tick,0x19252ad6c,14204417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6fc4,14205458,0,0x0,0
tick,0x19252e620,14206708,0,0x0,8
tick,0x19252e620,14207750,0,0x0,8
tick,0x19252e620,14208750,0,0x0,8
tick,0x19252f804,14210042,0,0x0,8
tick,0x19252e620,14211292,0,0x0,8
tick,0x19252ad6c,14212333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,14213583,0,0x0,8
tick,0x19252e620,14214875,0,0x0,8
tick,0x19252e620,14215875,0,0x0,8
tick,0x101f20754,14217125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100cbb3d8,14218375,0,0x0,5,0x108023204,0x108021988
tick,0x19252ad6c,14219625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14220708,0,0x0,8
tick,0x10118896c,14221958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016b6500,14222958,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252ad6c,14224000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,14225250,0,0x0,8
tick,0x19252e620,14226500,0,0x0,8
tick,0x100cbcc04,14227750,0,0x0,8
tick,0x19252b4fc,14229042,0,0x0,8
tick,0x19252e620,14230292,0,0x0,8
tick,0x1009f0d24,14231583,0,0x0,6
tick,0x19252e620,14232833,0,0x0,8
tick,0x192528738,14234125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,14235375,0,0x0,8
tick,0x192375d14,14236667,0,0x0,8
tick,0x19252e620,14237917,0,0x0,8
tick,0x10800b3d0,14239250,0,0x0,0,0x10800a738
tick,0x19252f804,14240458,0,0x0,8
tick,0x19252ad6c,14241708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cb944c,14243000,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101672250,14244250,0,0x0,0,0x107fe71ec,0x1080264e0,0x108010e90
tick,0x19252e620,14245542,0,0x0,8
tick,0x107ff2f64,14246792,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x10801bfd8,14248083,0,0x0,0,0x10801a474
tick,0x19252ad6c,14249333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14250625,0,0x0,8
tick,0x10166abdc,14251875,0,0x0,0
tick,0x19252ad6c,14253167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14254208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14255458,0,0x0,8
tick,0x19252e620,14256750,0,0x0,8
tick,0x10116f118,14258000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,14259333,0,0x0,8
tick,0x101bde718,14260625,0,0x0,8
tick,0x108018b00,14261875,0,0x0,0,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14263208,0,0x0,8
tick,0x1016b6488,14264417,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,14265458,0,0x0,8
tick,0x100e3cec8,14266708,0,0x0,6
tick,0x19252e620,14268000,0,0x0,8
tick,0x19252b25c,14269250,0,0x0,8
tick,0x107fecbec,14270500,0,0x0,0,0x107fed654,0x10801b4ec,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14271750,0,0x0,8
tick,0x100e22b50,14272792,0,0x0,0
tick,0x19252e620,14273875,0,0x0,8
tick,0x19252b4fc,14274917,0,0x0,8
tick,0x10801387c,14276167,0,0x0,0,0x1080263b8,0x108010e90
tick,0x100e1fda4,14277458,0,0x0,6
tick,0x19252e620,14278708,0,0x0,8
tick,0x10174e264,14279750,0,0x0,0,0x108016474,0x108026920,0x108010e90
tick,0x19252e620,14281000,0,0x0,8
tick,0x19252ad6c,14282250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14283500,0,0x0,8
tick,0x19252b4fc,14284750,0,0x0,8
tick,0x19252e620,14286042,0,0x0,8
tick,0x19252e620,14287292,0,0x0,8
tick,0x19252e620,14288458,0,0x0,8
tick,0x19252e620,14289417,0,0x0,8
tick,0x100cd4648,14290500,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14291750,0,0x0,8
tick,0x19252b25c,14293000,0,0x0,0,0x10800a800
tick,0x100e85700,14294167,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14295417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14296708,0,0x0,8
tick,0x19252b4fc,14297708,0,0x0,8
tick,0x19252e620,14298958,0,0x0,8
tick,0x19252ad6c,14300083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101701fac,14301333,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe5100,14302625,0,0x0,0,0x10800a738
tick,0x19252ad6c,14303875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14305125,0,0x0,8
tick,0x19252e620,14306375,0,0x0,8
tick,0x19252ad6c,14307542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cd89e0,14308792,0,0x0,8
tick,0x19252ad6c,14310042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14311333,0,0x0,8
tick,0x19252b4fc,14312583,0,0x0,8
tick,0x10174dd40,14313833,0,0x0,0,0x108026920,0x108010e90
tick,0x1016568f0,14315083,0,0x0,8
tick,0x19252e620,14316333,0,0x0,8
tick,0x19252e620,14317625,0,0x0,8
tick,0x19252e620,14318667,0,0x0,8
tick,0x19252e620,14319917,0,0x0,8
tick,0x1923761e0,14321167,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1923758a4,14322417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016ad6b8,14323667,0,0x0,0,0x107fe46e0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,14324917,0,0x0,8
tick,0x19252e620,14326000,0,0x0,8
tick,0x19252e620,14327083,0,0x0,8
tick,0x192528738,14328333,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107fe2b20,14329333,0,0x0,0
tick,0x1010e1f54,14330458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,14331500,0,0x0,8
tick,0x19252e620,14332583,0,0x0,8
tick,0x1016ad2a0,14333833,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x101198d38,14335083,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14336333,0,0x0,8
tick,0x19252e620,14337417,0,0x0,8
tick,0x19252e620,14338625,0,0x0,8
tick,0x19252e620,14339708,0,0x0,8
tick,0x19252e620,14340792,0,0x0,8
tick,0x192528738,14342042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527ad0,14343417,0,0x0,8
tick,0x19252b25c,14344542,0,0x0,0,0x10800a800
tick,0x19252b4fc,14345833,0,0x0,8
tick,0x19252e620,14346917,0,0x0,8
tick,0x19252e620,14347958,0,0x0,8
tick,0x19252e620,14349208,0,0x0,8
tick,0x19252e620,14350500,0,0x0,8
tick,0x19252e620,14351542,0,0x0,8
tick,0x19252e620,14352750,0,0x0,8
tick,0x19252b25c,14354042,0,0x0,0,0x10800a800
tick,0x19252b4fc,14355292,0,0x0,8
tick,0x19252e620,14356458,0,0x0,8
tick,0x19252e620,14357500,0,0x0,8
tick,0x19252e620,14358750,0,0x0,8
tick,0x101bdd694,14359833,0,0x0,8
tick,0x19252e620,14361083,0,0x0,8
tick,0x19252e620,14362333,0,0x0,8
tick,0x19252e620,14363417,0,0x0,8
tick,0x19252e620,14364458,0,0x0,8
tick,0x19252e620,14365708,0,0x0,8
tick,0x100abc8f0,14366917,0,0x0,8
tick,0x19252ad6c,14368167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe6078,14369417,0,0x0,0,0x107fe2ff0
tick,0x19252b4fc,14370708,0,0x0,8
tick,0x19252e620,14372000,0,0x0,8
tick,0x101661af8,14373083,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14374208,0,0x0,8
tick,0x192528738,14375375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101788704,14376667,0,0x0,0,0x1080194f4,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14377792,0,0x0,8
tick,0x19252e620,14378750,0,0x0,8
tick,0x1016735d0,14379958,0,0x0,0,0x107fe4900,0x108020128,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x10127148c,14381208,0,0x0,5
tick,0x19252e620,14382500,0,0x0,8
new,MemoryChunk,0x12fc06580000,262144
tick,0x19252e620,14383542,0,0x0,8
tick,0x19252e620,14384667,0,0x0,8
tick,0x19252e620,14385917,0,0x0,8
tick,0x19252e620,14386958,0,0x0,8
tick,0x19252e620,14388000,0,0x0,8
tick,0x19252e620,14389292,0,0x0,8
tick,0x19252e620,14390333,0,0x0,8
tick,0x19252e620,14391333,0,0x0,8
tick,0x19252e620,14392583,0,0x0,8
tick,0x19252e620,14393833,0,0x0,8
tick,0x108026920,14394750,0,0x0,0,0x108010e90
tick,0x100cdb358,14396000,0,0x0,0,0x10800b1b4,0x10800a738
tick,0x19252e620,14397292,0,0x0,8
tick,0x19252e620,14398292,0,0x0,8
tick,0x100ec26d4,14399333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,14400583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14401750,0,0x0,8
tick,0x19252e620,14402750,0,0x0,8
tick,0x1080101e0,14404042,0,0x0,0
tick,0x19252e620,14405250,0,0x0,8
tick,0x19252e620,14406417,0,0x0,8
tick,0x19252e620,14407667,0,0x0,8
tick,0x19252e620,14408917,0,0x0,8
tick,0x19252b25c,14410000,0,0x0,0,0x10800a800
tick,0x19252e620,14411250,0,0x0,8
tick,0x19252e620,14412333,0,0x0,8
tick,0x19252e620,14413458,0,0x0,8
tick,0x19252e620,14414625,0,0x0,8
tick,0x19252e620,14415792,0,0x0,8
tick,0x19252ad6c,14416917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,14418167,0,0x0,8
tick,0x19252e620,14419167,0,0x0,8
tick,0x19252ad6c,14420417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14421667,0,0x0,8
tick,0x100d0a854,14422958,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14424208,0,0x0,8
tick,0x19252ad6c,14425458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14426708,0,0x0,8
tick,0x19252e620,14427833,0,0x0,8
tick,0x10166066c,14429083,0,0x0,0,0x10801aa58,0x108019b28
tick,0x101702220,14430333,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14431583,0,0x0,8
tick,0x19252e620,14432833,0,0x0,8
tick,0x192527a78,14434083,0,0x0,8
tick,0x19252e620,14435375,0,0x0,8
tick,0x19252e620,14436625,0,0x0,8
tick,0x10270e6ec,14437875,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b75dc,14439125,0,0x0,0,0x10800a738
tick,0x100abc89c,14440375,0,0x0,0,0x108023160,0x108021988
tick,0x19252e620,14441417,0,0x0,8
tick,0x19252e620,14442458,0,0x0,8
tick,0x19252e620,14443458,0,0x0,8
tick,0x19252e620,14444500,0,0x0,8
tick,0x19252e620,14445583,0,0x0,8
tick,0x19252e620,14446750,0,0x0,8
tick,0x192528738,14447958,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14449125,0,0x0,8
tick,0x19252e620,14450167,0,0x0,8
tick,0x19252e620,14451375,0,0x0,8
tick,0x100fc4a38,14452625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14453667,0,0x0,8
tick,0x101662120,14454917,0,0x0,0,0x107fe6724,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,14456208,0,0x0,8
tick,0x10166abc8,14457250,0,0x0,0
tick,0x19252e620,14458542,0,0x0,8
tick,0x19252e620,14459583,0,0x0,8
tick,0x19252e620,14460792,0,0x0,8
tick,0x107ff2cc4,14462042,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x19252e620,14463292,0,0x0,8
tick,0x19252ad6c,14464583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ba41e8,14465833,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,14466958,0,0x0,8
tick,0x100f39d80,14468000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x107fee6a4,14469250,0,0x0,0,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14470500,0,0x0,8
tick,0x1016ac098,14471750,0,0x0,0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,14473042,0,0x0,8
tick,0x1016ad228,14474292,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x19252e620,14475542,0,0x0,8
tick,0x19252e620,14476625,0,0x0,8
tick,0x19252e620,14477750,0,0x0,8
tick,0x19252b4fc,14479000,0,0x0,8
tick,0x19252e620,14480292,0,0x0,8
tick,0x19252e620,14481542,0,0x0,8
tick,0x19252e620,14482792,0,0x0,8
tick,0x19252e620,14483875,0,0x0,8
tick,0x19252e620,14485125,0,0x0,8
tick,0x19252e620,14486250,0,0x0,8
tick,0x19252e620,14487458,0,0x0,8
tick,0x101139bc8,14488458,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14489708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14491000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14492167,0,0x0,8
tick,0x19252f804,14493375,0,0x0,8
tick,0x19252b25c,14494625,0,0x0,8
tick,0x19252b4fc,14495917,0,0x0,8
tick,0x19252e620,14496917,0,0x0,8
tick,0x19252b25c,14498167,0,0x0,8
tick,0x19252e620,14499458,0,0x0,8
tick,0x19252e620,14500542,0,0x0,8
tick,0x19252e620,14501542,0,0x0,8
tick,0x101701f60,14502875,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100e3ce90,14504125,0,0x0,6
tick,0x19252b25c,14505417,0,0x0,0,0x10800a800
tick,0x19252e620,14506625,0,0x0,8
tick,0x19252e620,14507708,0,0x0,8
tick,0x19252e620,14509000,0,0x0,8
tick,0x19252e620,14510208,0,0x0,8
tick,0x19252ad6c,14511458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,14512750,0,0x0,8
tick,0x10109bd74,14514000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x107feeb7c,14515250,0,0x0,0,0x107fe2ff0
tick,0x1010eef58,14516500,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x10166a930,14517792,0,0x0,0
tick,0x1016ad2d4,14519042,0,0x0,0,0x10800b288,0x10800a738
tick,0x101661b98,14520333,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100bb6b70,14521583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14523083,0,0x0,8
tick,0x192529bbc,14524125,0,0x0,1
tick,0x100cef7ac,14525375,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,14526750,0,0x0,8
tick,0x19252b4fc,14527792,0,0x0,8
tick,0x192527354,14529042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192373548,14530333,0,0x0,8
tick,0x19252e620,14531583,0,0x0,8
tick,0x19252e620,14532833,0,0x0,8
tick,0x19252ad6c,14534125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,14535250,0,0x0,8
tick,0x101139fd8,14536542,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,14537667,0,0x0,8
tick,0x19252e620,14538875,0,0x0,8
tick,0x19252e620,14540125,0,0x0,8
tick,0x101139e04,14541417,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100eeeee4,14542625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14543917,0,0x0,8
tick,0x19252ad6c,14545167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100a2f0f0,14546333,0,0x0,8
tick,0x100eb70f0,14547583,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14548875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009bbc18,14550125,0,0x0,6
tick,0x19252e620,14551458,0,0x0,8
tick,0x107fe6028,14552625,0,0x0,0,0x107fe2ff0
tick,0x100cbb3d8,14553917,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10166066c,14555167,0,0x0,0,0x107fe3ef8,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,14556458,0,0x0,8
tick,0x19252e620,14557583,0,0x0,8
tick,0x19252e620,14558667,0,0x0,8
tick,0x10174c5d8,14559917,0,0x0,0,0x10801b540,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14561167,0,0x0,8
tick,0x19252ad6c,14562417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192375d34,14563458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14564708,0,0x0,8
tick,0x192563290,14565958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016c5670,14567083,0,0x0,0,0x10800af80,0x10800a738
tick,0x19252e620,14568125,0,0x0,8
tick,0x19252e620,14569167,0,0x0,8
tick,0x19252e620,14570417,0,0x0,8
tick,0x19252e620,14571458,0,0x0,8
tick,0x19252e620,14572750,0,0x0,8
tick,0x19252e620,14573792,0,0x0,8
tick,0x10801a324,14575042,0,0x0,0
tick,0x19252e620,14576292,0,0x0,8
tick,0x19252e620,14577542,0,0x0,8
tick,0x19252e620,14578708,0,0x0,8
tick,0x19252e620,14580042,0,0x0,8
tick,0x19252e620,14581167,0,0x0,8
tick,0x100ce0a6c,14582250,0,0x0,8
tick,0x19252ad6c,14583500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14584750,0,0x0,8
tick,0x19252e620,14586000,0,0x0,8
tick,0x19252a6ec,14587250,0,0x0,1
tick,0x19252e620,14588500,0,0x0,8
tick,0x19252e620,14589792,0,0x0,8
tick,0x19252e620,14590833,0,0x0,8
tick,0x19252e620,14591833,0,0x0,8
tick,0x19252e620,14593083,0,0x0,8
tick,0x1016c5338,14594333,0,0x0,0,0x10800a738
tick,0x19252e620,14595625,0,0x0,8
tick,0x19252f804,14596833,0,0x0,8
tick,0x19252e620,14598083,0,0x0,8
tick,0x19252e620,14599125,0,0x0,8
tick,0x19252e620,14600167,0,0x0,8
tick,0x107fe62c8,14601208,0,0x0,0,0x107fe2ff0
tick,0x19252e620,14602458,0,0x0,8
tick,0x1009b4250,14603708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14605000,0,0x0,8
tick,0x19252e620,14606042,0,0x0,8
tick,0x19252e620,14607125,0,0x0,8
tick,0x1016ac418,14608083,0,0x0,0,0x10801f9f8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1080136f0,14609333,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,14610625,0,0x0,8
tick,0x19252e620,14611875,0,0x0,8
tick,0x192527a78,14613125,0,0x0,8
tick,0x100ba80d8,14614375,0,0x0,6
tick,0x19252b25c,14615625,0,0x0,8
tick,0x19252e620,14616917,0,0x0,8
tick,0x19252e620,14617917,0,0x0,8
tick,0x19252e620,14618958,0,0x0,8
tick,0x19252e620,14620167,0,0x0,8
tick,0x19252e620,14621250,0,0x0,8
tick,0x100cd215c,14622333,0,0x0,8
tick,0x102712f04,14623583,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,14624875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923759cc,14625917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080225a4,14627208,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x19252e620,14628458,0,0x0,8
tick,0x19252e620,14629542,0,0x0,8
tick,0x192527ad0,14630792,0,0x0,8
tick,0x19252e620,14632083,0,0x0,8
tick,0x19252e620,14633333,0,0x0,8
tick,0x19252ad6c,14634583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14635833,0,0x0,8
tick,0x19252e620,14637125,0,0x0,8
tick,0x19252e620,14638167,0,0x0,8
tick,0x19252e620,14639417,0,0x0,8
tick,0x19252b25c,14640417,0,0x0,8
tick,0x19252e620,14641500,0,0x0,8
tick,0x19252ad6c,14642625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14643917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,14645167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b25c,14646417,0,0x0,8
tick,0x19252e620,14647750,0,0x0,8
tick,0x19252e620,14648708,0,0x0,8
tick,0x19252e620,14649708,0,0x0,8
tick,0x19252a6ec,14650917,0,0x0,1
tick,0x107ff3078,14651958,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x1016be238,14653208,0,0x0,0,0x10801fcf0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100a2f124,14654458,0,0x0,8
tick,0x19252e620,14718833,0,0x0,8
tick,0x19252e620,14719917,0,0x0,8
tick,0x19252e620,14720958,0,0x0,8
tick,0x100e3cdd8,14722125,0,0x0,6
tick,0x19252e620,14723417,0,0x0,8
tick,0x19252e620,14724500,0,0x0,8
tick,0x19252e620,14725750,0,0x0,8
tick,0x100cbb404,14727000,0,0x0,5
tick,0x100ccc6f8,14728250,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100f39d80,14729500,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100fc6a94,14730750,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,14732000,0,0x0,8
tick,0x19252e620,14733167,0,0x0,8
tick,0x19252e620,14734167,0,0x0,8
tick,0x101139df4,14735250,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x192528738,14736500,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14737792,0,0x0,8
tick,0x19252e620,14738917,0,0x0,8
tick,0x1009bd14c,14739875,0,0x0,8
tick,0x19252e620,14741000,0,0x0,8
tick,0x192528738,14742250,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100abc974,14743542,0,0x0,8
tick,0x19252b4fc,14744792,0,0x0,8
tick,0x19252e620,14746042,0,0x0,8
tick,0x19252e620,14747125,0,0x0,8
tick,0x192527354,14748125,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x108013a80,14749375,0,0x0,0,0x1080263b8,0x108010e90
tick,0x192527a78,14750625,0,0x0,8
tick,0x1080102b4,14751875,0,0x0,0
tick,0x100e6d56c,14753083,0,0x0,5
tick,0x10801abe0,14754292,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14755542,0,0x0,8
tick,0x19252e620,14756833,0,0x0,8
tick,0x19252e620,14758083,0,0x0,8
tick,0x19252e620,14759333,0,0x0,8
tick,0x192527a78,14760333,0,0x0,8
tick,0x19252e620,14761625,0,0x0,8
tick,0x19252e620,14762875,0,0x0,8
tick,0x19252e620,14763917,0,0x0,8
tick,0x19252e620,14765083,0,0x0,8
tick,0x100e01720,14766292,0,0x0,5
tick,0x19252e620,14767667,0,0x0,8
tick,0x19252e620,14768625,0,0x0,8
tick,0x19252e620,14769667,0,0x0,8
tick,0x19252b25c,14770667,0,0x0,8
tick,0x1923757b4,14771750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,14772875,0,0x0,8
tick,0x100f386d0,14774250,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x10109bc24,14775792,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016b6400,14777250,0,0x0,0,0x1080267a8,0x108010e90
tick,0x192387c48,14778333,0,0x0,8
tick,0x192528738,14779583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e2fb30,14780875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14782125,0,0x0,8
tick,0x19252e620,14783458,0,0x0,8
tick,0x19252b4fc,14784750,0,0x0,8
tick,0x19252f804,14786000,0,0x0,8
tick,0x108010bb8,14787292,0,0x0,0
tick,0x100e8c430,14788583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,14789833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e016b0,14791083,0,0x0,5
tick,0x100e22b7c,14792458,0,0x0,5
tick,0x19252b4fc,14793708,0,0x0,8
tick,0x19252e620,14794792,0,0x0,8
tick,0x19252e620,14795917,0,0x0,8
tick,0x19252e620,14796958,0,0x0,8
tick,0x19252e620,14798208,0,0x0,8
tick,0x107ff308c,14799458,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x10113b24c,14800708,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,14802000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009c55e4,14803250,0,0x0,8
tick,0x19252e620,14804500,0,0x0,8
tick,0x19252e620,14805792,0,0x0,8
tick,0x19252b4fc,14807042,0,0x0,8
tick,0x192528738,14808292,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1009f0bd8,14809542,0,0x0,6
tick,0x101bdcbd8,14810625,0,0x0,8
tick,0x101198bf8,14811917,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14813167,0,0x0,8
tick,0x19252e620,14814458,0,0x0,8
tick,0x19252e620,14815708,0,0x0,8
tick,0x19252e620,14816875,0,0x0,8
tick,0x100e6d4a4,14818125,0,0x0,5
tick,0x19252e620,14819333,0,0x0,8
tick,0x19252bb3c,14820583,0,0x0,1
tick,0x19238b080,14821875,0,0x0,6
tick,0x19252e620,14823167,0,0x0,8
tick,0x100e3d0d0,14824417,0,0x0,8
tick,0x19252e620,14825667,0,0x0,8
tick,0x100cbcbd8,14826917,0,0x0,6
tick,0x19252e620,14828208,0,0x0,8
tick,0x19252b25c,14829458,0,0x0,0,0x10800a800
tick,0x19252ad6c,14830750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14832042,0,0x0,8
tick,0x19252f804,14833125,0,0x0,8
new,MemoryChunk,0x254a51240000,262144
tick,0x192528738,14834375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,14835583,0,0x0,8
tick,0x19252e620,14836833,0,0x0,8
tick,0x19252ad6c,14837875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14839125,0,0x0,8
tick,0x19252e620,14840375,0,0x0,8
tick,0x108010290,14841458,0,0x0,0
tick,0x19252e620,14842708,0,0x0,8
tick,0x19252e620,14843750,0,0x0,8
tick,0x100a24884,14845000,0,0x0,6
tick,0x19252a6ec,14846250,0,0x0,1
tick,0x19252ad6c,14847500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19259e700,14848750,0,0x0,6
tick,0x19252e620,14849875,0,0x0,8
tick,0x19252b25c,14851125,0,0x0,8
tick,0x19252e620,14852375,0,0x0,8
tick,0x19252e620,14853667,0,0x0,8
tick,0x19252e620,14854917,0,0x0,8
tick,0x19252e620,14856208,0,0x0,8
tick,0x19252b4fc,14857417,0,0x0,8
tick,0x19252e620,14858708,0,0x0,8
tick,0x19252b3f4,14859917,0,0x0,8
tick,0x1080102b8,14861167,0,0x0,0
tick,0x100cbcbc0,14862417,0,0x0,8
tick,0x19252ad6c,14863667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,14864917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19259ebdc,14866167,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800d2f8,14867458,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252e620,14868708,0,0x0,8
tick,0x19252e620,14869875,0,0x0,8
tick,0x100e8c434,14870917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,14872167,0,0x0,8
tick,0x19252e620,14873292,0,0x0,8
tick,0x19252e620,14874583,0,0x0,8
tick,0x19252e620,14875833,0,0x0,8
tick,0x192528738,14877083,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100ccc6f8,14878208,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192527354,14879250,0,0x0,8
tick,0x1009b9d50,14880500,0,0x0,6
tick,0x19252e620,14881750,0,0x0,8
tick,0x19252e620,14882917,0,0x0,8
tick,0x192528738,14884042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x101651750,14885083,0,0x0,6
tick,0x19252b25c,14886375,0,0x0,8
tick,0x19252e620,14887417,0,0x0,8
tick,0x19252ad6c,14888667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,14889917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101669ffc,14891208,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009c71c4,14892458,0,0x0,8
tick,0x19252e620,14893708,0,0x0,8
tick,0x1925a22dc,14894750,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,14895917,0,0x0,8
tick,0x19252e620,14896958,0,0x0,8
tick,0x19252e620,14898250,0,0x0,8
tick,0x19252e620,14899292,0,0x0,8
tick,0x1016ad2d8,14900375,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252b4fc,14901625,0,0x0,8
tick,0x19252e620,14902875,0,0x0,8
tick,0x19252ad6c,14904167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101bde718,14905417,0,0x0,8
tick,0x19252e620,14906583,0,0x0,8
tick,0x100e01c90,14907792,0,0x0,0
tick,0x101701f9c,14908833,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x101bdd3f4,14910083,0,0x0,8
tick,0x19252b25c,14911333,0,0x0,8
tick,0x19252e620,14912583,0,0x0,8
tick,0x108026178,14913625,0,0x0,0,0x108010e90
tick,0x19252b3f4,14914875,0,0x0,8
tick,0x19252e620,14916167,0,0x0,8
tick,0x19252ad6c,14917417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14918667,0,0x0,8
tick,0x19252e620,14919792,0,0x0,8
tick,0x10164b604,14921042,0,0x0,6
tick,0x10801c740,14922292,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,14923333,0,0x0,0,0x10800a800
tick,0x10114c634,14924417,0,0x0,5
tick,0x19252e620,14925667,0,0x0,8
tick,0x108010404,14926917,0,0x0,0
tick,0x19252ad6c,14928167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14929417,0,0x0,8
tick,0x19252e620,14930542,0,0x0,8
tick,0x10802115c,14931583,0,0x0,0
tick,0x19252e620,14932625,0,0x0,8
tick,0x19252e620,14933667,0,0x0,8
tick,0x19252e620,14934875,0,0x0,8
tick,0x19252ad6c,14936000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14937167,0,0x0,8
tick,0x19252e620,14938333,0,0x0,8
tick,0x19252ad6c,14939417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100b97b60,14940667,0,0x0,8
tick,0x19252e620,14941917,0,0x0,8
tick,0x192528738,14943167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e3d144,14944417,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,14945708,0,0x0,8
tick,0x100cc4cac,14946917,0,0x0,6
tick,0x19252e620,14948208,0,0x0,8
tick,0x19252f804,14949250,0,0x0,8
tick,0x19252e620,14950542,0,0x0,8
tick,0x100cd2318,14951583,0,0x0,6
tick,0x19252b4fc,14952833,0,0x0,8
tick,0x10166a190,14954125,0,0x0,0,0x10801053c
tick,0x19252ad6c,14955375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14956458,0,0x0,8
tick,0x19252e620,14957708,0,0x0,8
tick,0x19252ad6c,14958958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b74d8,14960083,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x19252ad6c,14961208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b6538,14962208,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,14963458,0,0x0,8
tick,0x19252e620,14964583,0,0x0,8
tick,0x19252f804,14965833,0,0x0,8
tick,0x19252b25c,14967083,0,0x0,0,0x10800a800
tick,0x19252e620,14968375,0,0x0,8
tick,0x19252e620,14969625,0,0x0,8
tick,0x19252e620,14970875,0,0x0,8
tick,0x19252b25c,14972208,0,0x0,8
tick,0x19252e620,14973417,0,0x0,8
tick,0x19252e620,14974667,0,0x0,8
tick,0x19252e620,14975750,0,0x0,8
tick,0x19252ad6c,14976833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14977875,0,0x0,8
tick,0x19252e620,14978917,0,0x0,8
tick,0x19252e620,14980208,0,0x0,8
tick,0x192527ad0,14981458,0,0x0,8
code-creation,JS,10,14982125,0x10802c780,376,append node:internal/linkedlist:30:16,0x22b216cdb5a8,^
code-source-info,0x10802c780,16,558,995,,,
code-creation,JS,10,14982167,0x10802c920,176,peek node:internal/linkedlist:10:14,0x22b216cdb428,^
code-source-info,0x10802c920,16,146,225,,,
code-creation,JS,10,14982167,0x10802ca00,1272,processTimers node:internal/timers:514:25,0x22b216cd0220,^
code-source-info,0x10802ca00,10,15590,16058,,,
code-creation,JS,10,14982208,0x10802cf20,960,initAsyncResource node:internal/timers:164:27,0x22b216ccef80,^
code-source-info,0x10802cf20,10,5916,6231,,,
code-creation,JS,10,14982208,0x10802d300,1208,Timeout node:internal/timers:175:14,0x22b216ccf048,^
code-source-info,0x10802d300,10,6348,7383,,,
code-creation,JS,10,14982250,0x10802d7e0,424,TimersList node:internal/timers:251:14,0x22b216ccf4e0,^
code-source-info,0x10802d7e0,10,8136,8431,,,
code-creation,JS,10,14982250,0x10802d9c0,400,insert node:internal/priority_queue:26:9,0x22b216cdbbb0,^
code-source-info,0x10802d9c0,17,698,875,,,
tick,0x19252b4fc,14982708,0,0x0,8
tick,0x19252e620,14983958,0,0x0,8
tick,0x19252e620,14985250,0,0x0,8
tick,0x19252e620,14986292,0,0x0,8
tick,0x19252e620,14987375,0,0x0,8
tick,0x19252ad6c,14988417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14989458,0,0x0,8
tick,0x19252e620,14990708,0,0x0,8
tick,0x19252e620,14991792,0,0x0,8
tick,0x19252ad6c,14992917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,14994167,0,0x0,8
tick,0x19252e620,14995417,0,0x0,8
tick,0x19252e620,14996667,0,0x0,8
tick,0x19252e620,14997917,0,0x0,8
tick,0x19252e620,14999208,0,0x0,8
tick,0x19252e620,15000250,0,0x0,8
tick,0x192527a78,15001500,0,0x0,8
tick,0x19252e620,15002625,0,0x0,8
tick,0x19252e620,15003625,0,0x0,8
tick,0x19252e620,15004792,0,0x0,8
new,MemoryChunk,0x399b94640000,262144
new,MemoryChunk,0x16c1dc000000,262144
tick,0x100ba7b7c,15006042,0,0x0,8
tick,0x100e8c430,15007292,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15008542,0,0x0,8
tick,0x19252e620,15009667,0,0x0,8
tick,0x101196304,15010750,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x101660674,15012083,0,0x0,0,0x107fe3ef8,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1009dfffc,15013333,0,0x0,8
tick,0x19252e620,15014583,0,0x0,8
tick,0x19252e620,15015833,0,0x0,8
tick,0x19252ad6c,15017000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15018333,0,0x0,8
tick,0x19252e620,15019333,0,0x0,8
tick,0x19252b4fc,15020583,0,0x0,8
tick,0x19252e620,15021875,0,0x0,8
tick,0x19252e620,15023125,0,0x0,8
tick,0x19252e620,15024375,0,0x0,8
tick,0x19252e620,15025500,0,0x0,8
tick,0x192528738,15026708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,15027792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101bda520,15029042,0,0x0,8
tick,0x19252ad6c,15030333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15031333,0,0x0,8
tick,0x19252e620,15032625,0,0x0,8
tick,0x19252e620,15033875,0,0x0,8
tick,0x19252e620,15034875,0,0x0,8
tick,0x19252b4fc,15036167,0,0x0,8
tick,0x101662128,15037417,0,0x0,0
tick,0x19252e620,15038667,0,0x0,8
tick,0x192527ad0,15039917,0,0x0,8
tick,0x19252f804,15041167,0,0x0,8
tick,0x19252e620,15042417,0,0x0,8
tick,0x192527ad0,15043667,0,0x0,8
tick,0x19252e620,15044958,0,0x0,8
tick,0x19252e620,15046000,0,0x0,8
tick,0x19252e620,15047042,0,0x0,8
tick,0x19252e620,15048292,0,0x0,8
tick,0x19252e620,15049542,0,0x0,8
tick,0x19252e620,15050542,0,0x0,8
tick,0x19252e620,15051542,0,0x0,8
tick,0x19252e620,15052667,0,0x0,8
tick,0x19252e620,15053708,0,0x0,8
tick,0x19252b25c,15054958,0,0x0,8
tick,0x192527ad0,15056167,0,0x0,8
tick,0x100e3cfc0,15057458,0,0x0,6
tick,0x19252ad6c,15058708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107f9f9b4,15059958,0,0x0,0,0x101787d44,0x10802651c,0x108010e90
tick,0x19252ad6c,15061250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15062500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15063750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e3ce90,15065042,0,0x0,6
tick,0x100abc694,15066292,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,15067583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101196230,15068875,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,15070125,0,0x0,8
tick,0x19252ad6c,15071417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbcbb8,15072542,0,0x0,8
tick,0x1010ec3f0,15073833,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252f804,15075083,0,0x0,8
tick,0x19252e620,15076333,0,0x0,8
tick,0x100e22b30,15077625,0,0x0,5
tick,0x19252e620,15078833,0,0x0,8
tick,0x19252e620,15080083,0,0x0,8
tick,0x19252e620,15081292,0,0x0,8
tick,0x19252bb3c,15082583,0,0x0,1
tick,0x1016adaac,15083833,0,0x0,0,0x107fe46e0,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x192527358,15085083,0,0x0,8
tick,0x19252e620,15086417,0,0x0,8
tick,0x19252b25c,15087667,0,0x0,8
tick,0x19252ad6c,15088875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15090250,0,0x0,8
tick,0x192527ad0,15091500,0,0x0,8
tick,0x19252e620,15092667,0,0x0,8
tick,0x19252e620,15093958,0,0x0,8
tick,0x19252ad6c,15095208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15096583,0,0x0,8
tick,0x19252ad6c,15097583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,15098833,0,0x0,8
tick,0x1016b7040,15100125,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x101655ab8,15101375,0,0x0,8
tick,0x10166f10c,15102500,0,0x0,0,0x107ff89b0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252f804,15103750,0,0x0,8
tick,0x1016ada9c,15105000,0,0x0,0,0x107fe46e0,0x1080145a8,0x1080266d0,0x108010e90
tick,0x107fe2bac,15106083,0,0x0,0
tick,0x192527354,15107333,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,15108583,0,0x0,8
tick,0x19252e620,15109833,0,0x0,8
tick,0x19252e620,15111083,0,0x0,8
tick,0x1011499ec,15112333,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15113583,0,0x0,8
tick,0x19252e620,15114708,0,0x0,8
tick,0x19252e620,15115750,0,0x0,8
tick,0x19252e620,15116875,0,0x0,8
tick,0x19252e620,15117917,0,0x0,8
tick,0x19252e620,15118958,0,0x0,8
tick,0x19252e620,15120208,0,0x0,8
tick,0x19252b4fc,15121458,0,0x0,8
tick,0x19252e620,15122708,0,0x0,8
tick,0x19252e620,15123958,0,0x0,8
tick,0x19252e620,15125083,0,0x0,8
tick,0x19252b4fc,15126333,0,0x0,8
tick,0x10801e684,15127583,0,0x0,0,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,15128833,0,0x0,8
tick,0x19252b3f4,15130083,0,0x0,8
tick,0x19252e620,15131375,0,0x0,8
tick,0x19252e620,15132417,0,0x0,8
tick,0x100cbd328,15133458,0,0x0,8
tick,0x19259ebf4,15134708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15135958,0,0x0,8
tick,0x19252b4fc,15137125,0,0x0,8
tick,0x19252b25c,15138417,0,0x0,0,0x10800a800
tick,0x19252e620,15139667,0,0x0,8
tick,0x19252e620,15140917,0,0x0,8
tick,0x19252e620,15142167,0,0x0,8
tick,0x19252e620,15143417,0,0x0,8
tick,0x100e42f1c,15144708,0,0x0,0,0x107fe3eb0,0x108021150
tick,0x19252e620,15145958,0,0x0,8
tick,0x107ff4800,15147208,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x19252e620,15148500,0,0x0,8
tick,0x19252e620,15149750,0,0x0,8
tick,0x19252e620,15150917,0,0x0,8
tick,0x19252e620,15152208,0,0x0,8
tick,0x19252b4fc,15153458,0,0x0,8
tick,0x192375c3c,15154708,0,0x0,8
tick,0x1925a17cc,15155958,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,15157250,0,0x0,8
tick,0x19252b3f4,15158458,0,0x0,8
tick,0x19252e620,15159708,0,0x0,8
tick,0x100e7bd18,15160958,0,0x0,5
tick,0x19252e620,15162250,0,0x0,8
tick,0x19252e620,15163500,0,0x0,8
tick,0x100e3d024,15164750,0,0x0,6
tick,0x19252e620,15165917,0,0x0,8
tick,0x19252e620,15167083,0,0x0,8
tick,0x19252e620,15168083,0,0x0,8
tick,0x19252e620,15169333,0,0x0,8
tick,0x19252e620,15170583,0,0x0,8
tick,0x19252b4fc,15171833,0,0x0,8
tick,0x192527ad0,15173125,0,0x0,8
tick,0x19252ad6c,15174375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15175542,0,0x0,8
tick,0x19252e620,15176833,0,0x0,8
tick,0x19252e620,15178083,0,0x0,8
tick,0x19252ad6c,15179333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,15180375,0,0x0,8
tick,0x19252b4fc,15181625,0,0x0,8
tick,0x1016b70bc,15182875,0,0x0,0,0x108021570,0x107fe2ff0
tick,0x19252e620,15184208,0,0x0,8
tick,0x19252e620,15185458,0,0x0,8
tick,0x192528738,15186708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15187958,0,0x0,8
tick,0x192528738,15189167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100cbcc74,15190417,0,0x0,8
tick,0x19252e620,15191667,0,0x0,8
tick,0x1016ad228,15192917,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x100e21e64,15194167,0,0x0,8
tick,0x19252e620,15195417,0,0x0,8
tick,0x19252e620,15196667,0,0x0,8
tick,0x19252e620,15197917,0,0x0,8
tick,0x108017c64,15198958,0,0x0,0,0x108026920,0x108010e90
tick,0x19252ad6c,15200208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016ad67c,15201458,0,0x0,0,0x107fe46e0,0x1080145a8,0x1080266d0,0x108010e90
tick,0x19252ad6c,15202500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15203750,0,0x0,8
tick,0x19252e620,15204917,0,0x0,8
tick,0x19252ad6c,15206167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15207250,0,0x0,8
tick,0x19252e620,15208417,0,0x0,8
tick,0x19252e620,15209667,0,0x0,8
tick,0x19252e620,15210917,0,0x0,8
tick,0x19252e620,15211958,0,0x0,8
tick,0x19252ad6c,15213042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,15214292,0,0x0,8
tick,0x19252b3f4,15215458,0,0x0,8
tick,0x19252e620,15216500,0,0x0,8
tick,0x192528738,15217750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15218833,0,0x0,8
tick,0x19252e620,15220042,0,0x0,8
tick,0x19252e620,15221042,0,0x0,8
tick,0x107fea434,15222333,0,0x0,0,0x108019cd8
tick,0x19252ad6c,15223542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15224708,0,0x0,8
tick,0x19252e620,15226000,0,0x0,8
tick,0x192527a78,15227000,0,0x0,8
tick,0x1925708b0,15228250,0,0x0,8
tick,0x19252e620,15229542,0,0x0,8
tick,0x19252e620,15230792,0,0x0,8
tick,0x100e2fb68,15232042,0,0x0,8
tick,0x19252e620,15233292,0,0x0,8
tick,0x19252ad6c,15234542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108010ccc,15235792,0,0x0,0
tick,0x19252ad6c,15236833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10165d790,15238083,0,0x0,8
tick,0x192528738,15239333,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15240542,0,0x0,8
tick,0x19252e620,15241792,0,0x0,8
tick,0x10801c0e0,15243083,0,0x0,0,0x10801a474
tick,0x19252b4fc,15244375,0,0x0,8
tick,0x19252e620,15245375,0,0x0,8
tick,0x19252b4fc,15246667,0,0x0,8
tick,0x100dbfb64,15247917,0,0x0,5
tick,0x1010e1ebc,15249208,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,15250458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15251708,0,0x0,8
tick,0x19252e620,15252958,0,0x0,8
tick,0x100a246ac,15254208,0,0x0,6
tick,0x19252e620,15255500,0,0x0,8
tick,0x19252e620,15256708,0,0x0,8
tick,0x19252e620,15257958,0,0x0,8
tick,0x19252e620,15259167,0,0x0,8
tick,0x108019ac0,15260375,0,0x0,0
tick,0x19252e620,15261667,0,0x0,8
tick,0x19252b4fc,15262917,0,0x0,8
tick,0x19252e620,15264167,0,0x0,8
tick,0x19252e620,15265375,0,0x0,8
tick,0x101002a44,15266625,0,0x0,0,0x10801f834,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,15267917,0,0x0,8
tick,0x100e2fb6c,15269125,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x1925273e4,15270250,0,0x0,1
tick,0x100ba80a8,15271500,0,0x0,6
tick,0x100e69e00,15272792,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15274042,0,0x0,8
tick,0x19252e620,15275292,0,0x0,8
tick,0x19252e620,15276375,0,0x0,8
tick,0x19252e620,15277458,0,0x0,8
tick,0x19252e620,15278500,0,0x0,8
tick,0x19252e620,15279750,0,0x0,8
tick,0x19252e620,15281000,0,0x0,8
tick,0x192528738,15282250,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252f804,15283542,0,0x0,8
tick,0x192528738,15284792,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107fec37c,15286042,0,0x0,0,0x10801053c
tick,0x19252b4fc,15287292,0,0x0,8
tick,0x19252b3f4,15288542,0,0x0,8
tick,0x19252e620,15289792,0,0x0,8
tick,0x19252e620,15291042,0,0x0,8
tick,0x19252e620,15292333,0,0x0,8
tick,0x19252e620,15293542,0,0x0,8
tick,0x101bdecbc,15294792,0,0x0,8
tick,0x1016b7cf8,15296083,0,0x0,0,0x1080266d0,0x108010e90
tick,0x108029570,15297167,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15298458,0,0x0,8
tick,0x19252ad6c,15299583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15300833,0,0x0,8
tick,0x19252e620,15301958,0,0x0,8
tick,0x19252e620,15303042,0,0x0,8
tick,0x19252e620,15304292,0,0x0,8
tick,0x19252e620,15305583,0,0x0,8
tick,0x19252b4fc,15306792,0,0x0,8
tick,0x10165dea8,15308042,0,0x0,8
tick,0x19252e620,15309167,0,0x0,8
tick,0x19252e620,15310417,0,0x0,8
tick,0x19252f804,15311667,0,0x0,8
tick,0x19252b4fc,15312917,0,0x0,8
tick,0x100eeeee4,15314167,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,15315458,0,0x0,8
tick,0x100cbccd0,15316458,0,0x0,6
tick,0x19252e620,15317708,0,0x0,8
tick,0x19252e620,15318750,0,0x0,8
tick,0x1923761d0,15319792,0,0x0,1
tick,0x19252e620,15320833,0,0x0,8
tick,0x1010eee78,15322083,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15323333,0,0x0,8
tick,0x19252ad6c,15324583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15325875,0,0x0,8
tick,0x19252e620,15327042,0,0x0,8
tick,0x192527ad0,15328292,0,0x0,8
tick,0x1009b1858,15329625,0,0x0,6
tick,0x19252e620,15330875,0,0x0,8
tick,0x19252b4fc,15332125,0,0x0,8
tick,0x19252e620,15333375,0,0x0,8
tick,0x101bd7cc8,15334417,0,0x0,8
tick,0x10174dd80,15335667,0,0x0,0,0x1080263b8,0x108010e90
tick,0x101bde77c,15336958,0,0x0,8
tick,0x19252e620,15338208,0,0x0,8
tick,0x19252e620,15339458,0,0x0,8
tick,0x101671d28,15340750,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,15341958,0,0x0,8
tick,0x19252e620,15343250,0,0x0,8
tick,0x108027064,15344500,0,0x0,0,0x107fe2ff0
tick,0x19252ad6c,15345583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe6240,15346792,0,0x0,0,0x107fe2ff0
tick,0x19252ad6c,15348083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x108026018,15349333,0,0x0,0,0x108010e90
tick,0x1016b7130,15350625,0,0x0,0,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x19252b25c,15351917,0,0x0,0,0x10800a800
tick,0x100eeeee4,15353167,0,0x0,8
tick,0x19252e620,15354458,0,0x0,8
tick,0x19252b25c,15355583,0,0x0,0,0x10800a800
tick,0x19252ad6c,15356833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101195418,15358125,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252ad6c,15359417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,15360625,0,0x0,8
tick,0x100e7adf4,15361875,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x10801f7b8,15362958,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x107feec88,15364208,0,0x0,0,0x107fe2ff0
tick,0x1010e1ee8,15365458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1016af624,15366708,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252e620,15367958,0,0x0,8
tick,0x101656b50,15369250,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,15370500,0,0x0,8
tick,0x100e7ca0c,15371792,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,15373042,0,0x0,8
tick,0x107fe603c,15374292,0,0x0,0,0x107fe2ff0
tick,0x19252b25c,15375583,0,0x0,0,0x10800a800
tick,0x10802643c,15376792,0,0x0,0,0x108010e90
tick,0x1016b6b98,15378083,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,15379333,0,0x0,8
tick,0x19252e620,15380417,0,0x0,8
tick,0x19252b25c,15381417,0,0x0,0,0x10800a800
tick,0x19252e620,15382458,0,0x0,8
tick,0x19252e620,15383708,0,0x0,8
tick,0x19252e620,15384875,0,0x0,8
tick,0x19252e620,15386042,0,0x0,8
tick,0x108019454,15387167,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15388458,0,0x0,8
tick,0x19252e620,15389542,0,0x0,8
tick,0x19252ad6c,15390625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e01d60,15391875,0,0x0,0
tick,0x19252e620,15393125,0,0x0,8
tick,0x100e30600,15394375,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,15395667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,15396958,0,0x0,8
tick,0x107f9fd14,15398167,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x19252e620,15399375,0,0x0,8
tick,0x19252e620,15400625,0,0x0,8
tick,0x19252f804,15401875,0,0x0,8
tick,0x19252e620,15403083,0,0x0,8
tick,0x101656938,15404375,0,0x0,8
tick,0x19252e620,15405375,0,0x0,8
tick,0x19252e620,15406417,0,0x0,8
tick,0x19252e620,15407583,0,0x0,8
tick,0x19252ad6c,15408833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,15410083,0,0x0,8
tick,0x19252b25c,15411375,0,0x0,8
tick,0x19252f804,15412625,0,0x0,8
tick,0x19252e620,15413625,0,0x0,8
tick,0x19252e620,15414958,0,0x0,8
tick,0x100ce0dfc,15416125,0,0x0,6
tick,0x10166f14c,15417417,0,0x0,0,0x10800a738
tick,0x19252b25c,15418667,0,0x0,8
tick,0x19252b4fc,15419958,0,0x0,8
tick,0x19252e620,15421042,0,0x0,8
tick,0x19252e620,15422167,0,0x0,8
tick,0x101005aac,15423292,0,0x0,5
tick,0x19252e620,15424542,0,0x0,8
tick,0x19252e620,15425625,0,0x0,8
tick,0x100f39d44,15426875,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15428125,0,0x0,8
tick,0x19252e620,15429375,0,0x0,8
tick,0x100cbd2e0,15430625,0,0x0,5
tick,0x19252e620,15431917,0,0x0,8
tick,0x19252e620,15432958,0,0x0,8
tick,0x19252e620,15433958,0,0x0,8
tick,0x19252ad6c,15435208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15436458,0,0x0,8
tick,0x19252e620,15437542,0,0x0,8
tick,0x19252b25c,15438792,0,0x0,8
tick,0x19252e620,15440000,0,0x0,8
tick,0x19252f804,15441000,0,0x0,8
tick,0x1016b7100,15442292,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252e620,15443542,0,0x0,8
tick,0x19252e620,15444542,0,0x0,8
tick,0x19252e620,15445583,0,0x0,8
tick,0x19252e620,15446625,0,0x0,8
tick,0x107fe3a6c,15447792,0,0x0,0,0x107fe2fb4
tick,0x19252e620,15449083,0,0x0,8
tick,0x19252e620,15450083,0,0x0,8
tick,0x19252ad6c,15451208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15452458,0,0x0,8
tick,0x19252e620,15453708,0,0x0,8
tick,0x10165db90,15454958,0,0x0,8
tick,0x10109bd78,15456208,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15457458,0,0x0,8
tick,0x1009b9d84,15458708,0,0x0,6
tick,0x19252e620,15459958,0,0x0,8
tick,0x19237622c,15461042,0,0x0,1
tick,0x19252ad6c,15462292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15463542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15464792,0,0x0,8
tick,0x19252e620,15466083,0,0x0,8
tick,0x19252e620,15467333,0,0x0,8
tick,0x19252e620,15468375,0,0x0,8
tick,0x19252e620,15469417,0,0x0,8
tick,0x19252e620,15470458,0,0x0,8
tick,0x19252e620,15471500,0,0x0,8
tick,0x19252e620,15472500,0,0x0,8
tick,0x19252e620,15473625,0,0x0,8
tick,0x19252e620,15474625,0,0x0,8
tick,0x19252e620,15475917,0,0x0,8
tick,0x100ccdbc4,15477167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15478417,0,0x0,8
tick,0x19252e620,15479458,0,0x0,8
tick,0x19252f804,15480708,0,0x0,8
tick,0x19252e620,15481792,0,0x0,8
tick,0x19252e620,15483042,0,0x0,8
tick,0x19252e620,15484125,0,0x0,8
tick,0x19252e620,15485375,0,0x0,8
tick,0x19252e620,15486458,0,0x0,8
tick,0x19252ad6c,15487875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15488792,0,0x0,8
tick,0x19252f804,15489958,0,0x0,8
tick,0x19252e620,15491208,0,0x0,8
tick,0x19252e620,15492333,0,0x0,8
tick,0x19252e620,15493333,0,0x0,8
tick,0x108017c60,15494333,0,0x0,0,0x108026920,0x108010e90
tick,0x19252b25c,15495625,0,0x0,8
tick,0x19252ad6c,15496875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbd324,15498125,0,0x0,8
tick,0x19252e620,15499500,0,0x0,8
tick,0x19252e620,15500667,0,0x0,8
tick,0x19252e620,15501917,0,0x0,8
tick,0x19252e620,15503167,0,0x0,8
tick,0x19252e620,15504208,0,0x0,8
tick,0x108010354,15505458,0,0x0,0
tick,0x19252e620,15506708,0,0x0,8
tick,0x19252e620,15507875,0,0x0,8
tick,0x101671d98,15509042,0,0x0,0,0x107fe1900,0x1080267a8,0x108010e90
tick,0x10166f12c,15510292,0,0x0,0
tick,0x19252b25c,15511542,0,0x0,0,0x10800a800
tick,0x19252ad6c,15512792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15514083,0,0x0,8
tick,0x19252b25c,15515333,0,0x0,0,0x10800a800
tick,0x19252b4fc,15516583,0,0x0,8
tick,0x19252f804,15517833,0,0x0,8
tick,0x19252b25c,15519083,0,0x0,8
tick,0x19252e620,15520333,0,0x0,8
tick,0x107fed958,15521583,0,0x0,0,0x107fe4ae8,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x1016b7cf8,15522875,0,0x0,0,0x1080266d0,0x108010e90
tick,0x19252e620,15524125,0,0x0,8
tick,0x10800a6bc,15525167,0,0x0,0
tick,0x101bdca80,15526417,0,0x0,8
tick,0x19252f804,15527667,0,0x0,8
tick,0x1923879d0,15528708,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1009f0d3c,15529792,0,0x0,6
tick,0x19252e620,15530792,0,0x0,8
tick,0x19252e620,15532083,0,0x0,8
tick,0x19252e620,15533333,0,0x0,8
tick,0x19252e620,15534333,0,0x0,8
tick,0x19252e620,15535458,0,0x0,8
tick,0x19252e620,15536708,0,0x0,8
tick,0x19252e620,15537875,0,0x0,8
tick,0x19252e620,15538958,0,0x0,8
tick,0x19252e620,15539917,0,0x0,8
tick,0x19252ad6c,15540958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15542208,0,0x0,8
tick,0x19252ad6c,15543458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ce1cdc,15544750,0,0x0,6
tick,0x19252e620,15546000,0,0x0,8
tick,0x19252e620,15547250,0,0x0,8
tick,0x19252e620,15548500,0,0x0,8
tick,0x19252e620,15549583,0,0x0,8
tick,0x19252e620,15550583,0,0x0,8
tick,0x19252e620,15551750,0,0x0,8
tick,0x19252ad6c,15552792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbabec,15554042,0,0x0,5
tick,0x19252e620,15555083,0,0x0,8
tick,0x107fefc2c,15556125,0,0x0,0,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15557250,0,0x0,8
tick,0x19252e620,15558417,0,0x0,8
tick,0x19252e620,15559667,0,0x0,8
tick,0x19252b4fc,15560917,0,0x0,8
tick,0x19252e620,15562167,0,0x0,8
tick,0x19252e620,15563417,0,0x0,8
tick,0x101788870,15564625,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x10116f0c0,15565875,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016b6424,15567125,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15568417,0,0x0,8
tick,0x19252ad6c,15569500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15570750,0,0x0,8
tick,0x19252e620,15572000,0,0x0,8
tick,0x19252ad6c,15573250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15574542,0,0x0,8
tick,0x1009c4f1c,15575792,0,0x0,8
tick,0x19252e620,15577042,0,0x0,8
tick,0x19252e620,15578292,0,0x0,8
tick,0x19252e620,15579375,0,0x0,8
tick,0x19252e620,15580500,0,0x0,8
tick,0x192527ad0,15581667,0,0x0,8
tick,0x19252e620,15582917,0,0x0,8
tick,0x19252e620,15584167,0,0x0,8
tick,0x192527354,15585417,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252ad6c,15586667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fec37c,15587917,0,0x0,0,0x10801053c
tick,0x10801da40,15589208,0,0x0,0,0x10801fee0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100e1fde4,15590458,0,0x0,8
tick,0x19252ad6c,15591625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15592875,0,0x0,8
tick,0x19252e620,15594125,0,0x0,8
tick,0x19252e620,15595375,0,0x0,8
tick,0x100e016b0,15596417,0,0x0,5
tick,0x19252f804,15597667,0,0x0,8
tick,0x19252ad6c,15598917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15600292,0,0x0,8
tick,0x101099380,15601583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15602792,0,0x0,8
tick,0x19252e620,15604083,0,0x0,8
tick,0x19252ad6c,15605208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ba0058,15606542,0,0x0,0,0x108022bf0,0x108021988
tick,0x100e3d12c,15607792,0,0x0,8
tick,0x19252f804,15609042,0,0x0,8
tick,0x19252ad6c,15610292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15611375,0,0x0,8
tick,0x19252e620,15612625,0,0x0,8
tick,0x192528738,15613917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100f3633c,15615167,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,15616417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15617708,0,0x0,8
tick,0x192528738,15618875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b25c,15620125,0,0x0,0,0x10800a800
tick,0x19252e620,15621458,0,0x0,8
tick,0x19252ad6c,15622708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b7038,15623958,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100ea7e6c,15625208,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe5244,15626500,0,0x0,0,0x10800b47c,0x10800a738
tick,0x19252b4fc,15627750,0,0x0,8
tick,0x10166a1ac,15629000,0,0x0,0,0x10801053c
tick,0x19252ad6c,15630292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800ada4,15631542,0,0x0,0,0x10800a738
tick,0x19252ad6c,15632792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ce9f8c,15634083,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19238bc7c,15635333,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192527a78,15636583,0,0x0,8
tick,0x19252e620,15637833,0,0x0,8
tick,0x100e01790,15639125,0,0x0,5
tick,0x1012847b0,15640375,0,0x0,5
tick,0x19252e620,15641625,0,0x0,8
tick,0x10113ced0,15642917,0,0x0,5
tick,0x100cbcc2c,15644167,0,0x0,6
tick,0x1016b7100,15645458,0,0x0,0,0x10800bac4,0x10800a738
tick,0x192528738,15646708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107ff82f0,15647958,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b3f4,15649208,0,0x0,8
tick,0x100abd260,15650458,0,0x0,8
tick,0x19252e620,15651750,0,0x0,8
tick,0x19252e620,15653000,0,0x0,8
tick,0x1017d044c,15654250,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15655500,0,0x0,8
tick,0x19252e620,15656625,0,0x0,8
tick,0x1016b7050,15657917,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15659167,0,0x0,8
tick,0x10801aeec,15660292,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15661417,0,0x0,8
tick,0x192527ad0,15662458,0,0x0,8
tick,0x10164b768,15663667,0,0x0,0,0x107fe7a50,0x10800bac4,0x10800a738
tick,0x19252e620,15664917,0,0x0,8
tick,0x19252e620,15665958,0,0x0,8
tick,0x19252e620,15667208,0,0x0,8
tick,0x19252f804,15668500,0,0x0,8
tick,0x19252e620,15669750,0,0x0,8
tick,0x1016ad390,15671000,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252e620,15672292,0,0x0,8
tick,0x108020dc0,15673500,0,0x0,0
tick,0x19252ad6c,15674750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15676042,0,0x0,8
tick,0x19252b4fc,15677292,0,0x0,8
tick,0x19252e620,15678333,0,0x0,8
tick,0x19252e620,15679417,0,0x0,8
tick,0x19252e620,15680458,0,0x0,8
tick,0x101197394,15681708,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252a6ec,15683000,0,0x0,1
tick,0x102711ea8,15684250,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,15685500,0,0x0,8
tick,0x10800af98,15686625,0,0x0,0,0x10800a738
tick,0x19252e620,15687958,0,0x0,8
tick,0x19252e620,15688958,0,0x0,8
tick,0x19252e620,15690125,0,0x0,8
tick,0x19252b4fc,15691375,0,0x0,8
tick,0x19252e620,15692625,0,0x0,8
tick,0x19252e620,15693917,0,0x0,8
tick,0x192527a78,15695167,0,0x0,8
tick,0x19252e620,15696375,0,0x0,8
tick,0x19252e620,15697458,0,0x0,8
tick,0x19252b4fc,15698708,0,0x0,8
tick,0x19252e620,15700000,0,0x0,8
tick,0x19252ad6c,15701250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15702500,0,0x0,8
tick,0x1923759b0,15703750,0,0x0,8
tick,0x19252b25c,15705000,0,0x0,8
tick,0x192527ad0,15706250,0,0x0,8
tick,0x19252e620,15707625,0,0x0,8
tick,0x1923757c0,15708542,0,0x0,1
tick,0x19252ad6c,15709792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10113c620,15711042,0,0x0,5
tick,0x1009b4cac,15712292,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10164b868,15713583,0,0x0,8
tick,0x19252e620,15714833,0,0x0,8
tick,0x19252e620,15716083,0,0x0,8
tick,0x10800d974,15717125,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,15718375,0,0x0,8
tick,0x19252e620,15782333,0,0x0,8
tick,0x19252e620,15783375,0,0x0,8
tick,0x19252e620,15784583,0,0x0,8
tick,0x19252e620,15785875,0,0x0,8
tick,0x19252e620,15787083,0,0x0,8
tick,0x19252e620,15788292,0,0x0,8
tick,0x1009dbaa8,15789375,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b4fc,15790625,0,0x0,8
tick,0x19252e620,15791917,0,0x0,8
tick,0x19252e620,15793167,0,0x0,8
tick,0x19252e620,15794417,0,0x0,8
tick,0x101bdd7c4,15795458,0,0x0,8
tick,0x19252ad6c,15796542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15797833,0,0x0,8
tick,0x19252e620,15799042,0,0x0,8
tick,0x19252ad6c,15800125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15801333,0,0x0,8
tick,0x19252e620,15802542,0,0x0,8
tick,0x19252e620,15803708,0,0x0,8
tick,0x19252e620,15804750,0,0x0,8
tick,0x19252e620,15805750,0,0x0,8
tick,0x19252e620,15806833,0,0x0,8
tick,0x19252e620,15807958,0,0x0,8
tick,0x19252e620,15809208,0,0x0,8
tick,0x19252e620,15810208,0,0x0,8
tick,0x19252e620,15811458,0,0x0,8
tick,0x19252e620,15812667,0,0x0,8
tick,0x19252e620,15813958,0,0x0,8
tick,0x19252e620,15815042,0,0x0,8
tick,0x192387c6c,15816292,0,0x0,8
tick,0x19252e620,15817458,0,0x0,8
tick,0x19252ad6c,15818625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15819917,0,0x0,8
tick,0x19252b4fc,15821167,0,0x0,8
tick,0x100e9bdf4,15822417,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252f804,15823667,0,0x0,8
tick,0x1009dfffc,15824917,0,0x0,8
tick,0x19252b4fc,15826208,0,0x0,8
tick,0x101bdaa84,15827458,0,0x0,8
tick,0x19252ad6c,15828500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,15829750,0,0x0,8
tick,0x192527a78,15831000,0,0x0,8
tick,0x19252e620,15832250,0,0x0,8
tick,0x19252e620,15833542,0,0x0,8
tick,0x19252e620,15834625,0,0x0,8
tick,0x19252e620,15835792,0,0x0,8
tick,0x19252b4fc,15837000,0,0x0,8
tick,0x192528738,15838292,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,15839542,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15840833,0,0x0,8
tick,0x19252e620,15841833,0,0x0,8
tick,0x19252e620,15842917,0,0x0,8
tick,0x101bdcd9c,15844167,0,0x0,8
tick,0x19252ad6c,15845375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10164b73c,15846667,0,0x0,8
tick,0x19252e620,15847958,0,0x0,8
tick,0x19252ad6c,15849000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15850250,0,0x0,8
tick,0x19252e620,15851458,0,0x0,8
tick,0x19252e620,15852750,0,0x0,8
tick,0x19252e620,15854000,0,0x0,8
tick,0x19252e620,15855208,0,0x0,8
tick,0x19252e620,15856417,0,0x0,8
tick,0x1016b7050,15857667,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,15858875,0,0x0,8
tick,0x101657538,15860083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15861208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b3f4,15862458,0,0x0,8
tick,0x19252b4fc,15863708,0,0x0,8
tick,0x19252e620,15864958,0,0x0,8
tick,0x19252e620,15866000,0,0x0,8
tick,0x19252b4fc,15867042,0,0x0,8
tick,0x19252ad6c,15868292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,15869583,0,0x0,0,0x10800a800
tick,0x192376740,15870792,0,0x0,1
tick,0x19252e620,15872083,0,0x0,8
tick,0x19252e620,15873333,0,0x0,8
tick,0x100ce0de8,15874500,0,0x0,8
tick,0x19252e620,15875750,0,0x0,8
tick,0x19252e620,15877042,0,0x0,8
tick,0x19252e620,15878125,0,0x0,8
tick,0x19252e620,15879375,0,0x0,8
tick,0x1016619ac,15880625,0,0x0,0,0x108021570,0x107fe2ff0
tick,0x192373c70,15881833,0,0x0,6
tick,0x101662120,15883083,0,0x0,0
tick,0x101656600,15884333,0,0x0,8
tick,0x10801a7bc,15885417,0,0x0,0,0x108019b28
tick,0x19252e620,15886708,0,0x0,8
tick,0x1016616d0,15887792,0,0x0,0
tick,0x19252e620,15889042,0,0x0,8
tick,0x19252e620,15890125,0,0x0,8
tick,0x19252e620,15891167,0,0x0,8
tick,0x19252e620,15892417,0,0x0,8
tick,0x19252b25c,15893667,0,0x0,0,0x10800a800
tick,0x19252e620,15894917,0,0x0,8
tick,0x19252e620,15896042,0,0x0,8
tick,0x19252ad6c,15897000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15898250,0,0x0,8
tick,0x192527ad0,15899500,0,0x0,8
tick,0x19252e620,15900750,0,0x0,8
tick,0x19252e620,15901750,0,0x0,8
tick,0x19252e620,15903042,0,0x0,8
tick,0x19252ad6c,15904042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e3ec74,15905375,0,0x0,8
tick,0x19252e620,15906625,0,0x0,8
tick,0x19252e620,15907750,0,0x0,8
tick,0x192372dbc,15909000,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15910292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,15911583,0,0x0,8
tick,0x1016ad67c,15912833,0,0x0,0,0x107fe16ac,0x1080267a8,0x108010e90
tick,0x100f362cc,15914042,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15915292,0,0x0,8
tick,0x19252e620,15916500,0,0x0,8
tick,0x192528738,15917583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15918833,0,0x0,8
tick,0x10109923c,15920167,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252f804,15921375,0,0x0,8
tick,0x10800a884,15922667,0,0x0,0
tick,0x100ccdbd0,15923958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15925208,0,0x0,8
tick,0x19252b4fc,15926250,0,0x0,8
tick,0x19252e620,15927542,0,0x0,8
tick,0x19252e620,15928792,0,0x0,8
tick,0x19252ad6c,15930083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15931375,0,0x0,8
tick,0x10166b4b0,15932583,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x1016b75a4,15933833,0,0x0,0,0x107fe301c
tick,0x1012b523c,15935083,0,0x0,1
tick,0x19252e620,15936333,0,0x0,8
tick,0x192528738,15937583,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,15938875,0,0x0,8
tick,0x19252e620,15940083,0,0x0,8
tick,0x100a60f30,15941375,1,0x100a60f20,6,0x10801af5c,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,15942625,0,0x0,8
tick,0x100e01d18,15943875,0,0x0,0
tick,0x19252e620,15945167,0,0x0,8
tick,0x1016acedc,15946458,0,0x0,0,0x107fe39b4,0x10801fd48,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,15947625,0,0x0,8
tick,0x19252e620,15948792,0,0x0,8
tick,0x1016aced8,15950083,0,0x0,0,0x107fe39b4,0x108021150
tick,0x192528738,15951375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107ff0930,15952625,0,0x0,0,0x107fe2ff0
tick,0x19252e620,15953917,0,0x0,8
tick,0x19252ad6c,15955167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,15956417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15957667,0,0x0,8
tick,0x19252e620,15958833,0,0x0,8
tick,0x19252b4fc,15960083,0,0x0,8
tick,0x1080213e0,15961333,0,0x0,0
tick,0x19252e620,15962583,0,0x0,8
tick,0x19252b3f4,15963667,0,0x0,8
tick,0x19252e620,15964708,0,0x0,8
tick,0x19252e620,15965958,0,0x0,8
tick,0x19252e620,15967250,0,0x0,8
tick,0x19252e620,15968417,0,0x0,8
tick,0x19252e620,15969708,0,0x0,8
tick,0x19252e620,15970875,0,0x0,8
tick,0x19252e620,15972125,0,0x0,8
tick,0x100e3d060,15973375,0,0x0,8
tick,0x19252e620,15974458,0,0x0,8
tick,0x19252e620,15975583,0,0x0,8
tick,0x19252e620,15976667,0,0x0,8
tick,0x19252f804,15977917,0,0x0,8
tick,0x19252e620,15979167,0,0x0,8
tick,0x1016643e0,15980458,0,0x0,0,0x107fe2ff0
tick,0x19252e620,15981708,0,0x0,8
tick,0x19252ad6c,15982958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
code-creation,JS,10,15983083,0x10802db80,704,removeAt node:internal/priority_queue:89:11,0x22b216cdbfa0,^
code-source-info,0x10802db80,17,2146,2468,,,
code-creation,JS,10,15983125,0x10802de60,1424,insert node:internal/timers:371:16,0x22b216ccfc80,^
code-source-info,0x10802de60,10,11307,12031,,,
code-creation,JS,10,15983167,0x10802e420,408,compareTimersLists node:internal/timers:422:28,0x22b216ccfed8,^
code-source-info,0x10802e420,10,12915,13093,,,
code-creation,JS,10,15983167,0x10802e5e0,472,setUnrefTimeout node:internal/timers:394:25,0x22b216ccfd50,^
code-source-info,0x10802e5e0,10,12057,12291,,,
code-creation,JS,10,15983167,0x10802e7e0,576,cache node:internal/http:22:15,0x28585989fe10,^
code-source-info,0x10802e7e0,123,374,493,,,
code-creation,JS,10,15983208,0x10802ea40,208,resetCache node:internal/http:28:20,0x28585989fe68,^
code-source-info,0x10802ea40,123,514,544,,,
code-creation,JS,10,15983208,0x10802eb40,1024,percolateDown node:internal/priority_queue:45:16,0x22b216cdbdf8,^
code-source-info,0x10802eb40,17,991,1642,,,
tick,0x19252e620,15984250,0,0x0,8
tick,0x19252a6ec,15985542,0,0x0,1
delete,MemoryChunk,0x199606f80000
delete,MemoryChunk,0x654e8540000
delete,MemoryChunk,0xcd0a7000000
delete,MemoryChunk,0x21ed0000000
delete,MemoryChunk,0x16c1dc000000
tick,0x1016b7100,15986792,0,0x0,0,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x1016b6538,15988042,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,15989042,0,0x0,8
tick,0x19252e620,15990292,0,0x0,8
tick,0x1016b7038,15991333,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x100f3960c,15992458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,15993750,0,0x0,8
tick,0x100e016a0,15995000,0,0x0,5
tick,0x19252e620,15996250,0,0x0,8
tick,0x100ccdcc4,15997500,0,0x0,5
tick,0x10113a0f0,15998750,0,0x0,5
tick,0x19252e620,16000000,0,0x0,8
tick,0x19252e620,16001125,0,0x0,8
tick,0x19252e620,16002333,0,0x0,8
tick,0x19252e620,16003333,0,0x0,8
tick,0x19252ad6c,16004375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16005625,0,0x0,8
tick,0x19252e620,16006667,0,0x0,8
tick,0x19252e620,16007667,0,0x0,8
tick,0x19252e620,16008708,0,0x0,8
tick,0x19252e620,16009792,0,0x0,8
tick,0x19252b25c,16010833,0,0x0,8
tick,0x19252e620,16012125,0,0x0,8
tick,0x1009b9638,16013125,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192527354,16014417,0,0x0,8
tick,0x100abc860,16015667,0,0x0,8
tick,0x19252b25c,16016917,0,0x0,8
tick,0x100ce1db8,16018167,0,0x0,6
tick,0x19252e620,16019250,0,0x0,8
tick,0x19252ad6c,16020500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100d4eff4,16021750,0,0x0,0
tick,0x19252e620,16023000,0,0x0,8
tick,0x1923a0280,16024292,0,0x0,8
tick,0x19252f804,16025375,0,0x0,8
tick,0x19252e620,16026667,0,0x0,8
tick,0x19252b25c,16027917,0,0x0,8
tick,0x19252e620,16029167,0,0x0,8
tick,0x19252b25c,16030417,0,0x0,8
tick,0x19252e620,16031667,0,0x0,8
tick,0x19252e620,16032792,0,0x0,8
tick,0x19252e620,16034000,0,0x0,8
tick,0x19252ad6c,16035250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cc8314,16036500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16037750,0,0x0,8
tick,0x19252e620,16038792,0,0x0,8
tick,0x19252e620,16039875,0,0x0,8
tick,0x19252ad6c,16040917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,16042167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,16043417,0,0x0,8
tick,0x19252e620,16044500,0,0x0,8
tick,0x19252e620,16045542,0,0x0,8
tick,0x19252e620,16046583,0,0x0,8
tick,0x19252e620,16047583,0,0x0,8
tick,0x19252e620,16048667,0,0x0,8
tick,0x101005aac,16049875,0,0x0,5
tick,0x19252f804,16051167,0,0x0,8
tick,0x19252e620,16052417,0,0x0,8
tick,0x19252e620,16053500,0,0x0,8
tick,0x19252b4fc,16054708,0,0x0,8
tick,0x19252e620,16055875,0,0x0,8
tick,0x19252e620,16057125,0,0x0,8
tick,0x100abcb9c,16058375,0,0x0,8
tick,0x19252e620,16059625,0,0x0,8
tick,0x101bd8b70,16060875,0,0x0,8
tick,0x192528738,16062125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,16063375,0,0x0,8
tick,0x19252e620,16064583,0,0x0,8
tick,0x19252e620,16065833,0,0x0,8
tick,0x19252e620,16066917,0,0x0,8
tick,0x19252e620,16067917,0,0x0,8
tick,0x19252e620,16069000,0,0x0,8
tick,0x102712264,16070167,0,0x0,8
tick,0x100f399fc,16071417,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16072667,0,0x0,8
tick,0x19252e620,16073708,0,0x0,8
tick,0x1017b6100,16074750,0,0x0,0,0x10801866c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16076000,0,0x0,8
tick,0x19252ad6c,16077250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16078542,0,0x0,8
tick,0x107fe4670,16079667,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,16080917,0,0x0,8
tick,0x19252f804,16082167,0,0x0,8
tick,0x19252e620,16083417,0,0x0,8
tick,0x19252e620,16084708,0,0x0,8
tick,0x19252e620,16085750,0,0x0,8
tick,0x19252e620,16086833,0,0x0,8
tick,0x19252e620,16088083,0,0x0,8
tick,0x19252e620,16089167,0,0x0,8
tick,0x19252e620,16090208,0,0x0,8
tick,0x19252e620,16091208,0,0x0,8
tick,0x19252e620,16092292,0,0x0,8
tick,0x19252e620,16093292,0,0x0,8
tick,0x19252e620,16094542,0,0x0,8
tick,0x19252f804,16095833,0,0x0,8
tick,0x19252e620,16097083,0,0x0,8
tick,0x19252e620,16098250,0,0x0,8
tick,0x192527354,16099500,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,16100750,0,0x0,8
tick,0x19252b4fc,16102000,0,0x0,8
tick,0x107ff2b00,16103250,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252b25c,16104500,0,0x0,8
tick,0x19252e620,16105583,0,0x0,8
tick,0x19252e620,16106750,0,0x0,8
tick,0x19252e620,16107917,0,0x0,8
tick,0x101148394,16109167,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,16110458,0,0x0,8
tick,0x19252e620,16111667,0,0x0,8
tick,0x19252e620,16112708,0,0x0,8
tick,0x19252e620,16113708,0,0x0,8
tick,0x19252e620,16115000,0,0x0,8
tick,0x19252e620,16116042,0,0x0,8
tick,0x19252e620,16117042,0,0x0,8
tick,0x19252e620,16118292,0,0x0,8
tick,0x100e6d56c,16119542,0,0x0,5
tick,0x19252e620,16120708,0,0x0,8
tick,0x19252e620,16121792,0,0x0,8
tick,0x19252e620,16122875,0,0x0,8
tick,0x19252e620,16124125,0,0x0,8
tick,0x19252e620,16125208,0,0x0,8
tick,0x192527ad0,16126417,0,0x0,8
tick,0x19252e620,16127708,0,0x0,8
tick,0x10174dcf4,16128917,0,0x0,0,0x1080263b8,0x108010e90
tick,0x1009dba6c,16130208,0,0x0,8
tick,0x192527354,16131458,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100cc8b80,16132708,0,0x0,6
tick,0x19252ad6c,16133958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16135208,0,0x0,8
tick,0x19252e620,16136250,0,0x0,8
tick,0x100ce1c90,16137500,0,0x0,0,0x107fe3170
tick,0x19252e620,16138542,0,0x0,8
tick,0x19252e620,16139833,0,0x0,8
tick,0x19252e620,16140833,0,0x0,8
tick,0x107fe68e4,16142083,0,0x0,0,0x107fe7be0,0x107feee40,0x107fe2ff0
tick,0x19252e620,16143417,0,0x0,8
tick,0x192387a78,16144458,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1016b70a0,16145750,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16147000,0,0x0,8
tick,0x19252e620,16148250,0,0x0,8
tick,0x19252e620,16149292,0,0x0,8
tick,0x19252e620,16150375,0,0x0,8
tick,0x19252e620,16151625,0,0x0,8
tick,0x19252e620,16152625,0,0x0,8
tick,0x19252e620,16153667,0,0x0,8
tick,0x19252e620,16154917,0,0x0,8
tick,0x19252b4fc,16156167,0,0x0,8
tick,0x107ff42b8,16157250,0,0x0,0,0x10800d01c,0x107fe301c
tick,0x10113cec4,16158292,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,16159542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16160625,0,0x0,8
tick,0x19252e620,16161667,0,0x0,8
tick,0x19252e620,16162750,0,0x0,8
tick,0x107fe1764,16163958,0,0x0,0,0x1080267a8,0x108010e90
tick,0x19252e620,16165208,0,0x0,8
tick,0x10801ae80,16166458,0,0x0,0,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100cbb438,16167708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16168833,0,0x0,8
tick,0x19252b25c,16170042,0,0x0,8
tick,0x100dbfc40,16171292,0,0x0,5
tick,0x19252ad6c,16172542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10116ca48,16173792,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,16175042,0,0x0,8
tick,0x19252e620,16176292,0,0x0,8
tick,0x19252e620,16177333,0,0x0,8
tick,0x107ff07a0,16178625,0,0x0,0,0x107fe2ff0
tick,0x192528738,16179875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19238bcd0,16181125,0,0x0,8
tick,0x19252e620,16182375,0,0x0,8
tick,0x19252ad6c,16183667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100f04bb0,16184750,0,0x0,1
tick,0x107fe4960,16185875,0,0x0,0,0x10800b288,0x10800a738
tick,0x19252b4fc,16187042,0,0x0,8
tick,0x19252e620,16188292,0,0x0,8
tick,0x19252e620,16189583,0,0x0,8
tick,0x19252e620,16190833,0,0x0,8
tick,0x19252e620,16192125,0,0x0,8
tick,0x100d4eff4,16193375,0,0x0,0
tick,0x19252f804,16194667,0,0x0,8
tick,0x100cd89f8,16195833,0,0x0,5
tick,0x19252ad6c,16197083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19238b098,16198417,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16199542,0,0x0,8
tick,0x101660ddc,16200792,0,0x0,0,0x10800f458,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16201875,0,0x0,8
tick,0x19252b25c,16203167,0,0x0,0,0x10800a800
tick,0x19252b25c,16204375,0,0x0,8
tick,0x19252ad6c,16205667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16206958,0,0x0,8
tick,0x10166066c,16208250,0,0x0,0,0x10800e758,0x10800cb40,0x10800a9e8
tick,0x1080210cc,16209500,0,0x0,0
tick,0x19252b4fc,16210750,0,0x0,8
tick,0x19252e620,16212042,0,0x0,8
tick,0x19252e620,16213542,0,0x0,8
tick,0x107ff83b8,16214583,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192528738,16215875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,16217125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16218167,0,0x0,8
tick,0x19252e620,16219375,0,0x0,8
tick,0x192528738,16220708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100f392b4,16221958,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16223208,0,0x0,8
tick,0x107ff8984,16224500,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16225583,0,0x0,8
tick,0x1009bbc00,16226875,0,0x0,6
tick,0x107feea40,16228125,0,0x0,0
tick,0x19252e620,16229167,0,0x0,8
tick,0x19252ad6c,16230417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16231708,0,0x0,8
tick,0x19252e620,16232958,0,0x0,8
tick,0x19252b25c,16234208,0,0x0,0,0x10800a800
tick,0x19252e620,16235458,0,0x0,8
tick,0x19252ad6c,16236708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101787a5c,16237958,0,0x0,0,0x10802651c,0x108010e90
tick,0x101787eb8,16239083,0,0x0,0,0x10802651c,0x108010e90
tick,0x19252ad6c,16240333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16241625,0,0x0,8
tick,0x19252e620,16242750,0,0x0,8
tick,0x19252e620,16243833,0,0x0,8
tick,0x107fee4e0,16245083,0,0x0,0,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16246167,0,0x0,8
tick,0x19252e620,16247417,0,0x0,8
tick,0x19252e620,16248667,0,0x0,8
tick,0x19259e7ec,16249917,0,0x0,1
tick,0x19252ad6c,16251208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,16252458,0,0x0,8
tick,0x19252e620,16253708,0,0x0,8
tick,0x19252e620,16255083,0,0x0,8
tick,0x19252e620,16256000,0,0x0,8
tick,0x19252b4fc,16257250,0,0x0,8
tick,0x19252b4fc,16258542,0,0x0,8
tick,0x19252e620,16259792,0,0x0,8
tick,0x19252e620,16261042,0,0x0,8
tick,0x19252e620,16262125,0,0x0,8
tick,0x19252e620,16263208,0,0x0,8
tick,0x100e3cea8,16264458,0,0x0,6
tick,0x19252e620,16265708,0,0x0,8
tick,0x19252e620,16266958,0,0x0,8
tick,0x1016b64f4,16268208,0,0x0,0,0x1080264e0,0x108010e90
tick,0x192372da8,16269458,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,16270750,0,0x0,8
tick,0x19252e620,16272000,0,0x0,8
tick,0x19252e620,16273250,0,0x0,8
tick,0x19252e620,16274333,0,0x0,8
tick,0x1016b7780,16275417,0,0x0,0,0x1080267a8,0x108010e90
tick,0x19252e620,16276708,0,0x0,8
tick,0x19252e620,16278000,0,0x0,8
tick,0x19252e620,16279208,0,0x0,8
tick,0x100e7bd18,16280458,0,0x0,5
tick,0x19252e620,16281708,0,0x0,8
tick,0x19252b25c,16282958,0,0x0,8
tick,0x19252b25c,16284208,0,0x0,8
tick,0x19252e620,16285333,0,0x0,8
tick,0x100abc960,16286333,0,0x0,0,0x108023160,0x108021988
tick,0x19252e620,16287583,0,0x0,8
tick,0x19252e620,16288833,0,0x0,8
tick,0x10116a508,16290083,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,16291375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080261b8,16292625,0,0x0,0,0x108010e90
tick,0x19252e620,16293875,0,0x0,8
tick,0x19252e620,16295167,0,0x0,8
tick,0x1016ad2c8,16296208,0,0x0,0,0x108020128,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,16297458,0,0x0,8
tick,0x10801f97c,16298750,0,0x0,0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252a6ec,16299958,0,0x0,1
tick,0x19252b3f4,16301000,0,0x0,8
tick,0x19252e620,16302250,0,0x0,8
tick,0x19252e620,16303292,0,0x0,8
tick,0x19252e620,16304375,0,0x0,8
tick,0x19252ad6c,16305625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,16306875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009b9800,16308125,0,0x0,8
tick,0x19252e620,16309375,0,0x0,8
tick,0x192375c20,16310667,0,0x0,8
tick,0x19252e620,16311917,0,0x0,8
tick,0x19252e620,16313000,0,0x0,8
tick,0x19252e620,16314083,0,0x0,8
tick,0x19252ad6c,16315375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16316500,0,0x0,8
tick,0x19252e620,16317750,0,0x0,8
tick,0x1016b7100,16318875,0,0x0,0,0x10800a738
tick,0x19252f804,16319875,0,0x0,8
tick,0x19252e620,16321042,0,0x0,8
tick,0x19252e620,16322000,0,0x0,8
tick,0x19252ad6c,16323250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16324500,0,0x0,8
tick,0x100e4f8bc,16325750,0,0x0,1
tick,0x100cbcc28,16327000,0,0x0,6
tick,0x19252e620,16328083,0,0x0,8
tick,0x19252e620,16329333,0,0x0,8
tick,0x192373ae4,16330583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16331833,0,0x0,8
tick,0x192527354,16333083,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,16334333,0,0x0,8
tick,0x19252e620,16335625,0,0x0,8
tick,0x19252e620,16336875,0,0x0,8
tick,0x19252e620,16338167,0,0x0,8
tick,0x19252e620,16339167,0,0x0,8
tick,0x19252f804,16340208,0,0x0,8
tick,0x19252e620,16341333,0,0x0,8
tick,0x19252e620,16342500,0,0x0,8
tick,0x19252ad6c,16343708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1080193b8,16345000,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16346167,0,0x0,8
tick,0x19238bca0,16347417,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252b25c,16348458,0,0x0,0,0x10800a800
tick,0x107fe35dc,16349708,0,0x0,0
tick,0x19252e620,16350958,0,0x0,8
tick,0x19252e620,16352208,0,0x0,8
tick,0x19252e620,16353375,0,0x0,8
tick,0x19252e620,16354417,0,0x0,8
tick,0x19252e620,16355500,0,0x0,8
tick,0x1923755fc,16356750,0,0x0,8
tick,0x19252e620,16358000,0,0x0,8
tick,0x101194d54,16359000,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16360292,0,0x0,8
tick,0x19252e620,16361375,0,0x0,8
tick,0x19252b25c,16362625,0,0x0,8
tick,0x19252ad6c,16363917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16365167,0,0x0,8
tick,0x19252e620,16366500,0,0x0,8
tick,0x108022578,16367667,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x192528738,16368917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527354,16370167,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,16371417,0,0x0,8
tick,0x19252e620,16372708,0,0x0,8
tick,0x107ff8380,16373958,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016720f8,16375208,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x192527354,16376333,0,0x0,8
tick,0x19237622c,16377625,0,0x0,8
tick,0x19252e620,16378917,0,0x0,8
tick,0x101660dd8,16380125,0,0x0,0,0x107fe35dc
tick,0x19252e620,16381375,0,0x0,8
tick,0x19252e620,16382542,0,0x0,8
tick,0x100cbb438,16383583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x107fe6ffc,16384833,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,16386083,0,0x0,8
tick,0x19252e620,16387333,0,0x0,8
tick,0x19252e620,16388292,0,0x0,8
tick,0x19252e620,16389583,0,0x0,8
tick,0x19252b25c,16390833,0,0x0,0,0x10800a800
tick,0x19252e620,16391875,0,0x0,8
tick,0x19252e620,16393125,0,0x0,8
tick,0x192527a78,16394417,0,0x0,8
tick,0x19252ad6c,16395625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16396875,0,0x0,8
tick,0x19252b25c,16398125,0,0x0,8
tick,0x19252e620,16399417,0,0x0,8
tick,0x19252ad6c,16400667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16401917,0,0x0,8
tick,0x19252e620,16403083,0,0x0,8
tick,0x19252e620,16404333,0,0x0,8
tick,0x19252ad6c,16405375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16406417,0,0x0,8
tick,0x1009b3ea4,16407667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cd2590,16408917,0,0x0,6
tick,0x19252e620,16410167,0,0x0,8
tick,0x100ba3cf4,16411250,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16412375,0,0x0,8
tick,0x19252e620,16413500,0,0x0,8
tick,0x19252e620,16414750,0,0x0,8
tick,0x10127148c,16415875,0,0x0,5
tick,0x19252e620,16417000,0,0x0,8
tick,0x100ab7b9c,16418250,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,16419500,0,0x0,8
tick,0x19252e620,16420750,0,0x0,8
tick,0x19252e620,16421750,0,0x0,8
tick,0x19252e620,16423000,0,0x0,8
tick,0x19252e620,16424250,0,0x0,8
tick,0x19252e620,16425500,0,0x0,8
tick,0x19252e620,16426792,0,0x0,8
tick,0x19252ad6c,16427917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16429167,0,0x0,8
tick,0x1009c4ef4,16430458,0,0x0,8
tick,0x19252e620,16431708,0,0x0,8
tick,0x19252b4fc,16432958,0,0x0,8
tick,0x19252b4fc,16434208,0,0x0,8
tick,0x19252e620,16435458,0,0x0,8
tick,0x1923734ec,16436708,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16437917,0,0x0,8
tick,0x19252e620,16439167,0,0x0,8
tick,0x1009b1858,16440417,0,0x0,6
tick,0x19252a6ec,16441667,0,0x0,1
tick,0x19252e620,16442833,0,0x0,8
tick,0x19252e620,16443875,0,0x0,8
tick,0x19252e620,16445042,0,0x0,8
tick,0x19252e620,16446083,0,0x0,8
tick,0x19252e620,16447333,0,0x0,8
tick,0x19252b25c,16448458,0,0x0,8
tick,0x101660dd8,16449708,0,0x0,0,0x107fe35dc
tick,0x100cc4bec,16450708,0,0x0,8
tick,0x19252ad6c,16452000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192372d08,16453250,0,0x0,6
tick,0x1016b7048,16454500,0,0x0,0,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16455792,0,0x0,8
tick,0x19237388c,16456917,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x10800ada0,16458208,0,0x0,0,0x10800a738
tick,0x19252e620,16459458,0,0x0,8
tick,0x192375694,16460750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,16461958,0,0x0,8
tick,0x19252e620,16463208,0,0x0,8
tick,0x1016658b8,16464500,0,0x0,0
tick,0x19252e620,16465750,0,0x0,8
tick,0x19252b4fc,16467042,0,0x0,8
tick,0x19252e620,16468333,0,0x0,8
tick,0x10800d148,16469542,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x19252f804,16470833,0,0x0,8
tick,0x19252e620,16472125,0,0x0,8
tick,0x1016b70bc,16473208,0,0x0,0,0x107fe301c
tick,0x19252b25c,16474500,0,0x0,0,0x10800a800
tick,0x108020e30,16475750,0,0x0,0
tick,0x192528738,16477042,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192371588,16478292,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x192527ad0,16479583,0,0x0,8
tick,0x1016b70f4,16480833,0,0x0,0,0x10800a738
tick,0x19252e620,16482125,0,0x0,8
tick,0x100e3d144,16483375,0,0x0,8
tick,0x1923756a0,16484625,0,0x0,0,0x108023160,0x108021988
tick,0x19252b3f4,16485875,0,0x0,8
tick,0x10113c5b4,16487125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16488375,0,0x0,8
tick,0x100eeeee0,16489667,0,0x0,8
tick,0x19252e620,16490917,0,0x0,8
tick,0x108018538,16492042,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16493292,0,0x0,8
tick,0x19252e620,16494542,0,0x0,8
tick,0x100ba3138,16495833,1,0x100ba3118,6,0x0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,16497083,0,0x0,8
tick,0x100e3d10c,16498375,0,0x0,8
tick,0x19252f804,16499625,0,0x0,8
tick,0x19252e620,16500875,0,0x0,8
tick,0x1016497c0,16502125,0,0x0,8
tick,0x19252ad6c,16503208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16504500,0,0x0,8
tick,0x19252ad6c,16505458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16506750,0,0x0,8
tick,0x19252e620,16507750,0,0x0,8
tick,0x100f5dba0,16508792,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10174f330,16509833,0,0x0,0,0x10800bac4,0x10800a738
tick,0x19252b4fc,16511125,0,0x0,8
tick,0x10166066c,16512375,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,16513667,0,0x0,8
tick,0x19252e620,16514708,0,0x0,8
tick,0x19252e620,16515833,0,0x0,8
tick,0x19252e620,16516917,0,0x0,8
tick,0x100e6a79c,16518167,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x10801cf38,16519417,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252a6ec,16520667,0,0x0,1
tick,0x19252e620,16521917,0,0x0,8
tick,0x19252e620,16523083,0,0x0,8
tick,0x19252e620,16524167,0,0x0,8
tick,0x10166ab80,16525208,0,0x0,0
tick,0x19252e620,16526458,0,0x0,8
tick,0x19252e620,16527708,0,0x0,8
tick,0x19252ad6c,16528750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16530000,0,0x0,8
tick,0x108014828,16531250,0,0x0,0,0x1080266d0,0x108010e90
tick,0x19252e620,16532500,0,0x0,8
tick,0x107fe512c,16533792,0,0x0,0,0x10800b2d8,0x10800a738
tick,0x19252e620,16535000,0,0x0,8
tick,0x19252e620,16536042,0,0x0,8
tick,0x19252e620,16537125,0,0x0,8
tick,0x19252ad6c,16538375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16539625,0,0x0,8
tick,0x19252e620,16540875,0,0x0,8
tick,0x19252e620,16542000,0,0x0,8
tick,0x19252e620,16543167,0,0x0,8
tick,0x100e3cea0,16544167,0,0x0,6
tick,0x19252ad6c,16545458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,16546500,0,0x0,8
tick,0x19252e620,16547792,0,0x0,8
tick,0x19252e620,16548875,0,0x0,8
tick,0x19252e620,16550167,0,0x0,8
tick,0x19252e620,16551375,0,0x0,8
tick,0x19252ad6c,16552667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16554000,0,0x0,8
tick,0x19252e620,16555167,0,0x0,8
tick,0x19252ad6c,16556292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,16557542,0,0x0,8
tick,0x100f04bb0,16558792,0,0x0,1
tick,0x19252ad6c,16560042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16561292,0,0x0,8
tick,0x19252b4fc,16562542,0,0x0,8
tick,0x19252ad6c,16563833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16565083,0,0x0,8
tick,0x1923879d0,16566292,0,0x0,8
tick,0x102712af0,16567583,0,0x0,8
tick,0x19252e620,16568667,0,0x0,8
tick,0x19252e620,16569792,0,0x0,8
tick,0x192527a78,16571042,0,0x0,8
tick,0x192528738,16572333,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16573458,0,0x0,8
tick,0x19252e620,16574417,0,0x0,8
tick,0x19252e620,16575500,0,0x0,8
tick,0x100b1c034,16576708,0,0x0,6
tick,0x101bdda08,16577958,0,0x0,8
tick,0x100d6b268,16579125,0,0x0,0,0x101736af0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16580375,0,0x0,8
tick,0x19252e620,16581458,0,0x0,8
tick,0x19249fe98,16582750,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16583958,0,0x0,8
tick,0x19252b25c,16585208,0,0x0,8
tick,0x19252e620,16586500,0,0x0,8
tick,0x19252e620,16587500,0,0x0,8
tick,0x19252e620,16588542,0,0x0,8
tick,0x19252e620,16589833,0,0x0,8
tick,0x19252e620,16590958,0,0x0,8
tick,0x19252e620,16591958,0,0x0,8
tick,0x100ccdce0,16592958,0,0x0,8
tick,0x107fe759c,16594208,0,0x0,0,0x107feeef8,0x107fe2ff0
tick,0x19252e620,16595500,0,0x0,8
tick,0x19252ad6c,16596750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10166ab74,16598000,0,0x0,0
tick,0x101005a84,16599250,0,0x0,5
tick,0x19252b4fc,16600500,0,0x0,8
tick,0x19252e620,16601750,0,0x0,8
tick,0x19252b4fc,16603000,0,0x0,8
tick,0x19252e620,16604292,0,0x0,8
tick,0x19252e620,16605500,0,0x0,8
tick,0x19252e620,16606792,0,0x0,8
tick,0x19252e620,16608042,0,0x0,8
tick,0x192527354,16609042,0,0x0,8
tick,0x19252b25c,16610292,0,0x0,8
tick,0x19252e620,16611542,0,0x0,8
tick,0x19252e620,16612750,0,0x0,8
tick,0x10113ea14,16613792,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,16615042,0,0x0,8
tick,0x19252e620,16616333,0,0x0,8
tick,0x19252e620,16617375,0,0x0,8
tick,0x19252e620,16618375,0,0x0,8
tick,0x19252e620,16619625,0,0x0,8
tick,0x19252e620,16620917,0,0x0,8
tick,0x192527354,16622000,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x100a44f24,16623250,0,0x0,8
tick,0x19252ad6c,16624458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,16625708,0,0x0,8
tick,0x19252ad6c,16627000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16628292,0,0x0,8
tick,0x192528738,16629417,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16630667,0,0x0,8
tick,0x19252e620,16631917,0,0x0,8
tick,0x100e3d144,16633167,0,0x0,8
tick,0x1016b7100,16634417,0,0x0,0,0x10800bac4,0x10800a738
tick,0x1016ac9f4,16635667,0,0x0,0,0x10800f078,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101005ab0,16636917,0,0x0,5
tick,0x19252e620,16638208,0,0x0,8
tick,0x19252e620,16639250,0,0x0,8
tick,0x107feeef0,16640500,0,0x0,0,0x107fe2ff0
tick,0x19252e620,16641750,0,0x0,8
tick,0x19252e620,16642750,0,0x0,8
tick,0x192527ad0,16644000,0,0x0,8
tick,0x19252e620,16645083,0,0x0,8
tick,0x19252e620,16646333,0,0x0,8
tick,0x19252e620,16647583,0,0x0,8
tick,0x19252e620,16648833,0,0x0,8
tick,0x19252e620,16650042,0,0x0,8
tick,0x19252ad6c,16651042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16652292,0,0x0,8
tick,0x100e01714,16653542,0,0x0,5
tick,0x19252ad6c,16654792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16655875,0,0x0,8
tick,0x19252e620,16657000,0,0x0,8
tick,0x19252b25c,16658167,0,0x0,0,0x10800a800
tick,0x19252ad6c,16659167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16660417,0,0x0,8
tick,0x10109bb28,16661542,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16662792,0,0x0,8
tick,0x19252b4fc,16663917,0,0x0,8
tick,0x19252e620,16665083,0,0x0,8
tick,0x19252e620,16666083,0,0x0,8
tick,0x19252e620,16667333,0,0x0,8
tick,0x19252f804,16668583,0,0x0,8
tick,0x19252ad6c,16669875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16671125,0,0x0,8
tick,0x19252e620,16672333,0,0x0,8
tick,0x19252e620,16673375,0,0x0,8
tick,0x19252e620,16674583,0,0x0,8
tick,0x19252e620,16675625,0,0x0,8
tick,0x192527ad0,16676875,0,0x0,8
tick,0x19252e620,16678125,0,0x0,8
tick,0x19252e620,16679417,0,0x0,8
tick,0x19252e620,16680667,0,0x0,8
tick,0x19252e620,16681750,0,0x0,8
tick,0x19252e620,16682750,0,0x0,8
tick,0x1016553e8,16683792,0,0x0,8
tick,0x19252f804,16685042,0,0x0,8
tick,0x10174ddc4,16686292,0,0x0,0,0x1080263b8,0x108010e90
tick,0x19252e620,16687583,0,0x0,8
tick,0x10167203c,16688583,0,0x0,0,0x107fe484c,0x1080145a8,0x1080266d0,0x108010e90
tick,0x19252ad6c,16689833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16691125,0,0x0,8
tick,0x192528738,16692167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16693417,0,0x0,8
tick,0x19252e620,16694667,0,0x0,8
tick,0x19252e620,16695667,0,0x0,8
tick,0x19252e620,16696750,0,0x0,8
tick,0x19252e620,16698000,0,0x0,8
tick,0x100cbabec,16699000,0,0x0,5
tick,0x100d0a830,16700083,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16701167,0,0x0,8
tick,0x10800af24,16702333,0,0x0,0,0x10800a738
tick,0x192527354,16703583,0,0x0,8
tick,0x19252e620,16704833,0,0x0,8
tick,0x108010e90,16706083,0,0x0,0
tick,0x19252f804,16707208,0,0x0,8
tick,0x19252e620,16708458,0,0x0,8
tick,0x19252f804,16709708,0,0x0,8
tick,0x19252e620,16710958,0,0x0,8
tick,0x19252e620,16712208,0,0x0,8
tick,0x19252e620,16713250,0,0x0,8
tick,0x19252e620,16714292,0,0x0,8
tick,0x1016ada9c,16715500,0,0x0,0,0x107fe46e0,0x108020128,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x10166a190,16716750,0,0x0,0,0x10800a738
tick,0x19252e620,16718000,0,0x0,8
tick,0x19252e620,16719042,0,0x0,8
tick,0x1010ee7f4,16720292,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16721542,0,0x0,8
tick,0x101672088,16722833,0,0x0,0,0x107fe4900,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x107fe35d4,16724125,0,0x0,0
tick,0x100e858c0,16725333,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1923734ec,16726583,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x10116f0a8,16727875,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x107f9f498,16729167,0,0x0,0,0x101787d44,0x10802651c,0x108010e90
tick,0x19252e620,16730375,0,0x0,8
tick,0x19252e620,16731667,0,0x0,8
tick,0x19252e620,16732875,0,0x0,8
tick,0x19252ad6c,16734167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192375674,16735417,0,0x0,8
tick,0x19252e620,16736708,0,0x0,8
tick,0x19252e620,16737875,0,0x0,8
tick,0x100e9ce2c,16739125,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,16740375,0,0x0,8
tick,0x101bd8b4c,16741667,0,0x0,8
tick,0x19252b25c,16742917,0,0x0,0,0x10800a800
tick,0x19252ad6c,16744167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16745458,0,0x0,8
tick,0x100e88110,16746708,0,0x0,5
tick,0x19252ad6c,16747958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16749333,0,0x0,8
tick,0x1010e7a64,16750500,1,0x100ba3118,6,0x0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,16751542,0,0x0,8
tick,0x1016cab3c,16752833,0,0x0,0,0x107fea6ac,0x107fe31b4
tick,0x19252f804,16754125,0,0x0,8
tick,0x192371588,16755250,0,0x0,8
tick,0x19252ad6c,16756500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,16757750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cc8e10,16759042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,16760292,0,0x0,0,0x10800a800
tick,0x100e3d0c0,16761542,0,0x0,8
tick,0x19252e620,16762792,0,0x0,8
tick,0x100d99090,16764083,0,0x0,0
tick,0x1009f0b74,16765333,0,0x0,6
tick,0x19252e620,16766667,0,0x0,8
tick,0x19252b4fc,16767667,0,0x0,8
tick,0x192528738,16768917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16770167,0,0x0,8
tick,0x100abc89c,16771458,0,0x0,8
tick,0x19252e620,16772708,0,0x0,8
tick,0x1016b7104,16773958,0,0x0,0
tick,0x192562910,16775167,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1017d044c,16776417,0,0x0,0,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100ccf3ec,16777708,0,0x0,8
tick,0x19252e620,16778958,0,0x0,8
tick,0x19252b3f4,16780208,0,0x0,8
tick,0x192528738,16781458,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10167201c,16782708,0,0x0,0,0x107fe484c,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x19252e620,16844083,0,0x0,8
tick,0x19252e620,16844708,0,0x0,8
tick,0x19252b4fc,16845667,0,0x0,8
tick,0x19252e620,16846958,0,0x0,8
tick,0x19252e620,16848208,0,0x0,8
tick,0x19252e620,16849375,0,0x0,8
tick,0x19252e620,16850458,0,0x0,8
tick,0x10166066c,16851708,0,0x0,0,0x10800e5e4,0x10800cb40,0x10800a9e8
tick,0x1009b9784,16852958,0,0x0,6
tick,0x100ba4538,16854083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16855333,0,0x0,8
tick,0x19252b25c,16856500,0,0x0,8
tick,0x1009b9678,16857750,0,0x0,6
tick,0x100a44f24,16859000,0,0x0,8
tick,0x19252e620,16860292,0,0x0,8
tick,0x100e01ddc,16861375,0,0x0,5
tick,0x10166ac0c,16862667,0,0x0,0
tick,0x19252e620,16863958,0,0x0,8
tick,0x19252e620,16865208,0,0x0,8
tick,0x1016ad674,16866500,0,0x0,0,0x107fe46e0,0x10800dcb8,0x10800cb40,0x10800a9e8
tick,0x19252e620,16868167,0,0x0,8
tick,0x19252e620,16868833,0,0x0,8
tick,0x19252e620,16869833,0,0x0,8
tick,0x101196300,16871125,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x100e7c1a4,16872375,0,0x0,5
tick,0x19252b4fc,16873792,0,0x0,8
tick,0x192528738,16874875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10166066c,16876125,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x107fe3a1c,16877375,0,0x0,0,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,16878625,0,0x0,8
tick,0x100ba8094,16879917,0,0x0,6
tick,0x19252e620,16881208,0,0x0,8
tick,0x19252e620,16882250,0,0x0,8
tick,0x19252e620,16883417,0,0x0,8
tick,0x19252e620,16884750,0,0x0,8
tick,0x100ec26c4,16885917,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252b25c,16887000,0,0x0,8
tick,0x1016ad364,16888250,0,0x0,0,0x1080145a8,0x1080266d0,0x108010e90
tick,0x192373cfc,16889542,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,16890792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10113cec4,16891875,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100e3cea0,16893125,0,0x0,6
tick,0x19252e620,16894250,0,0x0,8
tick,0x19252e620,16895250,0,0x0,8
tick,0x19252e620,16896417,0,0x0,8
tick,0x192527ad0,16897667,0,0x0,8
tick,0x1016b6538,16898917,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,16900208,0,0x0,8
tick,0x19252e620,16901458,0,0x0,8
tick,0x192528738,16902708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16903958,0,0x0,8
tick,0x1009c6f60,16905208,0,0x0,6
tick,0x1923734b0,16906458,0,0x0,1
tick,0x19252e620,16907583,0,0x0,8
tick,0x19252e620,16908667,0,0x0,8
tick,0x19252e620,16909708,0,0x0,8
tick,0x19252b4fc,16910958,0,0x0,8
tick,0x1016b70d0,16912208,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x1016b6410,16913458,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,16914750,0,0x0,8
tick,0x19252e620,16916000,0,0x0,8
tick,0x1080261b8,16917250,0,0x0,0,0x108010e90
tick,0x19252f804,16918500,0,0x0,8
tick,0x192527354,16919750,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,16921000,0,0x0,8
tick,0x19252e620,16922083,0,0x0,8
tick,0x19252e620,16923083,0,0x0,8
tick,0x19252f804,16924167,0,0x0,8
tick,0x100eeeee4,16925250,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16926458,0,0x0,8
tick,0x19252e620,16927750,0,0x0,8
tick,0x19252e620,16928833,0,0x0,8
tick,0x19252e620,16929917,0,0x0,8
tick,0x1010eb538,16931125,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16932417,0,0x0,8
tick,0x192528738,16933667,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10166066c,16934750,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252ad6c,16936000,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cd5854,16937250,1,0x100ba3118,6,0x0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16938500,0,0x0,8
tick,0x19252e620,16939792,0,0x0,8
tick,0x100b1c034,16941042,0,0x0,6
tick,0x19252b25c,16942292,0,0x0,8
tick,0x19252e620,16943542,0,0x0,8
tick,0x100cef7c8,16944792,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,16946042,0,0x0,8
tick,0x19252b25c,16947333,0,0x0,8
tick,0x19252ad6c,16948583,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,16949875,0,0x0,8
tick,0x101198c48,16950958,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,16952042,0,0x0,8
tick,0x19252e620,16953292,0,0x0,8
tick,0x19252e620,16954542,0,0x0,8
tick,0x192528738,16955792,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252ad6c,16957042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,16958292,0,0x0,8
tick,0x19252e620,16959542,0,0x0,8
tick,0x108029b90,16960833,0,0x0,0,0x107ff8488,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,16962083,0,0x0,8
tick,0x19252e620,16963125,0,0x0,8
tick,0x19252e620,16964333,0,0x0,8
tick,0x19252f804,16965583,0,0x0,8
tick,0x19252ad8c,16966833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ec41e0,16968083,0,0x0,1
tick,0x19252e620,16969125,0,0x0,8
tick,0x19252e620,16970375,0,0x0,8
tick,0x19252e620,16971625,0,0x0,8
tick,0x19252e620,16972917,0,0x0,8
tick,0x19252e620,16974167,0,0x0,8
tick,0x19252ad6c,16975417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,16976667,0,0x0,8
tick,0x19252ad6c,16977917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100cc4cc4,16979167,0,0x0,6
tick,0x19252b25c,16980458,0,0x0,8
tick,0x19252e620,16981542,0,0x0,8
tick,0x19252e620,16982625,0,0x0,8
tick,0x19252e620,16983625,0,0x0,8
tick,0x19252e620,16984875,0,0x0,8
tick,0x100cbccdc,16986125,0,0x0,8
tick,0x19252e620,16987375,0,0x0,8
tick,0x19252e620,16988417,0,0x0,8
tick,0x19252e620,16989500,0,0x0,8
tick,0x192527ad0,16990458,0,0x0,8
tick,0x19252e620,16991542,0,0x0,8
tick,0x19252e620,16992750,0,0x0,8
tick,0x19252e620,16994000,0,0x0,8
tick,0x19252e620,16995042,0,0x0,8
tick,0x19252e620,16996000,0,0x0,8
tick,0x19252e620,16997125,0,0x0,8
tick,0x19252b25c,16998417,0,0x0,8
tick,0x10113218c,16999667,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100e7bd34,17000833,0,0x0,5
tick,0x107fe51fc,17001917,0,0x0,0,0x10800b2d8,0x10800a738
tick,0x19252e620,17003208,0,0x0,8
tick,0x19252ad6c,17004417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17005708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192373500,17006750,0,0x0,6
tick,0x100cbcbb8,17008000,0,0x0,6
tick,0x192527a78,17009083,0,0x0,8
tick,0x108020eb8,17010333,0,0x0,0
tick,0x10270e050,17011583,0,0x0,5
tick,0x100cd3ba8,17012875,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17014125,0,0x0,8
tick,0x19252e620,17015333,0,0x0,8
tick,0x192527ad0,17016542,0,0x0,8
tick,0x19252e620,17017792,0,0x0,8
tick,0x192520570,17019042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,17020292,0,0x0,8
tick,0x19252e620,17021583,0,0x0,8
tick,0x100abc700,17022833,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,17024042,0,0x0,8
tick,0x19252e620,17025250,0,0x0,8
tick,0x19252e620,17026333,0,0x0,8
tick,0x19252e620,17027583,0,0x0,8
tick,0x107fe7634,17028833,0,0x0,0,0x107feeef8,0x107fe2ff0
tick,0x108008074,17030083,0,0x0,0,0x10800b05c,0x10800a738
tick,0x19252e620,17031375,0,0x0,8
tick,0x19252b25c,17032667,0,0x0,8
tick,0x100e7be84,17033917,0,0x0,5
tick,0x1016b70dc,17035208,0,0x0,0,0x10801fab8,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,17036458,0,0x0,8
tick,0x19252e620,17037500,0,0x0,8
tick,0x19252b25c,17038708,0,0x0,0,0x10800a800
tick,0x19252e620,17039750,0,0x0,8
tick,0x19252e620,17041042,0,0x0,8
tick,0x1080223d8,17042292,0,0x0,0,0x107fe6378,0x107fe2ff0
tick,0x19252b3f4,17043542,0,0x0,8
tick,0x19252e620,17044833,0,0x0,8
tick,0x1012b51fc,17046083,0,0x0,1
tick,0x19252e620,17047375,0,0x0,8
tick,0x10113bef4,17048583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100ce1dd0,17049833,0,0x0,6
tick,0x192372d3c,17051125,0,0x0,6
tick,0x100e3d144,17052375,0,0x0,8
tick,0x19252e620,17053375,0,0x0,8
tick,0x19252e620,17054667,0,0x0,8
tick,0x19252e620,17055792,0,0x0,8
tick,0x19252e620,17056833,0,0x0,8
tick,0x19252e620,17057917,0,0x0,8
tick,0x19252e620,17059167,0,0x0,8
tick,0x100ba1918,17060417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,17061667,0,0x0,8
tick,0x19252e620,17062958,0,0x0,8
tick,0x107fea798,17064167,0,0x0,0,0x107fe31b4
tick,0x107ff83dc,17065417,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17066667,0,0x0,8
tick,0x19252e620,17067958,0,0x0,8
tick,0x19252e620,17069208,0,0x0,8
tick,0x107fe3d80,17070458,0,0x0,0,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,17071708,0,0x0,8
tick,0x19252b4fc,17072958,0,0x0,8
tick,0x1016ad228,17074208,0,0x0,0,0x10801452c,0x1080266d0,0x108010e90
tick,0x1017d044c,17075292,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,17076542,0,0x0,8
tick,0x19252f804,17077792,0,0x0,8
tick,0x100ab6ddc,17079042,0,0x0,8
tick,0x19252e620,17080333,0,0x0,8
tick,0x19252e620,17081542,0,0x0,8
tick,0x19252f804,17082833,0,0x0,8
tick,0x19252e620,17084083,0,0x0,8
tick,0x19252e620,17085333,0,0x0,8
tick,0x107fee564,17086417,0,0x0,0,0x107fefe34,0x1080181f0,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17087708,0,0x0,8
tick,0x19252e620,17088917,0,0x0,8
tick,0x19252e620,17090208,0,0x0,8
tick,0x19252f804,17091208,0,0x0,8
tick,0x19252e620,17092250,0,0x0,8
tick,0x19252e620,17093292,0,0x0,8
tick,0x19252e620,17094333,0,0x0,8
tick,0x10164b0c4,17095542,0,0x0,8
tick,0x100cc8314,17096667,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17097958,0,0x0,8
tick,0x108021534,17098958,0,0x0,0,0x107fe2ff0
tick,0x19252e620,17100250,0,0x0,8
tick,0x19252e620,17101458,0,0x0,8
tick,0x19252e620,17102542,0,0x0,8
tick,0x1016b70f4,17103792,0,0x0,0,0x10800a738
tick,0x19252e620,17105042,0,0x0,8
tick,0x19252e620,17106083,0,0x0,8
tick,0x19252e620,17107083,0,0x0,8
tick,0x19252e620,17108167,0,0x0,8
tick,0x19252e620,17109417,0,0x0,8
tick,0x10166e7bc,17110667,0,0x0,0
tick,0x19252e620,17111958,0,0x0,8
tick,0x101736ad4,17113208,0,0x0,0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17114458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17115708,0,0x0,8
tick,0x107fe521c,17116958,0,0x0,0,0x10800a738
tick,0x19252e620,17118208,0,0x0,8
tick,0x19252e620,17119292,0,0x0,8
tick,0x19252e620,17120333,0,0x0,8
tick,0x10800ed6c,17121375,0,0x0,0,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ba4130,17122625,0,0x0,8
tick,0x100a252c0,17123875,0,0x0,6
tick,0x192387a10,17125125,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1016b65c8,17126375,0,0x0,0,0x107fe7240,0x1080264e0,0x108010e90
tick,0x19252e620,17127458,0,0x0,8
tick,0x19252e620,17128458,0,0x0,8
tick,0x19252ad6c,17129500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17130750,0,0x0,8
tick,0x19252e620,17131792,0,0x0,8
tick,0x19252e620,17132833,0,0x0,8
tick,0x19252ad6c,17134083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17135375,0,0x0,8
tick,0x19252e620,17136583,0,0x0,8
tick,0x19252e620,17137708,0,0x0,8
tick,0x19252e620,17138917,0,0x0,8
tick,0x19252e620,17139958,0,0x0,8
tick,0x101139ddc,17141250,0,0x0,5
tick,0x19252e620,17142500,0,0x0,8
tick,0x19252e620,17143500,0,0x0,8
tick,0x1923734b4,17144792,0,0x0,8
tick,0x19252ad6c,17146042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17147292,0,0x0,8
tick,0x19252e620,17148417,0,0x0,8
tick,0x19252e620,17149667,0,0x0,8
tick,0x192528738,17150917,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10166f130,17152167,0,0x0,0,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1080138b4,17153417,0,0x0,0,0x1080263b8,0x108010e90
tick,0x1016b70bc,17154417,0,0x0,0,0x108008154,0x10800b05c,0x10800a738
tick,0x1016b7104,17155667,0,0x0,0,0x10800dc40,0x10800cb40,0x10800a9e8
tick,0x19252e620,17156958,0,0x0,8
tick,0x1011305ec,17158208,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17159458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,17160708,0,0x0,8
tick,0x10166fc48,17161958,0,0x0,0,0x107fed654,0x10801b4ec,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,17163208,0,0x0,8
tick,0x19252e620,17164500,0,0x0,8
tick,0x19252e620,17165542,0,0x0,8
tick,0x107f9fd14,17166583,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x1923759d8,17167792,0,0x0,8
tick,0x19252e620,17169083,0,0x0,8
tick,0x19252ad6c,17170333,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17171625,0,0x0,8
tick,0x19252e620,17172750,0,0x0,8
tick,0x19252e620,17173792,0,0x0,8
tick,0x19252e620,17174917,0,0x0,8
tick,0x19252e620,17175958,0,0x0,8
tick,0x19252b25c,17177208,0,0x0,0,0x10800a800
tick,0x19252ad6c,17178458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10166f14c,17179708,0,0x0,0,0x10800a738
tick,0x19252b4fc,17180958,0,0x0,8
tick,0x192527ad0,17182250,0,0x0,8
tick,0x19252e620,17183333,0,0x0,8
tick,0x19252ad6c,17184375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17185625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17186875,0,0x0,8
tick,0x192528738,17188125,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17189417,0,0x0,8
tick,0x19252e620,17190458,0,0x0,8
tick,0x19252e620,17191583,0,0x0,8
tick,0x100cd23b4,17192583,0,0x0,6
tick,0x19252e620,17193875,0,0x0,8
tick,0x10164a6a0,17195125,0,0x0,8
tick,0x19252b25c,17196208,0,0x0,8
tick,0x100abd1a8,17197292,0,0x0,8
tick,0x19252ad6c,17198542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17199667,0,0x0,8
tick,0x19252e620,17200875,0,0x0,8
tick,0x19237560c,17202083,0,0x0,8
tick,0x19252e620,17203333,0,0x0,8
tick,0x19252e620,17204375,0,0x0,8
tick,0x19252e620,17205625,0,0x0,8
tick,0x19252e620,17206875,0,0x0,8
tick,0x19252e620,17207875,0,0x0,8
tick,0x19252e620,17208958,0,0x0,8
tick,0x19252e620,17210042,0,0x0,8
tick,0x19252e620,17211292,0,0x0,8
tick,0x19252e620,17212542,0,0x0,8
tick,0x19252f804,17213792,0,0x0,8
tick,0x19252e620,17215083,0,0x0,8
tick,0x19252e620,17216125,0,0x0,8
tick,0x19252e620,17217250,0,0x0,8
tick,0x101660ddc,17218458,0,0x0,0,0x107fe6ab4,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,17219750,0,0x0,8
tick,0x19252e620,17220792,0,0x0,8
tick,0x19252ad6c,17221833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016df04c,17222917,0,0x0,0,0x10800caa4,0x10800a9e8
tick,0x19252e620,17224208,0,0x0,8
tick,0x19252e620,17225375,0,0x0,8
tick,0x19252e620,17226417,0,0x0,8
tick,0x19252b4fc,17227667,0,0x0,8
tick,0x19252ad6c,17228875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17230167,0,0x0,8
tick,0x19252b4fc,17231417,0,0x0,8
tick,0x19252e620,17232667,0,0x0,8
tick,0x19252e620,17233917,0,0x0,8
tick,0x1009b0f3c,17235167,0,0x0,8
tick,0x100e01c60,17236417,0,0x0,0
tick,0x100fb3bc4,17237667,0,0x0,5
tick,0x1080181f8,17238958,0,0x0,0,0x1080165a4,0x108026920,0x108010e90
tick,0x100f5dce8,17240208,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17241375,0,0x0,8
tick,0x19252e620,17242458,0,0x0,8
tick,0x19252e620,17243500,0,0x0,8
tick,0x19252e61c,17244625,0,0x0,8
tick,0x1016b70bc,17245750,0,0x0,0,0x107fe4a5c,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252e620,17246917,0,0x0,8
tick,0x19252e620,17248167,0,0x0,8
tick,0x10167203c,17249417,0,0x0,0,0x107fe4900,0x10800de2c,0x10800cb40,0x10800a9e8
tick,0x19252b25c,17250667,0,0x0,8
tick,0x19252e620,17251708,0,0x0,8
tick,0x100e3d144,17252958,0,0x0,8
tick,0x192527ad0,17254250,0,0x0,8
tick,0x107fe4998,17255500,0,0x0,0,0x10800dbc8,0x10800cb40,0x10800a9e8
tick,0x1016b64ec,17256750,0,0x0,0,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100cbcf4c,17258000,0,0x0,8
tick,0x19252b4fc,17259250,0,0x0,8
tick,0x100cbd2e0,17260500,0,0x0,5
tick,0x192375b70,17261750,0,0x0,0,0x108023160,0x108021988
tick,0x1016ac9d4,17263042,0,0x0,0
tick,0x19252e620,17264292,0,0x0,8
tick,0x19252e620,17265458,0,0x0,8
tick,0x19252e620,17266500,0,0x0,8
tick,0x19252e620,17267583,0,0x0,8
tick,0x19252b4fc,17268792,0,0x0,8
tick,0x19252ad6c,17270083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100fc4df4,17271208,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17272458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17273792,0,0x0,8
tick,0x192527a78,17275000,0,0x0,8
tick,0x107feed7c,17276250,0,0x0,0,0x107fe2ff0
tick,0x19252e620,17277542,0,0x0,8
tick,0x19252e620,17278792,0,0x0,8
tick,0x100ccdc34,17280042,0,0x0,8
tick,0x100e0171c,17281292,0,0x0,5
tick,0x19252b4fc,17282583,0,0x0,8
tick,0x19252ad6c,17283833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252a6ec,17285083,0,0x0,1
tick,0x192373548,17286375,0,0x0,8
tick,0x19252ad6c,17287625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17288917,0,0x0,8
tick,0x19252b4fc,17290167,0,0x0,8
tick,0x19252b25c,17291375,0,0x0,0,0x10800a800
tick,0x19252ad6c,17292625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,17293792,0,0x0,8
tick,0x19252ad6c,17295042,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,17296250,0,0x0,8
tick,0x19252ad6c,17297542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fea664,17298792,0,0x0,0,0x107fe31b4
tick,0x19252e620,17300083,0,0x0,8
tick,0x19252e620,17301167,0,0x0,8
tick,0x19252e620,17302458,0,0x0,8
tick,0x100cbcc2c,17303667,0,0x0,6
tick,0x19252ad6c,17304958,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17306208,0,0x0,8
tick,0x19252ad6c,17307500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1009b1710,17308750,0,0x0,6
tick,0x100cbcca8,17310000,0,0x0,6
tick,0x19252e620,17311292,0,0x0,8
tick,0x1009b477c,17312542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17313792,0,0x0,8
tick,0x19252e620,17314958,0,0x0,8
tick,0x19252b25c,17316125,0,0x0,8
tick,0x10127148c,17317417,0,0x0,5
tick,0x100abc724,17318667,0,0x0,8
tick,0x1010996dc,17319917,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252e620,17321167,0,0x0,8
tick,0x19252ad6c,17322458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17323708,0,0x0,8
tick,0x19252e620,17324958,0,0x0,8
tick,0x19252e620,17326167,0,0x0,8
tick,0x19252e620,17327292,0,0x0,8
tick,0x19252e620,17328292,0,0x0,8
tick,0x19252e620,17329375,0,0x0,8
tick,0x19252b4fc,17330625,0,0x0,8
tick,0x19252ad6c,17331875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe68c4,17333167,0,0x0,0,0x107fe7be0,0x107feeb08,0x107fe2ff0
tick,0x19252e620,17334292,0,0x0,8
tick,0x100db9f50,17335292,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1009f0b98,17336542,0,0x0,6
tick,0x19252e620,17337833,0,0x0,8
tick,0x10166b3f4,17339083,0,0x0,0,0x107fe7044,0x1080264e0,0x108010e90
tick,0x1016b70fc,17340333,0,0x0,0
tick,0x19252e620,17341583,0,0x0,8
tick,0x19252ad6c,17342833,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1010eee78,17344083,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17345375,0,0x0,8
tick,0x19252e620,17346458,0,0x0,8
tick,0x19252b4fc,17347542,0,0x0,8
tick,0x192528738,17348792,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,17350042,0,0x0,8
tick,0x19252a6ec,17351333,0,0x0,1
tick,0x19252e620,17352500,0,0x0,8
tick,0x19252e620,17353792,0,0x0,8
tick,0x19252e620,17355000,0,0x0,8
tick,0x19252e620,17356042,0,0x0,8
tick,0x19252b4fc,17357083,0,0x0,8
tick,0x19252e620,17358333,0,0x0,8
tick,0x19252e620,17359417,0,0x0,8
tick,0x19252e620,17360417,0,0x0,8
tick,0x19252e620,17361583,0,0x0,8
tick,0x19252e620,17362792,0,0x0,8
tick,0x19252e620,17363792,0,0x0,8
tick,0x19252e620,17364875,0,0x0,8
tick,0x19252e620,17365958,0,0x0,8
tick,0x19252e620,17366958,0,0x0,8
tick,0x19252e620,17368125,0,0x0,8
tick,0x101139dfc,17369333,0,0x0,5
tick,0x19252e620,17370583,0,0x0,8
tick,0x19252e620,17371875,0,0x0,8
tick,0x192528738,17372875,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252b4fc,17374167,0,0x0,8
tick,0x19252e620,17375417,0,0x0,8
tick,0x19252e620,17376667,0,0x0,8
tick,0x19252e620,17377917,0,0x0,8
tick,0x192527354,17379167,0,0x0,8
tick,0x19252e620,17380458,0,0x0,8
tick,0x19252e620,17381625,0,0x0,8
tick,0x19252b4fc,17382875,0,0x0,8
tick,0x101787bcc,17384125,0,0x0,0,0x10802651c,0x108010e90
tick,0x19252e620,17385417,0,0x0,8
tick,0x19252e620,17386625,0,0x0,8
tick,0x101a8c5ac,17387875,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,17389167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17390208,0,0x0,8
tick,0x100f33bbc,17391458,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1009b19c0,17392708,0,0x0,6
tick,0x19252e620,17393958,0,0x0,8
tick,0x19252ad6c,17395208,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17396458,0,0x0,8
tick,0x19252b4fc,17397750,0,0x0,8
tick,0x19252e620,17398792,0,0x0,8
tick,0x19252e620,17400000,0,0x0,8
tick,0x19252e620,17401083,0,0x0,8
tick,0x107f9a458,17402333,0,0x0,0,0x108016424,0x108026920,0x108010e90
tick,0x19252e620,17403583,0,0x0,8
tick,0x19252e620,17404833,0,0x0,8
tick,0x19252e620,17406125,0,0x0,8
tick,0x192528738,17407375,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17408625,0,0x0,8
tick,0x19252ad6c,17409875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17411125,0,0x0,8
tick,0x19252ad6c,17412375,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192528738,17413625,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x1016b7490,17414875,0,0x0,0,0x10800a738
tick,0x19252e620,17416167,0,0x0,8
tick,0x19252e620,17417458,0,0x0,8
tick,0x107fe2bfc,17418458,0,0x0,0
tick,0x192376220,17419458,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1016ac03c,17420750,0,0x0,0,0x108019b28
tick,0x19252e620,17422000,0,0x0,8
tick,0x19252e620,17423083,0,0x0,8
tick,0x10164b7ac,17424292,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17425542,0,0x0,8
tick,0x19252e620,17426792,0,0x0,8
tick,0x19252e620,17428083,0,0x0,8
tick,0x19252e620,17429125,0,0x0,8
tick,0x100ccc5ac,17430250,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x1017883d8,17431500,0,0x0,0,0x108026920,0x108010e90
tick,0x19252e620,17432667,0,0x0,8
tick,0x19252e620,17433708,0,0x0,8
tick,0x19252e620,17434708,0,0x0,8
tick,0x19252e620,17435708,0,0x0,8
tick,0x19252e620,17436833,0,0x0,8
tick,0x19252f804,17437917,0,0x0,8
tick,0x19252e620,17439083,0,0x0,8
tick,0x1016ac9f4,17440333,0,0x0,0,0x107fe39b4,0x10801fa38,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,17441417,0,0x0,8
tick,0x19252e620,17442667,0,0x0,8
tick,0x101f20ef4,17443917,0,0x0,1
tick,0x19252b4fc,17445167,0,0x0,8
tick,0x1009b1858,17446417,0,0x0,8
tick,0x19252b25c,17447667,0,0x0,0,0x10800a800
tick,0x19252e620,17449000,0,0x0,8
tick,0x19252e620,17450125,0,0x0,8
tick,0x19252ad6c,17451125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe311c,17452417,0,0x0,0
tick,0x19252e620,17453542,0,0x0,8
tick,0x19252e620,17454750,0,0x0,8
tick,0x19252e620,17456000,0,0x0,8
tick,0x100e2da30,17457250,0,0x0,0,0x107fe3170
tick,0x19252e620,17458500,0,0x0,8
tick,0x192527ad0,17459750,0,0x0,8
tick,0x192528738,17461000,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x192527354,17462292,0,0x0,8
tick,0x19252b3f4,17463417,0,0x0,8
tick,0x19252e620,17464667,0,0x0,8
tick,0x19252e620,17465750,0,0x0,8
tick,0x10174f320,17466958,0,0x0,0,0x10800a738
tick,0x19252e620,17468250,0,0x0,8
tick,0x19252e620,17469292,0,0x0,8
tick,0x19252ad6c,17470292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17471333,0,0x0,8
tick,0x1016b70dc,17472583,0,0x0,0,0x10800a738
tick,0x19252e620,17473625,0,0x0,8
tick,0x19252ad6c,17474708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x102712f04,17475958,0,0x0,6
tick,0x19252e620,17477208,0,0x0,8
tick,0x192528738,17478458,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17479708,0,0x0,8
tick,0x19252e620,17480958,0,0x0,8
tick,0x1923738e4,17482208,0,0x0,6
tick,0x19252e620,17483458,0,0x0,8
tick,0x19252e620,17484583,0,0x0,8
tick,0x19252e620,17485875,0,0x0,8
tick,0x10113ea14,17487125,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17488375,0,0x0,8
tick,0x19252e620,17489625,0,0x0,8
tick,0x19252e620,17490667,0,0x0,8
tick,0x19252e620,17491708,0,0x0,8
tick,0x19252e620,17492958,0,0x0,8
tick,0x100ec388c,17494083,0,0x0,1
tick,0x10801da10,17495333,0,0x0,0,0x10801fee0,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,17496583,0,0x0,8
tick,0x19252e620,17497875,0,0x0,8
tick,0x19252e620,17498875,0,0x0,8
tick,0x19252e620,17500000,0,0x0,8
tick,0x19252e620,17501292,0,0x0,8
tick,0x19252b4fc,17502292,0,0x0,8
tick,0x19252ad6c,17503542,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x100ccdc48,17504792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252f804,17506042,0,0x0,8
tick,0x19252e620,17507208,0,0x0,8
tick,0x19252e620,17508458,0,0x0,8
tick,0x19252e620,17509708,0,0x0,8
tick,0x19252e620,17510958,0,0x0,8
tick,0x19252e620,17512208,0,0x0,8
tick,0x19252e620,17513333,0,0x0,8
tick,0x19252b25c,17514417,0,0x0,8
tick,0x1016b6fa8,17515667,0,0x0,0,0x1080264e0,0x108010e90
tick,0x19252e620,17516917,0,0x0,8
tick,0x19252e620,17518042,0,0x0,8
tick,0x19252e620,17519292,0,0x0,8
tick,0x19252e620,17520417,0,0x0,8
tick,0x19252b4fc,17521625,0,0x0,8
tick,0x19252e620,17522875,0,0x0,8
tick,0x19252e620,17523958,0,0x0,8
tick,0x19252e620,17525167,0,0x0,8
tick,0x1923757d0,17526333,0,0x0,8
tick,0x19252e620,17527417,0,0x0,8
tick,0x19252e620,17528458,0,0x0,8
tick,0x19252e620,17529625,0,0x0,8
tick,0x19252e620,17530708,0,0x0,8
tick,0x19252e620,17531958,0,0x0,8
tick,0x19252e620,17533125,0,0x0,8
tick,0x19252b25c,17534250,0,0x0,8
tick,0x19252e620,17535458,0,0x0,8
tick,0x19252b4fc,17536500,0,0x0,8
tick,0x19252e620,17537750,0,0x0,8
tick,0x19252e620,17539042,0,0x0,8
tick,0x19252f804,17540125,0,0x0,8
tick,0x19252b25c,17541375,0,0x0,8
tick,0x19252e620,17542625,0,0x0,8
tick,0x19252e620,17543708,0,0x0,8
tick,0x100cbb5b0,17544958,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17546208,0,0x0,8
tick,0x1016b7034,17547375,0,0x0,0,0x107feec88,0x107fe2ff0
tick,0x107f9fd14,17548458,0,0x0,0,0x1080163e8,0x108026920,0x108010e90
tick,0x1016b7098,17549750,0,0x0,0,0x10800cb40,0x10800a9e8
tick,0x19252e620,17550750,0,0x0,8
tick,0x19252ad6c,17552083,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192527ad0,17553458,0,0x0,8
tick,0x100f33e78,17554583,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x100e7bd24,17555875,0,0x0,0,0x108028a60,0x1080196ac,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17557125,0,0x0,8
tick,0x19252e620,17558417,0,0x0,8
tick,0x10802191c,17559667,0,0x0,0
tick,0x19252e620,17560917,0,0x0,8
tick,0x10114997c,17562208,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252b4fc,17563583,0,0x0,8
tick,0x1009ba1bc,17564750,0,0x0,6
tick,0x1016cd414,17566000,0,0x0,0,0x107fea774,0x107fe31b4
tick,0x10113e8e8,17567000,0,0x0,5
tick,0x107fe5104,17568292,0,0x0,0,0x10800a738
tick,0x19252e620,17569583,0,0x0,8
tick,0x19252e620,17570875,0,0x0,8
tick,0x101660664,17572083,0,0x0,0,0x10800f458,0x107ff5a18,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,17573167,0,0x0,8
tick,0x101bde674,17574458,0,0x0,8
tick,0x107fe3d84,17575750,0,0x0,0,0x10801fd48,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x192564060,17577000,0,0x0,8
tick,0x107fe6904,17578250,0,0x0,0,0x107fe7be0,0x10801df50,0x107fe301c
tick,0x19252e620,17579375,0,0x0,8
tick,0x100eb6f88,17580667,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252e620,17581917,0,0x0,8
tick,0x19252e620,17583167,0,0x0,8
tick,0x19252f804,17584292,0,0x0,8
tick,0x19252e620,17585375,0,0x0,8
tick,0x19252e620,17586625,0,0x0,8
tick,0x19252e620,17587875,0,0x0,8
tick,0x10113e7c4,17589167,0,0x0,5
tick,0x192528738,17590417,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17591625,0,0x0,8
tick,0x1009b9d6c,17592875,0,0x0,6
tick,0x19252e620,17594083,0,0x0,8
tick,0x19252e620,17595167,0,0x0,8
tick,0x19252e620,17596250,0,0x0,8
tick,0x100cc2c1c,17597458,0,0x0,6
tick,0x19252ad6c,17598750,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,17600000,0,0x0,8
tick,0x19252e620,17601167,0,0x0,8
tick,0x19252ad6c,17602458,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17603708,0,0x0,8
tick,0x19252e620,17604792,0,0x0,8
tick,0x19252e620,17606042,0,0x0,8
tick,0x100e016e0,17607292,0,0x0,5
tick,0x108026090,17608333,0,0x0,0,0x108010e90
tick,0x19252e620,17609375,0,0x0,8
tick,0x101701f70,17610500,0,0x0,0,0x10801b048,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b25c,17611750,0,0x0,8
tick,0x101139e40,17613042,0,0x0,5
tick,0x19252ad6c,17614292,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10270e6ec,17615542,0,0x0,0,0x10801e574,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x19252ad6c,17616792,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x101660de8,17618042,0,0x0,0,0x107fe35dc
tick,0x19252b4fc,17619292,0,0x0,8
tick,0x19252e620,17620542,0,0x0,8
tick,0x107fece08,17621833,0,0x0,0,0x107fed654,0x10801b4ec,0x108017edc,0x1080165a4,0x108026920,0x108010e90
tick,0x100ef190c,17623083,0,0x0,0,0x107fe3eb0,0x107fed9a4,0x107fe4ae8,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252e620,17624333,0,0x0,8
tick,0x19252e620,17625583,0,0x0,8
tick,0x192528738,17626833,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e9ce10,17628083,0,0x0,5,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x10166f440,17629375,0,0x0,0,0x107ff54d4,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17630625,0,0x0,8
tick,0x100e01720,17631625,0,0x0,5
tick,0x19252e620,17632875,0,0x0,8
tick,0x19252ad6c,17634125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x192376634,17635375,0,0x0,1
tick,0x19252ad6c,17636625,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19259e800,17637917,0,0x0,8
tick,0x100ccdcd8,17639167,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17640208,0,0x0,8
tick,0x19252e620,17641458,0,0x0,8
tick,0x19252ad6c,17642708,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17643958,0,0x0,8
tick,0x19252e620,17645208,0,0x0,8
tick,0x19252b25c,17646250,0,0x0,8
tick,0x19252e620,17647333,0,0x0,8
tick,0x19252e620,17648375,0,0x0,8
tick,0x19252e620,17649625,0,0x0,8
tick,0x19252b4fc,17650875,0,0x0,8
tick,0x10113bef4,17652125,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x1009c71d4,17653375,0,0x0,0,0x10801e684,0x10801fea4,0x10801cf74,0x107ff43b0,0x10800d01c,0x107fe301c
tick,0x100e3cfec,17654625,0,0x0,6
tick,0x19252ad6c,17655875,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17657125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17658417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17659417,0,0x0,8
tick,0x19252e620,17660500,0,0x0,8
tick,0x192528738,17661750,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19259ea30,17663000,0,0x0,0,0x101736af0,0x107ff5074,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17664250,0,0x0,8
tick,0x192527a78,17665333,0,0x0,8
tick,0x19252e620,17666333,0,0x0,8
tick,0x10113bba8,17667583,0,0x0,5,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x10170220c,17668875,0,0x0,0
tick,0x19252b4fc,17670125,0,0x0,8
tick,0x19252e620,17671375,0,0x0,8
tick,0x100eeeee4,17672625,0,0x0,6
tick,0x19252e620,17673875,0,0x0,8
tick,0x19252e620,17674958,0,0x0,8
tick,0x19252e620,17675958,0,0x0,8
tick,0x19252e620,17677083,0,0x0,8
tick,0x19252e620,17678125,0,0x0,8
tick,0x19252e620,17679375,0,0x0,8
tick,0x19252e620,17680375,0,0x0,8
tick,0x19252ad6c,17681500,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x107fe2a80,17682750,0,0x0,0
tick,0x101198cb0,17684000,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x10800b40c,17685292,0,0x0,0,0x10800a738
tick,0x19252e620,17686542,0,0x0,8
tick,0x19252e620,17687542,0,0x0,8
tick,0x19252e620,17688667,0,0x0,8
tick,0x19252e620,17689958,0,0x0,8
tick,0x19252e620,17691208,0,0x0,8
tick,0x19252e620,17692250,0,0x0,8
tick,0x19252e620,17693333,0,0x0,8
tick,0x19252e620,17694375,0,0x0,8
tick,0x19252e620,17695625,0,0x0,8
tick,0x100cbcd50,17696875,0,0x0,6
tick,0x19252e620,17698167,0,0x0,8
tick,0x19252e620,17699417,0,0x0,8
tick,0x19252e620,17700667,0,0x0,8
tick,0x1016b9154,17701708,0,0x0,0,0x107fe4798,0x10800ddc8,0x10800cb40,0x10800a9e8
tick,0x19252b4fc,17702792,0,0x0,8
tick,0x192376490,17704042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,17705167,0,0x0,8
tick,0x1080138c0,17706417,0,0x0,0,0x1080263b8,0x108010e90
tick,0x100ccdcc4,17707583,0,0x0,5,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252e620,17708750,0,0x0,8
tick,0x19252e620,17710042,0,0x0,8
tick,0x101672308,17711042,0,0x0,0,0x107fe7274,0x1080264e0,0x108010e90
tick,0x19252b4fc,17712292,0,0x0,8
tick,0x192376220,17713375,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,17714417,0,0x0,8
tick,0x19252e620,17715583,0,0x0,8
tick,0x19252e620,17716625,0,0x0,8
tick,0x19252e620,17717917,0,0x0,8
tick,0x19252e620,17718917,0,0x0,8
tick,0x19252e620,17719917,0,0x0,8
tick,0x19252b4fc,17721167,0,0x0,8
tick,0x19252e620,17722417,0,0x0,8
tick,0x108010300,17723667,0,0x0,0
tick,0x19252e620,17724917,0,0x0,8
tick,0x19252ad6c,17726125,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252ad6c,17727417,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x1016b64f4,17728667,0,0x0,0,0x10800daec,0x10800cb40,0x10800a9e8
tick,0x19252e620,17729708,0,0x0,8
tick,0x19252e620,17730750,0,0x0,8
tick,0x19252e620,17731750,0,0x0,8
tick,0x19252e620,17732875,0,0x0,8
tick,0x19252e620,17733917,0,0x0,8
tick,0x192528738,17735167,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x100e3cdd8,17736417,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252e620,17737708,0,0x0,8
tick,0x192376408,17738917,0,0x0,8
tick,0x1925a17b0,17740042,0,0x0,0,0x10800d80c,0x10800cb40,0x10800a9e8
tick,0x19252f804,17741292,0,0x0,8
tick,0x19252e620,17742417,0,0x0,8
tick,0x19252e620,17743667,0,0x0,8
tick,0x192373bcc,17744667,0,0x0,0,0x108016564,0x108026920,0x108010e90
tick,0x19252ad6c,17745917,0,0x0,0,0x107ff5898,0x10801835c,0x1080165a4,0x108026920,0x108010e90
tick,0x19252b4fc,17747167,0,0x0,8
tick,0x100abc89c,17748417,0,0x0,0,0x108023160,0x108021988
tick,0x192528738,17749708,0,0x0,0,0x107ff88c4,0x108021fdc,0x108012d6c,0x108021570,0x107fe2ff0
tick,0x19252e620,17751000,0,0x0,8
tick,0x19252e620,17752000,0,0x0,8
tick,0x19252f804,17753042,0,0x0,8
tick,0x19252e620,17795667,0,0x0,8
code-creation,JS,9,17795792,0x1690308da2a8,359,onStreamRead node:internal/stream_base_commons:166:22,0x3564d12be2f0,~
code-source-info,0x1690308da2a8,115,4067,5985,C0O4099C7O4115C9O4114C13O4153C16O4176C18O4181C20O4180C24O4199C26O4206C28O4205C32O4219C36O4226C37O4236C42O4251C48O4272C50O4285C52O4313C54O4320C56O4319C60O4334C62O4355C64O4372C66O4371C70O4382C80O4399C82O4432C84O4439C86O4438C90O4458C92O4505C96O4523C101O4527C107O4560C115O4576C121O4635C126O4651C128O4650C132O4690C148O4690C154O4756C159O4756C165O4777C169O4798C170O4813C174O4840C180O4880C185O4880C190O4900C192O4926C199O4938C210O4934C216O4926C221O4987C223O4998C224O5006C225O5016C230O5029C231O5036C232O5349C234O5363C236O5359C241O5505C248O5517C259O5513C265O5505C270O5553C271O5560C272O5622C277O5637C283O5655C285O5666C287O5665C292O5688C294O5694C298O5709C304O5728C306O5739C308O5738C313O5768C323O5784C327O5768C333O5948C340O5948C345O5971C352O5971C358O5984,,
code-creation,JS,9,17795875,0x1690308da538,5,get node:net:702:16,0x15988e44a6f0,~
code-source-info,0x1690308da538,96,18642,18679,C0O18663C4O18675,,
code-creation,JS,9,17796000,0x1690308da5b8,14,onReadableStreamEnd node:net:788:29,0x15988e4496b8,~
code-source-info,0x1690308da5b8,96,20767,20838,C0O20784C6O20805C8O20816C13O20837,,
code-creation,JS,9,17796042,0x1690308da690,132,socketOnEnd node:_http_server:814:21,0x2858598a79e0,~
code-source-info,0x1690308da690,124,26392,26894,C0O26447C5O26447C10O26460C12O26479C14O26468C19O26492C27O26492C31O26595C34O26609C39O26609C47O26649C53O26681C58O26681C64O26707C69O26716C75O26736C80O26751C85O26760C89O26767C92O26744C97O26778C103O26806C109O26833C115O26852C121O26882C126O26882C131O26893,,
tick,0x19252e620,17984292,0,0x0,8
tick,0x19252e620,25116417,0,0x0,8
tick,0x19252e620,25117208,0,0x0,8
tick,0x19252e620,30210500,0,0x0,8
code-creation,JS,9,30210583,0x1690308da7e8,96,checkConnections node:_http_server:644:26,0x2858598a76c8,~
code-source-info,0x1690308da7e8,124,21147,21467,C0O21163C6O21178C11O21192C17O21207C22O21220C23O21227C24O21251C26O21256C28O21255C32O21270C37O21283C42O21304C47O21270C54O21337C56O21352C60O21342C65O21386C67O21393C71O21397C76O21410C78O21430C81O21430C85O21361C90O21324C95O21466,,
tick,0x19252e620,33217708,0,0x0,8
